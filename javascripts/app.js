(function(/*! Brunch !*/) {
  'use strict';

  var globals = typeof window !== 'undefined' ? window : global;
  if (typeof globals.require === 'function') return;

  var modules = {};
  var cache = {};

  var has = function(object, name) {
    return ({}).hasOwnProperty.call(object, name);
  };

  var expand = function(root, name) {
    var results = [], parts, part;
    if (/^\.\.?(\/|$)/.test(name)) {
      parts = [root, name].join('/').split('/');
    } else {
      parts = name.split('/');
    }
    for (var i = 0, length = parts.length; i < length; i++) {
      part = parts[i];
      if (part === '..') {
        results.pop();
      } else if (part !== '.' && part !== '') {
        results.push(part);
      }
    }
    return results.join('/');
  };

  var dirname = function(path) {
    return path.split('/').slice(0, -1).join('/');
  };

  var localRequire = function(path) {
    return function(name) {
      var dir = dirname(path);
      var absolute = expand(dir, name);
      return globals.require(absolute);
    };
  };

  var initModule = function(name, definition) {
    var module = {id: name, exports: {}};
    definition(module.exports, localRequire(name), module);
    var exports = cache[name] = module.exports;
    return exports;
  };

  var require = function(name) {
    var path = expand(name, '.');

    if (has(cache, path)) return cache[path];
    if (has(modules, path)) return initModule(path, modules[path]);

    var dirIndex = expand(path, './index');
    if (has(cache, dirIndex)) return cache[dirIndex];
    if (has(modules, dirIndex)) return initModule(dirIndex, modules[dirIndex]);

    throw new Error('Cannot find module "' + name + '"');
  };

  var define = function(bundle, fn) {
    if (typeof bundle === 'object') {
      for (var key in bundle) {
        if (has(bundle, key)) {
          modules[key] = bundle[key];
        }
      }
    } else {
      modules[bundle] = fn;
    }
  };

  globals.require = require;
  globals.require.define = define;
  globals.require.register = define;
  globals.require.brunch = true;
})();

// Console-polyfill. MIT license.
// https://github.com/paulmillr/console-polyfill
// Make it safe to do console.log() always.
(function (con) {
  var method;
  var dummy = function() {};
  var methods = ('assert,count,debug,dir,dirxml,error,exception,group,' +
     'groupCollapsed,groupEnd,info,log,markTimeline,profile,profileEnd,' +
     'time,timeEnd,trace,warn').split(',');
  while (method = methods.pop()) {
    con[method] = con[method] || dummy;
  }
})(window.console = window.console || {});
;
/* Zepto v1.0-1-ga3cab6c - polyfill zepto detect event ajax form fx - zeptojs.com/license */
(function(a){String.prototype.trim===a&&(String.prototype.trim=function(){return this.replace(/^\s+|\s+$/g,"")}),Array.prototype.reduce===a&&(Array.prototype.reduce=function(b){if(this===void 0||this===null)throw new TypeError;var c=Object(this),d=c.length>>>0,e=0,f;if(typeof b!="function")throw new TypeError;if(d==0&&arguments.length==1)throw new TypeError;if(arguments.length>=2)f=arguments[1];else do{if(e in c){f=c[e++];break}if(++e>=d)throw new TypeError}while(!0);while(e<d)e in c&&(f=b.call(a,f,c[e],e,c)),e++;return f})})();var Zepto=function(){function E(a){return a==null?String(a):y[z.call(a)]||"object"}function F(a){return E(a)=="function"}function G(a){return a!=null&&a==a.window}function H(a){return a!=null&&a.nodeType==a.DOCUMENT_NODE}function I(a){return E(a)=="object"}function J(a){return I(a)&&!G(a)&&a.__proto__==Object.prototype}function K(a){return a instanceof Array}function L(a){return typeof a.length=="number"}function M(a){return g.call(a,function(a){return a!=null})}function N(a){return a.length>0?c.fn.concat.apply([],a):a}function O(a){return a.replace(/::/g,"/").replace(/([A-Z]+)([A-Z][a-z])/g,"$1_$2").replace(/([a-z\d])([A-Z])/g,"$1_$2").replace(/_/g,"-").toLowerCase()}function P(a){return a in j?j[a]:j[a]=new RegExp("(^|\\s)"+a+"(\\s|$)")}function Q(a,b){return typeof b=="number"&&!l[O(a)]?b+"px":b}function R(a){var b,c;return i[a]||(b=h.createElement(a),h.body.appendChild(b),c=k(b,"").getPropertyValue("display"),b.parentNode.removeChild(b),c=="none"&&(c="block"),i[a]=c),i[a]}function S(a){return"children"in a?f.call(a.children):c.map(a.childNodes,function(a){if(a.nodeType==1)return a})}function T(c,d,e){for(b in d)e&&(J(d[b])||K(d[b]))?(J(d[b])&&!J(c[b])&&(c[b]={}),K(d[b])&&!K(c[b])&&(c[b]=[]),T(c[b],d[b],e)):d[b]!==a&&(c[b]=d[b])}function U(b,d){return d===a?c(b):c(b).filter(d)}function V(a,b,c,d){return F(b)?b.call(a,c,d):b}function W(a,b,c){c==null?a.removeAttribute(b):a.setAttribute(b,c)}function X(b,c){var d=b.className,e=d&&d.baseVal!==a;if(c===a)return e?d.baseVal:d;e?d.baseVal=c:b.className=c}function Y(a){var b;try{return a?a=="true"||(a=="false"?!1:a=="null"?null:isNaN(b=Number(a))?/^[\[\{]/.test(a)?c.parseJSON(a):a:b):a}catch(d){return a}}function Z(a,b){b(a);for(var c in a.childNodes)Z(a.childNodes[c],b)}var a,b,c,d,e=[],f=e.slice,g=e.filter,h=window.document,i={},j={},k=h.defaultView.getComputedStyle,l={"column-count":1,columns:1,"font-weight":1,"line-height":1,opacity:1,"z-index":1,zoom:1},m=/^\s*<(\w+|!)[^>]*>/,n=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/ig,o=/^(?:body|html)$/i,p=["val","css","html","text","data","width","height","offset"],q=["after","prepend","before","append"],r=h.createElement("table"),s=h.createElement("tr"),t={tr:h.createElement("tbody"),tbody:r,thead:r,tfoot:r,td:s,th:s,"*":h.createElement("div")},u=/complete|loaded|interactive/,v=/^\.([\w-]+)$/,w=/^#([\w-]*)$/,x=/^[\w-]+$/,y={},z=y.toString,A={},B,C,D=h.createElement("div");return A.matches=function(a,b){if(!a||a.nodeType!==1)return!1;var c=a.webkitMatchesSelector||a.mozMatchesSelector||a.oMatchesSelector||a.matchesSelector;if(c)return c.call(a,b);var d,e=a.parentNode,f=!e;return f&&(e=D).appendChild(a),d=~A.qsa(e,b).indexOf(a),f&&D.removeChild(a),d},B=function(a){return a.replace(/-+(.)?/g,function(a,b){return b?b.toUpperCase():""})},C=function(a){return g.call(a,function(b,c){return a.indexOf(b)==c})},A.fragment=function(b,d,e){b.replace&&(b=b.replace(n,"<$1></$2>")),d===a&&(d=m.test(b)&&RegExp.$1),d in t||(d="*");var g,h,i=t[d];return i.innerHTML=""+b,h=c.each(f.call(i.childNodes),function(){i.removeChild(this)}),J(e)&&(g=c(h),c.each(e,function(a,b){p.indexOf(a)>-1?g[a](b):g.attr(a,b)})),h},A.Z=function(a,b){return a=a||[],a.__proto__=c.fn,a.selector=b||"",a},A.isZ=function(a){return a instanceof A.Z},A.init=function(b,d){if(!b)return A.Z();if(F(b))return c(h).ready(b);if(A.isZ(b))return b;var e;if(K(b))e=M(b);else if(I(b))e=[J(b)?c.extend({},b):b],b=null;else if(m.test(b))e=A.fragment(b.trim(),RegExp.$1,d),b=null;else{if(d!==a)return c(d).find(b);e=A.qsa(h,b)}return A.Z(e,b)},c=function(a,b){return A.init(a,b)},c.extend=function(a){var b,c=f.call(arguments,1);return typeof a=="boolean"&&(b=a,a=c.shift()),c.forEach(function(c){T(a,c,b)}),a},A.qsa=function(a,b){var c;return H(a)&&w.test(b)?(c=a.getElementById(RegExp.$1))?[c]:[]:a.nodeType!==1&&a.nodeType!==9?[]:f.call(v.test(b)?a.getElementsByClassName(RegExp.$1):x.test(b)?a.getElementsByTagName(b):a.querySelectorAll(b))},c.contains=function(a,b){return a!==b&&a.contains(b)},c.type=E,c.isFunction=F,c.isWindow=G,c.isArray=K,c.isPlainObject=J,c.isEmptyObject=function(a){var b;for(b in a)return!1;return!0},c.inArray=function(a,b,c){return e.indexOf.call(b,a,c)},c.camelCase=B,c.trim=function(a){return a.trim()},c.uuid=0,c.support={},c.expr={},c.map=function(a,b){var c,d=[],e,f;if(L(a))for(e=0;e<a.length;e++)c=b(a[e],e),c!=null&&d.push(c);else for(f in a)c=b(a[f],f),c!=null&&d.push(c);return N(d)},c.each=function(a,b){var c,d;if(L(a)){for(c=0;c<a.length;c++)if(b.call(a[c],c,a[c])===!1)return a}else for(d in a)if(b.call(a[d],d,a[d])===!1)return a;return a},c.grep=function(a,b){return g.call(a,b)},window.JSON&&(c.parseJSON=JSON.parse),c.each("Boolean Number String Function Array Date RegExp Object Error".split(" "),function(a,b){y["[object "+b+"]"]=b.toLowerCase()}),c.fn={forEach:e.forEach,reduce:e.reduce,push:e.push,sort:e.sort,indexOf:e.indexOf,concat:e.concat,map:function(a){return c(c.map(this,function(b,c){return a.call(b,c,b)}))},slice:function(){return c(f.apply(this,arguments))},ready:function(a){return u.test(h.readyState)?a(c):h.addEventListener("DOMContentLoaded",function(){a(c)},!1),this},get:function(b){return b===a?f.call(this):this[b>=0?b:b+this.length]},toArray:function(){return this.get()},size:function(){return this.length},remove:function(){return this.each(function(){this.parentNode!=null&&this.parentNode.removeChild(this)})},each:function(a){return e.every.call(this,function(b,c){return a.call(b,c,b)!==!1}),this},filter:function(a){return F(a)?this.not(this.not(a)):c(g.call(this,function(b){return A.matches(b,a)}))},add:function(a,b){return c(C(this.concat(c(a,b))))},is:function(a){return this.length>0&&A.matches(this[0],a)},not:function(b){var d=[];if(F(b)&&b.call!==a)this.each(function(a){b.call(this,a)||d.push(this)});else{var e=typeof b=="string"?this.filter(b):L(b)&&F(b.item)?f.call(b):c(b);this.forEach(function(a){e.indexOf(a)<0&&d.push(a)})}return c(d)},has:function(a){return this.filter(function(){return I(a)?c.contains(this,a):c(this).find(a).size()})},eq:function(a){return a===-1?this.slice(a):this.slice(a,+a+1)},first:function(){var a=this[0];return a&&!I(a)?a:c(a)},last:function(){var a=this[this.length-1];return a&&!I(a)?a:c(a)},find:function(a){var b,d=this;return typeof a=="object"?b=c(a).filter(function(){var a=this;return e.some.call(d,function(b){return c.contains(b,a)})}):this.length==1?b=c(A.qsa(this[0],a)):b=this.map(function(){return A.qsa(this,a)}),b},closest:function(a,b){var d=this[0],e=!1;typeof a=="object"&&(e=c(a));while(d&&!(e?e.indexOf(d)>=0:A.matches(d,a)))d=d!==b&&!H(d)&&d.parentNode;return c(d)},parents:function(a){var b=[],d=this;while(d.length>0)d=c.map(d,function(a){if((a=a.parentNode)&&!H(a)&&b.indexOf(a)<0)return b.push(a),a});return U(b,a)},parent:function(a){return U(C(this.pluck("parentNode")),a)},children:function(a){return U(this.map(function(){return S(this)}),a)},contents:function(){return this.map(function(){return f.call(this.childNodes)})},siblings:function(a){return U(this.map(function(a,b){return g.call(S(b.parentNode),function(a){return a!==b})}),a)},empty:function(){return this.each(function(){this.innerHTML=""})},pluck:function(a){return c.map(this,function(b){return b[a]})},show:function(){return this.each(function(){this.style.display=="none"&&(this.style.display=null),k(this,"").getPropertyValue("display")=="none"&&(this.style.display=R(this.nodeName))})},replaceWith:function(a){return this.before(a).remove()},wrap:function(a){var b=F(a);if(this[0]&&!b)var d=c(a).get(0),e=d.parentNode||this.length>1;return this.each(function(f){c(this).wrapAll(b?a.call(this,f):e?d.cloneNode(!0):d)})},wrapAll:function(a){if(this[0]){c(this[0]).before(a=c(a));var b;while((b=a.children()).length)a=b.first();c(a).append(this)}return this},wrapInner:function(a){var b=F(a);return this.each(function(d){var e=c(this),f=e.contents(),g=b?a.call(this,d):a;f.length?f.wrapAll(g):e.append(g)})},unwrap:function(){return this.parent().each(function(){c(this).replaceWith(c(this).children())}),this},clone:function(){return this.map(function(){return this.cloneNode(!0)})},hide:function(){return this.css("display","none")},toggle:function(b){return this.each(function(){var d=c(this);(b===a?d.css("display")=="none":b)?d.show():d.hide()})},prev:function(a){return c(this.pluck("previousElementSibling")).filter(a||"*")},next:function(a){return c(this.pluck("nextElementSibling")).filter(a||"*")},html:function(b){return b===a?this.length>0?this[0].innerHTML:null:this.each(function(a){var d=this.innerHTML;c(this).empty().append(V(this,b,a,d))})},text:function(b){return b===a?this.length>0?this[0].textContent:null:this.each(function(){this.textContent=b})},attr:function(c,d){var e;return typeof c=="string"&&d===a?this.length==0||this[0].nodeType!==1?a:c=="value"&&this[0].nodeName=="INPUT"?this.val():!(e=this[0].getAttribute(c))&&c in this[0]?this[0][c]:e:this.each(function(a){if(this.nodeType!==1)return;if(I(c))for(b in c)W(this,b,c[b]);else W(this,c,V(this,d,a,this.getAttribute(c)))})},removeAttr:function(a){return this.each(function(){this.nodeType===1&&W(this,a)})},prop:function(b,c){return c===a?this[0]&&this[0][b]:this.each(function(a){this[b]=V(this,c,a,this[b])})},data:function(b,c){var d=this.attr("data-"+O(b),c);return d!==null?Y(d):a},val:function(b){return b===a?this[0]&&(this[0].multiple?c(this[0]).find("option").filter(function(a){return this.selected}).pluck("value"):this[0].value):this.each(function(a){this.value=V(this,b,a,this.value)})},offset:function(a){if(a)return this.each(function(b){var d=c(this),e=V(this,a,b,d.offset()),f=d.offsetParent().offset(),g={top:e.top-f.top,left:e.left-f.left};d.css("position")=="static"&&(g.position="relative"),d.css(g)});if(this.length==0)return null;var b=this[0].getBoundingClientRect();return{left:b.left+window.pageXOffset,top:b.top+window.pageYOffset,width:Math.round(b.width),height:Math.round(b.height)}},css:function(a,c){if(arguments.length<2&&typeof a=="string")return this[0]&&(this[0].style[B(a)]||k(this[0],"").getPropertyValue(a));var d="";if(E(a)=="string")!c&&c!==0?this.each(function(){this.style.removeProperty(O(a))}):d=O(a)+":"+Q(a,c);else for(b in a)!a[b]&&a[b]!==0?this.each(function(){this.style.removeProperty(O(b))}):d+=O(b)+":"+Q(b,a[b])+";";return this.each(function(){this.style.cssText+=";"+d})},index:function(a){return a?this.indexOf(c(a)[0]):this.parent().children().indexOf(this[0])},hasClass:function(a){return e.some.call(this,function(a){return this.test(X(a))},P(a))},addClass:function(a){return this.each(function(b){d=[];var e=X(this),f=V(this,a,b,e);f.split(/\s+/g).forEach(function(a){c(this).hasClass(a)||d.push(a)},this),d.length&&X(this,e+(e?" ":"")+d.join(" "))})},removeClass:function(b){return this.each(function(c){if(b===a)return X(this,"");d=X(this),V(this,b,c,d).split(/\s+/g).forEach(function(a){d=d.replace(P(a)," ")}),X(this,d.trim())})},toggleClass:function(b,d){return this.each(function(e){var f=c(this),g=V(this,b,e,X(this));g.split(/\s+/g).forEach(function(b){(d===a?!f.hasClass(b):d)?f.addClass(b):f.removeClass(b)})})},scrollTop:function(){if(!this.length)return;return"scrollTop"in this[0]?this[0].scrollTop:this[0].scrollY},position:function(){if(!this.length)return;var a=this[0],b=this.offsetParent(),d=this.offset(),e=o.test(b[0].nodeName)?{top:0,left:0}:b.offset();return d.top-=parseFloat(c(a).css("margin-top"))||0,d.left-=parseFloat(c(a).css("margin-left"))||0,e.top+=parseFloat(c(b[0]).css("border-top-width"))||0,e.left+=parseFloat(c(b[0]).css("border-left-width"))||0,{top:d.top-e.top,left:d.left-e.left}},offsetParent:function(){return this.map(function(){var a=this.offsetParent||h.body;while(a&&!o.test(a.nodeName)&&c(a).css("position")=="static")a=a.offsetParent;return a})}},c.fn.detach=c.fn.remove,["width","height"].forEach(function(b){c.fn[b]=function(d){var e,f=this[0],g=b.replace(/./,function(a){return a[0].toUpperCase()});return d===a?G(f)?f["inner"+g]:H(f)?f.documentElement["offset"+g]:(e=this.offset())&&e[b]:this.each(function(a){f=c(this),f.css(b,V(this,d,a,f[b]()))})}}),q.forEach(function(a,b){var d=b%2;c.fn[a]=function(){var a,e=c.map(arguments,function(b){return a=E(b),a=="object"||a=="array"||b==null?b:A.fragment(b)}),f,g=this.length>1;return e.length<1?this:this.each(function(a,h){f=d?h:h.parentNode,h=b==0?h.nextSibling:b==1?h.firstChild:b==2?h:null,e.forEach(function(a){if(g)a=a.cloneNode(!0);else if(!f)return c(a).remove();Z(f.insertBefore(a,h),function(a){a.nodeName!=null&&a.nodeName.toUpperCase()==="SCRIPT"&&(!a.type||a.type==="text/javascript")&&!a.src&&window.eval.call(window,a.innerHTML)})})})},c.fn[d?a+"To":"insert"+(b?"Before":"After")]=function(b){return c(b)[a](this),this}}),A.Z.prototype=c.fn,A.uniq=C,A.deserializeValue=Y,c.zepto=A,c}();window.Zepto=Zepto,"$"in window||(window.$=Zepto),function(a){function b(a){var b=this.os={},c=this.browser={},d=a.match(/WebKit\/([\d.]+)/),e=a.match(/(Android)\s+([\d.]+)/),f=a.match(/(iPad).*OS\s([\d_]+)/),g=!f&&a.match(/(iPhone\sOS)\s([\d_]+)/),h=a.match(/(webOS|hpwOS)[\s\/]([\d.]+)/),i=h&&a.match(/TouchPad/),j=a.match(/Kindle\/([\d.]+)/),k=a.match(/Silk\/([\d._]+)/),l=a.match(/(BlackBerry).*Version\/([\d.]+)/),m=a.match(/(BB10).*Version\/([\d.]+)/),n=a.match(/(RIM\sTablet\sOS)\s([\d.]+)/),o=a.match(/PlayBook/),p=a.match(/Chrome\/([\d.]+)/)||a.match(/CriOS\/([\d.]+)/),q=a.match(/Firefox\/([\d.]+)/);if(c.webkit=!!d)c.version=d[1];e&&(b.android=!0,b.version=e[2]),g&&(b.ios=b.iphone=!0,b.version=g[2].replace(/_/g,".")),f&&(b.ios=b.ipad=!0,b.version=f[2].replace(/_/g,".")),h&&(b.webos=!0,b.version=h[2]),i&&(b.touchpad=!0),l&&(b.blackberry=!0,b.version=l[2]),m&&(b.bb10=!0,b.version=m[2]),n&&(b.rimtabletos=!0,b.version=n[2]),o&&(c.playbook=!0),j&&(b.kindle=!0,b.version=j[1]),k&&(c.silk=!0,c.version=k[1]),!k&&b.android&&a.match(/Kindle Fire/)&&(c.silk=!0),p&&(c.chrome=!0,c.version=p[1]),q&&(c.firefox=!0,c.version=q[1]),b.tablet=!!(f||o||e&&!a.match(/Mobile/)||q&&a.match(/Tablet/)),b.phone=!b.tablet&&!!(e||g||h||l||m||p&&a.match(/Android/)||p&&a.match(/CriOS\/([\d.]+)/)||q&&a.match(/Mobile/))}b.call(a,navigator.userAgent),a.__detect=b}(Zepto),function(a){function g(a){return a._zid||(a._zid=d++)}function h(a,b,d,e){b=i(b);if(b.ns)var f=j(b.ns);return(c[g(a)]||[]).filter(function(a){return a&&(!b.e||a.e==b.e)&&(!b.ns||f.test(a.ns))&&(!d||g(a.fn)===g(d))&&(!e||a.sel==e)})}function i(a){var b=(""+a).split(".");return{e:b[0],ns:b.slice(1).sort().join(" ")}}function j(a){return new RegExp("(?:^| )"+a.replace(" "," .* ?")+"(?: |$)")}function k(b,c,d){a.type(b)!="string"?a.each(b,d):b.split(/\s/).forEach(function(a){d(a,c)})}function l(a,b){return a.del&&(a.e=="focus"||a.e=="blur")||!!b}function m(a){return f[a]||a}function n(b,d,e,h,j,n){var o=g(b),p=c[o]||(c[o]=[]);k(d,e,function(c,d){var e=i(c);e.fn=d,e.sel=h,e.e in f&&(d=function(b){var c=b.relatedTarget;if(!c||c!==this&&!a.contains(this,c))return e.fn.apply(this,arguments)}),e.del=j&&j(d,c);var g=e.del||d;e.proxy=function(a){var c=g.apply(b,[a].concat(a.data));return c===!1&&(a.preventDefault(),a.stopPropagation()),c},e.i=p.length,p.push(e),b.addEventListener(m(e.e),e.proxy,l(e,n))})}function o(a,b,d,e,f){var i=g(a);k(b||"",d,function(b,d){h(a,b,d,e).forEach(function(b){delete c[i][b.i],a.removeEventListener(m(b.e),b.proxy,l(b,f))})})}function t(b){var c,d={originalEvent:b};for(c in b)!r.test(c)&&b[c]!==undefined&&(d[c]=b[c]);return a.each(s,function(a,c){d[a]=function(){return this[c]=p,b[a].apply(b,arguments)},d[c]=q}),d}function u(a){if(!("defaultPrevented"in a)){a.defaultPrevented=!1;var b=a.preventDefault;a.preventDefault=function(){this.defaultPrevented=!0,b.call(this)}}}var b=a.zepto.qsa,c={},d=1,e={},f={mouseenter:"mouseover",mouseleave:"mouseout"};e.click=e.mousedown=e.mouseup=e.mousemove="MouseEvents",a.event={add:n,remove:o},a.proxy=function(b,c){if(a.isFunction(b)){var d=function(){return b.apply(c,arguments)};return d._zid=g(b),d}if(typeof c=="string")return a.proxy(b[c],b);throw new TypeError("expected function")},a.fn.bind=function(a,b){return this.each(function(){n(this,a,b)})},a.fn.unbind=function(a,b){return this.each(function(){o(this,a,b)})},a.fn.one=function(a,b){return this.each(function(c,d){n(this,a,b,null,function(a,b){return function(){var c=a.apply(d,arguments);return o(d,b,a),c}})})};var p=function(){return!0},q=function(){return!1},r=/^([A-Z]|layer[XY]$)/,s={preventDefault:"isDefaultPrevented",stopImmediatePropagation:"isImmediatePropagationStopped",stopPropagation:"isPropagationStopped"};a.fn.delegate=function(b,c,d){return this.each(function(e,f){n(f,c,d,b,function(c){return function(d){var e,g=a(d.target).closest(b,f).get(0);if(g)return e=a.extend(t(d),{currentTarget:g,liveFired:f}),c.apply(g,[e].concat([].slice.call(arguments,1)))}})})},a.fn.undelegate=function(a,b,c){return this.each(function(){o(this,b,c,a)})},a.fn.live=function(b,c){return a(document.body).delegate(this.selector,b,c),this},a.fn.die=function(b,c){return a(document.body).undelegate(this.selector,b,c),this},a.fn.on=function(b,c,d){return!c||a.isFunction(c)?this.bind(b,c||d):this.delegate(c,b,d)},a.fn.off=function(b,c,d){return!c||a.isFunction(c)?this.unbind(b,c||d):this.undelegate(c,b,d)},a.fn.trigger=function(b,c){if(typeof b=="string"||a.isPlainObject(b))b=a.Event(b);return u(b),b.data=c,this.each(function(){"dispatchEvent"in this&&this.dispatchEvent(b)})},a.fn.triggerHandler=function(b,c){var d,e;return this.each(function(f,g){d=t(typeof b=="string"?a.Event(b):b),d.data=c,d.target=g,a.each(h(g,b.type||b),function(a,b){e=b.proxy(d);if(d.isImmediatePropagationStopped())return!1})}),e},"focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select keydown keypress keyup error".split(" ").forEach(function(b){a.fn[b]=function(a){return a?this.bind(b,a):this.trigger(b)}}),["focus","blur"].forEach(function(b){a.fn[b]=function(a){return a?this.bind(b,a):this.each(function(){try{this[b]()}catch(a){}}),this}}),a.Event=function(a,b){typeof a!="string"&&(b=a,a=b.type);var c=document.createEvent(e[a]||"Events"),d=!0;if(b)for(var f in b)f=="bubbles"?d=!!b[f]:c[f]=b[f];return c.initEvent(a,d,!0,null,null,null,null,null,null,null,null,null,null,null,null),c.isDefaultPrevented=function(){return this.defaultPrevented},c}}(Zepto),function($){function triggerAndReturn(a,b,c){var d=$.Event(b);return $(a).trigger(d,c),!d.defaultPrevented}function triggerGlobal(a,b,c,d){if(a.global)return triggerAndReturn(b||document,c,d)}function ajaxStart(a){a.global&&$.active++===0&&triggerGlobal(a,null,"ajaxStart")}function ajaxStop(a){a.global&&!--$.active&&triggerGlobal(a,null,"ajaxStop")}function ajaxBeforeSend(a,b){var c=b.context;if(b.beforeSend.call(c,a,b)===!1||triggerGlobal(b,c,"ajaxBeforeSend",[a,b])===!1)return!1;triggerGlobal(b,c,"ajaxSend",[a,b])}function ajaxSuccess(a,b,c){var d=c.context,e="success";c.success.call(d,a,e,b),triggerGlobal(c,d,"ajaxSuccess",[b,c,a]),ajaxComplete(e,b,c)}function ajaxError(a,b,c,d){var e=d.context;d.error.call(e,c,b,a),triggerGlobal(d,e,"ajaxError",[c,d,a]),ajaxComplete(b,c,d)}function ajaxComplete(a,b,c){var d=c.context;c.complete.call(d,b,a),triggerGlobal(c,d,"ajaxComplete",[b,c]),ajaxStop(c)}function empty(){}function mimeToDataType(a){return a&&(a=a.split(";",2)[0]),a&&(a==htmlType?"html":a==jsonType?"json":scriptTypeRE.test(a)?"script":xmlTypeRE.test(a)&&"xml")||"text"}function appendQuery(a,b){return(a+"&"+b).replace(/[&?]{1,2}/,"?")}function serializeData(a){a.processData&&a.data&&$.type(a.data)!="string"&&(a.data=$.param(a.data,a.traditional)),a.data&&(!a.type||a.type.toUpperCase()=="GET")&&(a.url=appendQuery(a.url,a.data))}function parseArguments(a,b,c,d){var e=!$.isFunction(b);return{url:a,data:e?b:undefined,success:e?$.isFunction(c)?c:undefined:b,dataType:e?d||c:c}}function serialize(a,b,c,d){var e,f=$.isArray(b);$.each(b,function(b,g){e=$.type(g),d&&(b=c?d:d+"["+(f?"":b)+"]"),!d&&f?a.add(g.name,g.value):e=="array"||!c&&e=="object"?serialize(a,g,c,b):a.add(b,g)})}var jsonpID=0,document=window.document,key,name,rscript=/<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi,scriptTypeRE=/^(?:text|application)\/javascript/i,xmlTypeRE=/^(?:text|application)\/xml/i,jsonType="application/json",htmlType="text/html",blankRE=/^\s*$/;$.active=0,$.ajaxJSONP=function(a){if("type"in a){var b="jsonp"+ ++jsonpID,c=document.createElement("script"),d=function(){clearTimeout(g),$(c).remove(),delete window[b]},e=function(c){d();if(!c||c=="timeout")window[b]=empty;ajaxError(null,c||"abort",f,a)},f={abort:e},g;return ajaxBeforeSend(f,a)===!1?(e("abort"),!1):(window[b]=function(b){d(),ajaxSuccess(b,f,a)},c.onerror=function(){e("error")},c.src=a.url.replace(/=\?/,"="+b),$("head").append(c),a.timeout>0&&(g=setTimeout(function(){e("timeout")},a.timeout)),f)}return $.ajax(a)},$.ajaxSettings={type:"GET",beforeSend:empty,success:empty,error:empty,complete:empty,context:null,global:!0,xhr:function(){return new window.XMLHttpRequest},accepts:{script:"text/javascript, application/javascript",json:jsonType,xml:"application/xml, text/xml",html:htmlType,text:"text/plain"},crossDomain:!1,timeout:0,processData:!0,cache:!0},$.ajax=function(options){var settings=$.extend({},options||{});for(key in $.ajaxSettings)settings[key]===undefined&&(settings[key]=$.ajaxSettings[key]);ajaxStart(settings),settings.crossDomain||(settings.crossDomain=/^([\w-]+:)?\/\/([^\/]+)/.test(settings.url)&&RegExp.$2!=window.location.host),settings.url||(settings.url=window.location.toString()),serializeData(settings),settings.cache===!1&&(settings.url=appendQuery(settings.url,"_="+Date.now()));var dataType=settings.dataType,hasPlaceholder=/=\?/.test(settings.url);if(dataType=="jsonp"||hasPlaceholder)return hasPlaceholder||(settings.url=appendQuery(settings.url,"callback=?")),$.ajaxJSONP(settings);var mime=settings.accepts[dataType],baseHeaders={},protocol=/^([\w-]+:)\/\//.test(settings.url)?RegExp.$1:window.location.protocol,xhr=settings.xhr(),abortTimeout;settings.crossDomain||(baseHeaders["X-Requested-With"]="XMLHttpRequest"),mime&&(baseHeaders.Accept=mime,mime.indexOf(",")>-1&&(mime=mime.split(",",2)[0]),xhr.overrideMimeType&&xhr.overrideMimeType(mime));if(settings.contentType||settings.contentType!==!1&&settings.data&&settings.type.toUpperCase()!="GET")baseHeaders["Content-Type"]=settings.contentType||"application/x-www-form-urlencoded";settings.headers=$.extend(baseHeaders,settings.headers||{}),xhr.onreadystatechange=function(){if(xhr.readyState==4){xhr.onreadystatechange=empty,clearTimeout(abortTimeout);var result,error=!1;if(xhr.status>=200&&xhr.status<300||xhr.status==304||xhr.status==0&&protocol=="file:"){dataType=dataType||mimeToDataType(xhr.getResponseHeader("content-type")),result=xhr.responseText;try{dataType=="script"?(1,eval)(result):dataType=="xml"?result=xhr.responseXML:dataType=="json"&&(result=blankRE.test(result)?null:$.parseJSON(result))}catch(e){error=e}error?ajaxError(error,"parsererror",xhr,settings):ajaxSuccess(result,xhr,settings)}else ajaxError(null,xhr.status?"error":"abort",xhr,settings)}};var async="async"in settings?settings.async:!0;xhr.open(settings.type,settings.url,async);for(name in settings.headers)xhr.setRequestHeader(name,settings.headers[name]);return ajaxBeforeSend(xhr,settings)===!1?(xhr.abort(),!1):(settings.timeout>0&&(abortTimeout=setTimeout(function(){xhr.onreadystatechange=empty,xhr.abort(),ajaxError(null,"timeout",xhr,settings)},settings.timeout)),xhr.send(settings.data?settings.data:null),xhr)},$.get=function(a,b,c,d){return $.ajax(parseArguments.apply(null,arguments))},$.post=function(a,b,c,d){var e=parseArguments.apply(null,arguments);return e.type="POST",$.ajax(e)},$.getJSON=function(a,b,c){var d=parseArguments.apply(null,arguments);return d.dataType="json",$.ajax(d)},$.fn.load=function(a,b,c){if(!this.length)return this;var d=this,e=a.split(/\s/),f,g=parseArguments(a,b,c),h=g.success;return e.length>1&&(g.url=e[0],f=e[1]),g.success=function(a){d.html(f?$("<div>").html(a.replace(rscript,"")).find(f):a),h&&h.apply(d,arguments)},$.ajax(g),this};var escape=encodeURIComponent;$.param=function(a,b){var c=[];return c.add=function(a,b){this.push(escape(a)+"="+escape(b))},serialize(c,a,b),c.join("&").replace(/%20/g,"+")}}(Zepto),function(a){a.fn.serializeArray=function(){var b=[],c;return a(Array.prototype.slice.call(this.get(0).elements)).each(function(){c=a(this);var d=c.attr("type");this.nodeName.toLowerCase()!="fieldset"&&!this.disabled&&d!="submit"&&d!="reset"&&d!="button"&&(d!="radio"&&d!="checkbox"||this.checked)&&b.push({name:c.attr("name"),value:c.val()})}),b},a.fn.serialize=function(){var a=[];return this.serializeArray().forEach(function(b){a.push(encodeURIComponent(b.name)+"="+encodeURIComponent(b.value))}),a.join("&")},a.fn.submit=function(b){if(b)this.bind("submit",b);else if(this.length){var c=a.Event("submit");this.eq(0).trigger(c),c.defaultPrevented||this.get(0).submit()}return this}}(Zepto),function(a,b){function s(a){return t(a.replace(/([a-z])([A-Z])/,"$1-$2"))}function t(a){return a.toLowerCase()}function u(a){return d?d+a:t(a)}var c="",d,e,f,g={Webkit:"webkit",Moz:"",O:"o",ms:"MS"},h=window.document,i=h.createElement("div"),j=/^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i,k,l,m,n,o,p,q,r={};a.each(g,function(a,e){if(i.style[a+"TransitionProperty"]!==b)return c="-"+t(a)+"-",d=e,!1}),k=c+"transform",r[l=c+"transition-property"]=r[m=c+"transition-duration"]=r[n=c+"transition-timing-function"]=r[o=c+"animation-name"]=r[p=c+"animation-duration"]=r[q=c+"animation-timing-function"]="",a.fx={off:d===b&&i.style.transitionProperty===b,speeds:{_default:400,fast:200,slow:600},cssPrefix:c,transitionEnd:u("TransitionEnd"),animationEnd:u("AnimationEnd")},a.fn.animate=function(b,c,d,e){return a.isPlainObject(c)&&(d=c.easing,e=c.complete,c=c.duration),c&&(c=(typeof c=="number"?c:a.fx.speeds[c]||a.fx.speeds._default)/1e3),this.anim(b,c,d,e)},a.fn.anim=function(c,d,e,f){var g,h={},i,t="",u=this,v,w=a.fx.transitionEnd;d===b&&(d=.4),a.fx.off&&(d=0);if(typeof c=="string")h[o]=c,h[p]=d+"s",h[q]=e||"linear",w=a.fx.animationEnd;else{i=[];for(g in c)j.test(g)?t+=g+"("+c[g]+") ":(h[g]=c[g],i.push(s(g)));t&&(h[k]=t,i.push(k)),d>0&&typeof c=="object"&&(h[l]=i.join(", "),h[m]=d+"s",h[n]=e||"linear")}return v=function(b){if(typeof b!="undefined"){if(b.target!==b.currentTarget)return;a(b.target).unbind(w,v)}a(this).css(r),f&&f.call(this)},d>0&&this.bind(w,v),this.size()&&this.get(0).clientLeft,this.css(h),d<=0&&setTimeout(function(){u.each(function(){v.call(this)})},0),this},i=null}(Zepto);
//     Underscore.js 1.4.4
//     http://underscorejs.org
//     (c) 2009-2013 Jeremy Ashkenas, DocumentCloud Inc.
//     Underscore may be freely distributed under the MIT license.

(function() {

  // Baseline setup
  // --------------

  // Establish the root object, `window` in the browser, or `global` on the server.
  var root = this;

  // Save the previous value of the `_` variable.
  var previousUnderscore = root._;

  // Establish the object that gets returned to break out of a loop iteration.
  var breaker = {};

  // Save bytes in the minified (but not gzipped) version:
  var ArrayProto = Array.prototype, ObjProto = Object.prototype, FuncProto = Function.prototype;

  // Create quick reference variables for speed access to core prototypes.
  var push             = ArrayProto.push,
      slice            = ArrayProto.slice,
      concat           = ArrayProto.concat,
      toString         = ObjProto.toString,
      hasOwnProperty   = ObjProto.hasOwnProperty;

  // All **ECMAScript 5** native function implementations that we hope to use
  // are declared here.
  var
    nativeForEach      = ArrayProto.forEach,
    nativeMap          = ArrayProto.map,
    nativeReduce       = ArrayProto.reduce,
    nativeReduceRight  = ArrayProto.reduceRight,
    nativeFilter       = ArrayProto.filter,
    nativeEvery        = ArrayProto.every,
    nativeSome         = ArrayProto.some,
    nativeIndexOf      = ArrayProto.indexOf,
    nativeLastIndexOf  = ArrayProto.lastIndexOf,
    nativeIsArray      = Array.isArray,
    nativeKeys         = Object.keys,
    nativeBind         = FuncProto.bind;

  // Create a safe reference to the Underscore object for use below.
  var _ = function(obj) {
    if (obj instanceof _) return obj;
    if (!(this instanceof _)) return new _(obj);
    this._wrapped = obj;
  };

  // Export the Underscore object for **Node.js**, with
  // backwards-compatibility for the old `require()` API. If we're in
  // the browser, add `_` as a global object via a string identifier,
  // for Closure Compiler "advanced" mode.
  if (typeof exports !== 'undefined') {
    if (typeof module !== 'undefined' && module.exports) {
      exports = module.exports = _;
    }
    exports._ = _;
  } else {
    root._ = _;
  }

  // Current version.
  _.VERSION = '1.4.4';

  // Collection Functions
  // --------------------

  // The cornerstone, an `each` implementation, aka `forEach`.
  // Handles objects with the built-in `forEach`, arrays, and raw objects.
  // Delegates to **ECMAScript 5**'s native `forEach` if available.
  var each = _.each = _.forEach = function(obj, iterator, context) {
    if (obj == null) return;
    if (nativeForEach && obj.forEach === nativeForEach) {
      obj.forEach(iterator, context);
    } else if (obj.length === +obj.length) {
      for (var i = 0, l = obj.length; i < l; i++) {
        if (iterator.call(context, obj[i], i, obj) === breaker) return;
      }
    } else {
      for (var key in obj) {
        if (_.has(obj, key)) {
          if (iterator.call(context, obj[key], key, obj) === breaker) return;
        }
      }
    }
  };

  // Return the results of applying the iterator to each element.
  // Delegates to **ECMAScript 5**'s native `map` if available.
  _.map = _.collect = function(obj, iterator, context) {
    var results = [];
    if (obj == null) return results;
    if (nativeMap && obj.map === nativeMap) return obj.map(iterator, context);
    each(obj, function(value, index, list) {
      results[results.length] = iterator.call(context, value, index, list);
    });
    return results;
  };

  var reduceError = 'Reduce of empty array with no initial value';

  // **Reduce** builds up a single result from a list of values, aka `inject`,
  // or `foldl`. Delegates to **ECMAScript 5**'s native `reduce` if available.
  _.reduce = _.foldl = _.inject = function(obj, iterator, memo, context) {
    var initial = arguments.length > 2;
    if (obj == null) obj = [];
    if (nativeReduce && obj.reduce === nativeReduce) {
      if (context) iterator = _.bind(iterator, context);
      return initial ? obj.reduce(iterator, memo) : obj.reduce(iterator);
    }
    each(obj, function(value, index, list) {
      if (!initial) {
        memo = value;
        initial = true;
      } else {
        memo = iterator.call(context, memo, value, index, list);
      }
    });
    if (!initial) throw new TypeError(reduceError);
    return memo;
  };

  // The right-associative version of reduce, also known as `foldr`.
  // Delegates to **ECMAScript 5**'s native `reduceRight` if available.
  _.reduceRight = _.foldr = function(obj, iterator, memo, context) {
    var initial = arguments.length > 2;
    if (obj == null) obj = [];
    if (nativeReduceRight && obj.reduceRight === nativeReduceRight) {
      if (context) iterator = _.bind(iterator, context);
      return initial ? obj.reduceRight(iterator, memo) : obj.reduceRight(iterator);
    }
    var length = obj.length;
    if (length !== +length) {
      var keys = _.keys(obj);
      length = keys.length;
    }
    each(obj, function(value, index, list) {
      index = keys ? keys[--length] : --length;
      if (!initial) {
        memo = obj[index];
        initial = true;
      } else {
        memo = iterator.call(context, memo, obj[index], index, list);
      }
    });
    if (!initial) throw new TypeError(reduceError);
    return memo;
  };

  // Return the first value which passes a truth test. Aliased as `detect`.
  _.find = _.detect = function(obj, iterator, context) {
    var result;
    any(obj, function(value, index, list) {
      if (iterator.call(context, value, index, list)) {
        result = value;
        return true;
      }
    });
    return result;
  };

  // Return all the elements that pass a truth test.
  // Delegates to **ECMAScript 5**'s native `filter` if available.
  // Aliased as `select`.
  _.filter = _.select = function(obj, iterator, context) {
    var results = [];
    if (obj == null) return results;
    if (nativeFilter && obj.filter === nativeFilter) return obj.filter(iterator, context);
    each(obj, function(value, index, list) {
      if (iterator.call(context, value, index, list)) results[results.length] = value;
    });
    return results;
  };

  // Return all the elements for which a truth test fails.
  _.reject = function(obj, iterator, context) {
    return _.filter(obj, function(value, index, list) {
      return !iterator.call(context, value, index, list);
    }, context);
  };

  // Determine whether all of the elements match a truth test.
  // Delegates to **ECMAScript 5**'s native `every` if available.
  // Aliased as `all`.
  _.every = _.all = function(obj, iterator, context) {
    iterator || (iterator = _.identity);
    var result = true;
    if (obj == null) return result;
    if (nativeEvery && obj.every === nativeEvery) return obj.every(iterator, context);
    each(obj, function(value, index, list) {
      if (!(result = result && iterator.call(context, value, index, list))) return breaker;
    });
    return !!result;
  };

  // Determine if at least one element in the object matches a truth test.
  // Delegates to **ECMAScript 5**'s native `some` if available.
  // Aliased as `any`.
  var any = _.some = _.any = function(obj, iterator, context) {
    iterator || (iterator = _.identity);
    var result = false;
    if (obj == null) return result;
    if (nativeSome && obj.some === nativeSome) return obj.some(iterator, context);
    each(obj, function(value, index, list) {
      if (result || (result = iterator.call(context, value, index, list))) return breaker;
    });
    return !!result;
  };

  // Determine if the array or object contains a given value (using `===`).
  // Aliased as `include`.
  _.contains = _.include = function(obj, target) {
    if (obj == null) return false;
    if (nativeIndexOf && obj.indexOf === nativeIndexOf) return obj.indexOf(target) != -1;
    return any(obj, function(value) {
      return value === target;
    });
  };

  // Invoke a method (with arguments) on every item in a collection.
  _.invoke = function(obj, method) {
    var args = slice.call(arguments, 2);
    var isFunc = _.isFunction(method);
    return _.map(obj, function(value) {
      return (isFunc ? method : value[method]).apply(value, args);
    });
  };

  // Convenience version of a common use case of `map`: fetching a property.
  _.pluck = function(obj, key) {
    return _.map(obj, function(value){ return value[key]; });
  };

  // Convenience version of a common use case of `filter`: selecting only objects
  // containing specific `key:value` pairs.
  _.where = function(obj, attrs, first) {
    if (_.isEmpty(attrs)) return first ? null : [];
    return _[first ? 'find' : 'filter'](obj, function(value) {
      for (var key in attrs) {
        if (attrs[key] !== value[key]) return false;
      }
      return true;
    });
  };

  // Convenience version of a common use case of `find`: getting the first object
  // containing specific `key:value` pairs.
  _.findWhere = function(obj, attrs) {
    return _.where(obj, attrs, true);
  };

  // Return the maximum element or (element-based computation).
  // Can't optimize arrays of integers longer than 65,535 elements.
  // See: https://bugs.webkit.org/show_bug.cgi?id=80797
  _.max = function(obj, iterator, context) {
    if (!iterator && _.isArray(obj) && obj[0] === +obj[0] && obj.length < 65535) {
      return Math.max.apply(Math, obj);
    }
    if (!iterator && _.isEmpty(obj)) return -Infinity;
    var result = {computed : -Infinity, value: -Infinity};
    each(obj, function(value, index, list) {
      var computed = iterator ? iterator.call(context, value, index, list) : value;
      computed >= result.computed && (result = {value : value, computed : computed});
    });
    return result.value;
  };

  // Return the minimum element (or element-based computation).
  _.min = function(obj, iterator, context) {
    if (!iterator && _.isArray(obj) && obj[0] === +obj[0] && obj.length < 65535) {
      return Math.min.apply(Math, obj);
    }
    if (!iterator && _.isEmpty(obj)) return Infinity;
    var result = {computed : Infinity, value: Infinity};
    each(obj, function(value, index, list) {
      var computed = iterator ? iterator.call(context, value, index, list) : value;
      computed < result.computed && (result = {value : value, computed : computed});
    });
    return result.value;
  };

  // Shuffle an array.
  _.shuffle = function(obj) {
    var rand;
    var index = 0;
    var shuffled = [];
    each(obj, function(value) {
      rand = _.random(index++);
      shuffled[index - 1] = shuffled[rand];
      shuffled[rand] = value;
    });
    return shuffled;
  };

  // An internal function to generate lookup iterators.
  var lookupIterator = function(value) {
    return _.isFunction(value) ? value : function(obj){ return obj[value]; };
  };

  // Sort the object's values by a criterion produced by an iterator.
  _.sortBy = function(obj, value, context) {
    var iterator = lookupIterator(value);
    return _.pluck(_.map(obj, function(value, index, list) {
      return {
        value : value,
        index : index,
        criteria : iterator.call(context, value, index, list)
      };
    }).sort(function(left, right) {
      var a = left.criteria;
      var b = right.criteria;
      if (a !== b) {
        if (a > b || a === void 0) return 1;
        if (a < b || b === void 0) return -1;
      }
      return left.index < right.index ? -1 : 1;
    }), 'value');
  };

  // An internal function used for aggregate "group by" operations.
  var group = function(obj, value, context, behavior) {
    var result = {};
    var iterator = lookupIterator(value || _.identity);
    each(obj, function(value, index) {
      var key = iterator.call(context, value, index, obj);
      behavior(result, key, value);
    });
    return result;
  };

  // Groups the object's values by a criterion. Pass either a string attribute
  // to group by, or a function that returns the criterion.
  _.groupBy = function(obj, value, context) {
    return group(obj, value, context, function(result, key, value) {
      (_.has(result, key) ? result[key] : (result[key] = [])).push(value);
    });
  };

  // Counts instances of an object that group by a certain criterion. Pass
  // either a string attribute to count by, or a function that returns the
  // criterion.
  _.countBy = function(obj, value, context) {
    return group(obj, value, context, function(result, key) {
      if (!_.has(result, key)) result[key] = 0;
      result[key]++;
    });
  };

  // Use a comparator function to figure out the smallest index at which
  // an object should be inserted so as to maintain order. Uses binary search.
  _.sortedIndex = function(array, obj, iterator, context) {
    iterator = iterator == null ? _.identity : lookupIterator(iterator);
    var value = iterator.call(context, obj);
    var low = 0, high = array.length;
    while (low < high) {
      var mid = (low + high) >>> 1;
      iterator.call(context, array[mid]) < value ? low = mid + 1 : high = mid;
    }
    return low;
  };

  // Safely convert anything iterable into a real, live array.
  _.toArray = function(obj) {
    if (!obj) return [];
    if (_.isArray(obj)) return slice.call(obj);
    if (obj.length === +obj.length) return _.map(obj, _.identity);
    return _.values(obj);
  };

  // Return the number of elements in an object.
  _.size = function(obj) {
    if (obj == null) return 0;
    return (obj.length === +obj.length) ? obj.length : _.keys(obj).length;
  };

  // Array Functions
  // ---------------

  // Get the first element of an array. Passing **n** will return the first N
  // values in the array. Aliased as `head` and `take`. The **guard** check
  // allows it to work with `_.map`.
  _.first = _.head = _.take = function(array, n, guard) {
    if (array == null) return void 0;
    return (n != null) && !guard ? slice.call(array, 0, n) : array[0];
  };

  // Returns everything but the last entry of the array. Especially useful on
  // the arguments object. Passing **n** will return all the values in
  // the array, excluding the last N. The **guard** check allows it to work with
  // `_.map`.
  _.initial = function(array, n, guard) {
    return slice.call(array, 0, array.length - ((n == null) || guard ? 1 : n));
  };

  // Get the last element of an array. Passing **n** will return the last N
  // values in the array. The **guard** check allows it to work with `_.map`.
  _.last = function(array, n, guard) {
    if (array == null) return void 0;
    if ((n != null) && !guard) {
      return slice.call(array, Math.max(array.length - n, 0));
    } else {
      return array[array.length - 1];
    }
  };

  // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.
  // Especially useful on the arguments object. Passing an **n** will return
  // the rest N values in the array. The **guard**
  // check allows it to work with `_.map`.
  _.rest = _.tail = _.drop = function(array, n, guard) {
    return slice.call(array, (n == null) || guard ? 1 : n);
  };

  // Trim out all falsy values from an array.
  _.compact = function(array) {
    return _.filter(array, _.identity);
  };

  // Internal implementation of a recursive `flatten` function.
  var flatten = function(input, shallow, output) {
    each(input, function(value) {
      if (_.isArray(value)) {
        shallow ? push.apply(output, value) : flatten(value, shallow, output);
      } else {
        output.push(value);
      }
    });
    return output;
  };

  // Return a completely flattened version of an array.
  _.flatten = function(array, shallow) {
    return flatten(array, shallow, []);
  };

  // Return a version of the array that does not contain the specified value(s).
  _.without = function(array) {
    return _.difference(array, slice.call(arguments, 1));
  };

  // Produce a duplicate-free version of the array. If the array has already
  // been sorted, you have the option of using a faster algorithm.
  // Aliased as `unique`.
  _.uniq = _.unique = function(array, isSorted, iterator, context) {
    if (_.isFunction(isSorted)) {
      context = iterator;
      iterator = isSorted;
      isSorted = false;
    }
    var initial = iterator ? _.map(array, iterator, context) : array;
    var results = [];
    var seen = [];
    each(initial, function(value, index) {
      if (isSorted ? (!index || seen[seen.length - 1] !== value) : !_.contains(seen, value)) {
        seen.push(value);
        results.push(array[index]);
      }
    });
    return results;
  };

  // Produce an array that contains the union: each distinct element from all of
  // the passed-in arrays.
  _.union = function() {
    return _.uniq(concat.apply(ArrayProto, arguments));
  };

  // Produce an array that contains every item shared between all the
  // passed-in arrays.
  _.intersection = function(array) {
    var rest = slice.call(arguments, 1);
    return _.filter(_.uniq(array), function(item) {
      return _.every(rest, function(other) {
        return _.indexOf(other, item) >= 0;
      });
    });
  };

  // Take the difference between one array and a number of other arrays.
  // Only the elements present in just the first array will remain.
  _.difference = function(array) {
    var rest = concat.apply(ArrayProto, slice.call(arguments, 1));
    return _.filter(array, function(value){ return !_.contains(rest, value); });
  };

  // Zip together multiple lists into a single array -- elements that share
  // an index go together.
  _.zip = function() {
    var args = slice.call(arguments);
    var length = _.max(_.pluck(args, 'length'));
    var results = new Array(length);
    for (var i = 0; i < length; i++) {
      results[i] = _.pluck(args, "" + i);
    }
    return results;
  };

  // Converts lists into objects. Pass either a single array of `[key, value]`
  // pairs, or two parallel arrays of the same length -- one of keys, and one of
  // the corresponding values.
  _.object = function(list, values) {
    if (list == null) return {};
    var result = {};
    for (var i = 0, l = list.length; i < l; i++) {
      if (values) {
        result[list[i]] = values[i];
      } else {
        result[list[i][0]] = list[i][1];
      }
    }
    return result;
  };

  // If the browser doesn't supply us with indexOf (I'm looking at you, **MSIE**),
  // we need this function. Return the position of the first occurrence of an
  // item in an array, or -1 if the item is not included in the array.
  // Delegates to **ECMAScript 5**'s native `indexOf` if available.
  // If the array is large and already in sort order, pass `true`
  // for **isSorted** to use binary search.
  _.indexOf = function(array, item, isSorted) {
    if (array == null) return -1;
    var i = 0, l = array.length;
    if (isSorted) {
      if (typeof isSorted == 'number') {
        i = (isSorted < 0 ? Math.max(0, l + isSorted) : isSorted);
      } else {
        i = _.sortedIndex(array, item);
        return array[i] === item ? i : -1;
      }
    }
    if (nativeIndexOf && array.indexOf === nativeIndexOf) return array.indexOf(item, isSorted);
    for (; i < l; i++) if (array[i] === item) return i;
    return -1;
  };

  // Delegates to **ECMAScript 5**'s native `lastIndexOf` if available.
  _.lastIndexOf = function(array, item, from) {
    if (array == null) return -1;
    var hasIndex = from != null;
    if (nativeLastIndexOf && array.lastIndexOf === nativeLastIndexOf) {
      return hasIndex ? array.lastIndexOf(item, from) : array.lastIndexOf(item);
    }
    var i = (hasIndex ? from : array.length);
    while (i--) if (array[i] === item) return i;
    return -1;
  };

  // Generate an integer Array containing an arithmetic progression. A port of
  // the native Python `range()` function. See
  // [the Python documentation](http://docs.python.org/library/functions.html#range).
  _.range = function(start, stop, step) {
    if (arguments.length <= 1) {
      stop = start || 0;
      start = 0;
    }
    step = arguments[2] || 1;

    var len = Math.max(Math.ceil((stop - start) / step), 0);
    var idx = 0;
    var range = new Array(len);

    while(idx < len) {
      range[idx++] = start;
      start += step;
    }

    return range;
  };

  // Function (ahem) Functions
  // ------------------

  // Create a function bound to a given object (assigning `this`, and arguments,
  // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if
  // available.
  _.bind = function(func, context) {
    if (func.bind === nativeBind && nativeBind) return nativeBind.apply(func, slice.call(arguments, 1));
    var args = slice.call(arguments, 2);
    return function() {
      return func.apply(context, args.concat(slice.call(arguments)));
    };
  };

  // Partially apply a function by creating a version that has had some of its
  // arguments pre-filled, without changing its dynamic `this` context.
  _.partial = function(func) {
    var args = slice.call(arguments, 1);
    return function() {
      return func.apply(this, args.concat(slice.call(arguments)));
    };
  };

  // Bind all of an object's methods to that object. Useful for ensuring that
  // all callbacks defined on an object belong to it.
  _.bindAll = function(obj) {
    var funcs = slice.call(arguments, 1);
    if (funcs.length === 0) funcs = _.functions(obj);
    each(funcs, function(f) { obj[f] = _.bind(obj[f], obj); });
    return obj;
  };

  // Memoize an expensive function by storing its results.
  _.memoize = function(func, hasher) {
    var memo = {};
    hasher || (hasher = _.identity);
    return function() {
      var key = hasher.apply(this, arguments);
      return _.has(memo, key) ? memo[key] : (memo[key] = func.apply(this, arguments));
    };
  };

  // Delays a function for the given number of milliseconds, and then calls
  // it with the arguments supplied.
  _.delay = function(func, wait) {
    var args = slice.call(arguments, 2);
    return setTimeout(function(){ return func.apply(null, args); }, wait);
  };

  // Defers a function, scheduling it to run after the current call stack has
  // cleared.
  _.defer = function(func) {
    return _.delay.apply(_, [func, 1].concat(slice.call(arguments, 1)));
  };

  // Returns a function, that, when invoked, will only be triggered at most once
  // during a given window of time.
  _.throttle = function(func, wait) {
    var context, args, timeout, result;
    var previous = 0;
    var later = function() {
      previous = new Date;
      timeout = null;
      result = func.apply(context, args);
    };
    return function() {
      var now = new Date;
      var remaining = wait - (now - previous);
      context = this;
      args = arguments;
      if (remaining <= 0) {
        clearTimeout(timeout);
        timeout = null;
        previous = now;
        result = func.apply(context, args);
      } else if (!timeout) {
        timeout = setTimeout(later, remaining);
      }
      return result;
    };
  };

  // Returns a function, that, as long as it continues to be invoked, will not
  // be triggered. The function will be called after it stops being called for
  // N milliseconds. If `immediate` is passed, trigger the function on the
  // leading edge, instead of the trailing.
  _.debounce = function(func, wait, immediate) {
    var timeout, result;
    return function() {
      var context = this, args = arguments;
      var later = function() {
        timeout = null;
        if (!immediate) result = func.apply(context, args);
      };
      var callNow = immediate && !timeout;
      clearTimeout(timeout);
      timeout = setTimeout(later, wait);
      if (callNow) result = func.apply(context, args);
      return result;
    };
  };

  // Returns a function that will be executed at most one time, no matter how
  // often you call it. Useful for lazy initialization.
  _.once = function(func) {
    var ran = false, memo;
    return function() {
      if (ran) return memo;
      ran = true;
      memo = func.apply(this, arguments);
      func = null;
      return memo;
    };
  };

  // Returns the first function passed as an argument to the second,
  // allowing you to adjust arguments, run code before and after, and
  // conditionally execute the original function.
  _.wrap = function(func, wrapper) {
    return function() {
      var args = [func];
      push.apply(args, arguments);
      return wrapper.apply(this, args);
    };
  };

  // Returns a function that is the composition of a list of functions, each
  // consuming the return value of the function that follows.
  _.compose = function() {
    var funcs = arguments;
    return function() {
      var args = arguments;
      for (var i = funcs.length - 1; i >= 0; i--) {
        args = [funcs[i].apply(this, args)];
      }
      return args[0];
    };
  };

  // Returns a function that will only be executed after being called N times.
  _.after = function(times, func) {
    if (times <= 0) return func();
    return function() {
      if (--times < 1) {
        return func.apply(this, arguments);
      }
    };
  };

  // Object Functions
  // ----------------

  // Retrieve the names of an object's properties.
  // Delegates to **ECMAScript 5**'s native `Object.keys`
  _.keys = nativeKeys || function(obj) {
    if (obj !== Object(obj)) throw new TypeError('Invalid object');
    var keys = [];
    for (var key in obj) if (_.has(obj, key)) keys[keys.length] = key;
    return keys;
  };

  // Retrieve the values of an object's properties.
  _.values = function(obj) {
    var values = [];
    for (var key in obj) if (_.has(obj, key)) values.push(obj[key]);
    return values;
  };

  // Convert an object into a list of `[key, value]` pairs.
  _.pairs = function(obj) {
    var pairs = [];
    for (var key in obj) if (_.has(obj, key)) pairs.push([key, obj[key]]);
    return pairs;
  };

  // Invert the keys and values of an object. The values must be serializable.
  _.invert = function(obj) {
    var result = {};
    for (var key in obj) if (_.has(obj, key)) result[obj[key]] = key;
    return result;
  };

  // Return a sorted list of the function names available on the object.
  // Aliased as `methods`
  _.functions = _.methods = function(obj) {
    var names = [];
    for (var key in obj) {
      if (_.isFunction(obj[key])) names.push(key);
    }
    return names.sort();
  };

  // Extend a given object with all the properties in passed-in object(s).
  _.extend = function(obj) {
    each(slice.call(arguments, 1), function(source) {
      if (source) {
        for (var prop in source) {
          obj[prop] = source[prop];
        }
      }
    });
    return obj;
  };

  // Return a copy of the object only containing the whitelisted properties.
  _.pick = function(obj) {
    var copy = {};
    var keys = concat.apply(ArrayProto, slice.call(arguments, 1));
    each(keys, function(key) {
      if (key in obj) copy[key] = obj[key];
    });
    return copy;
  };

   // Return a copy of the object without the blacklisted properties.
  _.omit = function(obj) {
    var copy = {};
    var keys = concat.apply(ArrayProto, slice.call(arguments, 1));
    for (var key in obj) {
      if (!_.contains(keys, key)) copy[key] = obj[key];
    }
    return copy;
  };

  // Fill in a given object with default properties.
  _.defaults = function(obj) {
    each(slice.call(arguments, 1), function(source) {
      if (source) {
        for (var prop in source) {
          if (obj[prop] == null) obj[prop] = source[prop];
        }
      }
    });
    return obj;
  };

  // Create a (shallow-cloned) duplicate of an object.
  _.clone = function(obj) {
    if (!_.isObject(obj)) return obj;
    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);
  };

  // Invokes interceptor with the obj, and then returns obj.
  // The primary purpose of this method is to "tap into" a method chain, in
  // order to perform operations on intermediate results within the chain.
  _.tap = function(obj, interceptor) {
    interceptor(obj);
    return obj;
  };

  // Internal recursive comparison function for `isEqual`.
  var eq = function(a, b, aStack, bStack) {
    // Identical objects are equal. `0 === -0`, but they aren't identical.
    // See the Harmony `egal` proposal: http://wiki.ecmascript.org/doku.php?id=harmony:egal.
    if (a === b) return a !== 0 || 1 / a == 1 / b;
    // A strict comparison is necessary because `null == undefined`.
    if (a == null || b == null) return a === b;
    // Unwrap any wrapped objects.
    if (a instanceof _) a = a._wrapped;
    if (b instanceof _) b = b._wrapped;
    // Compare `[[Class]]` names.
    var className = toString.call(a);
    if (className != toString.call(b)) return false;
    switch (className) {
      // Strings, numbers, dates, and booleans are compared by value.
      case '[object String]':
        // Primitives and their corresponding object wrappers are equivalent; thus, `"5"` is
        // equivalent to `new String("5")`.
        return a == String(b);
      case '[object Number]':
        // `NaN`s are equivalent, but non-reflexive. An `egal` comparison is performed for
        // other numeric values.
        return a != +a ? b != +b : (a == 0 ? 1 / a == 1 / b : a == +b);
      case '[object Date]':
      case '[object Boolean]':
        // Coerce dates and booleans to numeric primitive values. Dates are compared by their
        // millisecond representations. Note that invalid dates with millisecond representations
        // of `NaN` are not equivalent.
        return +a == +b;
      // RegExps are compared by their source patterns and flags.
      case '[object RegExp]':
        return a.source == b.source &&
               a.global == b.global &&
               a.multiline == b.multiline &&
               a.ignoreCase == b.ignoreCase;
    }
    if (typeof a != 'object' || typeof b != 'object') return false;
    // Assume equality for cyclic structures. The algorithm for detecting cyclic
    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.
    var length = aStack.length;
    while (length--) {
      // Linear search. Performance is inversely proportional to the number of
      // unique nested structures.
      if (aStack[length] == a) return bStack[length] == b;
    }
    // Add the first object to the stack of traversed objects.
    aStack.push(a);
    bStack.push(b);
    var size = 0, result = true;
    // Recursively compare objects and arrays.
    if (className == '[object Array]') {
      // Compare array lengths to determine if a deep comparison is necessary.
      size = a.length;
      result = size == b.length;
      if (result) {
        // Deep compare the contents, ignoring non-numeric properties.
        while (size--) {
          if (!(result = eq(a[size], b[size], aStack, bStack))) break;
        }
      }
    } else {
      // Objects with different constructors are not equivalent, but `Object`s
      // from different frames are.
      var aCtor = a.constructor, bCtor = b.constructor;
      if (aCtor !== bCtor && !(_.isFunction(aCtor) && (aCtor instanceof aCtor) &&
                               _.isFunction(bCtor) && (bCtor instanceof bCtor))) {
        return false;
      }
      // Deep compare objects.
      for (var key in a) {
        if (_.has(a, key)) {
          // Count the expected number of properties.
          size++;
          // Deep compare each member.
          if (!(result = _.has(b, key) && eq(a[key], b[key], aStack, bStack))) break;
        }
      }
      // Ensure that both objects contain the same number of properties.
      if (result) {
        for (key in b) {
          if (_.has(b, key) && !(size--)) break;
        }
        result = !size;
      }
    }
    // Remove the first object from the stack of traversed objects.
    aStack.pop();
    bStack.pop();
    return result;
  };

  // Perform a deep comparison to check if two objects are equal.
  _.isEqual = function(a, b) {
    return eq(a, b, [], []);
  };

  // Is a given array, string, or object empty?
  // An "empty" object has no enumerable own-properties.
  _.isEmpty = function(obj) {
    if (obj == null) return true;
    if (_.isArray(obj) || _.isString(obj)) return obj.length === 0;
    for (var key in obj) if (_.has(obj, key)) return false;
    return true;
  };

  // Is a given value a DOM element?
  _.isElement = function(obj) {
    return !!(obj && obj.nodeType === 1);
  };

  // Is a given value an array?
  // Delegates to ECMA5's native Array.isArray
  _.isArray = nativeIsArray || function(obj) {
    return toString.call(obj) == '[object Array]';
  };

  // Is a given variable an object?
  _.isObject = function(obj) {
    return obj === Object(obj);
  };

  // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp.
  each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp'], function(name) {
    _['is' + name] = function(obj) {
      return toString.call(obj) == '[object ' + name + ']';
    };
  });

  // Define a fallback version of the method in browsers (ahem, IE), where
  // there isn't any inspectable "Arguments" type.
  if (!_.isArguments(arguments)) {
    _.isArguments = function(obj) {
      return !!(obj && _.has(obj, 'callee'));
    };
  }

  // Optimize `isFunction` if appropriate.
  if (typeof (/./) !== 'function') {
    _.isFunction = function(obj) {
      return typeof obj === 'function';
    };
  }

  // Is a given object a finite number?
  _.isFinite = function(obj) {
    return isFinite(obj) && !isNaN(parseFloat(obj));
  };

  // Is the given value `NaN`? (NaN is the only number which does not equal itself).
  _.isNaN = function(obj) {
    return _.isNumber(obj) && obj != +obj;
  };

  // Is a given value a boolean?
  _.isBoolean = function(obj) {
    return obj === true || obj === false || toString.call(obj) == '[object Boolean]';
  };

  // Is a given value equal to null?
  _.isNull = function(obj) {
    return obj === null;
  };

  // Is a given variable undefined?
  _.isUndefined = function(obj) {
    return obj === void 0;
  };

  // Shortcut function for checking if an object has a given property directly
  // on itself (in other words, not on a prototype).
  _.has = function(obj, key) {
    return hasOwnProperty.call(obj, key);
  };

  // Utility Functions
  // -----------------

  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its
  // previous owner. Returns a reference to the Underscore object.
  _.noConflict = function() {
    root._ = previousUnderscore;
    return this;
  };

  // Keep the identity function around for default iterators.
  _.identity = function(value) {
    return value;
  };

  // Run a function **n** times.
  _.times = function(n, iterator, context) {
    var accum = Array(n);
    for (var i = 0; i < n; i++) accum[i] = iterator.call(context, i);
    return accum;
  };

  // Return a random integer between min and max (inclusive).
  _.random = function(min, max) {
    if (max == null) {
      max = min;
      min = 0;
    }
    return min + Math.floor(Math.random() * (max - min + 1));
  };

  // List of HTML entities for escaping.
  var entityMap = {
    escape: {
      '&': '&amp;',
      '<': '&lt;',
      '>': '&gt;',
      '"': '&quot;',
      "'": '&#x27;',
      '/': '&#x2F;'
    }
  };
  entityMap.unescape = _.invert(entityMap.escape);

  // Regexes containing the keys and values listed immediately above.
  var entityRegexes = {
    escape:   new RegExp('[' + _.keys(entityMap.escape).join('') + ']', 'g'),
    unescape: new RegExp('(' + _.keys(entityMap.unescape).join('|') + ')', 'g')
  };

  // Functions for escaping and unescaping strings to/from HTML interpolation.
  _.each(['escape', 'unescape'], function(method) {
    _[method] = function(string) {
      if (string == null) return '';
      return ('' + string).replace(entityRegexes[method], function(match) {
        return entityMap[method][match];
      });
    };
  });

  // If the value of the named property is a function then invoke it;
  // otherwise, return it.
  _.result = function(object, property) {
    if (object == null) return null;
    var value = object[property];
    return _.isFunction(value) ? value.call(object) : value;
  };

  // Add your own custom functions to the Underscore object.
  _.mixin = function(obj) {
    each(_.functions(obj), function(name){
      var func = _[name] = obj[name];
      _.prototype[name] = function() {
        var args = [this._wrapped];
        push.apply(args, arguments);
        return result.call(this, func.apply(_, args));
      };
    });
  };

  // Generate a unique integer id (unique within the entire client session).
  // Useful for temporary DOM ids.
  var idCounter = 0;
  _.uniqueId = function(prefix) {
    var id = ++idCounter + '';
    return prefix ? prefix + id : id;
  };

  // By default, Underscore uses ERB-style template delimiters, change the
  // following template settings to use alternative delimiters.
  _.templateSettings = {
    evaluate    : /<%([\s\S]+?)%>/g,
    interpolate : /<%=([\s\S]+?)%>/g,
    escape      : /<%-([\s\S]+?)%>/g
  };

  // When customizing `templateSettings`, if you don't want to define an
  // interpolation, evaluation or escaping regex, we need one that is
  // guaranteed not to match.
  var noMatch = /(.)^/;

  // Certain characters need to be escaped so that they can be put into a
  // string literal.
  var escapes = {
    "'":      "'",
    '\\':     '\\',
    '\r':     'r',
    '\n':     'n',
    '\t':     't',
    '\u2028': 'u2028',
    '\u2029': 'u2029'
  };

  var escaper = /\\|'|\r|\n|\t|\u2028|\u2029/g;

  // JavaScript micro-templating, similar to John Resig's implementation.
  // Underscore templating handles arbitrary delimiters, preserves whitespace,
  // and correctly escapes quotes within interpolated code.
  _.template = function(text, data, settings) {
    var render;
    settings = _.defaults({}, settings, _.templateSettings);

    // Combine delimiters into one regular expression via alternation.
    var matcher = new RegExp([
      (settings.escape || noMatch).source,
      (settings.interpolate || noMatch).source,
      (settings.evaluate || noMatch).source
    ].join('|') + '|$', 'g');

    // Compile the template source, escaping string literals appropriately.
    var index = 0;
    var source = "__p+='";
    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {
      source += text.slice(index, offset)
        .replace(escaper, function(match) { return '\\' + escapes[match]; });

      if (escape) {
        source += "'+\n((__t=(" + escape + "))==null?'':_.escape(__t))+\n'";
      }
      if (interpolate) {
        source += "'+\n((__t=(" + interpolate + "))==null?'':__t)+\n'";
      }
      if (evaluate) {
        source += "';\n" + evaluate + "\n__p+='";
      }
      index = offset + match.length;
      return match;
    });
    source += "';\n";

    // If a variable is not specified, place data values in local scope.
    if (!settings.variable) source = 'with(obj||{}){\n' + source + '}\n';

    source = "var __t,__p='',__j=Array.prototype.join," +
      "print=function(){__p+=__j.call(arguments,'');};\n" +
      source + "return __p;\n";

    try {
      render = new Function(settings.variable || 'obj', '_', source);
    } catch (e) {
      e.source = source;
      throw e;
    }

    if (data) return render(data, _);
    var template = function(data) {
      return render.call(this, data, _);
    };

    // Provide the compiled function source as a convenience for precompilation.
    template.source = 'function(' + (settings.variable || 'obj') + '){\n' + source + '}';

    return template;
  };

  // Add a "chain" function, which will delegate to the wrapper.
  _.chain = function(obj) {
    return _(obj).chain();
  };

  // OOP
  // ---------------
  // If Underscore is called as a function, it returns a wrapped object that
  // can be used OO-style. This wrapper holds altered versions of all the
  // underscore functions. Wrapped objects may be chained.

  // Helper function to continue chaining intermediate results.
  var result = function(obj) {
    return this._chain ? _(obj).chain() : obj;
  };

  // Add all of the Underscore functions to the wrapper object.
  _.mixin(_);

  // Add all mutator Array functions to the wrapper.
  each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {
    var method = ArrayProto[name];
    _.prototype[name] = function() {
      var obj = this._wrapped;
      method.apply(obj, arguments);
      if ((name == 'shift' || name == 'splice') && obj.length === 0) delete obj[0];
      return result.call(this, obj);
    };
  });

  // Add all accessor Array functions to the wrapper.
  each(['concat', 'join', 'slice'], function(name) {
    var method = ArrayProto[name];
    _.prototype[name] = function() {
      return result.call(this, method.apply(this._wrapped, arguments));
    };
  });

  _.extend(_.prototype, {

    // Start chaining a wrapped Underscore object.
    chain: function() {
      this._chain = true;
      return this;
    },

    // Extracts the result from a wrapped and chained object.
    value: function() {
      return this._wrapped;
    }

  });

}).call(this);
;
//     Backbone.js 0.9.10

//     (c) 2010-2012 Jeremy Ashkenas, DocumentCloud Inc.
//     Backbone may be freely distributed under the MIT license.
//     For all details and documentation:
//     http://backbonejs.org

(function(){

  // Initial Setup
  // -------------

  // Save a reference to the global object (`window` in the browser, `exports`
  // on the server).
  var root = this;

  // Save the previous value of the `Backbone` variable, so that it can be
  // restored later on, if `noConflict` is used.
  var previousBackbone = root.Backbone;

  // Create a local reference to array methods.
  var array = [];
  var push = array.push;
  var slice = array.slice;
  var splice = array.splice;

  // The top-level namespace. All public Backbone classes and modules will
  // be attached to this. Exported for both CommonJS and the browser.
  var Backbone;
  if (typeof exports !== 'undefined') {
    Backbone = exports;
  } else {
    Backbone = root.Backbone = {};
  }

  // Current version of the library. Keep in sync with `package.json`.
  Backbone.VERSION = '0.9.10';

  // Require Underscore, if we're on the server, and it's not already present.
  var _ = root._;
  if (!_ && (typeof require !== 'undefined')) _ = require('underscore');

  // For Backbone's purposes, jQuery, Zepto, or Ender owns the `$` variable.
  Backbone.$ = root.jQuery || root.Zepto || root.ender;

  // Runs Backbone.js in *noConflict* mode, returning the `Backbone` variable
  // to its previous owner. Returns a reference to this Backbone object.
  Backbone.noConflict = function() {
    root.Backbone = previousBackbone;
    return this;
  };

  // Turn on `emulateHTTP` to support legacy HTTP servers. Setting this option
  // will fake `"PUT"` and `"DELETE"` requests via the `_method` parameter and
  // set a `X-Http-Method-Override` header.
  Backbone.emulateHTTP = false;

  // Turn on `emulateJSON` to support legacy servers that can't deal with direct
  // `application/json` requests ... will encode the body as
  // `application/x-www-form-urlencoded` instead and will send the model in a
  // form param named `model`.
  Backbone.emulateJSON = false;

  // Backbone.Events
  // ---------------

  // Regular expression used to split event strings.
  var eventSplitter = /\s+/;

  // Implement fancy features of the Events API such as multiple event
  // names `"change blur"` and jQuery-style event maps `{change: action}`
  // in terms of the existing API.
  var eventsApi = function(obj, action, name, rest) {
    if (!name) return true;
    if (typeof name === 'object') {
      for (var key in name) {
        obj[action].apply(obj, [key, name[key]].concat(rest));
      }
    } else if (eventSplitter.test(name)) {
      var names = name.split(eventSplitter);
      for (var i = 0, l = names.length; i < l; i++) {
        obj[action].apply(obj, [names[i]].concat(rest));
      }
    } else {
      return true;
    }
  };

  // Optimized internal dispatch function for triggering events. Tries to
  // keep the usual cases speedy (most Backbone events have 3 arguments).
  var triggerEvents = function(events, args) {
    var ev, i = -1, l = events.length;
    switch (args.length) {
    case 0: while (++i < l) (ev = events[i]).callback.call(ev.ctx);
    return;
    case 1: while (++i < l) (ev = events[i]).callback.call(ev.ctx, args[0]);
    return;
    case 2: while (++i < l) (ev = events[i]).callback.call(ev.ctx, args[0], args[1]);
    return;
    case 3: while (++i < l) (ev = events[i]).callback.call(ev.ctx, args[0], args[1], args[2]);
    return;
    default: while (++i < l) (ev = events[i]).callback.apply(ev.ctx, args);
    }
  };

  // A module that can be mixed in to *any object* in order to provide it with
  // custom events. You may bind with `on` or remove with `off` callback
  // functions to an event; `trigger`-ing an event fires all callbacks in
  // succession.
  //
  //     var object = {};
  //     _.extend(object, Backbone.Events);
  //     object.on('expand', function(){ alert('expanded'); });
  //     object.trigger('expand');
  //
  var Events = Backbone.Events = {

    // Bind one or more space separated events, or an events map,
    // to a `callback` function. Passing `"all"` will bind the callback to
    // all events fired.
    on: function(name, callback, context) {
      if (!(eventsApi(this, 'on', name, [callback, context]) && callback)) return this;
      this._events || (this._events = {});
      var list = this._events[name] || (this._events[name] = []);
      list.push({callback: callback, context: context, ctx: context || this});
      return this;
    },

    // Bind events to only be triggered a single time. After the first time
    // the callback is invoked, it will be removed.
    once: function(name, callback, context) {
      if (!(eventsApi(this, 'once', name, [callback, context]) && callback)) return this;
      var self = this;
      var once = _.once(function() {
        self.off(name, once);
        callback.apply(this, arguments);
      });
      once._callback = callback;
      this.on(name, once, context);
      return this;
    },

    // Remove one or many callbacks. If `context` is null, removes all
    // callbacks with that function. If `callback` is null, removes all
    // callbacks for the event. If `name` is null, removes all bound
    // callbacks for all events.
    off: function(name, callback, context) {
      var list, ev, events, names, i, l, j, k;
      if (!this._events || !eventsApi(this, 'off', name, [callback, context])) return this;
      if (!name && !callback && !context) {
        this._events = {};
        return this;
      }

      names = name ? [name] : _.keys(this._events);
      for (i = 0, l = names.length; i < l; i++) {
        name = names[i];
        if (list = this._events[name]) {
          events = [];
          if (callback || context) {
            for (j = 0, k = list.length; j < k; j++) {
              ev = list[j];
              if ((callback && callback !== ev.callback &&
                               callback !== ev.callback._callback) ||
                  (context && context !== ev.context)) {
                events.push(ev);
              }
            }
          }
          this._events[name] = events;
        }
      }

      return this;
    },

    // Trigger one or many events, firing all bound callbacks. Callbacks are
    // passed the same arguments as `trigger` is, apart from the event name
    // (unless you're listening on `"all"`, which will cause your callback to
    // receive the true name of the event as the first argument).
    trigger: function(name) {
      if (!this._events) return this;
      var args = slice.call(arguments, 1);
      if (!eventsApi(this, 'trigger', name, args)) return this;
      var events = this._events[name];
      var allEvents = this._events.all;
      if (events) triggerEvents(events, args);
      if (allEvents) triggerEvents(allEvents, arguments);
      return this;
    },

    // An inversion-of-control version of `on`. Tell *this* object to listen to
    // an event in another object ... keeping track of what it's listening to.
    listenTo: function(obj, name, callback) {
      var listeners = this._listeners || (this._listeners = {});
      var id = obj._listenerId || (obj._listenerId = _.uniqueId('l'));
      listeners[id] = obj;
      obj.on(name, typeof name === 'object' ? this : callback, this);
      return this;
    },

    // Tell this object to stop listening to either specific events ... or
    // to every object it's currently listening to.
    stopListening: function(obj, name, callback) {
      var listeners = this._listeners;
      if (!listeners) return;
      if (obj) {
        obj.off(name, typeof name === 'object' ? this : callback, this);
        if (!name && !callback) delete listeners[obj._listenerId];
      } else {
        if (typeof name === 'object') callback = this;
        for (var id in listeners) {
          listeners[id].off(name, callback, this);
        }
        this._listeners = {};
      }
      return this;
    }
  };

  // Aliases for backwards compatibility.
  Events.bind   = Events.on;
  Events.unbind = Events.off;

  // Allow the `Backbone` object to serve as a global event bus, for folks who
  // want global "pubsub" in a convenient place.
  _.extend(Backbone, Events);

  // Backbone.Model
  // --------------

  // Create a new model, with defined attributes. A client id (`cid`)
  // is automatically generated and assigned for you.
  var Model = Backbone.Model = function(attributes, options) {
    var defaults;
    var attrs = attributes || {};
    this.cid = _.uniqueId('c');
    this.attributes = {};
    if (options && options.collection) this.collection = options.collection;
    if (options && options.parse) attrs = this.parse(attrs, options) || {};
    if (defaults = _.result(this, 'defaults')) {
      attrs = _.defaults({}, attrs, defaults);
    }
    this.set(attrs, options);
    this.changed = {};
    this.initialize.apply(this, arguments);
  };

  // Attach all inheritable methods to the Model prototype.
  _.extend(Model.prototype, Events, {

    // A hash of attributes whose current and previous value differ.
    changed: null,

    // The default name for the JSON `id` attribute is `"id"`. MongoDB and
    // CouchDB users may want to set this to `"_id"`.
    idAttribute: 'id',

    // Initialize is an empty function by default. Override it with your own
    // initialization logic.
    initialize: function(){},

    // Return a copy of the model's `attributes` object.
    toJSON: function(options) {
      return _.clone(this.attributes);
    },

    // Proxy `Backbone.sync` by default.
    sync: function() {
      return Backbone.sync.apply(this, arguments);
    },

    // Get the value of an attribute.
    get: function(attr) {
      return this.attributes[attr];
    },

    // Get the HTML-escaped value of an attribute.
    escape: function(attr) {
      return _.escape(this.get(attr));
    },

    // Returns `true` if the attribute contains a value that is not null
    // or undefined.
    has: function(attr) {
      return this.get(attr) != null;
    },

    // ----------------------------------------------------------------------

    // Set a hash of model attributes on the object, firing `"change"` unless
    // you choose to silence it.
    set: function(key, val, options) {
      var attr, attrs, unset, changes, silent, changing, prev, current;
      if (key == null) return this;

      // Handle both `"key", value` and `{key: value}` -style arguments.
      if (typeof key === 'object') {
        attrs = key;
        options = val;
      } else {
        (attrs = {})[key] = val;
      }

      options || (options = {});

      // Run validation.
      if (!this._validate(attrs, options)) return false;

      // Extract attributes and options.
      unset           = options.unset;
      silent          = options.silent;
      changes         = [];
      changing        = this._changing;
      this._changing  = true;

      if (!changing) {
        this._previousAttributes = _.clone(this.attributes);
        this.changed = {};
      }
      current = this.attributes, prev = this._previousAttributes;

      // Check for changes of `id`.
      if (this.idAttribute in attrs) this.id = attrs[this.idAttribute];

      // For each `set` attribute, update or delete the current value.
      for (attr in attrs) {
        val = attrs[attr];
        if (!_.isEqual(current[attr], val)) changes.push(attr);
        if (!_.isEqual(prev[attr], val)) {
          this.changed[attr] = val;
        } else {
          delete this.changed[attr];
        }
        unset ? delete current[attr] : current[attr] = val;
      }

      // Trigger all relevant attribute changes.
      if (!silent) {
        if (changes.length) this._pending = true;
        for (var i = 0, l = changes.length; i < l; i++) {
          this.trigger('change:' + changes[i], this, current[changes[i]], options);
        }
      }

      if (changing) return this;
      if (!silent) {
        while (this._pending) {
          this._pending = false;
          this.trigger('change', this, options);
        }
      }
      this._pending = false;
      this._changing = false;
      return this;
    },

    // Remove an attribute from the model, firing `"change"` unless you choose
    // to silence it. `unset` is a noop if the attribute doesn't exist.
    unset: function(attr, options) {
      return this.set(attr, void 0, _.extend({}, options, {unset: true}));
    },

    // Clear all attributes on the model, firing `"change"` unless you choose
    // to silence it.
    clear: function(options) {
      var attrs = {};
      for (var key in this.attributes) attrs[key] = void 0;
      return this.set(attrs, _.extend({}, options, {unset: true}));
    },

    // Determine if the model has changed since the last `"change"` event.
    // If you specify an attribute name, determine if that attribute has changed.
    hasChanged: function(attr) {
      if (attr == null) return !_.isEmpty(this.changed);
      return _.has(this.changed, attr);
    },

    // Return an object containing all the attributes that have changed, or
    // false if there are no changed attributes. Useful for determining what
    // parts of a view need to be updated and/or what attributes need to be
    // persisted to the server. Unset attributes will be set to undefined.
    // You can also pass an attributes object to diff against the model,
    // determining if there *would be* a change.
    changedAttributes: function(diff) {
      if (!diff) return this.hasChanged() ? _.clone(this.changed) : false;
      var val, changed = false;
      var old = this._changing ? this._previousAttributes : this.attributes;
      for (var attr in diff) {
        if (_.isEqual(old[attr], (val = diff[attr]))) continue;
        (changed || (changed = {}))[attr] = val;
      }
      return changed;
    },

    // Get the previous value of an attribute, recorded at the time the last
    // `"change"` event was fired.
    previous: function(attr) {
      if (attr == null || !this._previousAttributes) return null;
      return this._previousAttributes[attr];
    },

    // Get all of the attributes of the model at the time of the previous
    // `"change"` event.
    previousAttributes: function() {
      return _.clone(this._previousAttributes);
    },

    // ---------------------------------------------------------------------

    // Fetch the model from the server. If the server's representation of the
    // model differs from its current attributes, they will be overriden,
    // triggering a `"change"` event.
    fetch: function(options) {
      options = options ? _.clone(options) : {};
      if (options.parse === void 0) options.parse = true;
      var success = options.success;
      options.success = function(model, resp, options) {
        if (!model.set(model.parse(resp, options), options)) return false;
        if (success) success(model, resp, options);
      };
      return this.sync('read', this, options);
    },

    // Set a hash of model attributes, and sync the model to the server.
    // If the server returns an attributes hash that differs, the model's
    // state will be `set` again.
    save: function(key, val, options) {
      var attrs, success, method, xhr, attributes = this.attributes;

      // Handle both `"key", value` and `{key: value}` -style arguments.
      if (key == null || typeof key === 'object') {
        attrs = key;
        options = val;
      } else {
        (attrs = {})[key] = val;
      }

      // If we're not waiting and attributes exist, save acts as `set(attr).save(null, opts)`.
      if (attrs && (!options || !options.wait) && !this.set(attrs, options)) return false;

      options = _.extend({validate: true}, options);

      // Do not persist invalid models.
      if (!this._validate(attrs, options)) return false;

      // Set temporary attributes if `{wait: true}`.
      if (attrs && options.wait) {
        this.attributes = _.extend({}, attributes, attrs);
      }

      // After a successful server-side save, the client is (optionally)
      // updated with the server-side state.
      if (options.parse === void 0) options.parse = true;
      success = options.success;
      options.success = function(model, resp, options) {
        // Ensure attributes are restored during synchronous saves.
        model.attributes = attributes;
        var serverAttrs = model.parse(resp, options);
        if (options.wait) serverAttrs = _.extend(attrs || {}, serverAttrs);
        if (_.isObject(serverAttrs) && !model.set(serverAttrs, options)) {
          return false;
        }
        if (success) success(model, resp, options);
      };

      // Finish configuring and sending the Ajax request.
      method = this.isNew() ? 'create' : (options.patch ? 'patch' : 'update');
      if (method === 'patch') options.attrs = attrs;
      xhr = this.sync(method, this, options);

      // Restore attributes.
      if (attrs && options.wait) this.attributes = attributes;

      return xhr;
    },

    // Destroy this model on the server if it was already persisted.
    // Optimistically removes the model from its collection, if it has one.
    // If `wait: true` is passed, waits for the server to respond before removal.
    destroy: function(options) {
      options = options ? _.clone(options) : {};
      var model = this;
      var success = options.success;

      var destroy = function() {
        model.trigger('destroy', model, model.collection, options);
      };

      options.success = function(model, resp, options) {
        if (options.wait || model.isNew()) destroy();
        if (success) success(model, resp, options);
      };

      if (this.isNew()) {
        options.success(this, null, options);
        return false;
      }

      var xhr = this.sync('delete', this, options);
      if (!options.wait) destroy();
      return xhr;
    },

    // Default URL for the model's representation on the server -- if you're
    // using Backbone's restful methods, override this to change the endpoint
    // that will be called.
    url: function() {
      var base = _.result(this, 'urlRoot') || _.result(this.collection, 'url') || urlError();
      if (this.isNew()) return base;
      return base + (base.charAt(base.length - 1) === '/' ? '' : '/') + encodeURIComponent(this.id);
    },

    // **parse** converts a response into the hash of attributes to be `set` on
    // the model. The default implementation is just to pass the response along.
    parse: function(resp, options) {
      return resp;
    },

    // Create a new model with identical attributes to this one.
    clone: function() {
      return new this.constructor(this.attributes);
    },

    // A model is new if it has never been saved to the server, and lacks an id.
    isNew: function() {
      return this.id == null;
    },

    // Check if the model is currently in a valid state.
    isValid: function(options) {
      return !this.validate || !this.validate(this.attributes, options);
    },

    // Run validation against the next complete set of model attributes,
    // returning `true` if all is well. Otherwise, fire a general
    // `"error"` event and call the error callback, if specified.
    _validate: function(attrs, options) {
      if (!options.validate || !this.validate) return true;
      attrs = _.extend({}, this.attributes, attrs);
      var error = this.validationError = this.validate(attrs, options) || null;
      if (!error) return true;
      this.trigger('invalid', this, error, options || {});
      return false;
    }

  });

  // Backbone.Collection
  // -------------------

  // Provides a standard collection class for our sets of models, ordered
  // or unordered. If a `comparator` is specified, the Collection will maintain
  // its models in sort order, as they're added and removed.
  var Collection = Backbone.Collection = function(models, options) {
    options || (options = {});
    if (options.model) this.model = options.model;
    if (options.comparator !== void 0) this.comparator = options.comparator;
    this.models = [];
    this._reset();
    this.initialize.apply(this, arguments);
    if (models) this.reset(models, _.extend({silent: true}, options));
  };

  // Define the Collection's inheritable methods.
  _.extend(Collection.prototype, Events, {

    // The default model for a collection is just a **Backbone.Model**.
    // This should be overridden in most cases.
    model: Model,

    // Initialize is an empty function by default. Override it with your own
    // initialization logic.
    initialize: function(){},

    // The JSON representation of a Collection is an array of the
    // models' attributes.
    toJSON: function(options) {
      return this.map(function(model){ return model.toJSON(options); });
    },

    // Proxy `Backbone.sync` by default.
    sync: function() {
      return Backbone.sync.apply(this, arguments);
    },

    // Add a model, or list of models to the set.
    add: function(models, options) {
      models = _.isArray(models) ? models.slice() : [models];
      options || (options = {});
      var i, l, model, attrs, existing, doSort, add, at, sort, sortAttr;
      add = [];
      at = options.at;
      sort = this.comparator && (at == null) && options.sort != false;
      sortAttr = _.isString(this.comparator) ? this.comparator : null;

      // Turn bare objects into model references, and prevent invalid models
      // from being added.
      for (i = 0, l = models.length; i < l; i++) {
        if (!(model = this._prepareModel(attrs = models[i], options))) {
          this.trigger('invalid', this, attrs, options);
          continue;
        }

        // If a duplicate is found, prevent it from being added and
        // optionally merge it into the existing model.
        if (existing = this.get(model)) {
          if (options.merge) {
            existing.set(attrs === model ? model.attributes : attrs, options);
            if (sort && !doSort && existing.hasChanged(sortAttr)) doSort = true;
          }
          continue;
        }

        // This is a new model, push it to the `add` list.
        add.push(model);

        // Listen to added models' events, and index models for lookup by
        // `id` and by `cid`.
        model.on('all', this._onModelEvent, this);
        this._byId[model.cid] = model;
        if (model.id != null) this._byId[model.id] = model;
      }

      // See if sorting is needed, update `length` and splice in new models.
      if (add.length) {
        if (sort) doSort = true;
        this.length += add.length;
        if (at != null) {
          splice.apply(this.models, [at, 0].concat(add));
        } else {
          push.apply(this.models, add);
        }
      }

      // Silently sort the collection if appropriate.
      if (doSort) this.sort({silent: true});

      if (options.silent) return this;

      // Trigger `add` events.
      for (i = 0, l = add.length; i < l; i++) {
        (model = add[i]).trigger('add', model, this, options);
      }

      // Trigger `sort` if the collection was sorted.
      if (doSort) this.trigger('sort', this, options);

      return this;
    },

    // Remove a model, or a list of models from the set.
    remove: function(models, options) {
      models = _.isArray(models) ? models.slice() : [models];
      options || (options = {});
      var i, l, index, model;
      for (i = 0, l = models.length; i < l; i++) {
        model = this.get(models[i]);
        if (!model) continue;
        delete this._byId[model.id];
        delete this._byId[model.cid];
        index = this.indexOf(model);
        this.models.splice(index, 1);
        this.length--;
        if (!options.silent) {
          options.index = index;
          model.trigger('remove', model, this, options);
        }
        this._removeReference(model);
      }
      return this;
    },

    // Add a model to the end of the collection.
    push: function(model, options) {
      model = this._prepareModel(model, options);
      this.add(model, _.extend({at: this.length}, options));
      return model;
    },

    // Remove a model from the end of the collection.
    pop: function(options) {
      var model = this.at(this.length - 1);
      this.remove(model, options);
      return model;
    },

    // Add a model to the beginning of the collection.
    unshift: function(model, options) {
      model = this._prepareModel(model, options);
      this.add(model, _.extend({at: 0}, options));
      return model;
    },

    // Remove a model from the beginning of the collection.
    shift: function(options) {
      var model = this.at(0);
      this.remove(model, options);
      return model;
    },

    // Slice out a sub-array of models from the collection.
    slice: function(begin, end) {
      return this.models.slice(begin, end);
    },

    // Get a model from the set by id.
    get: function(obj) {
      if (obj == null) return void 0;
      this._idAttr || (this._idAttr = this.model.prototype.idAttribute);
      return this._byId[obj.id || obj.cid || obj[this._idAttr] || obj];
    },

    // Get the model at the given index.
    at: function(index) {
      return this.models[index];
    },

    // Return models with matching attributes. Useful for simple cases of `filter`.
    where: function(attrs) {
      if (_.isEmpty(attrs)) return [];
      return this.filter(function(model) {
        for (var key in attrs) {
          if (attrs[key] !== model.get(key)) return false;
        }
        return true;
      });
    },

    // Force the collection to re-sort itself. You don't need to call this under
    // normal circumstances, as the set will maintain sort order as each item
    // is added.
    sort: function(options) {
      if (!this.comparator) {
        throw new Error('Cannot sort a set without a comparator');
      }
      options || (options = {});

      // Run sort based on type of `comparator`.
      if (_.isString(this.comparator) || this.comparator.length === 1) {
        this.models = this.sortBy(this.comparator, this);
      } else {
        this.models.sort(_.bind(this.comparator, this));
      }

      if (!options.silent) this.trigger('sort', this, options);
      return this;
    },

    // Pluck an attribute from each model in the collection.
    pluck: function(attr) {
      return _.invoke(this.models, 'get', attr);
    },

    // Smartly update a collection with a change set of models, adding,
    // removing, and merging as necessary.
    update: function(models, options) {
      options = _.extend({add: true, merge: true, remove: true}, options);
      if (options.parse) models = this.parse(models, options);
      var model, i, l, existing;
      var add = [], remove = [], modelMap = {};

      // Allow a single model (or no argument) to be passed.
      if (!_.isArray(models)) models = models ? [models] : [];

      // Proxy to `add` for this case, no need to iterate...
      if (options.add && !options.remove) return this.add(models, options);

      // Determine which models to add and merge, and which to remove.
      for (i = 0, l = models.length; i < l; i++) {
        model = models[i];
        existing = this.get(model);
        if (options.remove && existing) modelMap[existing.cid] = true;
        if ((options.add && !existing) || (options.merge && existing)) {
          add.push(model);
        }
      }
      if (options.remove) {
        for (i = 0, l = this.models.length; i < l; i++) {
          model = this.models[i];
          if (!modelMap[model.cid]) remove.push(model);
        }
      }

      // Remove models (if applicable) before we add and merge the rest.
      if (remove.length) this.remove(remove, options);
      if (add.length) this.add(add, options);
      return this;
    },

    // When you have more items than you want to add or remove individually,
    // you can reset the entire set with a new list of models, without firing
    // any `add` or `remove` events. Fires `reset` when finished.
    reset: function(models, options) {
      options || (options = {});
      if (options.parse) models = this.parse(models, options);
      for (var i = 0, l = this.models.length; i < l; i++) {
        this._removeReference(this.models[i]);
      }
      options.previousModels = this.models.slice();
      this._reset();
      if (models) this.add(models, _.extend({silent: true}, options));
      if (!options.silent) this.trigger('reset', this, options);
      return this;
    },

    // Fetch the default set of models for this collection, resetting the
    // collection when they arrive. If `update: true` is passed, the response
    // data will be passed through the `update` method instead of `reset`.
    fetch: function(options) {
      options = options ? _.clone(options) : {};
      if (options.parse === void 0) options.parse = true;
      var success = options.success;
      options.success = function(collection, resp, options) {
        var method = options.update ? 'update' : 'reset';
        collection[method](resp, options);
        if (success) success(collection, resp, options);
      };
      return this.sync('read', this, options);
    },

    // Create a new instance of a model in this collection. Add the model to the
    // collection immediately, unless `wait: true` is passed, in which case we
    // wait for the server to agree.
    create: function(model, options) {
      options = options ? _.clone(options) : {};
      if (!(model = this._prepareModel(model, options))) return false;
      if (!options.wait) this.add(model, options);
      var collection = this;
      var success = options.success;
      options.success = function(model, resp, options) {
        if (options.wait) collection.add(model, options);
        if (success) success(model, resp, options);
      };
      model.save(null, options);
      return model;
    },

    // **parse** converts a response into a list of models to be added to the
    // collection. The default implementation is just to pass it through.
    parse: function(resp, options) {
      return resp;
    },

    // Create a new collection with an identical list of models as this one.
    clone: function() {
      return new this.constructor(this.models);
    },

    // Reset all internal state. Called when the collection is reset.
    _reset: function() {
      this.length = 0;
      this.models.length = 0;
      this._byId  = {};
    },

    // Prepare a model or hash of attributes to be added to this collection.
    _prepareModel: function(attrs, options) {
      if (attrs instanceof Model) {
        if (!attrs.collection) attrs.collection = this;
        return attrs;
      }
      options || (options = {});
      options.collection = this;
      var model = new this.model(attrs, options);
      if (!model._validate(attrs, options)) return false;
      return model;
    },

    // Internal method to remove a model's ties to a collection.
    _removeReference: function(model) {
      if (this === model.collection) delete model.collection;
      model.off('all', this._onModelEvent, this);
    },

    // Internal method called every time a model in the set fires an event.
    // Sets need to update their indexes when models change ids. All other
    // events simply proxy through. "add" and "remove" events that originate
    // in other collections are ignored.
    _onModelEvent: function(event, model, collection, options) {
      if ((event === 'add' || event === 'remove') && collection !== this) return;
      if (event === 'destroy') this.remove(model, options);
      if (model && event === 'change:' + model.idAttribute) {
        delete this._byId[model.previous(model.idAttribute)];
        if (model.id != null) this._byId[model.id] = model;
      }
      this.trigger.apply(this, arguments);
    },

    sortedIndex: function (model, value, context) {
      value || (value = this.comparator);
      var iterator = _.isFunction(value) ? value : function(model) {
        return model.get(value);
      };
      return _.sortedIndex(this.models, model, iterator, context);
    }

  });

  // Underscore methods that we want to implement on the Collection.
  var methods = ['forEach', 'each', 'map', 'collect', 'reduce', 'foldl',
    'inject', 'reduceRight', 'foldr', 'find', 'detect', 'filter', 'select',
    'reject', 'every', 'all', 'some', 'any', 'include', 'contains', 'invoke',
    'max', 'min', 'toArray', 'size', 'first', 'head', 'take', 'initial', 'rest',
    'tail', 'drop', 'last', 'without', 'indexOf', 'shuffle', 'lastIndexOf',
    'isEmpty', 'chain'];

  // Mix in each Underscore method as a proxy to `Collection#models`.
  _.each(methods, function(method) {
    Collection.prototype[method] = function() {
      var args = slice.call(arguments);
      args.unshift(this.models);
      return _[method].apply(_, args);
    };
  });

  // Underscore methods that take a property name as an argument.
  var attributeMethods = ['groupBy', 'countBy', 'sortBy'];

  // Use attributes instead of properties.
  _.each(attributeMethods, function(method) {
    Collection.prototype[method] = function(value, context) {
      var iterator = _.isFunction(value) ? value : function(model) {
        return model.get(value);
      };
      return _[method](this.models, iterator, context);
    };
  });

  // Backbone.Router
  // ---------------

  // Routers map faux-URLs to actions, and fire events when routes are
  // matched. Creating a new one sets its `routes` hash, if not set statically.
  var Router = Backbone.Router = function(options) {
    options || (options = {});
    if (options.routes) this.routes = options.routes;
    this._bindRoutes();
    this.initialize.apply(this, arguments);
  };

  // Cached regular expressions for matching named param parts and splatted
  // parts of route strings.
  var optionalParam = /\((.*?)\)/g;
  var namedParam    = /(\(\?)?:\w+/g;
  var splatParam    = /\*\w+/g;
  var escapeRegExp  = /[\-{}\[\]+?.,\\\^$|#\s]/g;

  // Set up all inheritable **Backbone.Router** properties and methods.
  _.extend(Router.prototype, Events, {

    // Initialize is an empty function by default. Override it with your own
    // initialization logic.
    initialize: function(){},

    // Manually bind a single named route to a callback. For example:
    //
    //     this.route('search/:query/p:num', 'search', function(query, num) {
    //       ...
    //     });
    //
    route: function(route, name, callback) {
      if (!_.isRegExp(route)) route = this._routeToRegExp(route);
      if (!callback) callback = this[name];
      Backbone.history.route(route, _.bind(function(fragment) {
        var args = this._extractParameters(route, fragment);
        callback && callback.apply(this, args);
        this.trigger.apply(this, ['route:' + name].concat(args));
        this.trigger('route', name, args);
        Backbone.history.trigger('route', this, name, args);
      }, this));
      return this;
    },

    // Simple proxy to `Backbone.history` to save a fragment into the history.
    navigate: function(fragment, options) {
      Backbone.history.navigate(fragment, options);
      return this;
    },

    // Bind all defined routes to `Backbone.history`. We have to reverse the
    // order of the routes here to support behavior where the most general
    // routes can be defined at the bottom of the route map.
    _bindRoutes: function() {
      if (!this.routes) return;
      var route, routes = _.keys(this.routes);
      while ((route = routes.pop()) != null) {
        this.route(route, this.routes[route]);
      }
    },

    // Convert a route string into a regular expression, suitable for matching
    // against the current location hash.
    _routeToRegExp: function(route) {
      route = route.replace(escapeRegExp, '\\$&')
                   .replace(optionalParam, '(?:$1)?')
                   .replace(namedParam, function(match, optional){
                     return optional ? match : '([^\/]+)';
                   })
                   .replace(splatParam, '(.*?)');
      return new RegExp('^' + route + '$');
    },

    // Given a route, and a URL fragment that it matches, return the array of
    // extracted parameters.
    _extractParameters: function(route, fragment) {
      return route.exec(fragment).slice(1);
    }

  });

  // Backbone.History
  // ----------------

  // Handles cross-browser history management, based on URL fragments. If the
  // browser does not support `onhashchange`, falls back to polling.
  var History = Backbone.History = function() {
    this.handlers = [];
    _.bindAll(this, 'checkUrl');

    // Ensure that `History` can be used outside of the browser.
    if (typeof window !== 'undefined') {
      this.location = window.location;
      this.history = window.history;
    }
  };

  // Cached regex for stripping a leading hash/slash and trailing space.
  var routeStripper = /^[#\/]|\s+$/g;

  // Cached regex for stripping leading and trailing slashes.
  var rootStripper = /^\/+|\/+$/g;

  // Cached regex for detecting MSIE.
  var isExplorer = /msie [\w.]+/;

  // Cached regex for removing a trailing slash.
  var trailingSlash = /\/$/;

  // Has the history handling already been started?
  History.started = false;

  // Set up all inheritable **Backbone.History** properties and methods.
  _.extend(History.prototype, Events, {

    // The default interval to poll for hash changes, if necessary, is
    // twenty times a second.
    interval: 50,

    // Gets the true hash value. Cannot use location.hash directly due to bug
    // in Firefox where location.hash will always be decoded.
    getHash: function(window) {
      var match = (window || this).location.href.match(/#(.*)$/);
      return match ? match[1] : '';
    },

    // Get the cross-browser normalized URL fragment, either from the URL,
    // the hash, or the override.
    getFragment: function(fragment, forcePushState) {
      if (fragment == null) {
        if (this._hasPushState || !this._wantsHashChange || forcePushState) {
          fragment = this.location.pathname;
          var root = this.root.replace(trailingSlash, '');
          if (!fragment.indexOf(root)) fragment = fragment.substr(root.length);
        } else {
          fragment = this.getHash();
        }
      }
      return fragment.replace(routeStripper, '');
    },

    // Start the hash change handling, returning `true` if the current URL matches
    // an existing route, and `false` otherwise.
    start: function(options) {
      if (History.started) throw new Error("Backbone.history has already been started");
      History.started = true;

      // Figure out the initial configuration. Do we need an iframe?
      // Is pushState desired ... is it available?
      this.options          = _.extend({}, {root: '/'}, this.options, options);
      this.root             = this.options.root;
      this._wantsHashChange = this.options.hashChange !== false;
      this._wantsPushState  = !!this.options.pushState;
      this._hasPushState    = !!(this.options.pushState && this.history && this.history.pushState);
      var fragment          = this.getFragment();
      var docMode           = document.documentMode;
      var oldIE             = (isExplorer.exec(navigator.userAgent.toLowerCase()) && (!docMode || docMode <= 7));

      // Normalize root to always include a leading and trailing slash.
      this.root = ('/' + this.root + '/').replace(rootStripper, '/');

      if (oldIE && this._wantsHashChange) {
        this.iframe = Backbone.$('<iframe src="javascript:0" tabindex="-1" />').hide().appendTo('body')[0].contentWindow;
        this.navigate(fragment);
      }

      // Depending on whether we're using pushState or hashes, and whether
      // 'onhashchange' is supported, determine how we check the URL state.
      if (this._hasPushState) {
        Backbone.$(window).on('popstate', this.checkUrl);
      } else if (this._wantsHashChange && ('onhashchange' in window) && !oldIE) {
        Backbone.$(window).on('hashchange', this.checkUrl);
      } else if (this._wantsHashChange) {
        this._checkUrlInterval = setInterval(this.checkUrl, this.interval);
      }

      // Determine if we need to change the base url, for a pushState link
      // opened by a non-pushState browser.
      this.fragment = fragment;
      var loc = this.location;
      var atRoot = loc.pathname.replace(/[^\/]$/, '$&/') === this.root;

      // If we've started off with a route from a `pushState`-enabled browser,
      // but we're currently in a browser that doesn't support it...
      if (this._wantsHashChange && this._wantsPushState && !this._hasPushState && !atRoot) {
        this.fragment = this.getFragment(null, true);
        this.location.replace(this.root + this.location.search + '#' + this.fragment);
        // Return immediately as browser will do redirect to new url
        return true;

      // Or if we've started out with a hash-based route, but we're currently
      // in a browser where it could be `pushState`-based instead...
      } else if (this._wantsPushState && this._hasPushState && atRoot && loc.hash) {
        this.fragment = this.getHash().replace(routeStripper, '');
        this.history.replaceState({}, document.title, this.root + this.fragment + loc.search);
      }

      if (!this.options.silent) return this.loadUrl();
    },

    // Disable Backbone.history, perhaps temporarily. Not useful in a real app,
    // but possibly useful for unit testing Routers.
    stop: function() {
      Backbone.$(window).off('popstate', this.checkUrl).off('hashchange', this.checkUrl);
      clearInterval(this._checkUrlInterval);
      History.started = false;
    },

    // Add a route to be tested when the fragment changes. Routes added later
    // may override previous routes.
    route: function(route, callback) {
      this.handlers.unshift({route: route, callback: callback});
    },

    // Checks the current URL to see if it has changed, and if it has,
    // calls `loadUrl`, normalizing across the hidden iframe.
    checkUrl: function(e) {
      var current = this.getFragment();
      if (current === this.fragment && this.iframe) {
        current = this.getFragment(this.getHash(this.iframe));
      }
      if (current === this.fragment) return false;
      if (this.iframe) this.navigate(current);
      this.loadUrl() || this.loadUrl(this.getHash());
    },

    // Attempt to load the current URL fragment. If a route succeeds with a
    // match, returns `true`. If no defined routes matches the fragment,
    // returns `false`.
    loadUrl: function(fragmentOverride) {
      var fragment = this.fragment = this.getFragment(fragmentOverride);
      var matched = _.any(this.handlers, function(handler) {
        if (handler.route.test(fragment)) {
          handler.callback(fragment);
          return true;
        }
      });
      return matched;
    },

    // Save a fragment into the hash history, or replace the URL state if the
    // 'replace' option is passed. You are responsible for properly URL-encoding
    // the fragment in advance.
    //
    // The options object can contain `trigger: true` if you wish to have the
    // route callback be fired (not usually desirable), or `replace: true`, if
    // you wish to modify the current URL without adding an entry to the history.
    navigate: function(fragment, options) {
      if (!History.started) return false;
      if (!options || options === true) options = {trigger: options};
      fragment = this.getFragment(fragment || '');
      if (this.fragment === fragment) return;
      this.fragment = fragment;
      var url = this.root + fragment;

      // If pushState is available, we use it to set the fragment as a real URL.
      if (this._hasPushState) {
        this.history[options.replace ? 'replaceState' : 'pushState']({}, document.title, url);

      // If hash changes haven't been explicitly disabled, update the hash
      // fragment to store history.
      } else if (this._wantsHashChange) {
        this._updateHash(this.location, fragment, options.replace);
        if (this.iframe && (fragment !== this.getFragment(this.getHash(this.iframe)))) {
          // Opening and closing the iframe tricks IE7 and earlier to push a
          // history entry on hash-tag change.  When replace is true, we don't
          // want this.
          if(!options.replace) this.iframe.document.open().close();
          this._updateHash(this.iframe.location, fragment, options.replace);
        }

      // If you've told us that you explicitly don't want fallback hashchange-
      // based history, then `navigate` becomes a page refresh.
      } else {
        return this.location.assign(url);
      }
      if (options.trigger) this.loadUrl(fragment);
    },

    // Update the hash location, either replacing the current entry, or adding
    // a new one to the browser history.
    _updateHash: function(location, fragment, replace) {
      if (replace) {
        var href = location.href.replace(/(javascript:|#).*$/, '');
        location.replace(href + '#' + fragment);
      } else {
        // Some browsers require that `hash` contains a leading #.
        location.hash = '#' + fragment;
      }
    }

  });

  // Create the default Backbone.history.
  Backbone.history = new History;

  // Backbone.View
  // -------------

  // Creating a Backbone.View creates its initial element outside of the DOM,
  // if an existing element is not provided...
  var View = Backbone.View = function(options) {
    this.cid = _.uniqueId('view');
    this._configure(options || {});
    this._ensureElement();
    this.initialize.apply(this, arguments);
    this.delegateEvents();
  };

  // Cached regex to split keys for `delegate`.
  var delegateEventSplitter = /^(\S+)\s*(.*)$/;

  // List of view options to be merged as properties.
  var viewOptions = ['model', 'collection', 'el', 'id', 'attributes', 'className', 'tagName', 'events'];

  // Set up all inheritable **Backbone.View** properties and methods.
  _.extend(View.prototype, Events, {

    // The default `tagName` of a View's element is `"div"`.
    tagName: 'div',

    // jQuery delegate for element lookup, scoped to DOM elements within the
    // current view. This should be prefered to global lookups where possible.
    $: function(selector) {
      return this.$el.find(selector);
    },

    // Initialize is an empty function by default. Override it with your own
    // initialization logic.
    initialize: function(){},

    // **render** is the core function that your view should override, in order
    // to populate its element (`this.el`), with the appropriate HTML. The
    // convention is for **render** to always return `this`.
    render: function() {
      return this;
    },

    // Remove this view by taking the element out of the DOM, and removing any
    // applicable Backbone.Events listeners.
    remove: function() {
      this.$el.remove();
      this.stopListening();
      return this;
    },

    // Change the view's element (`this.el` property), including event
    // re-delegation.
    setElement: function(element, delegate) {
      if (this.$el) this.undelegateEvents();
      this.$el = element instanceof Backbone.$ ? element : Backbone.$(element);
      this.el = this.$el[0];
      if (delegate !== false) this.delegateEvents();
      return this;
    },

    // Set callbacks, where `this.events` is a hash of
    //
    // *{"event selector": "callback"}*
    //
    //     {
    //       'mousedown .title':  'edit',
    //       'click .button':     'save'
    //       'click .open':       function(e) { ... }
    //     }
    //
    // pairs. Callbacks will be bound to the view, with `this` set properly.
    // Uses event delegation for efficiency.
    // Omitting the selector binds the event to `this.el`.
    // This only works for delegate-able events: not `focus`, `blur`, and
    // not `change`, `submit`, and `reset` in Internet Explorer.
    delegateEvents: function(events) {
      if (!(events || (events = _.result(this, 'events')))) return;
      this.undelegateEvents();
      for (var key in events) {
        var method = events[key];
        if (!_.isFunction(method)) method = this[events[key]];
        if (!method) throw new Error('Method "' + events[key] + '" does not exist');
        var match = key.match(delegateEventSplitter);
        var eventName = match[1], selector = match[2];
        method = _.bind(method, this);
        eventName += '.delegateEvents' + this.cid;
        if (selector === '') {
          this.$el.on(eventName, method);
        } else {
          this.$el.on(eventName, selector, method);
        }
      }
    },

    // Clears all callbacks previously bound to the view with `delegateEvents`.
    // You usually don't need to use this, but may wish to if you have multiple
    // Backbone views attached to the same DOM element.
    undelegateEvents: function() {
      this.$el.off('.delegateEvents' + this.cid);
    },

    // Performs the initial configuration of a View with a set of options.
    // Keys with special meaning *(model, collection, id, className)*, are
    // attached directly to the view.
    _configure: function(options) {
      if (this.options) options = _.extend({}, _.result(this, 'options'), options);
      _.extend(this, _.pick(options, viewOptions));
      this.options = options;
    },

    // Ensure that the View has a DOM element to render into.
    // If `this.el` is a string, pass it through `$()`, take the first
    // matching element, and re-assign it to `el`. Otherwise, create
    // an element from the `id`, `className` and `tagName` properties.
    _ensureElement: function() {
      if (!this.el) {
        var attrs = _.extend({}, _.result(this, 'attributes'));
        if (this.id) attrs.id = _.result(this, 'id');
        if (this.className) attrs['class'] = _.result(this, 'className');
        var $el = Backbone.$('<' + _.result(this, 'tagName') + '>').attr(attrs);
        this.setElement($el, false);
      } else {
        this.setElement(_.result(this, 'el'), false);
      }
    }

  });

  // Backbone.sync
  // -------------

  // Map from CRUD to HTTP for our default `Backbone.sync` implementation.
  var methodMap = {
    'create': 'POST',
    'update': 'PUT',
    'patch':  'PATCH',
    'delete': 'DELETE',
    'read':   'GET'
  };

  // Override this function to change the manner in which Backbone persists
  // models to the server. You will be passed the type of request, and the
  // model in question. By default, makes a RESTful Ajax request
  // to the model's `url()`. Some possible customizations could be:
  //
  // * Use `setTimeout` to batch rapid-fire updates into a single request.
  // * Send up the models as XML instead of JSON.
  // * Persist models via WebSockets instead of Ajax.
  //
  // Turn on `Backbone.emulateHTTP` in order to send `PUT` and `DELETE` requests
  // as `POST`, with a `_method` parameter containing the true HTTP method,
  // as well as all requests with the body as `application/x-www-form-urlencoded`
  // instead of `application/json` with the model in a param named `model`.
  // Useful when interfacing with server-side languages like **PHP** that make
  // it difficult to read the body of `PUT` requests.
  Backbone.sync = function(method, model, options) {
    var type = methodMap[method];

    // Default options, unless specified.
    _.defaults(options || (options = {}), {
      emulateHTTP: Backbone.emulateHTTP,
      emulateJSON: Backbone.emulateJSON
    });

    // Default JSON-request options.
    var params = {type: type, dataType: 'json'};

    // Ensure that we have a URL.
    if (!options.url) {
      params.url = _.result(model, 'url') || urlError();
    }

    // Ensure that we have the appropriate request data.
    if (options.data == null && model && (method === 'create' || method === 'update' || method === 'patch')) {
      params.contentType = 'application/json';
      params.data = JSON.stringify(options.attrs || model.toJSON(options));
    }

    // For older servers, emulate JSON by encoding the request into an HTML-form.
    if (options.emulateJSON) {
      params.contentType = 'application/x-www-form-urlencoded';
      params.data = params.data ? {model: params.data} : {};
    }

    // For older servers, emulate HTTP by mimicking the HTTP method with `_method`
    // And an `X-HTTP-Method-Override` header.
    if (options.emulateHTTP && (type === 'PUT' || type === 'DELETE' || type === 'PATCH')) {
      params.type = 'POST';
      if (options.emulateJSON) params.data._method = type;
      var beforeSend = options.beforeSend;
      options.beforeSend = function(xhr) {
        xhr.setRequestHeader('X-HTTP-Method-Override', type);
        if (beforeSend) return beforeSend.apply(this, arguments);
      };
    }

    // Don't process data on a non-GET request.
    if (params.type !== 'GET' && !options.emulateJSON) {
      params.processData = false;
    }

    var success = options.success;
    options.success = function(resp) {
      if (success) success(model, resp, options);
      model.trigger('sync', model, resp, options);
    };

    var error = options.error;
    options.error = function(xhr) {
      if (error) error(model, xhr, options);
      model.trigger('error', model, xhr, options);
    };

    // Make the request, allowing the user to override any Ajax options.
    var xhr = options.xhr = Backbone.ajax(_.extend(params, options));
    model.trigger('request', model, xhr, options);
    return xhr;
  };

  // Set the default implementation of `Backbone.ajax` to proxy through to `$`.
  Backbone.ajax = function() {
    return Backbone.$.ajax.apply(Backbone.$, arguments);
  };

  // Helpers
  // -------

  // Helper function to correctly set up the prototype chain, for subclasses.
  // Similar to `goog.inherits`, but uses a hash of prototype properties and
  // class properties to be extended.
  var extend = function(protoProps, staticProps) {
    var parent = this;
    var child;

    // The constructor function for the new subclass is either defined by you
    // (the "constructor" property in your `extend` definition), or defaulted
    // by us to simply call the parent's constructor.
    if (protoProps && _.has(protoProps, 'constructor')) {
      child = protoProps.constructor;
    } else {
      child = function(){ return parent.apply(this, arguments); };
    }

    // Add static properties to the constructor function, if supplied.
    _.extend(child, parent, staticProps);

    // Set the prototype chain to inherit from `parent`, without calling
    // `parent`'s constructor function.
    var Surrogate = function(){ this.constructor = child; };
    Surrogate.prototype = parent.prototype;
    child.prototype = new Surrogate;

    // Add prototype properties (instance properties) to the subclass,
    // if supplied.
    if (protoProps) _.extend(child.prototype, protoProps);

    // Set a convenience property in case the parent's prototype is needed
    // later.
    child.__super__ = parent.prototype;

    return child;
  };

  // Set up inheritance for the model, collection, router, view and history.
  Model.extend = Collection.extend = Router.extend = View.extend = History.extend = extend;

  // Throw an error when a URL is needed, and none is supplied.
  var urlError = function() {
    throw new Error('A "url" property or function must be specified');
  };

}).call(this);
;
/**
 * PixelLab Resource Loader
 * Loads resources while providing progress updates.
 */

function PxLoader(settings) {

    // merge settings with defaults
    settings = settings || {};

    // how frequently we poll resources for progress
    if (settings.statusInterval == null) {
        settings.statusInterval = 5000; // every 5 seconds by default
    }

    // delay before logging since last progress change
    if (settings.loggingDelay == null) {
        settings.loggingDelay = 20 * 1000; // log stragglers after 20 secs
    }

    // stop waiting if no progress has been made in the moving time window
    if (settings.noProgressTimeout == null) {
        settings.noProgressTimeout = Infinity; // do not stop waiting by default
    }

    var entries = [],
        // holds resources to be loaded with their status
        progressListeners = [],
        timeStarted, progressChanged = +new Date;

    /**
     * The status of a resource
     * @enum {number}
     */
    var ResourceState = {
        QUEUED: 0,
        WAITING: 1,
        LOADED: 2,
        ERROR: 3,
        TIMEOUT: 4
    };

    // places non-array values into an array.
    var ensureArray = function(val) {
        if (val == null) {
            return [];
        }

        if (Array.isArray(val)) {
            return val;
        }

        return [val];
    };

    // add an entry to the list of resources to be loaded
    this.add = function(resource) {

        // ensure tags are in an object
        resource.tags = new PxLoaderTags(resource.tags);

        // ensure priority is set
        if (resource.priority == null) {
            resource.priority = Infinity;
        }

        entries.push({
            resource: resource,
            status: ResourceState.QUEUED
        });
    };

    this.addProgressListener = function(callback, tags) {
        progressListeners.push({
            callback: callback,
            tags: new PxLoaderTags(tags)
        });
    };

    this.addCompletionListener = function(callback, tags) {
        progressListeners.push({
            tags: new PxLoaderTags(tags),
            callback: function(e) {
                if (e.completedCount === e.totalCount) {
                    callback();
                }
            }
        });
    };

    // creates a comparison function for resources
    var getResourceSort = function(orderedTags) {

        // helper to get the top tag's order for a resource
        orderedTags = ensureArray(orderedTags);
        var getTagOrder = function(entry) {
            var resource = entry.resource,
                bestIndex = Infinity;
            for (var i = 0; i < resource.tags.length; i++) {
                for (var j = 0; j < Math.min(orderedTags.length, bestIndex); j++) {
                    if (resource.tags[i] == orderedTags[j] && j < bestIndex) {
                        bestIndex = j;
                        if (bestIndex === 0) break;
                    }
                    if (bestIndex === 0) break;
                }
            }
            return bestIndex;
        };
        return function(a, b) {
            // check tag order first
            var aOrder = getTagOrder(a),
                bOrder = getTagOrder(b);
            if (aOrder < bOrder) return -1;
            if (aOrder > bOrder) return 1;

            // now check priority
            if (a.priority < b.priority) return -1;
            if (a.priority > b.priority) return 1;
            return 0;
        }
    };

    this.start = function(orderedTags) {
        timeStarted = +new Date;

        // first order the resources
        var compareResources = getResourceSort(orderedTags);
        entries.sort(compareResources);

        // trigger requests for each resource
        for (var i = 0, len = entries.length; i < len; i++) {
            var entry = entries[i];
            entry.status = ResourceState.WAITING;
            entry.resource.start(this);
        }

        // do an initial status check soon since items may be loaded from the cache
        setTimeout(statusCheck, 100);
    };

    var statusCheck = function() {
        var checkAgain = false,
            noProgressTime = (+new Date) - progressChanged,
            timedOut = (noProgressTime >= settings.noProgressTimeout),
            shouldLog = (noProgressTime >= settings.loggingDelay);

        for (var i = 0, len = entries.length; i < len; i++) {
            var entry = entries[i];
            if (entry.status !== ResourceState.WAITING) {
                continue;
            }

            // see if the resource has loaded
            if (entry.resource.checkStatus) {
                entry.resource.checkStatus();
            }

            // if still waiting, mark as timed out or make sure we check again
            if (entry.status === ResourceState.WAITING) {
                if (timedOut) {
                    entry.resource.onTimeout();
                } else {
                    checkAgain = true;
                }
            }
        }

        // log any resources that are still pending
        if (shouldLog && checkAgain) {
            log();
        }

        if (checkAgain) {
            setTimeout(statusCheck, settings.statusInterval);
        }
    };

    this.isBusy = function() {
        for (var i = 0, len = entries.length; i < len; i++) {
            if (entries[i].status === ResourceState.QUEUED || entries[i].status === ResourceState.WAITING) {
                return true;
            }
        }
        return false;
    };

    var onProgress = function(resource, statusType) {
        // find the entry for the resource
        var entry = null;
        for (var i = 0, len = entries.length; i < len; i++) {
            if (entries[i].resource === resource) {
                entry = entries[i];
                break;
            }
        }

        // we have already updated the status of the resource
        if (entry == null || entry.status !== ResourceState.WAITING) {
            return;
        }
        entry.status = statusType;
        progressChanged = +new Date;

        var numResourceTags = resource.tags.length;

        // fire callbacks for interested listeners
        for (var i = 0, numListeners = progressListeners.length; i < numListeners; i++) {
            var listener = progressListeners[i],
                shouldCall;

            if (listener.tags.length === 0) {
                // no tags specified so always tell the listener
                shouldCall = true;
            } else {
                // listener only wants to hear about certain tags
                shouldCall = resource.tags.contains(listener.tags);
            }

            if (shouldCall) {
                sendProgress(entry, listener);
            }
        }
    };

    this.onLoad = function(resource) {
        onProgress(resource, ResourceState.LOADED);
    };
    this.onError = function(resource) {
        onProgress(resource, ResourceState.ERROR);
    };
    this.onTimeout = function(resource) {
        onProgress(resource, ResourceState.TIMEOUT);
    };

    // sends a progress report to a listener
    var sendProgress = function(updatedEntry, listener) {
        // find stats for all the resources the caller is interested in
        var completed = 0,
            total = 0;
        for (var i = 0, len = entries.length; i < len; i++) {
            var entry = entries[i],
                includeResource = false;

            if (listener.tags.length === 0) {
                // no tags specified so always tell the listener
                includeResource = true;
            } else {
                includeResource = entry.resource.tags.contains(listener.tags);
            }

            if (includeResource) {
                total++;
                if (entry.status === ResourceState.LOADED || entry.status === ResourceState.ERROR || entry.status === ResourceState.TIMEOUT) {
                    completed++;
                }
            }
        }

        listener.callback({
            // info about the resource that changed
            resource: updatedEntry.resource,

            // should we expose StatusType instead?
            loaded: (updatedEntry.status === ResourceState.LOADED),
            error: (updatedEntry.status === ResourceState.ERROR),
            timeout: (updatedEntry.status === ResourceState.TIMEOUT),

            // updated stats for all resources
            completedCount: completed,
            totalCount: total
        });
    };

    // prints the status of each resource to the console
    var log = this.log = function(showAll) {
        if (!window.console) {
            return;
        }

        var elapsedSeconds = Math.round((+new Date - timeStarted) / 1000);
        window.console.log('PxLoader elapsed: ' + elapsedSeconds + ' sec');

        for (var i = 0, len = entries.length; i < len; i++) {
            var entry = entries[i];
            if (!showAll && entry.status !== ResourceState.WAITING) {
                continue;
            }

            var message = 'PxLoader: #' + i + ' ' + entry.resource.getName();
            switch(entry.status) {
                case ResourceState.QUEUED:
                    message += ' (Not Started)';
                    break;
                case ResourceState.WAITING:
                    message += ' (Waiting)';
                    break;
                case ResourceState.LOADED:
                    message += ' (Loaded)';
                    break;
                case ResourceState.ERROR:
                    message += ' (Error)';
                    break;
                case ResourceState.TIMEOUT:
                    message += ' (Timeout)';
                    break;
            }

            if (entry.resource.tags.length > 0) {
                message += ' Tags: [' + entry.resource.tags.join(',') + ']';
            }

            window.console.log(message);
        }
    };
}

// Tag object to handle tag intersection; once created not meant to be changed
// Performance rationale: http://jsperf.com/lists-indexof-vs-in-operator/3

function PxLoaderTags(values) {

    this.array = [];
    this.object = {};
    this.value = null; // single value
    this.length = 0;

    if (values !== null && values !== undefined) {
        if (Array.isArray(values)) {
            this.array = values;
        } else if (typeof values === 'object') {
            for (var key in values) {
                this.array.push(key);
            }
        } else {
            this.array.push(values);
            this.value = values;
        }

        this.length = this.array.length;

        // convert array values to object with truthy values, used by contains function below
        for (var i = 0; i < this.length; i++) {
            this.object[this.array[i]] = true;
        }
    }

    // compare this object with another; return true if they share at least one value
    this.contains = function(other) {
        if (this.length === 0 || other.length === 0) {
            return false;
        } else if (this.length === 1 && this.value !== null) {
            if (other.length === 1) {
                return this.value === other.value;
            } else {
                return other.object.hasOwnProperty(this.value);
            }
        } else if (other.length < this.length) {
            return other.contains(this); // better to loop through the smaller object
        } else {
            for (var key in this.object) {
                if (other.object[key]) {
                    return true;
                }
            }
            return false;
        }
    }
}

// shims to ensure we have newer Array utility methods
// https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/isArray
if (!Array.isArray) {
    Array.isArray = function(arg) {
        return Object.prototype.toString.call(arg) == '[object Array]';
    };
};
// @depends PxLoader.js
/**
 * PxLoader plugin to load images
 */

function PxLoaderImage(url, tags, priority) {
    var self = this,
        loader = null;

    this.img = new Image();
    this.tags = tags;
    this.priority = priority;

    var onReadyStateChange = function() {
        if (self.img.readyState == 'complete') {
            removeEventHandlers();
            loader.onLoad(self);
        }
    };

    var onLoad = function() {
        removeEventHandlers();
        loader.onLoad(self);
    };

    var onError = function() {
        removeEventHandlers();
        loader.onError(self);
    };

    var removeEventHandlers = function() {
        self.unbind('load', onLoad);
        self.unbind('readystatechange', onReadyStateChange);
        self.unbind('error', onError);
    };

    this.start = function(pxLoader) {
        // we need the loader ref so we can notify upon completion
        loader = pxLoader;

        // NOTE: Must add event listeners before the src is set. We
        // also need to use the readystatechange because sometimes
        // load doesn't fire when an image is in the cache.
        self.bind('load', onLoad);
        self.bind('readystatechange', onReadyStateChange);
        self.bind('error', onError);

        self.img.src = url;
    };

    // called by PxLoader to check status of image (fallback in case
    // the event listeners are not triggered).
    this.checkStatus = function() {
        if (self.img.complete) {
            removeEventHandlers();
            loader.onLoad(self);
        }
    };

    // called by PxLoader when it is no longer waiting
    this.onTimeout = function() {
        removeEventHandlers();
        if (self.img.complete) {
            loader.onLoad(self);
        } else {
            loader.onTimeout(self);
        }
    };

    // returns a name for the resource that can be used in logging
    this.getName = function() {
        return url;
    };

    // cross-browser event binding
    this.bind = function(eventName, eventHandler) {
        if (self.img.addEventListener) {
            self.img.addEventListener(eventName, eventHandler, false);
        } else if (self.img.attachEvent) {
            self.img.attachEvent('on' + eventName, eventHandler);
        }
    };

    // cross-browser event un-binding
    this.unbind = function(eventName, eventHandler) {
        if (self.img.removeEventListener) {
            self.img.removeEventListener(eventName, eventHandler, false);
        } else if (self.img.detachEvent) {
            self.img.detachEvent('on' + eventName, eventHandler);
        }
    };

}

// add a convenience method to PxLoader for adding an image
PxLoader.prototype.addImage = function(url, tags, priority) {
    var imageLoader = new PxLoaderImage(url, tags, priority);
    this.add(imageLoader);

    // return the img element to the caller
    return imageLoader.img;
};;
var AssetsList = {
  assets: { 'common/': ["images/common/background.png", "images/common/close.png", "images/common/close_a.png", "images/common/facebook-default.jpg", "images/common/home.png"],
'game-over/': ["images/game-over/replay.png", "images/game-over/score.png", "images/game-over/small-background.png", "images/game-over/title.png"],
'hall-of-fame/': ["images/hall-of-fame/amis.png", "images/hall-of-fame/amis_inactive.png", "images/hall-of-fame/background.png", "images/hall-of-fame/box_classements.png", "images/hall-of-fame/global.png", "images/hall-of-fame/global_inactive.png", "images/hall-of-fame/invite.png", "images/hall-of-fame/line.png", "images/hall-of-fame/linkfb.png", "images/hall-of-fame/pink.png", "images/hall-of-fame/rank1.png", "images/hall-of-fame/rank2.png", "images/hall-of-fame/rank3.png", "images/hall-of-fame/rank_1.png", "images/hall-of-fame/rank_2.png", "images/hall-of-fame/rank_3.png", "images/hall-of-fame/rankadversaire.png", "images/hall-of-fame/tournoi.png", "images/hall-of-fame/vie_asked.png", "images/hall-of-fame/vie_toask.png", "images/hall-of-fame/white.png"],
'home/+2amis/': ["images/home/+2amis/inviter.png", "images/home/+2amis/inviter_a.png", "images/home/+2amis/ranking.png", "images/home/+2amis/ranking_a.png", "images/home/+2amis/title.png"],
'home/1ami/': ["images/home/1ami/invite.png", "images/home/1ami/invite_a.png", "images/home/1ami/player_VS.png", "images/home/1ami/ranking.png", "images/home/1ami/ranking_a.png", "images/home/1ami/title.png"],
'home/2amis/': ["images/home/2amis/invite.png", "images/home/2amis/invite_a.png", "images/home/2amis/podium_rank_bronze.png", "images/home/2amis/podium_rank_gold.png", "images/home/2amis/podium_rank_silver.png", "images/home/2amis/rank_3players.png", "images/home/2amis/ranking.png", "images/home/2amis/ranking_a.png", "images/home/2amis/title.png"],
'home/common/': ["images/home/common/background.jpg", "images/home/common/credit.png", "images/home/common/heart.png", "images/home/common/journal.png", "images/home/common/logo.png", "images/home/common/moregame.png", "images/home/common/options.png", "images/home/common/options_a.png", "images/home/common/play.png", "images/home/common/play_a.png", "images/home/common/profile.png", "images/home/common/profile_a.png", "images/home/common/shop.png", "images/home/common/shop_a.png"],
'home/pasamis/': ["images/home/pasamis/1.png", "images/home/pasamis/100.png", "images/home/pasamis/1000.png", "images/home/pasamis/exclusif.png", "images/home/pasamis/frame_rank.png", "images/home/pasamis/invite.png", "images/home/pasamis/invite_a.png", "images/home/pasamis/photo.png", "images/home/pasamis/rank.png", "images/home/pasamis/ranking_day.png", "images/home/pasamis/spacer.png"],
'ingame/': ["images/ingame/add_time.png", "images/ingame/answer.png", "images/ingame/answer_bad.png", "images/ingame/answer_good.png", "images/ingame/box_bonus.png", "images/ingame/box_question.png", "images/ingame/bt_home.png", "images/ingame/double.png", "images/ingame/fifty_fifty.png", "images/ingame/gold_repere.png", "images/ingame/gold_timer_in.png", "images/ingame/mass.png", "images/ingame/photo.png", "images/ingame/repere.png", "images/ingame/score.png", "images/ingame/skip.png", "images/ingame/timer.png", "images/ingame/timer_chrono.png", "images/ingame/timer_in.png", "images/ingame/title.png", "images/ingame/title_left.png", "images/ingame/title_question.png"],
'login/': ["images/login/bg_login.png", "images/login/compteequipe.png", "images/login/connect_button.png", "images/login/connexionfb.png", "images/login/subscription.png", "images/login/tempbtn.png"],
'more-games/': ["images/more-games/title.png"],
'options/': ["images/options/aide.png", "images/options/aide_a.png", "images/options/credits.png", "images/options/credits_a.png", "images/options/effet.png", "images/options/effet_deactive.png", "images/options/infos.png", "images/options/infos_deactive.png", "images/options/liaison_fb.png", "images/options/liaison_fb_a.png", "images/options/musique.png", "images/options/musique_deactive.png", "images/options/title.png", "images/options/tutoriel.png", "images/options/tutoriel_a.png"],
'pause/': ["images/pause/fx.png", "images/pause/fx_sans.png", "images/pause/musique.png", "images/pause/musique_sans.png", "images/pause/popup.png", "images/pause/quitter.png", "images/pause/quitter_a.png", "images/pause/reprendre.png", "images/pause/reprendre_a.png"],
'profile/': ["images/profile/bg_profil.png", "images/profile/bloc_infos.png", "images/profile/box_info.png", "images/profile/bt_gamecenter.png", "images/profile/bt_home.png", "images/profile/bt_ranking.png", "images/profile/cagnottecourante.png", "images/profile/classement.png", "images/profile/eoile.png", "images/profile/etoile.png", "images/profile/framephoto.png", "images/profile/jeton.png", "images/profile/levelscore.png", "images/profile/liaison_fb.png", "images/profile/linkfb.png", "images/profile/linkfb_done.png", "images/profile/niveaucourant.png", "images/profile/photo_m.png", "images/profile/photo_pseudo.png", "images/profile/photo_w.png", "images/profile/pseudo.png", "images/profile/title.png"],
'profile/bonus/': ["images/profile/bonus/50-50.png", "images/profile/bonus/credit.png", "images/profile/bonus/divide.png", "images/profile/bonus/freeze_10s.png", "images/profile/bonus/heart.png", "images/profile/bonus/pass.png", "images/profile/bonus/x2.png"],
'profile/box/': ["images/profile/box/etoilemysterieure.png", "images/profile/box/meileurniveau.png", "images/profile/box/meilleurecagnotte.png", "images/profile/box/partiesgagnees.png", "images/profile/box/partiesjouees.png"],
'shop/': ["images/shop/bonusvies.png", "images/shop/bonusvies_inactive.png", "images/shop/box.png", "images/shop/credit.png", "images/shop/jeton.png", "images/shop/jeton_inactive.png"],
'shop/Jetons/': ["images/shop/Jetons/invite.png", "images/shop/Jetons/like.png", "images/shop/Jetons/note.png", "images/shop/Jetons/offre.png", "images/shop/Jetons/pack_1.png", "images/shop/Jetons/pack_2.png", "images/shop/Jetons/pack_3.png", "images/shop/Jetons/pack_4.png", "images/shop/Jetons/twitter.png", "images/shop/Jetons/video.png"],
'shop/life_and_bonus/': ["images/shop/life_and_bonus/1000.png", "images/shop/life_and_bonus/300.png", "images/shop/life_and_bonus/50.png"],
'shop/life_and_bonus/Vies/': ["images/shop/life_and_bonus/Vies/10.png", "images/shop/life_and_bonus/Vies/100.png", "images/shop/life_and_bonus/Vies/150.png", "images/shop/life_and_bonus/Vies/5.png", "images/shop/life_and_bonus/Vies/50.png"],
'tutorial/': ["images/tutorial/next.png", "images/tutorial/pagination_grey.png", "images/tutorial/pagination_red.png", "images/tutorial/tutoriel_1.jpg", "images/tutorial/tutoriel_2.jpg", "images/tutorial/tutoriel_3.jpg"] },
  keys: {
    profile: ['profile', 'common'],
    home: ['home/1ami', 'home/2amis/', 'home/common/', 'home/pasamis/', 'home/+2amis'],
    invitation: ['invitation', 'common'],
    options: ['options'],
    'more-games': ['more-games', 'common'],
    'hall-of-fame': ['hall-of-fame'],
    stage_1: ['star-stage', 'common', 'star', 'duel', 'avatar', 'desk'],
    stage_duel: ['star-stage', 'duel', 'common', 'avatar', 'desk'],
    stage_2: ['star-stage', 'common', 'star', 'duel', 'avatar', 'desk'],
    stage_3: ['common']
  }
};
;
// lib/handlebars/base.js

/*jshint eqnull:true*/
this.Handlebars = {};

(function(Handlebars) {

Handlebars.VERSION = "1.0.0-rc.3";
Handlebars.COMPILER_REVISION = 2;

Handlebars.REVISION_CHANGES = {
  1: '<= 1.0.rc.2', // 1.0.rc.2 is actually rev2 but doesn't report it
  2: '>= 1.0.0-rc.3'
};

Handlebars.helpers  = {};
Handlebars.partials = {};

Handlebars.registerHelper = function(name, fn, inverse) {
  if(inverse) { fn.not = inverse; }
  this.helpers[name] = fn;
};

Handlebars.registerPartial = function(name, str) {
  this.partials[name] = str;
};

Handlebars.registerHelper('helperMissing', function(arg) {
  if(arguments.length === 2) {
    return undefined;
  } else {
    throw new Error("Could not find property '" + arg + "'");
  }
});

var toString = Object.prototype.toString, functionType = "[object Function]";

Handlebars.registerHelper('blockHelperMissing', function(context, options) {
  var inverse = options.inverse || function() {}, fn = options.fn;


  var ret = "";
  var type = toString.call(context);

  if(type === functionType) { context = context.call(this); }

  if(context === true) {
    return fn(this);
  } else if(context === false || context == null) {
    return inverse(this);
  } else if(type === "[object Array]") {
    if(context.length > 0) {
      return Handlebars.helpers.each(context, options);
    } else {
      return inverse(this);
    }
  } else {
    return fn(context);
  }
});

Handlebars.K = function() {};

Handlebars.createFrame = Object.create || function(object) {
  Handlebars.K.prototype = object;
  var obj = new Handlebars.K();
  Handlebars.K.prototype = null;
  return obj;
};

Handlebars.logger = {
  DEBUG: 0, INFO: 1, WARN: 2, ERROR: 3, level: 3,

  methodMap: {0: 'debug', 1: 'info', 2: 'warn', 3: 'error'},

  // can be overridden in the host environment
  log: function(level, obj) {
    if (Handlebars.logger.level <= level) {
      var method = Handlebars.logger.methodMap[level];
      if (typeof console !== 'undefined' && console[method]) {
        console[method].call(console, obj);
      }
    }
  }
};

Handlebars.log = function(level, obj) { Handlebars.logger.log(level, obj); };

Handlebars.registerHelper('each', function(context, options) {
  var fn = options.fn, inverse = options.inverse;
  var i = 0, ret = "", data;

  if (options.data) {
    data = Handlebars.createFrame(options.data);
  }

  if(context && typeof context === 'object') {
    if(context instanceof Array){
      for(var j = context.length; i<j; i++) {
        if (data) { data.index = i; }
        ret = ret + fn(context[i], { data: data });
      }
    } else {
      for(var key in context) {
        if(context.hasOwnProperty(key)) {
          if(data) { data.key = key; }
          ret = ret + fn(context[key], {data: data});
          i++;
        }
      }
    }
  }

  if(i === 0){
    ret = inverse(this);
  }

  return ret;
});

Handlebars.registerHelper('if', function(context, options) {
  var type = toString.call(context);
  if(type === functionType) { context = context.call(this); }

  if(!context || Handlebars.Utils.isEmpty(context)) {
    return options.inverse(this);
  } else {
    return options.fn(this);
  }
});

Handlebars.registerHelper('unless', function(context, options) {
  var fn = options.fn, inverse = options.inverse;
  options.fn = inverse;
  options.inverse = fn;

  return Handlebars.helpers['if'].call(this, context, options);
});

Handlebars.registerHelper('with', function(context, options) {
  return options.fn(context);
});

Handlebars.registerHelper('log', function(context, options) {
  var level = options.data && options.data.level != null ? parseInt(options.data.level, 10) : 1;
  Handlebars.log(level, context);
});

}(this.Handlebars));
;
// lib/handlebars/utils.js

var errorProps = ['description', 'fileName', 'lineNumber', 'message', 'name', 'number', 'stack'];

Handlebars.Exception = function(message) {
  var tmp = Error.prototype.constructor.apply(this, arguments);

  // Unfortunately errors are not enumerable in Chrome (at least), so `for prop in tmp` doesn't work.
  for (var idx = 0; idx < errorProps.length; idx++) {
    this[errorProps[idx]] = tmp[errorProps[idx]];
  }
};
Handlebars.Exception.prototype = new Error();

// Build out our basic SafeString type
Handlebars.SafeString = function(string) {
  this.string = string;
};
Handlebars.SafeString.prototype.toString = function() {
  return this.string.toString();
};

(function() {
  var escape = {
    "&": "&amp;",
    "<": "&lt;",
    ">": "&gt;",
    '"': "&quot;",
    "'": "&#x27;",
    "`": "&#x60;"
  };

  var badChars = /[&<>"'`]/g;
  var possible = /[&<>"'`]/;

  var escapeChar = function(chr) {
    return escape[chr] || "&amp;";
  };

  Handlebars.Utils = {
    escapeExpression: function(string) {
      // don't escape SafeStrings, since they're already safe
      if (string instanceof Handlebars.SafeString) {
        return string.toString();
      } else if (string == null || string === false) {
        return "";
      }

      if(!possible.test(string)) { return string; }
      return string.replace(badChars, escapeChar);
    },

    isEmpty: function(value) {
      if (!value && value !== 0) {
        return true;
      } else if(Object.prototype.toString.call(value) === "[object Array]" && value.length === 0) {
        return true;
      } else {
        return false;
      }
    }
  };
})();;
// lib/handlebars/runtime.js
Handlebars.VM = {
  template: function(templateSpec) {
    // Just add water
    var container = {
      escapeExpression: Handlebars.Utils.escapeExpression,
      invokePartial: Handlebars.VM.invokePartial,
      programs: [],
      program: function(i, fn, data) {
        var programWrapper = this.programs[i];
        if(data) {
          return Handlebars.VM.program(fn, data);
        } else if(programWrapper) {
          return programWrapper;
        } else {
          programWrapper = this.programs[i] = Handlebars.VM.program(fn);
          return programWrapper;
        }
      },
      programWithDepth: Handlebars.VM.programWithDepth,
      noop: Handlebars.VM.noop,
      compilerInfo: null
    };

    return function(context, options) {
      options = options || {};
      var result = templateSpec.call(container, Handlebars, context, options.helpers, options.partials, options.data);

      var compilerInfo = container.compilerInfo || [],
          compilerRevision = compilerInfo[0] || 1,
          currentRevision = Handlebars.COMPILER_REVISION;

      if (compilerRevision !== currentRevision) {
        if (compilerRevision < currentRevision) {
          var runtimeVersions = Handlebars.REVISION_CHANGES[currentRevision],
              compilerVersions = Handlebars.REVISION_CHANGES[compilerRevision];
          throw "Template was precompiled with an older version of Handlebars than the current runtime. "+
                "Please update your precompiler to a newer version ("+runtimeVersions+") or downgrade your runtime to an older version ("+compilerVersions+").";
        } else {
          // Use the embedded version info since the runtime doesn't know about this revision yet
          throw "Template was precompiled with a newer version of Handlebars than the current runtime. "+
                "Please update your runtime to a newer version ("+compilerInfo[1]+").";
        }
      }

      return result;
    };
  },

  programWithDepth: function(fn, data, $depth) {
    var args = Array.prototype.slice.call(arguments, 2);

    return function(context, options) {
      options = options || {};

      return fn.apply(this, [context, options.data || data].concat(args));
    };
  },
  program: function(fn, data) {
    return function(context, options) {
      options = options || {};

      return fn(context, options.data || data);
    };
  },
  noop: function() { return ""; },
  invokePartial: function(partial, name, context, helpers, partials, data) {
    var options = { helpers: helpers, partials: partials, data: data };

    if(partial === undefined) {
      throw new Handlebars.Exception("The partial " + name + " could not be found");
    } else if(partial instanceof Function) {
      return partial(context, options);
    } else if (!Handlebars.compile) {
      throw new Handlebars.Exception("The partial " + name + " could not be compiled when running in runtime-only mode");
    } else {
      partials[name] = Handlebars.compile(partial, {data: data !== undefined});
      return partials[name](context, options);
    }
  }
};

Handlebars.template = Handlebars.VM.template;
;;
var BuildVersion = {
  version     : '',
  commit      : 'a49d7c96419cbbb69371eacf16a439e57fccfebf',
  shortCommit : 'a49d7c9',
  branch      : 'feature/hall-of-fame',
  time        : '2013-04-22 10:58',
  author      : 'Louis',

  getCommitLink: function() {
    return 'https://github.com/ChuguluGames/triviasports-client/tree/'+BuildVersion.commit;
  },

  toShortString: function() {
    return 'v' + BuildVersion.version;
  },

  toString: function() {
    var b=BuildVersion;
    return b.toShortString() + ' of ' + b.time + ' | ' + b.shortCommit + ' by ' + b.author + ' on ' + b.branch;
  }
};
;
// ----------------------------------------------------------------------------
// Buzz, a Javascript HTML5 Audio library
// v 1.0.6
// Licensed under the MIT license.
// http://buzz.jaysalvat.com/
// ----------------------------------------------------------------------------
// Copyright (C) 2013 Jay Salvat
// http://jaysalvat.com/
// ----------------------------------------------------------------------------
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files ( the "Software" ), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.
// ----------------------------------------------------------------------------

var buzz = {
    defaults: {
        autoplay: false,
        duration: 5000,
        formats: [],
        loop: false,
        placeholder: '--',
        preload: 'metadata',
        volume: 80
    },
    types: {
        'mp3': 'audio/mpeg',
        'ogg': 'audio/ogg',
        'wav': 'audio/wav',
        'aac': 'audio/aac',
        'm4a': 'audio/x-m4a'
    },
    sounds: [],
    el: document.createElement( 'audio' ),

    sound: function( src, options ) {
        options = options || {};

        var pid = 0,
            events = [],
            eventsOnce = {},
            supported = buzz.isSupported();

        // publics
        this.load = function() {
            if ( !supported ) {
              return this;
            }

            this.sound.load();
            return this;
        };

        this.play = function() {
            if ( !supported ) {
              return this;
            }

            this.sound.play();
            return this;
        };

        this.togglePlay = function() {
            if ( !supported ) {
              return this;
            }

            if ( this.sound.paused ) {
                this.sound.play();
            } else {
                this.sound.pause();
            }
            return this;
        };

        this.pause = function() {
            if ( !supported ) {
              return this;
            }

            this.sound.pause();
            return this;
        };

        this.isPaused = function() {
            if ( !supported ) {
              return null;
            }

            return this.sound.paused;
        };

        this.stop = function() {
            if ( !supported  ) {
              return this;
            }

            this.setTime( 0 );
            this.sound.pause();
            return this;
        };

        this.isEnded = function() {
            if ( !supported ) {
              return null;
            }

            return this.sound.ended;
        };

        this.loop = function() {
            if ( !supported ) {
              return this;
            }

            this.sound.loop = 'loop';
            this.bind( 'ended.buzzloop', function() {
                this.currentTime = 0;
                this.play();
            });
            return this;
        };

        this.unloop = function() {
            if ( !supported ) {
              return this;
            }

            this.sound.removeAttribute( 'loop' );
            this.unbind( 'ended.buzzloop' );
            return this;
        };

        this.mute = function() {
            if ( !supported ) {
              return this;
            }

            this.sound.muted = true;
            return this;
        };

        this.unmute = function() {
            if ( !supported ) {
              return this;
            }

            this.sound.muted = false;
            return this;
        };

        this.toggleMute = function() {
            if ( !supported ) {
              return this;
            }

            this.sound.muted = !this.sound.muted;
            return this;
        };

        this.isMuted = function() {
            if ( !supported ) {
              return null;
            }

            return this.sound.muted;
        };

        this.setVolume = function( volume ) {
            if ( !supported ) {
              return this;
            }

            if ( volume < 0 ) {
              volume = 0;
            }
            if ( volume > 100 ) {
              volume = 100;
            }
          
            this.volume = volume;
            this.sound.volume = volume / 100;
            return this;
        };
      
        this.getVolume = function() {
            if ( !supported ) {
              return this;
            }

            return this.volume;
        };

        this.increaseVolume = function( value ) {
            return this.setVolume( this.volume + ( value || 1 ) );
        };

        this.decreaseVolume = function( value ) {
            return this.setVolume( this.volume - ( value || 1 ) );
        };

        this.setTime = function( time ) {
            if ( !supported ) {
              return this;
            }

            this.whenReady( function() {
                this.sound.currentTime = time;
            });
            return this;
        };

        this.getTime = function() {
            if ( !supported ) {
              return null;
            }

            var time = Math.round( this.sound.currentTime * 100 ) / 100;
            return isNaN( time ) ? buzz.defaults.placeholder : time;
        };

        this.setPercent = function( percent ) {
            if ( !supported ) {
              return this;
            }

            return this.setTime( buzz.fromPercent( percent, this.sound.duration ) );
        };

        this.getPercent = function() {
            if ( !supported ) {
              return null;
            }

			var percent = Math.round( buzz.toPercent( this.sound.currentTime, this.sound.duration ) );
            return isNaN( percent ) ? buzz.defaults.placeholder : percent;
        };

        this.setSpeed = function( duration ) {
			if ( !supported ) {
              return this;
            }

            this.sound.playbackRate = duration;
        };

        this.getSpeed = function() {
			if ( !supported ) {
              return null;
            }

            return this.sound.playbackRate;
        };

        this.getDuration = function() {
            if ( !supported ) {
              return null;
            }

            var duration = Math.round( this.sound.duration * 100 ) / 100;
            return isNaN( duration ) ? buzz.defaults.placeholder : duration;
        };

        this.getPlayed = function() {
			if ( !supported ) {
              return null;
            }

            return timerangeToArray( this.sound.played );
        };

        this.getBuffered = function() {
			if ( !supported ) {
              return null;
            }

            return timerangeToArray( this.sound.buffered );
        };

        this.getSeekable = function() {
			if ( !supported ) {
              return null;
            }

            return timerangeToArray( this.sound.seekable );
        };

        this.getErrorCode = function() {
            if ( supported && this.sound.error ) {
                return this.sound.error.code;
            }
            return 0;
        };

        this.getErrorMessage = function() {
			if ( !supported ) {
              return null;
            }

            switch( this.getErrorCode() ) {
                case 1:
                    return 'MEDIA_ERR_ABORTED';
                case 2:
                    return 'MEDIA_ERR_NETWORK';
                case 3:
                    return 'MEDIA_ERR_DECODE';
                case 4:
                    return 'MEDIA_ERR_SRC_NOT_SUPPORTED';
                default:
                    return null;
            }
        };

        this.getStateCode = function() {
			if ( !supported ) {
              return null;
            }

            return this.sound.readyState;
        };

        this.getStateMessage = function() {
			if ( !supported ) {
              return null;
            }

            switch( this.getStateCode() ) {
                case 0:
                    return 'HAVE_NOTHING';
                case 1:
                    return 'HAVE_METADATA';
                case 2:
                    return 'HAVE_CURRENT_DATA';
                case 3:
                    return 'HAVE_FUTURE_DATA';
                case 4:
                    return 'HAVE_ENOUGH_DATA';
                default:
                    return null;
            }
        };

        this.getNetworkStateCode = function() {
			if ( !supported ) {
              return null;
            }

            return this.sound.networkState;
        };

        this.getNetworkStateMessage = function() {
			if ( !supported ) {
              return null;
            }

            switch( this.getNetworkStateCode() ) {
                case 0:
                    return 'NETWORK_EMPTY';
                case 1:
                    return 'NETWORK_IDLE';
                case 2:
                    return 'NETWORK_LOADING';
                case 3:
                    return 'NETWORK_NO_SOURCE';
                default:
                    return null;
            }
        };

        this.set = function( key, value ) {
            if ( !supported ) {
              return this;
            }

            this.sound[ key ] = value;
            return this;
        };

        this.get = function( key ) {
            if ( !supported ) {
              return null;
            }

            return key ? this.sound[ key ] : this.sound;
        };

        this.bind = function( types, func ) {
            if ( !supported ) {
              return this;
            }

            types = types.split( ' ' );

            var that = this,
				efunc = function( e ) { func.call( that, e ); };

            for( var t = 0; t < types.length; t++ ) {
                var type = types[ t ],
                    idx = type;
                    type = idx.split( '.' )[ 0 ];

                    events.push( { idx: idx, func: efunc } );
                    this.sound.addEventListener( type, efunc, true );
            }
            return this;
        };

        this.unbind = function( types ) {
            if ( !supported ) {
              return this;
            }

            types = types.split( ' ' );

            for( var t = 0; t < types.length; t++ ) {
                var idx = types[ t ],
                    type = idx.split( '.' )[ 0 ];

                for( var i = 0; i < events.length; i++ ) {
                    var namespace = events[ i ].idx.split( '.' );
                    if ( events[ i ].idx == idx || ( namespace[ 1 ] && namespace[ 1 ] == idx.replace( '.', '' ) ) ) {
                        this.sound.removeEventListener( type, events[ i ].func, true );
                        // remove event
                        events.splice(i, 1);
                    }
                }
            }
            return this;
        };

        this.bindOnce = function( type, func ) {
            if ( !supported ) {
              return this;
            }

            var that = this;

            eventsOnce[ pid++ ] = false;
            this.bind( type + '.' + pid, function() {
               if ( !eventsOnce[ pid ] ) {
                   eventsOnce[ pid ] = true;
                   func.call( that );
               }
               that.unbind( type + '.' + pid );
            });
        };

        this.trigger = function( types ) {
            if ( !supported ) {
              return this;
            }

            types = types.split( ' ' );

            for( var t = 0; t < types.length; t++ ) {
                var idx = types[ t ];

                for( var i = 0; i < events.length; i++ ) {
                    var eventType = events[ i ].idx.split( '.' );
                    if ( events[ i ].idx == idx || ( eventType[ 0 ] && eventType[ 0 ] == idx.replace( '.', '' ) ) ) {
                        var evt = document.createEvent('HTMLEvents');
                        evt.initEvent( eventType[ 0 ], false, true );
                        this.sound.dispatchEvent( evt );
                    }
                }
            }
            return this;
        };

        this.fadeTo = function( to, duration, callback ) {
			if ( !supported ) {
              return this;
            }

            if ( duration instanceof Function ) {
                callback = duration;
                duration = buzz.defaults.duration;
            } else {
                duration = duration || buzz.defaults.duration;
            }

            var from = this.volume,
				delay = duration / Math.abs( from - to ),
                that = this;
            this.play();

            function doFade() {
                setTimeout( function() {
                    if ( from < to && that.volume < to ) {
                        that.setVolume( that.volume += 1 );
                        doFade();
                    } else if ( from > to && that.volume > to ) {
                        that.setVolume( that.volume -= 1 );
                        doFade();
                    } else if ( callback instanceof Function ) {
                        callback.apply( that );
                    }
                }, delay );
            }
            this.whenReady( function() {
                doFade();
            });

            return this;
        };

        this.fadeIn = function( duration, callback ) {
            if ( !supported ) {
              return this;
            }

            return this.setVolume(0).fadeTo( 100, duration, callback );
        };

        this.fadeOut = function( duration, callback ) {
			if ( !supported ) {
              return this;
            }

            return this.fadeTo( 0, duration, callback );
        };

        this.fadeWith = function( sound, duration ) {
            if ( !supported ) {
              return this;
            }

            this.fadeOut( duration, function() {
                this.stop();
            });

            sound.play().fadeIn( duration );

            return this;
        };

        this.whenReady = function( func ) {
            if ( !supported ) {
              return null;
            }

            var that = this;
            if ( this.sound.readyState === 0 ) {
                this.bind( 'canplay.buzzwhenready', function() {
                    func.call( that );
                });
            } else {
                func.call( that );
            }
        };

        // privates
        function timerangeToArray( timeRange ) {
            var array = [],
                length = timeRange.length - 1;

            for( var i = 0; i <= length; i++ ) {
                array.push({
                    start: timeRange.start( length ),
                    end: timeRange.end( length )
                });
            }
            return array;
        }

        function getExt( filename ) {
            return filename.split('.').pop();
        }
        
        function addSource( sound, src ) {
            var source = document.createElement( 'source' );
            source.src = src;
            if ( buzz.types[ getExt( src ) ] ) {
                source.type = buzz.types[ getExt( src ) ];
            }
            sound.appendChild( source );
        }

        // init
        if ( supported && src ) {
          
            for(var i in buzz.defaults ) {
              if(buzz.defaults.hasOwnProperty(i)) {
                options[ i ] = options[ i ] || buzz.defaults[ i ];
              }
            }

            this.sound = document.createElement( 'audio' );

            if ( src instanceof Array ) {
                for( var j in src ) {
                  if(src.hasOwnProperty(j)) {
                    addSource( this.sound, src[ j ] );
                  }
                }
            } else if ( options.formats.length ) {
                for( var k in options.formats ) {
                  if(options.formats.hasOwnProperty(k)) {
                    addSource( this.sound, src + '.' + options.formats[ k ] );
                  }
                }
            } else {
                addSource( this.sound, src );
            }

            if ( options.loop ) {
                this.loop();
            }

            if ( options.autoplay ) {
                this.sound.autoplay = 'autoplay';
            }

            if ( options.preload === true ) {
                this.sound.preload = 'auto';
            } else if ( options.preload === false ) {
                this.sound.preload = 'none';
            } else {
                this.sound.preload = options.preload;
            }

            this.setVolume( options.volume );

            buzz.sounds.push( this );
        }
    },

    group: function( sounds ) {
        sounds = argsToArray( sounds, arguments );

        // publics
        this.getSounds = function() {
            return sounds;
        };

        this.add = function( soundArray ) {
            soundArray = argsToArray( soundArray, arguments );
            for( var a = 0; a < soundArray.length; a++ ) {
                sounds.push( soundArray[ a ] );
            }
        };

        this.remove = function( soundArray ) {
            soundArray = argsToArray( soundArray, arguments );
            for( var a = 0; a < soundArray.length; a++ ) {
                for( var i = 0; i < sounds.length; i++ ) {
                    if ( sounds[ i ] == soundArray[ a ] ) {
                        sounds.splice(i, 1);
                        break;
                    }
                }
            }
        };

        this.load = function() {
            fn( 'load' );
            return this;
        };

        this.play = function() {
            fn( 'play' );
            return this;
        };

        this.togglePlay = function( ) {
            fn( 'togglePlay' );
            return this;
        };

        this.pause = function( time ) {
            fn( 'pause', time );
            return this;
        };

        this.stop = function() {
            fn( 'stop' );
            return this;
        };

        this.mute = function() {
            fn( 'mute' );
            return this;
        };

        this.unmute = function() {
            fn( 'unmute' );
            return this;
        };

        this.toggleMute = function() {
            fn( 'toggleMute' );
            return this;
        };

        this.setVolume = function( volume ) {
            fn( 'setVolume', volume );
            return this;
        };

        this.increaseVolume = function( value ) {
            fn( 'increaseVolume', value );
            return this;
        };

        this.decreaseVolume = function( value ) {
            fn( 'decreaseVolume', value );
            return this;
        };

        this.loop = function() {
            fn( 'loop' );
            return this;
        };

        this.unloop = function() {
            fn( 'unloop' );
            return this;
        };

        this.setTime = function( time ) {
            fn( 'setTime', time );
            return this;
        };

        this.set = function( key, value ) {
            fn( 'set', key, value );
            return this;
        };

        this.bind = function( type, func ) {
            fn( 'bind', type, func );
            return this;
        };

        this.unbind = function( type ) {
            fn( 'unbind', type );
            return this;
        };

        this.bindOnce = function( type, func ) {
            fn( 'bindOnce', type, func );
            return this;
        };

        this.trigger = function( type ) {
            fn( 'trigger', type );
            return this;
        };

        this.fade = function( from, to, duration, callback ) {
            fn( 'fade', from, to, duration, callback );
            return this;
        };

        this.fadeIn = function( duration, callback ) {
            fn( 'fadeIn', duration, callback );
            return this;
        };

        this.fadeOut = function( duration, callback ) {
            fn( 'fadeOut', duration, callback );
            return this;
        };

        // privates
        function fn() {
            var args = argsToArray( null, arguments ),
                func = args.shift();

            for( var i = 0; i < sounds.length; i++ ) {
                sounds[ i ][ func ].apply( sounds[ i ], args );
            }
        }

        function argsToArray( array, args ) {
            return ( array instanceof Array ) ? array : Array.prototype.slice.call( args );
        }
    },

    all: function() {
      return new buzz.group( buzz.sounds );
    },

    isSupported: function() {
        return !!buzz.el.canPlayType;
    },

    isOGGSupported: function() {
        return !!buzz.el.canPlayType && buzz.el.canPlayType( 'audio/ogg; codecs="vorbis"' );
    },

    isWAVSupported: function() {
        return !!buzz.el.canPlayType && buzz.el.canPlayType( 'audio/wav; codecs="1"' );
    },

    isMP3Supported: function() {
        return !!buzz.el.canPlayType && buzz.el.canPlayType( 'audio/mpeg;' );
    },

    isAACSupported: function() {
        return !!buzz.el.canPlayType && ( buzz.el.canPlayType( 'audio/x-m4a;' ) || buzz.el.canPlayType( 'audio/aac;' ) );
    },

    toTimer: function( time, withHours ) {
        var h, m, s;
        h = Math.floor( time / 3600 );
        h = isNaN( h ) ? '--' : ( h >= 10 ) ? h : '0' + h;
        m = withHours ? Math.floor( time / 60 % 60 ) : Math.floor( time / 60 );
        m = isNaN( m ) ? '--' : ( m >= 10 ) ? m : '0' + m;
        s = Math.floor( time % 60 );
        s = isNaN( s ) ? '--' : ( s >= 10 ) ? s : '0' + s;
        return withHours ? h + ':' + m + ':' + s : m + ':' + s;
    },

    fromTimer: function( time ) {
        var splits = time.toString().split( ':' );
        if ( splits && splits.length == 3 ) {
            time = ( parseInt( splits[ 0 ], 10 ) * 3600 ) + ( parseInt(splits[ 1 ], 10 ) * 60 ) + parseInt( splits[ 2 ], 10 );
        }
        if ( splits && splits.length == 2 ) {
            time = ( parseInt( splits[ 0 ], 10 ) * 60 ) + parseInt( splits[ 1 ], 10 );
        }
        return time;
    },

    toPercent: function( value, total, decimal ) {
		var r = Math.pow( 10, decimal || 0 );

		return Math.round( ( ( value * 100 ) / total ) * r ) / r;
    },

    fromPercent: function( percent, total, decimal ) {
		var r = Math.pow( 10, decimal || 0 );

        return  Math.round( ( ( total / 100 ) * percent ) * r ) / r;
    }
};
;
/*!
 * Chaplin 0.7.0
 *
 * Chaplin may be freely distributed under the MIT license.
 * For all details and documentation:
 * http://chaplinjs.org
 */

// Dirty hack for require-ing backbone and underscore.
(function() {
  var deps = {
    backbone: window.Backbone, underscore: window._
  };

  for (var name in deps) {
    (function(name) {
      var definition = {};
      definition[name] = function(exports, require, module) {
        module.exports = deps[name];
      };

      try {
        require(item);
      } catch(e) {
        require.define(definition);
      }
    })(name);
  }
})();

require.define({'chaplin/application': function(exports, require, module) {
'use strict';

var Application, Backbone, Composer, Dispatcher, EventBroker, Layout, Router, mediator, _;

_ = require('underscore');

Backbone = require('backbone');

mediator = require('chaplin/mediator');

Dispatcher = require('chaplin/dispatcher');

Layout = require('chaplin/views/layout');

Composer = require('chaplin/composer');

Router = require('chaplin/lib/router');

EventBroker = require('chaplin/lib/event_broker');

module.exports = Application = (function() {

  function Application() {}

  Application.extend = Backbone.Model.extend;

  _(Application.prototype).extend(EventBroker);

  Application.prototype.title = '';

  Application.prototype.dispatcher = null;

  Application.prototype.layout = null;

  Application.prototype.router = null;

  Application.prototype.composer = null;

  Application.prototype.initialize = function() {};

  Application.prototype.initDispatcher = function(options) {
    return this.dispatcher = new Dispatcher(options);
  };

  Application.prototype.initLayout = function(options) {
    var _ref;
    if (options == null) {
      options = {};
    }
    if ((_ref = options.title) == null) {
      options.title = this.title;
    }
    return this.layout = new Layout(options);
  };

  Application.prototype.initComposer = function(options) {
    if (options == null) {
      options = {};
    }
    return this.composer = new Composer(options);
  };

  Application.prototype.initRouter = function(routes, options) {
    this.router = new Router(options);
    if (typeof routes === "function") {
      routes(this.router.match);
    }
    return this.router.startHistory();
  };

  Application.prototype.disposed = false;

  Application.prototype.dispose = function() {
    var prop, properties, _i, _len;
    if (this.disposed) {
      return;
    }
    properties = ['dispatcher', 'layout', 'router', 'composer'];
    for (_i = 0, _len = properties.length; _i < _len; _i++) {
      prop = properties[_i];
      if (!(this[prop] != null)) {
        continue;
      }
      this[prop].dispose();
      delete this[prop];
    }
    this.disposed = true;
    return typeof Object.freeze === "function" ? Object.freeze(this) : void 0;
  };

  return Application;

})();

}});;require.define({'chaplin/mediator': function(exports, require, module) {
'use strict';

var Backbone, mediator, support, utils;

Backbone = require('backbone');

support = require('chaplin/lib/support');

utils = require('chaplin/lib/utils');

mediator = {};

mediator.subscribe = Backbone.Events.on;

mediator.unsubscribe = Backbone.Events.off;

mediator.publish = Backbone.Events.trigger;

mediator._callbacks = null;

utils.readonly(mediator, 'subscribe', 'unsubscribe', 'publish');

mediator.seal = function() {
  if (support.propertyDescriptors && Object.seal) {
    return Object.seal(mediator);
  }
};

utils.readonly(mediator, 'seal');

module.exports = mediator;

}});;require.define({'chaplin/dispatcher': function(exports, require, module) {
'use strict';

var Backbone, Dispatcher, EventBroker, utils, _;

_ = require('underscore');

Backbone = require('backbone');

utils = require('chaplin/lib/utils');

EventBroker = require('chaplin/lib/event_broker');

module.exports = Dispatcher = (function() {

  Dispatcher.extend = Backbone.Model.extend;

  _(Dispatcher.prototype).extend(EventBroker);

  Dispatcher.prototype.previousControllerName = null;

  Dispatcher.prototype.currentControllerName = null;

  Dispatcher.prototype.currentController = null;

  Dispatcher.prototype.currentAction = null;

  Dispatcher.prototype.currentParams = null;

  Dispatcher.prototype.url = null;

  function Dispatcher() {
    this.initialize.apply(this, arguments);
  }

  Dispatcher.prototype.initialize = function(options) {
    if (options == null) {
      options = {};
    }
    this.settings = _(options).defaults({
      controllerPath: 'controllers/',
      controllerSuffix: '_controller'
    });
    return this.subscribeEvent('matchRoute', this.matchRouteHandler);
  };

  Dispatcher.prototype.matchRouteHandler = function(route, params, options) {
    return this.startupController(route.controller, route.action, params, options);
  };

  Dispatcher.prototype.startupController = function(controllerName, action, params, options) {
    var _this = this;
    if (action == null) {
      action = 'index';
    }
    params = params ? _.clone(params) : {};
    options = options ? _.clone(options) : {};
    if (options.changeURL !== false) {
      options.changeURL = true;
    }
    if (options.forceStartup !== true) {
      options.forceStartup = false;
    }
    if (!options.forceStartup && this.currentControllerName === controllerName && this.currentAction === action && (!this.currentParams || _(params).isEqual(this.currentParams))) {
      return;
    }
    return this.loadController(controllerName, function(ControllerConstructor) {
      return _this.controllerLoaded(controllerName, action, params, options, ControllerConstructor);
    });
  };

  Dispatcher.prototype.loadController = function(controllerName, handler) {
    var fileName, moduleName;
    fileName = utils.underscorize(controllerName) + this.settings.controllerSuffix;
    moduleName = this.settings.controllerPath + fileName;
    if (typeof define !== "undefined" && define !== null ? define.amd : void 0) {
      return require([moduleName], handler);
    } else {
      return handler(require(moduleName));
    }
  };

  Dispatcher.prototype.controllerLoaded = function(controllerName, action, params, options, ControllerConstructor) {
    var controller, methodName;
    controller = new ControllerConstructor(params, options);
    methodName = controller.beforeAction ? 'executeBeforeActions' : 'executeAction';
    return this[methodName](controller, controllerName, action, params, options);
  };

  Dispatcher.prototype.executeAction = function(controller, controllerName, action, params, options) {
    var currentController, currentControllerName;
    currentControllerName = this.currentControllerName || null;
    currentController = this.currentController || null;
    this.previousControllerName = currentControllerName;
    if (currentController) {
      this.publishEvent('beforeControllerDispose', currentController);
      currentController.dispose(params, controllerName);
    }
    options.previousControllerName = currentControllerName;
    controller[action](params, options);
    if (controller.redirected) {
      return;
    }
    this.currentControllerName = controllerName;
    this.currentController = controller;
    this.currentAction = action;
    this.currentParams = params;
    this.adjustURL(params, options);
    return this.publishEvent('startupController', {
      previousControllerName: this.previousControllerName,
      controller: this.currentController,
      controllerName: this.currentControllerName,
      params: this.currentParams,
      options: options
    });
  };

  Dispatcher.prototype.executeBeforeActions = function(controller, controllerName, action, params, options) {
    var acts, args, beforeAction, beforeActions, name, next, _i, _len, _ref,
      _this = this;
    beforeActions = [];
    args = arguments;
    _ref = utils.getAllPropertyVersions(controller, 'beforeAction');
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      acts = _ref[_i];
      for (name in acts) {
        beforeAction = acts[name];
        if (name === action || RegExp("^" + name + "$").test(action)) {
          if (typeof beforeAction === 'string') {
            beforeAction = controller[beforeAction];
          }
          if (typeof beforeAction !== 'function') {
            throw new Error('Controller#executeBeforeActions: ' + ("" + beforeAction + " is not a valid beforeAction method for " + name + "."));
          }
          beforeActions.push(beforeAction);
        }
      }
    }
    next = function(method, previous) {
      if (previous == null) {
        previous = null;
      }
      if (controller.redirected) {
        return;
      }
      if (!method) {
        _this.executeAction.apply(_this, args);
        return;
      }
      previous = method.call(controller, params, options, previous);
      if (previous && typeof previous.then === 'function') {
        return previous.then(function(data) {
          if (!_this.currentController || controller === _this.currentController) {
            return next(beforeActions.shift(), data);
          }
        });
      } else {
        return next(beforeActions.shift(), previous);
      }
    };
    return next(beforeActions.shift());
  };

  Dispatcher.prototype.adjustURL = function(params, options) {
    var url;
    if (options.path == null) {
      return;
    }
    url = options.path + (options.queryString ? "?" + options.queryString : "");
    if (options.changeURL) {
      this.publishEvent('!router:changeURL', url, options);
    }
    return this.url = url;
  };

  Dispatcher.prototype.disposed = false;

  Dispatcher.prototype.dispose = function() {
    if (this.disposed) {
      return;
    }
    this.unsubscribeAllEvents();
    this.disposed = true;
    return typeof Object.freeze === "function" ? Object.freeze(this) : void 0;
  };

  return Dispatcher;

})();

}});;require.define({'chaplin/composer': function(exports, require, module) {
'use strict';

var Backbone, Composer, Composition, EventBroker, utils, _;

_ = require('underscore');

Backbone = require('backbone');

utils = require('chaplin/lib/utils');

Composition = require('chaplin/lib/composition');

EventBroker = require('chaplin/lib/event_broker');

module.exports = Composer = (function() {

  Composer.extend = Backbone.Model.extend;

  _(Composer.prototype).extend(EventBroker);

  Composer.prototype.compositions = null;

  function Composer() {
    this.initialize.apply(this, arguments);
  }

  Composer.prototype.initialize = function(options) {
    if (options == null) {
      options = {};
    }
    this.compositions = {};
    this.subscribeEvent('!composer:compose', this.compose);
    this.subscribeEvent('!composer:retrieve', this.retrieve);
    return this.subscribeEvent('startupController', this.cleanup);
  };

  Composer.prototype.compose = function(name, second, third) {
    if (typeof second === 'function') {
      if (third || second.prototype.dispose) {
        if (second.prototype instanceof Composition) {
          return this._compose(name, {
            composition: second,
            options: third
          });
        } else {
          return this._compose(name, {
            options: third,
            compose: function() {
              var autoRender, disabledAutoRender;
              this.item = new second(this.options);
              autoRender = this.item.autoRender;
              disabledAutoRender = autoRender === void 0 || !autoRender;
              if (disabledAutoRender && typeof this.item.render === 'function') {
                return this.item.render();
              }
            }
          });
        }
      }
      return this._compose(name, {
        compose: second
      });
    }
    if (typeof third === 'function') {
      return this._compose(name, {
        compose: third,
        options: second
      });
    }
    return this._compose(name, second);
  };

  Composer.prototype._compose = function(name, options) {
    var composition, current;
    if (typeof options.compose !== 'function' && !(options.composition != null)) {
      throw new Error('Composer#compose was used incorrectly');
    }
    if (options.composition != null) {
      composition = new options.composition(options.options);
    } else {
      composition = new Composition(options.options);
      composition.compose = options.compose;
      if (options.check) {
        composition.check = options.check;
      }
    }
    current = this.compositions[name];
    if (current && current.check(composition.options)) {
      current.stale(false);
    } else {
      if (current) {
        current.dispose();
      }
      composition.compose(composition.options);
      composition.stale(false);
      this.compositions[name] = composition;
    }
    return this.compositions[name];
  };

  Composer.prototype.retrieve = function(name, callback) {
    var active, item;
    active = this.compositions[name];
    item = (active && !active.stale() ? active.item : void 0);
    return callback(item);
  };

  Composer.prototype.cleanup = function() {
    var composition, name, _ref;
    _ref = this.compositions;
    for (name in _ref) {
      composition = _ref[name];
      if (composition.stale()) {
        composition.dispose();
        delete this.compositions[name];
      } else {
        composition.stale(true);
      }
    }
  };

  Composer.prototype.dispose = function() {
    var composition, name, _ref;
    if (this.disposed) {
      return;
    }
    this.unsubscribeAllEvents();
    _ref = this.compositions;
    for (name in _ref) {
      composition = _ref[name];
      composition.dispose();
    }
    delete this.compositions;
    this.disposed = true;
    return typeof Object.freeze === "function" ? Object.freeze(this) : void 0;
  };

  return Composer;

})();

}});;require.define({'chaplin/controllers/controller': function(exports, require, module) {
'use strict';

var Backbone, Controller, EventBroker, _,
  __hasProp = {}.hasOwnProperty;

_ = require('underscore');

Backbone = require('backbone');

EventBroker = require('chaplin/lib/event_broker');

module.exports = Controller = (function() {

  Controller.extend = Backbone.Model.extend;

  _(Controller.prototype).extend(Backbone.Events);

  _(Controller.prototype).extend(EventBroker);

  Controller.prototype.view = null;

  Controller.prototype.redirected = false;

  function Controller() {
    this.initialize.apply(this, arguments);
  }

  Controller.prototype.initialize = function() {};

  Controller.prototype.adjustTitle = function(subtitle) {
    return this.publishEvent('!adjustTitle', subtitle);
  };

  Controller.prototype.compose = function(name, second, third) {
    var item;
    if (arguments.length === 1) {
      item = null;
      this.publishEvent('!composer:retrieve', name, function(composition) {
        return item = composition;
      });
      return item;
    } else {
      return this.publishEvent('!composer:compose', name, second, third);
    }
  };

  Controller.prototype.redirectTo = function(url, options) {
    if (options == null) {
      options = {};
    }
    this.redirected = true;
    return this.publishEvent('!router:route', url, options, function(routed) {
      if (!routed) {
        throw new Error('Controller#redirectTo: no route matched');
      }
    });
  };

  Controller.prototype.redirectToRoute = function(name, params, options) {
    this.redirected = true;
    return this.publishEvent('!router:routeByName', name, params, options, function(routed) {
      if (!routed) {
        throw new Error('Controller#redirectToRoute: no route matched');
      }
    });
  };

  Controller.prototype.disposed = false;

  Controller.prototype.dispose = function() {
    var obj, prop, properties, _i, _len;
    if (this.disposed) {
      return;
    }
    for (prop in this) {
      if (!__hasProp.call(this, prop)) continue;
      obj = this[prop];
      if (!(obj && typeof obj.dispose === 'function')) {
        continue;
      }
      obj.dispose();
      delete this[prop];
    }
    this.unsubscribeAllEvents();
    this.stopListening();
    properties = ['redirected'];
    for (_i = 0, _len = properties.length; _i < _len; _i++) {
      prop = properties[_i];
      delete this[prop];
    }
    this.disposed = true;
    return typeof Object.freeze === "function" ? Object.freeze(this) : void 0;
  };

  return Controller;

})();

}});;require.define({'chaplin/models/collection': function(exports, require, module) {
'use strict';

var Backbone, Collection, EventBroker, Model, utils, _,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

_ = require('underscore');

Backbone = require('backbone');

EventBroker = require('chaplin/lib/event_broker');

Model = require('chaplin/models/model');

utils = require('chaplin/lib/utils');

module.exports = Collection = (function(_super) {

  __extends(Collection, _super);

  function Collection() {
    return Collection.__super__.constructor.apply(this, arguments);
  }

  _(Collection.prototype).extend(EventBroker);

  Collection.prototype.model = Model;

  Collection.prototype.initDeferred = function() {
    return _(this).extend($.Deferred());
  };

  Collection.prototype.serialize = function() {
    return this.map(utils.serialize);
  };

  Collection.prototype.disposed = false;

  Collection.prototype.dispose = function() {
    var prop, properties, _i, _len;
    if (this.disposed) {
      return;
    }
    this.trigger('dispose', this);
    this.reset([], {
      silent: true
    });
    this.unsubscribeAllEvents();
    this.stopListening();
    this.off();
    if (typeof this.reject === "function") {
      this.reject();
    }
    properties = ['model', 'models', '_byId', '_byCid', '_callbacks'];
    for (_i = 0, _len = properties.length; _i < _len; _i++) {
      prop = properties[_i];
      delete this[prop];
    }
    this.disposed = true;
    return typeof Object.freeze === "function" ? Object.freeze(this) : void 0;
  };

  return Collection;

})(Backbone.Collection);

}});;require.define({'chaplin/models/model': function(exports, require, module) {
'use strict';

var Backbone, EventBroker, Model, serializeAttributes, serializeModelAttributes, utils, _,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

_ = require('underscore');

Backbone = require('backbone');

utils = require('chaplin/lib/utils');

EventBroker = require('chaplin/lib/event_broker');

serializeAttributes = function(model, attributes, modelStack) {
  var delegator, key, otherModel, serializedModels, value, _i, _len, _ref;
  delegator = utils.beget(attributes);
  if (modelStack == null) {
    modelStack = {};
  }
  modelStack[model.cid] = true;
  for (key in attributes) {
    value = attributes[key];
    if (value instanceof Backbone.Model) {
      delegator[key] = serializeModelAttributes(value, model, modelStack);
    } else if (value instanceof Backbone.Collection) {
      serializedModels = [];
      _ref = value.models;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        otherModel = _ref[_i];
        serializedModels.push(serializeModelAttributes(otherModel, model, modelStack));
      }
      delegator[key] = serializedModels;
    }
  }
  delete modelStack[model.cid];
  return delegator;
};

serializeModelAttributes = function(model, currentModel, modelStack) {
  var attributes;
  if (model === currentModel || _(modelStack).has(model.cid)) {
    return null;
  }
  attributes = typeof model.getAttributes === 'function' ? model.getAttributes() : model.attributes;
  return serializeAttributes(model, attributes, modelStack);
};

module.exports = Model = (function(_super) {

  __extends(Model, _super);

  function Model() {
    return Model.__super__.constructor.apply(this, arguments);
  }

  _(Model.prototype).extend(EventBroker);

  Model.prototype.initDeferred = function() {
    return _(this).extend($.Deferred());
  };

  Model.prototype.getAttributes = function() {
    return this.attributes;
  };

  Model.prototype.serialize = function() {
    return serializeAttributes(this, this.getAttributes());
  };

  Model.prototype.disposed = false;

  Model.prototype.dispose = function() {
    var prop, properties, _i, _len;
    if (this.disposed) {
      return;
    }
    this.trigger('dispose', this);
    this.unsubscribeAllEvents();
    this.stopListening();
    this.off();
    if (typeof this.reject === "function") {
      this.reject();
    }
    properties = ['collection', 'attributes', 'changed', '_escapedAttributes', '_previousAttributes', '_silent', '_pending', '_callbacks'];
    for (_i = 0, _len = properties.length; _i < _len; _i++) {
      prop = properties[_i];
      delete this[prop];
    }
    this.disposed = true;
    return typeof Object.freeze === "function" ? Object.freeze(this) : void 0;
  };

  return Model;

})(Backbone.Model);

}});;require.define({'chaplin/views/layout': function(exports, require, module) {
'use strict';

var $, Backbone, EventBroker, Layout, utils, _,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

_ = require('underscore');

Backbone = require('backbone');

utils = require('chaplin/lib/utils');

EventBroker = require('chaplin/lib/event_broker');

$ = Backbone.$;

module.exports = Layout = (function() {

  Layout.extend = Backbone.Model.extend;

  _(Layout.prototype).extend(EventBroker);

  Layout.prototype.title = '';

  Layout.prototype.events = {};

  Layout.prototype.el = document;

  Layout.prototype.$el = $(document);

  Layout.prototype.cid = 'chaplin-layout';

  Layout.prototype.regions = null;

  function Layout() {
    this.openLink = __bind(this.openLink, this);
    this.initialize.apply(this, arguments);
  }

  Layout.prototype.initialize = function(options) {
    if (options == null) {
      options = {};
    }
    this.title = options.title;
    this.settings = _(options).defaults({
      titleTemplate: _.template("<%= subtitle %> \u2013 <%= title %>"),
      openExternalToBlank: false,
      routeLinks: 'a, .go-to',
      skipRouting: '.noscript',
      scrollTo: [0, 0]
    });
    this.regions = [];
    this.subscribeEvent('beforeControllerDispose', this.hideOldView);
    this.subscribeEvent('startupController', this.showNewView);
    this.subscribeEvent('!adjustTitle', this.adjustTitle);
    this.subscribeEvent('!region:show', this.showRegion);
    this.subscribeEvent('!region:register', this.registerRegionHandler);
    this.subscribeEvent('!region:unregister', this.unregisterRegionHandler);
    if (this.settings.routeLinks) {
      this.startLinkRouting();
    }
    return this.delegateEvents();
  };

  Layout.prototype.delegateEvents = Backbone.View.prototype.delegateEvents;

  Layout.prototype.undelegateEvents = Backbone.View.prototype.undelegateEvents;

  Layout.prototype.hideOldView = function(controller) {
    var scrollTo, view;
    scrollTo = this.settings.scrollTo;
    if (scrollTo) {
      window.scrollTo(scrollTo[0], scrollTo[1]);
    }
    view = controller.view;
    if (view) {
      return view.$el.hide();
    }
  };

  Layout.prototype.showNewView = function(context) {
    var view;
    view = context.controller.view;
    if (view) {
      return view.$el.show();
    }
  };

  Layout.prototype.adjustTitle = function(subtitle) {
    var title;
    if (subtitle == null) {
      subtitle = '';
    }
    title = this.settings.titleTemplate({
      title: this.title,
      subtitle: subtitle
    });
    return setTimeout((function() {
      return document.title = title;
    }), 50);
  };

  Layout.prototype.startLinkRouting = function() {
    if (this.settings.routeLinks) {
      return $(document).on('click', this.settings.routeLinks, this.openLink);
    }
  };

  Layout.prototype.stopLinkRouting = function() {
    if (this.settings.routeLinks) {
      return $(document).off('click', this.settings.routeLinks);
    }
  };

  Layout.prototype.openLink = function(event) {
    var $el, callback, el, href, internal, isAnchor, options, path, queryString, skipRouting, type, _ref, _ref1, _ref2;
    if (utils.modifierKeyPressed(event)) {
      return;
    }
    el = event.currentTarget;
    $el = $(el);
    isAnchor = el.nodeName === 'A';
    href = $el.attr('href') || $el.data('href') || null;
    if (href === null || href === void 0 || href === '' || href.charAt(0) === '#') {
      return;
    }
    if (isAnchor && ($el.attr('target') === '_blank' || $el.attr('rel') === 'external' || ((_ref = el.protocol) !== 'http:' && _ref !== 'https:' && _ref !== 'file:'))) {
      return;
    }
    skipRouting = this.settings.skipRouting;
    type = typeof skipRouting;
    if (type === 'function' && !skipRouting(href, el) || type === 'string' && $el.is(skipRouting)) {
      return;
    }
    internal = !isAnchor || ((_ref1 = el.hostname) === location.hostname || _ref1 === '');
    if (!internal) {
      if (this.settings.openExternalToBlank) {
        event.preventDefault();
        window.open(el.href);
      }
      return;
    }
    if (isAnchor) {
      path = el.pathname;
      queryString = el.search.substring(1);
      if (path.charAt(0) !== '/') {
        path = "/" + path;
      }
    } else {
      _ref2 = href.split('?'), path = _ref2[0], queryString = _ref2[1];
      if (queryString == null) {
        queryString = '';
      }
    }
    options = {
      queryString: queryString
    };
    callback = function(routed) {
      if (routed) {
        event.preventDefault();
      } else if (!isAnchor) {
        location.href = path;
      }
    };
    this.publishEvent('!router:route', path, options, callback);
  };

  Layout.prototype.registerRegionHandler = function(instance, name, selector) {
    if (name != null) {
      return this.registerRegion(instance, name, selector);
    } else {
      return this.registerRegions(instance);
    }
  };

  Layout.prototype.registerRegion = function(instance, name, selector) {
    this.unregisterRegion(instance, name);
    return this.regions.unshift({
      instance: instance,
      name: name,
      selector: selector
    });
  };

  Layout.prototype.registerRegions = function(instance) {
    var name, selector, version, _i, _len, _ref;
    _ref = utils.getAllPropertyVersions(instance, 'regions');
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      version = _ref[_i];
      for (selector in version) {
        name = version[selector];
        this.registerRegion(instance, name, selector);
      }
    }
  };

  Layout.prototype.unregisterRegionHandler = function(instance, name) {
    if (name != null) {
      return this.unregisterRegion(instance, name);
    } else {
      return this.unregisterRegions(instance);
    }
  };

  Layout.prototype.unregisterRegion = function(instance, name) {
    var cid;
    cid = instance.cid;
    return this.regions = _(this.regions).filter(function(region) {
      return region.instance.cid !== cid || region.name !== name;
    });
  };

  Layout.prototype.unregisterRegions = function(instance) {
    return this.regions = _(this.regions).filter(function(region) {
      return region.instance.cid !== instance.cid;
    });
  };

  Layout.prototype.showRegion = function(name, instance) {
    var region;
    region = _.find(this.regions, function(region) {
      return region.name === name && !region.instance.stale;
    });
    if (!region) {
      throw new Error("No region registered under " + name);
    }
    return instance.container = region.instance.$el.find(region.selector);
  };

  Layout.prototype.disposed = false;

  Layout.prototype.dispose = function() {
    if (this.disposed) {
      return;
    }
    delete this.regions;
    this.stopLinkRouting();
    this.unsubscribeAllEvents();
    this.undelegateEvents();
    delete this.title;
    this.disposed = true;
    return typeof Object.freeze === "function" ? Object.freeze(this) : void 0;
  };

  return Layout;

})();

}});;require.define({'chaplin/views/view': function(exports, require, module) {
'use strict';

var $, Backbone, EventBroker, View, utils, _,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

_ = require('underscore');

Backbone = require('backbone');

utils = require('chaplin/lib/utils');

EventBroker = require('chaplin/lib/event_broker');

$ = Backbone.$;

module.exports = View = (function(_super) {

  __extends(View, _super);

  _(View.prototype).extend(EventBroker);

  View.prototype.autoRender = false;

  View.prototype.autoAttach = true;

  View.prototype.container = null;

  View.prototype.containerMethod = 'append';

  View.prototype.regions = null;

  View.prototype.region = null;

  View.prototype.subviews = null;

  View.prototype.subviewsByName = null;

  View.prototype.stale = false;

  function View(options) {
    var render,
      _this = this;
    if (options) {
      _(this).extend(_.pick(options, ['autoAttach', 'autoRender', 'container', 'containerMethod', 'region']));
    }
    if (this.render === View.prototype.render) {
      this.render = _(this.render).bind(this);
    } else {
      render = this.render;
      this.renderIsWrapped = true;
      this.render = function() {
        if (_this.disposed) {
          return false;
        }
        render.apply(_this, arguments);
        if (_this.autoAttach) {
          _this.attach.apply(_this, arguments);
        }
        return _this;
      };
    }
    this.subviews = [];
    this.subviewsByName = {};
    View.__super__.constructor.apply(this, arguments);
    this.delegateListeners();
    if (this.model) {
      this.listenTo(this.model, 'dispose', this.dispose);
    }
    if (this.collection) {
      this.listenTo(this.collection, 'dispose', this.dispose);
    }
    if (this.regions != null) {
      this.publishEvent('!region:register', this);
    }
    if (this.autoRender) {
      this.render();
    }
  }

  View.prototype.delegate = function(eventName, second, third) {
    var bound, events, handler, list, selector,
      _this = this;
    if (typeof eventName !== 'string') {
      throw new TypeError('View#delegate: first argument must be a string');
    }
    if (arguments.length === 2) {
      handler = second;
    } else if (arguments.length === 3) {
      selector = second;
      if (typeof selector !== 'string') {
        throw new TypeError('View#delegate: ' + 'second argument must be a string');
      }
      handler = third;
    } else {
      throw new TypeError('View#delegate: ' + 'only two or three arguments are allowed');
    }
    if (typeof handler !== 'function') {
      throw new TypeError('View#delegate: ' + 'handler argument must be function');
    }
    list = _.map(eventName.split(' '), function(event) {
      return "" + event + ".delegate" + _this.cid;
    });
    events = list.join(' ');
    bound = _.bind(handler, this);
    this.$el.on(events, selector || null, bound);
    return bound;
  };

  View.prototype._delegateEvents = function(events) {
    var bound, eventName, handler, key, match, selector, value;
    for (key in events) {
      value = events[key];
      handler = typeof value === 'function' ? value : this[value];
      if (!handler) {
        throw new Error("Method '" + handler + "' does not exist");
      }
      match = key.match(/^(\S+)\s*(.*)$/);
      eventName = "" + match[1] + ".delegateEvents" + this.cid;
      selector = match[2];
      bound = _.bind(handler, this);
      this.$el.on(eventName, selector || null, bound);
    }
  };

  View.prototype.delegateEvents = function(events) {
    var classEvents, _i, _len, _ref;
    this.undelegateEvents();
    if (events) {
      this._delegateEvents(events);
      return;
    }
    _ref = utils.getAllPropertyVersions(this, 'events');
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      classEvents = _ref[_i];
      if (typeof classEvents === 'function') {
        throw new TypeError('View#delegateEvents: functions are not supported');
      }
      this._delegateEvents(classEvents);
    }
  };

  View.prototype.undelegate = function() {
    return this.$el.unbind(".delegate" + this.cid);
  };

  View.prototype.delegateListeners = function() {
    var eventName, key, method, target, version, _i, _len, _ref, _ref1;
    if (!this.listen) {
      return;
    }
    _ref = utils.getAllPropertyVersions(this, 'listen');
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      version = _ref[_i];
      for (key in version) {
        method = version[key];
        if (typeof method !== 'function') {
          method = this[method];
        }
        if (typeof method !== 'function') {
          throw new Error('View#delegateListeners: ' + ("" + method + " must be function"));
        }
        _ref1 = key.split(' '), eventName = _ref1[0], target = _ref1[1];
        this.delegateListener(eventName, target, method);
      }
    }
  };

  View.prototype.delegateListener = function(eventName, target, callback) {
    var prop;
    if (target === 'model' || target === 'collection') {
      prop = this[target];
      if (prop) {
        this.listenTo(prop, eventName, callback);
      }
    } else if (target === 'mediator') {
      this.subscribeEvent(eventName, callback);
    } else if (!target) {
      this.on(eventName, callback, this);
    }
  };

  View.prototype.registerRegion = function(selector, name) {
    return this.publishEvent('!region:register', this, name, selector);
  };

  View.prototype.unregisterRegion = function(name) {
    return this.publishEvent('!region:unregister', this, name);
  };

  View.prototype.unregisterAllRegions = function() {
    return this.publishEvent('!region:unregister', this);
  };

  View.prototype.subview = function(name, view) {
    if (name && view) {
      this.removeSubview(name);
      this.subviews.push(view);
      this.subviewsByName[name] = view;
      return view;
    } else if (name) {
      return this.subviewsByName[name];
    }
  };

  View.prototype.removeSubview = function(nameOrView) {
    var index, name, otherName, otherView, view, _ref;
    if (!nameOrView) {
      return;
    }
    if (typeof nameOrView === 'string') {
      name = nameOrView;
      view = this.subviewsByName[name];
    } else {
      view = nameOrView;
      _ref = this.subviewsByName;
      for (otherName in _ref) {
        otherView = _ref[otherName];
        if (view === otherView) {
          name = otherName;
          break;
        }
      }
    }
    if (!(name && view && view.dispose)) {
      return;
    }
    view.dispose();
    index = _(this.subviews).indexOf(view);
    if (index > -1) {
      this.subviews.splice(index, 1);
    }
    return delete this.subviewsByName[name];
  };

  View.prototype.getTemplateData = function() {
    var data, source;
    data = this.model ? utils.serialize(this.model) : this.collection ? {
      items: utils.serialize(this.collection),
      length: this.collection.length
    } : {};
    source = this.model || this.collection;
    if (source) {
      if (typeof source.state === 'function' && !('resolved' in data)) {
        data.resolved = source.state() === 'resolved';
      }
      if (typeof source.isSynced === 'function' && !('synced' in data)) {
        data.synced = source.isSynced();
      }
    }
    return data;
  };

  View.prototype.getTemplateFunction = function() {
    throw new Error('View#getTemplateFunction must be overridden');
  };

  View.prototype.render = function() {
    var html, templateFunc;
    if (this.disposed) {
      return false;
    }
    templateFunc = this.getTemplateFunction();
    if (typeof templateFunc === 'function') {
      html = templateFunc(this.getTemplateData());
      this.$el.empty().append(html);
    }
    if (!this.renderIsWrapped) {
      this.attach();
    }
    return this;
  };

  View.prototype.attach = function() {
    if (this.region != null) {
      this.publishEvent('!region:show', this.region, this);
    }
    if (this.container) {
      $(this.container)[this.containerMethod](this.el);
      return this.trigger('addedToDOM');
    }
  };

  View.prototype.disposed = false;

  View.prototype.dispose = function() {
    var prop, properties, subview, _i, _j, _len, _len1, _ref;
    if (this.disposed) {
      return;
    }
    if (this.subviews == null) {
      throw new Error('Your `initialize` method must include a super call to\
      Chaplin `initialize`');
    }
    this.unregisterAllRegions();
    _ref = this.subviews;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      subview = _ref[_i];
      subview.dispose();
    }
    this.unsubscribeAllEvents();
    this.stopListening();
    this.off();
    this.$el.remove();
    properties = ['el', '$el', 'options', 'model', 'collection', 'subviews', 'subviewsByName', '_callbacks'];
    for (_j = 0, _len1 = properties.length; _j < _len1; _j++) {
      prop = properties[_j];
      delete this[prop];
    }
    this.disposed = true;
    return typeof Object.freeze === "function" ? Object.freeze(this) : void 0;
  };

  return View;

})(Backbone.View);

}});;require.define({'chaplin/views/collection_view': function(exports, require, module) {
'use strict';

var $, Backbone, CollectionView, View, _,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

_ = require('underscore');

Backbone = require('backbone');

View = require('chaplin/views/view');

$ = Backbone.$;

module.exports = CollectionView = (function(_super) {

  __extends(CollectionView, _super);

  CollectionView.prototype.itemView = null;

  CollectionView.prototype.autoRender = true;

  CollectionView.prototype.renderItems = true;

  CollectionView.prototype.animationDuration = 500;

  CollectionView.prototype.useCssAnimation = false;

  CollectionView.prototype.animationStartClass = 'animated-item-view';

  CollectionView.prototype.animationEndClass = 'animated-item-view-end';

  CollectionView.prototype.listSelector = null;

  CollectionView.prototype.$list = null;

  CollectionView.prototype.fallbackSelector = null;

  CollectionView.prototype.$fallback = null;

  CollectionView.prototype.loadingSelector = null;

  CollectionView.prototype.$loading = null;

  CollectionView.prototype.itemSelector = null;

  CollectionView.prototype.filterer = null;

  CollectionView.prototype.filterCallback = function(view, included) {
    return view.$el.stop(true, true).toggle(included);
  };

  CollectionView.prototype.visibleItems = null;

  function CollectionView(options) {
    this.renderAllItems = __bind(this.renderAllItems, this);

    this.toggleFallback = __bind(this.toggleFallback, this);

    this.itemsReset = __bind(this.itemsReset, this);

    this.itemRemoved = __bind(this.itemRemoved, this);

    this.itemAdded = __bind(this.itemAdded, this);
    if (options) {
      _(this).extend(_.pick(options, ['renderItems', 'itemView']));
    }
    this.visibleItems = [];
    CollectionView.__super__.constructor.apply(this, arguments);
  }

  CollectionView.prototype.initialize = function(options) {
    if (options == null) {
      options = {};
    }
    this.addCollectionListeners();
    if (options.filterer != null) {
      return this.filter(options.filterer);
    }
  };

  CollectionView.prototype.addCollectionListeners = function() {
    this.listenTo(this.collection, 'add', this.itemAdded);
    this.listenTo(this.collection, 'remove', this.itemRemoved);
    return this.listenTo(this.collection, 'reset sort', this.itemsReset);
  };

  CollectionView.prototype.getTemplateData = function() {
    var templateData;
    templateData = {
      length: this.collection.length
    };
    if (typeof this.collection.state === 'function') {
      templateData.resolved = this.collection.state() === 'resolved';
    }
    if (typeof this.collection.isSynced === 'function') {
      templateData.synced = this.collection.isSynced();
    }
    return templateData;
  };

  CollectionView.prototype.getTemplateFunction = function() {};

  CollectionView.prototype.render = function() {
    CollectionView.__super__.render.apply(this, arguments);
    this.$list = this.listSelector ? this.$(this.listSelector) : this.$el;
    this.initFallback();
    this.initLoadingIndicator();
    if (this.renderItems) {
      return this.renderAllItems();
    }
  };

  CollectionView.prototype.itemAdded = function(item, collection, options) {
    if (options == null) {
      options = {};
    }
    return this.insertView(item, this.renderItem(item), options.index);
  };

  CollectionView.prototype.itemRemoved = function(item) {
    return this.removeViewForItem(item);
  };

  CollectionView.prototype.itemsReset = function() {
    return this.renderAllItems();
  };

  CollectionView.prototype.initFallback = function() {
    if (!this.fallbackSelector) {
      return;
    }
    this.$fallback = this.$(this.fallbackSelector);
    this.on('visibilityChange', this.toggleFallback);
    this.listenTo(this.collection, 'syncStateChange', this.toggleFallback);
    return this.toggleFallback();
  };

  CollectionView.prototype.toggleFallback = function() {
    var visible;
    visible = this.visibleItems.length === 0 && (typeof this.collection.isSynced === 'function' ? this.collection.isSynced() : true);
    return this.$fallback.toggle(visible);
  };

  CollectionView.prototype.initLoadingIndicator = function() {
    if (!(this.loadingSelector && typeof this.collection.isSyncing === 'function')) {
      return;
    }
    this.$loading = this.$(this.loadingSelector);
    this.listenTo(this.collection, 'syncStateChange', this.toggleLoadingIndicator);
    return this.toggleLoadingIndicator();
  };

  CollectionView.prototype.toggleLoadingIndicator = function() {
    var visible;
    visible = this.collection.length === 0 && this.collection.isSyncing();
    return this.$loading.toggle(visible);
  };

  CollectionView.prototype.getItemViews = function() {
    var itemViews, name, view, _ref;
    itemViews = {};
    _ref = this.subviewsByName;
    for (name in _ref) {
      view = _ref[name];
      if (name.slice(0, 9) === 'itemView:') {
        itemViews[name.slice(9)] = view;
      }
    }
    return itemViews;
  };

  CollectionView.prototype.filter = function(filterer, filterCallback) {
    var included, index, item, view, _i, _len, _ref;
    this.filterer = filterer;
    if (filterCallback) {
      this.filterCallback = filterCallback;
    }
    if (filterCallback == null) {
      filterCallback = this.filterCallback;
    }
    if (!_(this.getItemViews()).isEmpty()) {
      _ref = this.collection.models;
      for (index = _i = 0, _len = _ref.length; _i < _len; index = ++_i) {
        item = _ref[index];
        included = typeof filterer === 'function' ? filterer(item, index) : true;
        view = this.subview("itemView:" + item.cid);
        if (!view) {
          throw new Error('CollectionView#filter: ' + ("no view found for " + item.cid));
        }
        this.filterCallback(view, included);
        this.updateVisibleItems(view.model, included, false);
      }
    }
    return this.trigger('visibilityChange', this.visibleItems);
  };

  CollectionView.prototype.renderAllItems = function() {
    var cid, index, item, items, remainingViewsByCid, view, _i, _j, _len, _len1, _ref;
    items = this.collection.models;
    this.visibleItems = [];
    remainingViewsByCid = {};
    for (_i = 0, _len = items.length; _i < _len; _i++) {
      item = items[_i];
      view = this.subview("itemView:" + item.cid);
      if (view) {
        remainingViewsByCid[item.cid] = view;
      }
    }
    _ref = this.getItemViews();
    for (cid in _ref) {
      if (!__hasProp.call(_ref, cid)) continue;
      view = _ref[cid];
      if (!(cid in remainingViewsByCid)) {
        this.removeSubview("itemView:" + cid);
      }
    }
    for (index = _j = 0, _len1 = items.length; _j < _len1; index = ++_j) {
      item = items[index];
      view = this.subview("itemView:" + item.cid);
      if (view) {
        this.insertView(item, view, index, false);
      } else {
        this.insertView(item, this.renderItem(item), index);
      }
    }
    if (items.length === 0) {
      return this.trigger('visibilityChange', this.visibleItems);
    }
  };

  CollectionView.prototype.renderItem = function(item) {
    var view;
    view = this.subview("itemView:" + item.cid);
    if (!view) {
      view = this.initItemView(item);
      this.subview("itemView:" + item.cid, view);
    }
    view.render();
    return view;
  };

  CollectionView.prototype.initItemView = function(model) {
    if (this.itemView) {
      return new this.itemView({
        model: model,
        autoRender: false
      });
    } else {
      throw new Error('The CollectionView#itemView property ' + 'must be defined or the initItemView() must be overridden.');
    }
  };

  CollectionView.prototype.insertView = function(item, view, index, enableAnimation) {
    var $list, $next, $previous, $viewEl, children, included, length, position, viewEl,
      _this = this;
    if (index == null) {
      index = null;
    }
    if (enableAnimation == null) {
      enableAnimation = true;
    }
    if (this.animationDuration === 0) {
      enableAnimation = false;
    }
    position = typeof index === 'number' ? index : this.collection.indexOf(item);
    included = typeof this.filterer === 'function' ? this.filterer(item, position) : true;
    viewEl = view.el;
    $viewEl = view.$el;
    if (included && enableAnimation) {
      if (this.useCssAnimation) {
        $viewEl.addClass(this.animationStartClass);
      } else {
        $viewEl.css('opacity', 0);
      }
    }
    if (this.filterer) {
      this.filterCallback(view, included);
    }
    $list = this.$list;
    children = this.itemSelector ? $list.children(this.itemSelector) : $list.children();
    if (children.get(position) !== viewEl) {
      length = children.length;
      if (length === 0 || position === length) {
        $list.append(viewEl);
      } else {
        if (position === 0) {
          $next = children.eq(position);
          $next.before(viewEl);
        } else {
          $previous = children.eq(position - 1);
          $previous.after(viewEl);
        }
      }
    }
    view.trigger('addedToParent');
    this.updateVisibleItems(item, included);
    if (included && enableAnimation) {
      if (this.useCssAnimation) {
        setTimeout(function() {
          return $viewEl.addClass(_this.animationEndClass);
        }, 0);
      } else {
        $viewEl.animate({
          opacity: 1
        }, this.animationDuration);
      }
    }
  };

  CollectionView.prototype.removeViewForItem = function(item) {
    this.updateVisibleItems(item, false);
    return this.removeSubview("itemView:" + item.cid);
  };

  CollectionView.prototype.updateVisibleItems = function(item, includedInFilter, triggerEvent) {
    var includedInVisibleItems, visibilityChanged, visibleItemsIndex;
    if (triggerEvent == null) {
      triggerEvent = true;
    }
    visibilityChanged = false;
    visibleItemsIndex = _(this.visibleItems).indexOf(item);
    includedInVisibleItems = visibleItemsIndex > -1;
    if (includedInFilter && !includedInVisibleItems) {
      this.visibleItems.push(item);
      visibilityChanged = true;
    } else if (!includedInFilter && includedInVisibleItems) {
      this.visibleItems.splice(visibleItemsIndex, 1);
      visibilityChanged = true;
    }
    if (visibilityChanged && triggerEvent) {
      this.trigger('visibilityChange', this.visibleItems);
    }
    return visibilityChanged;
  };

  CollectionView.prototype.dispose = function() {
    var prop, properties, _i, _len;
    if (this.disposed) {
      return;
    }
    properties = ['$list', '$fallback', '$loading', 'visibleItems'];
    for (_i = 0, _len = properties.length; _i < _len; _i++) {
      prop = properties[_i];
      delete this[prop];
    }
    return CollectionView.__super__.dispose.apply(this, arguments);
  };

  return CollectionView;

})(View);

}});;require.define({'chaplin/lib/route': function(exports, require, module) {
'use strict';

var Backbone, Controller, EventBroker, Route, _,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty;

_ = require('underscore');

Backbone = require('backbone');

EventBroker = require('chaplin/lib/event_broker');

Controller = require('chaplin/controllers/controller');

module.exports = Route = (function() {
  var escapeRegExp, queryStringFieldSeparator, queryStringValueSeparator;

  Route.extend = Backbone.Model.extend;

  _(Route.prototype).extend(EventBroker);

  escapeRegExp = /[-[\]{}()+?.,\\^$|#\s]/g;

  queryStringFieldSeparator = '&';

  queryStringValueSeparator = '=';

  function Route(pattern, controller, action, options) {
    this.pattern = pattern;
    this.controller = controller;
    this.action = action;
    this.handler = __bind(this.handler, this);

    this.addParamName = __bind(this.addParamName, this);

    this.options = options ? _.clone(options) : {};
    if (this.options.name != null) {
      this.name = this.options.name;
    }
    this.paramNames = [];
    if (_(Controller.prototype).has(this.action)) {
      throw new Error('Route: You should not use existing controller ' + 'properties as action names');
    }
    this.createRegExp();
  }

  Route.prototype.reverse = function(params) {
    var index, name, notEnoughParams, url, value, _i, _len, _ref;
    url = this.pattern;
    if (_.isRegExp(url)) {
      return false;
    }
    notEnoughParams = 'Route#reverse: Not enough parameters to reverse';
    if (_.isArray(params)) {
      if (params.length < this.paramNames.length) {
        throw new Error(notEnoughParams);
      }
      index = 0;
      url = url.replace(/[:*][^\/\?]+/g, function(match) {
        var result;
        result = params[index];
        index += 1;
        return result;
      });
    } else {
      _ref = this.paramNames;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        name = _ref[_i];
        value = params[name];
        if (value === void 0) {
          throw new Error(notEnoughParams);
        }
        url = url.replace(RegExp("[:*]" + name, "g"), value);
      }
    }
    if (this.test(url)) {
      return url;
    } else {
      return false;
    }
  };

  Route.prototype.createRegExp = function() {
    var pattern;
    if (_.isRegExp(this.pattern)) {
      this.regExp = this.pattern;
      if (_.isArray(this.options.names)) {
        this.paramNames = this.options.names;
      }
      return;
    }
    pattern = this.pattern.replace(escapeRegExp, '\\$&').replace(/(?::|\*)(\w+)/g, this.addParamName);
    return this.regExp = RegExp("^" + pattern + "(?=\\?|$)");
  };

  Route.prototype.addParamName = function(match, paramName) {
    this.paramNames.push(paramName);
    if (match.charAt(0) === ':') {
      return '([^\/\?]+)';
    } else {
      return '(.*?)';
    }
  };

  Route.prototype.test = function(path) {
    var constraint, constraints, matched, name, params;
    matched = this.regExp.test(path);
    if (!matched) {
      return false;
    }
    constraints = this.options.constraints;
    if (constraints) {
      params = this.extractParams(path);
      for (name in constraints) {
        if (!__hasProp.call(constraints, name)) continue;
        constraint = constraints[name];
        if (!constraint.test(params[name])) {
          return false;
        }
      }
    }
    return true;
  };

  Route.prototype.handler = function(path, options) {
    var params, queryString, _ref;
    options = options ? _.clone(options) : {};
    queryString = (_ref = options.queryString) != null ? _ref : this.getCurrentQueryString();
    params = this.buildParams(path, queryString);
    options.path = path;
    return this.publishEvent('matchRoute', this, params, options);
  };

  Route.prototype.getCurrentQueryString = function() {
    return location.search.substring(1);
  };

  Route.prototype.buildParams = function(path, queryString) {
    return _.extend({}, this.extractQueryParams(queryString), this.extractParams(path), this.options.params);
  };

  Route.prototype.extractParams = function(path) {
    var index, match, matches, paramName, params, _i, _len, _ref;
    params = {};
    matches = this.regExp.exec(path);
    _ref = matches.slice(1);
    for (index = _i = 0, _len = _ref.length; _i < _len; index = ++_i) {
      match = _ref[index];
      paramName = this.paramNames.length ? this.paramNames[index] : index;
      params[paramName] = match;
    }
    return params;
  };

  Route.prototype.extractQueryParams = function(queryString) {
    var current, field, pair, pairs, params, value, _i, _len, _ref;
    params = {};
    if (!queryString) {
      return params;
    }
    pairs = queryString.split(queryStringFieldSeparator);
    for (_i = 0, _len = pairs.length; _i < _len; _i++) {
      pair = pairs[_i];
      if (!pair.length) {
        continue;
      }
      _ref = pair.split(queryStringValueSeparator), field = _ref[0], value = _ref[1];
      if (!field.length) {
        continue;
      }
      field = decodeURIComponent(field);
      value = decodeURIComponent(value);
      current = params[field];
      if (current) {
        if (current.push) {
          current.push(value);
        } else {
          params[field] = [current, value];
        }
      } else {
        params[field] = value;
      }
    }
    return params;
  };

  return Route;

})();

}});;require.define({'chaplin/lib/router': function(exports, require, module) {
'use strict';

var Backbone, EventBroker, Route, Router, utils, _,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

_ = require('underscore');

Backbone = require('backbone');

EventBroker = require('chaplin/lib/event_broker');

Route = require('chaplin/lib/route');

utils = require('chaplin/lib/utils');

module.exports = Router = (function() {

  Router.extend = Backbone.Model.extend;

  _(Router.prototype).extend(EventBroker);

  function Router(options) {
    this.options = options != null ? options : {};
    this.route = __bind(this.route, this);

    this.match = __bind(this.match, this);

    _(this.options).defaults({
      pushState: true,
      root: '/'
    });
    this.removeRoot = new RegExp('^' + utils.escapeRegExp(this.options.root) + '(#)?');
    this.subscribeEvent('!router:route', this.routeHandler);
    this.subscribeEvent('!router:routeByName', this.routeByNameHandler);
    this.subscribeEvent('!router:reverse', this.reverseHandler);
    this.subscribeEvent('!router:changeURL', this.changeURLHandler);
    this.createHistory();
  }

  Router.prototype.createHistory = function() {
    return Backbone.history || (Backbone.history = new Backbone.History());
  };

  Router.prototype.startHistory = function() {
    return Backbone.history.start(this.options);
  };

  Router.prototype.stopHistory = function() {
    if (Backbone.History.started) {
      return Backbone.history.stop();
    }
  };

  Router.prototype.match = function(pattern, target, options) {
    var action, controller, route, _ref;
    if (options == null) {
      options = {};
    }
    if (arguments.length === 2 && typeof target === 'object') {
      options = target;
      controller = options.controller, action = options.action;
      if (!(controller && action)) {
        throw new Error('Router#match must receive either target or ' + 'options.controller & options.action');
      }
    } else {
      controller = options.controller, action = options.action;
      if (controller || action) {
        throw new Error('Router#match cannot use both target and ' + 'options.controller / options.action');
      }
      _ref = target.split('#'), controller = _ref[0], action = _ref[1];
    }
    route = new Route(pattern, controller, action, options);
    Backbone.history.handlers.push({
      route: route,
      callback: route.handler
    });
    return route;
  };

  Router.prototype.route = function(path, options) {
    var handler, _i, _len, _ref;
    options = options ? _.clone(options) : {};
    _(options).defaults({
      changeURL: true
    });
    path = path.replace(this.removeRoot, '');
    _ref = Backbone.history.handlers;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      handler = _ref[_i];
      if (handler.route.test(path)) {
        handler.callback(path, options);
        return true;
      }
    }
    return false;
  };

  Router.prototype.routeHandler = function(path, options, callback) {
    var routed;
    if (arguments.length === 2 && typeof options === 'function') {
      callback = options;
      options = {};
    }
    routed = this.route(path, options);
    return typeof callback === "function" ? callback(routed) : void 0;
  };

  Router.prototype.routeByNameHandler = function(name, params, options, callback) {
    var path, routed;
    if (arguments.length === 3 && typeof options === 'function') {
      callback = options;
      options = {};
    }
    path = this.reverse(name, params);
    if (typeof path === 'string') {
      routed = this.route(path, options);
      return typeof callback === "function" ? callback(routed) : void 0;
    } else {
      return typeof callback === "function" ? callback(false) : void 0;
    }
  };

  Router.prototype.reverse = function(name, params) {
    var handler, url, _i, _len, _ref;
    _ref = Backbone.history.handlers;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      handler = _ref[_i];
      if (!(handler.route.name === name)) {
        continue;
      }
      url = handler.route.reverse(params);
      if (url !== false) {
        return url;
      }
    }
    return false;
  };

  Router.prototype.reverseHandler = function(name, params, callback) {
    return callback(this.reverse(name, params));
  };

  Router.prototype.changeURL = function(url, options) {
    var navigateOptions;
    if (options == null) {
      options = {};
    }
    navigateOptions = {
      trigger: options.trigger === true,
      replace: options.replace === true
    };
    return Backbone.history.navigate(url, navigateOptions);
  };

  Router.prototype.changeURLHandler = function(url, options) {
    return this.changeURL(url, options);
  };

  Router.prototype.disposed = false;

  Router.prototype.dispose = function() {
    if (this.disposed) {
      return;
    }
    this.stopHistory();
    delete Backbone.history;
    this.unsubscribeAllEvents();
    this.disposed = true;
    return typeof Object.freeze === "function" ? Object.freeze(this) : void 0;
  };

  return Router;

})();

}});;require.define({'chaplin/lib/delayer': function(exports, require, module) {
'use strict';

var Delayer;

Delayer = {
  setTimeout: function(name, time, handler) {
    var handle, wrappedHandler, _ref,
      _this = this;
    if ((_ref = this.timeouts) == null) {
      this.timeouts = {};
    }
    this.clearTimeout(name);
    wrappedHandler = function() {
      delete _this.timeouts[name];
      return handler();
    };
    handle = setTimeout(wrappedHandler, time);
    this.timeouts[name] = handle;
    return handle;
  },
  clearTimeout: function(name) {
    if (!(this.timeouts && (this.timeouts[name] != null))) {
      return;
    }
    clearTimeout(this.timeouts[name]);
    delete this.timeouts[name];
  },
  clearAllTimeouts: function() {
    var handle, name, _ref;
    if (!this.timeouts) {
      return;
    }
    _ref = this.timeouts;
    for (name in _ref) {
      handle = _ref[name];
      this.clearTimeout(name);
    }
  },
  setInterval: function(name, time, handler) {
    var handle, _ref;
    this.clearInterval(name);
    if ((_ref = this.intervals) == null) {
      this.intervals = {};
    }
    handle = setInterval(handler, time);
    this.intervals[name] = handle;
    return handle;
  },
  clearInterval: function(name) {
    if (!(this.intervals && this.intervals[name])) {
      return;
    }
    clearInterval(this.intervals[name]);
    delete this.intervals[name];
  },
  clearAllIntervals: function() {
    var handle, name, _ref;
    if (!this.intervals) {
      return;
    }
    _ref = this.intervals;
    for (name in _ref) {
      handle = _ref[name];
      this.clearInterval(name);
    }
  },
  clearDelayed: function() {
    this.clearAllTimeouts();
    this.clearAllIntervals();
  }
};

if (typeof Object.freeze === "function") {
  Object.freeze(Delayer);
}

module.exports = Delayer;

}});;require.define({'chaplin/lib/event_broker': function(exports, require, module) {
'use strict';

var EventBroker, mediator,
  __slice = [].slice;

mediator = require('chaplin/mediator');

EventBroker = {
  subscribeEvent: function(type, handler) {
    if (typeof type !== 'string') {
      throw new TypeError('EventBroker#subscribeEvent: ' + 'type argument must be a string');
    }
    if (typeof handler !== 'function') {
      throw new TypeError('EventBroker#subscribeEvent: ' + 'handler argument must be a function');
    }
    mediator.unsubscribe(type, handler, this);
    return mediator.subscribe(type, handler, this);
  },
  unsubscribeEvent: function(type, handler) {
    if (typeof type !== 'string') {
      throw new TypeError('EventBroker#unsubscribeEvent: ' + 'type argument must be a string');
    }
    if (typeof handler !== 'function') {
      throw new TypeError('EventBroker#unsubscribeEvent: ' + 'handler argument must be a function');
    }
    return mediator.unsubscribe(type, handler);
  },
  unsubscribeAllEvents: function() {
    return mediator.unsubscribe(null, null, this);
  },
  publishEvent: function() {
    var args, type;
    type = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];
    if (typeof type !== 'string') {
      throw new TypeError('EventBroker#publishEvent: ' + 'type argument must be a string');
    }
    return mediator.publish.apply(mediator, [type].concat(__slice.call(args)));
  }
};

if (typeof Object.freeze === "function") {
  Object.freeze(EventBroker);
}

module.exports = EventBroker;

}});;require.define({'chaplin/lib/support': function(exports, require, module) {
'use strict';

var support;

support = {
  propertyDescriptors: (function() {
    var o;
    if (!(typeof Object.defineProperty === 'function' && typeof Object.defineProperties === 'function')) {
      return false;
    }
    try {
      o = {};
      Object.defineProperty(o, 'foo', {
        value: 'bar'
      });
      return o.foo === 'bar';
    } catch (error) {
      return false;
    }
  })()
};

module.exports = support;

}});;require.define({'chaplin/lib/composition': function(exports, require, module) {
'use strict';

var Backbone, Composition, EventBroker, _,
  __hasProp = {}.hasOwnProperty;

_ = require('underscore');

Backbone = require('backbone');

EventBroker = require('chaplin/lib/event_broker');

module.exports = Composition = (function() {

  Composition.extend = Backbone.Model.extend;

  _(Composition.prototype).extend(Backbone.Events);

  _(Composition.prototype).extend(EventBroker);

  Composition.prototype.item = null;

  Composition.prototype.options = null;

  Composition.prototype._stale = false;

  function Composition(options) {
    if (options != null) {
      this.options = _.clone(options);
    }
    this.item = this;
    this.initialize(this.options);
  }

  Composition.prototype.initialize = function() {};

  Composition.prototype.compose = function() {};

  Composition.prototype.check = function(options) {
    return _.isEqual(this.options, options);
  };

  Composition.prototype.stale = function(value) {
    var item, name;
    if (value == null) {
      return this._stale;
    }
    this._stale = value;
    for (name in this) {
      item = this[name];
      if (item && item !== this && _(item).has('stale')) {
        item.stale = value;
      }
    }
  };

  Composition.prototype.disposed = false;

  Composition.prototype.dispose = function() {
    var obj, prop, properties, _i, _len;
    if (this.disposed) {
      return;
    }
    for (prop in this) {
      if (!__hasProp.call(this, prop)) continue;
      obj = this[prop];
      if (obj && typeof obj.dispose === 'function') {
        if (obj !== this) {
          obj.dispose();
          delete this[prop];
        }
      }
    }
    this.unsubscribeAllEvents();
    this.stopListening();
    properties = ['redirected'];
    for (_i = 0, _len = properties.length; _i < _len; _i++) {
      prop = properties[_i];
      delete this[prop];
    }
    this.disposed = true;
    return typeof Object.freeze === "function" ? Object.freeze(this) : void 0;
  };

  return Composition;

})();

}});;require.define({'chaplin/lib/sync_machine': function(exports, require, module) {
'use strict';

var STATE_CHANGE, SYNCED, SYNCING, SyncMachine, UNSYNCED, event, _fn, _i, _len, _ref;

UNSYNCED = 'unsynced';

SYNCING = 'syncing';

SYNCED = 'synced';

STATE_CHANGE = 'syncStateChange';

SyncMachine = {
  _syncState: UNSYNCED,
  _previousSyncState: null,
  syncState: function() {
    return this._syncState;
  },
  isUnsynced: function() {
    return this._syncState === UNSYNCED;
  },
  isSynced: function() {
    return this._syncState === SYNCED;
  },
  isSyncing: function() {
    return this._syncState === SYNCING;
  },
  unsync: function() {
    var _ref;
    if ((_ref = this._syncState) === SYNCING || _ref === SYNCED) {
      this._previousSync = this._syncState;
      this._syncState = UNSYNCED;
      this.trigger(this._syncState, this, this._syncState);
      this.trigger(STATE_CHANGE, this, this._syncState);
    }
  },
  beginSync: function() {
    var _ref;
    if ((_ref = this._syncState) === UNSYNCED || _ref === SYNCED) {
      this._previousSync = this._syncState;
      this._syncState = SYNCING;
      this.trigger(this._syncState, this, this._syncState);
      this.trigger(STATE_CHANGE, this, this._syncState);
    }
  },
  finishSync: function() {
    if (this._syncState === SYNCING) {
      this._previousSync = this._syncState;
      this._syncState = SYNCED;
      this.trigger(this._syncState, this, this._syncState);
      this.trigger(STATE_CHANGE, this, this._syncState);
    }
  },
  abortSync: function() {
    if (this._syncState === SYNCING) {
      this._syncState = this._previousSync;
      this._previousSync = this._syncState;
      this.trigger(this._syncState, this, this._syncState);
      this.trigger(STATE_CHANGE, this, this._syncState);
    }
  }
};

_ref = [UNSYNCED, SYNCING, SYNCED, STATE_CHANGE];
_fn = function(event) {
  return SyncMachine[event] = function(callback, context) {
    if (context == null) {
      context = this;
    }
    this.on(event, callback, context);
    if (this._syncState === event) {
      return callback.call(context);
    }
  };
};
for (_i = 0, _len = _ref.length; _i < _len; _i++) {
  event = _ref[_i];
  _fn(event);
}

if (typeof Object.freeze === "function") {
  Object.freeze(SyncMachine);
}

module.exports = SyncMachine;

}});;require.define({'chaplin/lib/utils': function(exports, require, module) {
'use strict';

var support, utils, _,
  __slice = [].slice,
  __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

_ = require('underscore');

support = require('chaplin/lib/support');

utils = {
  beget: (function() {
    var ctor;
    if (typeof Object.create === 'function') {
      return Object.create;
    } else {
      ctor = function() {};
      return function(obj) {
        ctor.prototype = obj;
        return new ctor;
      };
    }
  })(),
  serialize: function(data) {
    if (typeof data.serialize === 'function') {
      return data.serialize();
    } else if (typeof data.toJSON === 'function') {
      return data.toJSON();
    } else {
      throw new TypeError('utils.serialize: Unknown data was passed');
    }
  },
  readonly: (function() {
    var readonlyDescriptor;
    if (support.propertyDescriptors) {
      readonlyDescriptor = {
        writable: false,
        enumerable: true,
        configurable: false
      };
      return function() {
        var obj, prop, properties, _i, _len;
        obj = arguments[0], properties = 2 <= arguments.length ? __slice.call(arguments, 1) : [];
        for (_i = 0, _len = properties.length; _i < _len; _i++) {
          prop = properties[_i];
          readonlyDescriptor.value = obj[prop];
          Object.defineProperty(obj, prop, readonlyDescriptor);
        }
        return true;
      };
    } else {
      return function() {
        return false;
      };
    }
  })(),
  getPrototypeChain: function(object) {
    var chain, _ref;
    chain = [object.constructor.prototype];
    while (object = (_ref = object.constructor) != null ? _ref.__super__ : void 0) {
      chain.push(object);
    }
    return chain;
  },
  getAllPropertyVersions: function(object, property) {
    var proto, result, value, _i, _len, _ref;
    result = [];
    _ref = utils.getPrototypeChain(object);
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      proto = _ref[_i];
      value = proto[property];
      if (value && __indexOf.call(result, value) < 0) {
        result.push(value);
      }
    }
    return result.reverse();
  },
  upcase: function(str) {
    return str.charAt(0).toUpperCase() + str.substring(1);
  },
  underscorize: function(string) {
    return string.replace(/[A-Z]/g, function(char, index) {
      return (index !== 0 ? '_' : '') + char.toLowerCase();
    });
  },
  escapeRegExp: function(str) {
    return String(str || '').replace(/([.*+?^=!:${}()|[\]\/\\])/g, '\\$1');
  },
  modifierKeyPressed: function(event) {
    return event.shiftKey || event.altKey || event.ctrlKey || event.metaKey;
  }
};

if (typeof Object.seal === "function") {
  Object.seal(utils);
}

module.exports = utils;

}});;require.define({'chaplin': function(exports, require, module) {

module.exports = {
  Application: require('chaplin/application'),
  mediator: require('chaplin/mediator'),
  Dispatcher: require('chaplin/dispatcher'),
  Controller: require('chaplin/controllers/controller'),
  Composer: require('chaplin/composer'),
  Composition: require('chaplin/lib/composition'),
  Collection: require('chaplin/models/collection'),
  Model: require('chaplin/models/model'),
  Layout: require('chaplin/views/layout'),
  View: require('chaplin/views/view'),
  CollectionView: require('chaplin/views/collection_view'),
  Route: require('chaplin/lib/route'),
  Router: require('chaplin/lib/router'),
  Delayer: require('chaplin/lib/delayer'),
  EventBroker: require('chaplin/lib/event_broker'),
  support: require('chaplin/lib/support'),
  SyncMachine: require('chaplin/lib/sync_machine'),
  utils: require('chaplin/lib/utils')
};

}});
;
Date.prototype.getWeek = function (dowOffset) {
/*getWeek() was developed by Nick Baicoianu at MeanFreePath: http://www.meanfreepath.com */

    dowOffset = typeof(dowOffset) == 'int' ? dowOffset : 0; //default dowOffset to zero
    var newYear = new Date(this.getFullYear(),0,1);
    var day = newYear.getDay() - dowOffset; //the day of week the year begins on
    day = (day >= 0 ? day : day + 7);
    var daynum = Math.floor((this.getTime() - newYear.getTime() - 
    (this.getTimezoneOffset()-newYear.getTimezoneOffset())*60000)/86400000) + 1;
    var weeknum;
    //if the year starts before the middle of a week
    if(day < 4) {
        weeknum = Math.floor((daynum+day-1)/7) + 1;
        if(weeknum > 52) {
            nYear = new Date(this.getFullYear() + 1,0,1);
            nday = nYear.getDay() - dowOffset;
            nday = nday >= 0 ? nday : nday + 7;
            /*if the next year starts before the middle of
              the week, it is week #1 of that year*/
            weeknum = nday < 4 ? 1 : 53;
        }
    }
    else {
        weeknum = Math.floor((daynum+day-1)/7);
    }
    return weeknum;
};;
/**
 * @preserve FastClick: polyfill to remove click delays on browsers with touch UIs.
 *
 * @version 0.4.6
 * @codingstandard ftlabs-jsv2
 * @copyright The Financial Times Limited [All Rights Reserved]
 * @license MIT License (see LICENSE.txt)
 */

/*jslint browser:true, node:true*/
/*global define, Event, Node*/


/**
 * Instantiate fast-clicking listeners on the specificed layer.
 *
 * @constructor
 * @param {Element} layer The layer to listen on
 */
function FastClick(layer) {
  'use strict';
  var oldOnClick, self = this;


  /**
   * Whether a click is currently being tracked.
   *
   * @type boolean
   */
  this.trackingClick = false;


  /**
   * Timestamp for when when click tracking started.
   *
   * @type number
   */
  this.trackingClickStart = 0;


  /**
   * The element being tracked for a click.
   *
   * @type EventTarget
   */
  this.targetElement = null;


  /**
   * X-coordinate of touch start event.
   *
   * @type number
   */
  this.touchStartX = 0;


  /**
   * Y-coordinate of touch start event.
   *
   * @type number
   */
  this.touchStartY = 0;


  /**
   * ID of the last touch, retrieved from Touch.identifier.
   *
   * @type number
   */
  this.lastTouchIdentifier = 0;


  /**
   * The FastClick layer.
   *
   * @type Element
   */
  this.layer = layer;

  if (!layer || !layer.nodeType) {
    throw new TypeError('Layer must be a document node');
  }

  /** @type function() */
  this.onClick = function() { FastClick.prototype.onClick.apply(self, arguments); };

  /** @type function() */
  this.onTouchStart = function() { FastClick.prototype.onTouchStart.apply(self, arguments); };

  /** @type function() */
  this.onTouchMove = function() { FastClick.prototype.onTouchMove.apply(self, arguments); };

  /** @type function() */
  this.onTouchEnd = function() { FastClick.prototype.onTouchEnd.apply(self, arguments); };

  /** @type function() */
  this.onTouchCancel = function() { FastClick.prototype.onTouchCancel.apply(self, arguments); };

  // Devices that don't support touch don't need FastClick
  if (typeof window.ontouchstart === 'undefined') {
    return;
  }

  // Set up event handlers as required
  layer.addEventListener('click', this.onClick, true);
  layer.addEventListener('touchstart', this.onTouchStart, false);
  layer.addEventListener('touchmove', this.onTouchMove, false);
  layer.addEventListener('touchend', this.onTouchEnd, false);
  layer.addEventListener('touchcancel', this.onTouchCancel, false);

  // Hack is required for browsers that don't support Event#stopImmediatePropagation (e.g. Android 2)
  // which is how FastClick normally stops click events bubbling to callbacks registered on the FastClick
  // layer when they are cancelled.
  if (!Event.prototype.stopImmediatePropagation) {
    layer.removeEventListener = function(type, callback, capture) {
      var rmv = Node.prototype.removeEventListener;
      if (type === 'click') {
        rmv.call(layer, type, callback.hijacked || callback, capture);
      } else {
        rmv.call(layer, type, callback, capture);
      }
    };

    layer.addEventListener = function(type, callback, capture) {
      var adv = Node.prototype.addEventListener;
      if (type === 'click') {
        adv.call(layer, type, callback.hijacked || (callback.hijacked = function(event) {
          if (!event.propagationStopped) {
            callback(event);
          }
        }), capture);
      } else {
        adv.call(layer, type, callback, capture);
      }
    };
  }

  // If a handler is already declared in the element's onclick attribute, it will be fired before
  // FastClick's onClick handler. Fix this by pulling out the user-defined handler function and
  // adding it as listener.
  if (typeof layer.onclick === 'function') {

    // Android browser on at least 3.2 requires a new reference to the function in layer.onclick
    // - the old one won't work if passed to addEventListener directly.
    oldOnClick = layer.onclick;
    layer.addEventListener('click', function(event) {
      oldOnClick(event);
    }, false);
    layer.onclick = null;
  }
}


/**
 * Android requires an exception for labels.
 *
 * @type boolean
 */
FastClick.prototype.deviceIsAndroid = navigator.userAgent.indexOf('Android') > 0;


/**
 * iOS requires an exception for alert confirm dialogs.
 *
 * @type boolean
 */
FastClick.prototype.deviceIsIOS = /iP(ad|hone|od)/.test(navigator.userAgent);


/**
 * iOS 4 requires an exception for select elements.
 *
 * @type boolean
 */
FastClick.prototype.deviceIsIOS4 = FastClick.prototype.deviceIsIOS && (/OS 4_\d(_\d)?/).test(navigator.userAgent);


/**
 * Determine whether a given element requires a native click.
 *
 * @param {EventTarget|Element} target Target DOM element
 * @returns {boolean} Returns true if the element needs a native click
 */
FastClick.prototype.needsClick = function(target) {
  'use strict';
  switch (target.nodeName.toLowerCase()) {
  case 'label':
  case 'video':
    return true;
  default:
    return (/\bneedsclick\b/).test(target.className);
  }
};


/**
 * Determine whether a given element requires a call to focus to simulate click into element.
 *
 * @param {EventTarget|Element} target Target DOM element
 * @returns {boolean} Returns true if the element requires a call to focus to simulate native click.
 */
FastClick.prototype.needsFocus = function(target) {
  'use strict';
  switch (target.nodeName.toLowerCase()) {
  case 'textarea':
  case 'select':
    return true;
  case 'input':
    switch (target.type) {
    case 'button':
    case 'checkbox':
    case 'file':
    case 'image':
    case 'radio':
    case 'submit':
      return false;
    }
    return true;
  default:
    return (/\bneedsfocus\b/).test(target.className);
  }
};


/**
 * Send a click event to the specified element.
 *
 * @param {EventTarget|Element} targetElement
 * @param {Event} event
 */
FastClick.prototype.sendClick = function(targetElement, event) {
  'use strict';
  var clickEvent, touch;

  // On some Android devices activeElement needs to be blurred otherwise the synthetic click will have no effect (#24)
  if (document.activeElement && document.activeElement !== targetElement) {
    document.activeElement.blur();
  }

  touch = event.changedTouches[0];

  // Synthesise a click event, with an extra attribute so it can be tracked
  clickEvent = document.createEvent('MouseEvents');
  clickEvent.initMouseEvent('click', true, true, window, 1, touch.screenX, touch.screenY, touch.clientX, touch.clientY, false, false, false, false, 0, null);
  clickEvent.forwardedTouchEvent = true;
  targetElement.dispatchEvent(clickEvent);
};


/**
 * On touch start, record the position and scroll offset.
 *
 * @param {Event} event
 * @returns {boolean}
 */
FastClick.prototype.onTouchStart = function(event) {
  'use strict';
  var touch = event.targetTouches[0];

  this.trackingClick = true;
  this.trackingClickStart = event.timeStamp;
  this.targetElement = event.target;

  this.touchStartX = touch.pageX;
  this.touchStartY = touch.pageY;

  // Prevent phantom clicks on fast double-tap (issue #36)
  if ((event.timeStamp - this.lastClickTime) < 200) {
    event.preventDefault();
  }

  return true;
};


/**
 * Based on a touchmove event object, check whether the touch has moved past a boundary since it started.
 *
 * @param {Event} event
 * @returns {boolean}
 */
FastClick.prototype.touchHasMoved = function(event) {
  'use strict';
  var touch = event.targetTouches[0];

  if (Math.abs(touch.pageX - this.touchStartX) > 10 || Math.abs(touch.pageY - this.touchStartY) > 10) {
    return true;
  }

  return false;
};


/**
 * Update the last position.
 *
 * @param {Event} event
 * @returns {boolean}
 */
FastClick.prototype.onTouchMove = function(event) {
  'use strict';
  if (!this.trackingClick) {
    return true;
  }

  // If the touch has moved, cancel the click tracking
  if (this.targetElement !== event.target || this.touchHasMoved(event)) {
    this.trackingClick = false;
    this.targetElement = null;
  }

  return true;
};


/**
 * Attempt to find the labelled control for the given label element.
 *
 * @param {EventTarget|HTMLLabelElement} labelElement
 * @returns {Element|null}
 */
FastClick.prototype.findControl = function(labelElement) {
  'use strict';

  // Fast path for newer browsers supporting the HTML5 control attribute
  if (labelElement.control !== undefined) {
    return labelElement.control;
  }

  // All browsers under test that support touch events also support the HTML5 htmlFor attribute
  if (labelElement.htmlFor) {
    return document.getElementById(labelElement.htmlFor);
  }

  // If no for attribute exists, attempt to retrieve the first labellable descendant element
  // the list of which is defined here: http://www.w3.org/TR/html5/forms.html#category-label
  return labelElement.querySelector('button, input:not([type=hidden]), keygen, meter, output, progress, select, textarea');
};


/**
 * On touch end, determine whether to send a click event at once.
 *
 * @param {Event} event
 * @returns {boolean}
 */
FastClick.prototype.onTouchEnd = function(event) {
  'use strict';
  var forElement, trackingClickStart, targetElement = this.targetElement, touch = event.changedTouches[0];

  if (!this.trackingClick) {
    return true;
  }

  // Weird things happen on iOS when an alert or confirm dialog is opened from a click event callback (issue #23):
  // when the user next taps anywhere else on the page, new touchstart and touchend events are dispatched
  // with the same identifier as the touch event that previously triggered the click that triggered the alert.
  if (this.deviceIsIOS) {
    if (touch.identifier === this.lastTouchIdentifier) {
      event.preventDefault();
      return false;
    }
  
    this.lastTouchIdentifier = touch.identifier;
  }

  // Prevent phantom clicks on fast double-tap (issue #36)
  if ((event.timeStamp - this.lastClickTime) < 200) {
    this.cancelNextClick = true;
    return true;
  }

  this.lastClickTime = event.timeStamp;

  trackingClickStart = this.trackingClickStart;
  this.trackingClick = false;
  this.trackingClickStart = 0;

  if (targetElement.nodeName.toLowerCase() === 'label') {
    forElement = this.findControl(targetElement);
    if (forElement) {
      targetElement.focus();
      if (this.deviceIsAndroid) {
        return false;
      }

      if (!this.needsClick(forElement)) {
        event.preventDefault();
        this.sendClick(forElement, event);
      }

      return false;
    }
  } else if (this.needsFocus(targetElement)) {

    // If the touch started a while ago (best guess is 100ms based on tests for issue #36) then focus will be triggered anyway. Return early and unset the target element reference so that the subsequent click will be allowed through.
    if ((event.timeStamp - trackingClickStart) > 100) {
      this.targetElement = null;
      return true;
    }

    targetElement.focus();

    // Select elements need the event to go through on iOS 4, otherwise the selector menu won't open.
    if (!this.deviceIsIOS4 || targetElement.tagName.toLowerCase() !== 'select') {
      this.targetElement = null;
      event.preventDefault();
    }

    return false;
  }

  // Prevent the actual click from going though - unless the target node is marked as requiring
  // real clicks or if it is in the whitelist in which case only non-programmatic clicks are permitted.
  if (!this.needsClick(targetElement)) {
    event.preventDefault();
    this.sendClick(targetElement, event);
  }

  return false;
};


/**
 * On touch cancel, stop tracking the click.
 *
 * @returns {void}
 */
FastClick.prototype.onTouchCancel = function() {
  'use strict';
  this.trackingClick = false;
  this.targetElement = null;
};


/**
 * On actual clicks, determine whether this is a touch-generated click, a click action occurring
 * naturally after a delay after a touch (which needs to be cancelled to avoid duplication), or
 * an actual click which should be permitted.
 *
 * @param {Event} event
 * @returns {boolean}
 */
FastClick.prototype.onClick = function(event) {
  'use strict';

  var oldTargetElement;

  // If a target element was never set (because a touch event was never fired) allow the click
  if (!this.targetElement) {
    return true;
  }

  if (event.forwardedTouchEvent) {
    return true;
  }

  oldTargetElement = this.targetElement;
  this.targetElement = null;

  // It's possible for another FastClick-like library delivered with third-party code to fire a click event before FastClick does (issue #44). In that case, set the click-tracking flag back to false and return early. This will cause onTouchEnd to return early.
  if (this.trackingClick) {
    this.trackingClick = false;
    return true;
  }

  // Programmatically generated events targeting a specific element should be permitted
  if (!event.cancelable) {
    return true;
  }

  // Very odd behaviour on iOS (issue #18): if a submit element is present inside a form and the user hits enter in the iOS simulator or clicks the Go button on the pop-up OS keyboard the a kind of 'fake' click event will be triggered with the submit-type input element as the target.
  if (event.target.type === 'submit' && event.detail === 0) {
    return true;
  }

  // Derive and check the target element to see whether the click needs to be permitted;
  // unless explicitly enabled, prevent non-touch click events from triggering actions,
  // to prevent ghost/doubleclicks.
  if (!this.needsClick(oldTargetElement) || this.cancelNextClick) {
    this.cancelNextClick = false;

    // Prevent any user-added listeners declared on FastClick element from being fired.
    if (event.stopImmediatePropagation) {
      event.stopImmediatePropagation();
    } else {

      // Part of the hack for browsers that don't support Event#stopImmediatePropagation (e.g. Android 2)
      event.propagationStopped = true;
    }

    // Cancel the event
    event.stopPropagation();
    event.preventDefault();

    return false;
  }

  // If clicks are permitted, return true for the action to go through.
  return true;
};


/**
 * Remove all FastClick's event listeners.
 *
 * @returns {void}
 */
FastClick.prototype.destroy = function() {
  'use strict';
  var layer = this.layer;

  layer.removeEventListener('click', this.onClick, true);
  layer.removeEventListener('touchstart', this.onTouchStart, false);
  layer.removeEventListener('touchmove', this.onTouchMove, false);
  layer.removeEventListener('touchend', this.onTouchEnd, false);
  layer.removeEventListener('touchcancel', this.onTouchCancel, false);
};


if (typeof define !== 'undefined' && define.amd) {

  // AMD. Register as an anonymous module.
  define(function() {
    'use strict';
    return FastClick;
  });
}

if (typeof module !== 'undefined' && module.exports) {
  module.exports = function(layer) {
    'use strict';
    return new FastClick(layer);
  };

  module.exports.FastClick = FastClick;
};
/*!
 * iScroll v4.2.5 ~ Copyright (c) 2012 Matteo Spinelli, http://cubiq.org
 * Released under MIT license, http://cubiq.org/license
 */
(function(window, doc){
var m = Math,
	dummyStyle = doc.createElement('div').style,
	vendor = (function () {
		var vendors = 't,webkitT,MozT,msT,OT'.split(','),
			t,
			i = 0,
			l = vendors.length;

		for ( ; i < l; i++ ) {
			t = vendors[i] + 'ransform';
			if ( t in dummyStyle ) {
				return vendors[i].substr(0, vendors[i].length - 1);
			}
		}

		return false;
	})(),
	cssVendor = vendor ? '-' + vendor.toLowerCase() + '-' : '',

	// Style properties
	transform = prefixStyle('transform'),
	transitionProperty = prefixStyle('transitionProperty'),
	transitionDuration = prefixStyle('transitionDuration'),
	transformOrigin = prefixStyle('transformOrigin'),
	transitionTimingFunction = prefixStyle('transitionTimingFunction'),
	transitionDelay = prefixStyle('transitionDelay'),

    // Browser capabilities
	isAndroid = (/android/gi).test(navigator.appVersion),
	isIDevice = (/iphone|ipad/gi).test(navigator.appVersion),
	isTouchPad = (/hp-tablet/gi).test(navigator.appVersion),

    has3d = prefixStyle('perspective') in dummyStyle,
    hasTouch = 'ontouchstart' in window && !isTouchPad,
    hasTransform = vendor !== false,
    hasTransitionEnd = prefixStyle('transition') in dummyStyle,

	RESIZE_EV = 'onorientationchange' in window ? 'orientationchange' : 'resize',
	START_EV = hasTouch ? 'touchstart' : 'mousedown',
	MOVE_EV = hasTouch ? 'touchmove' : 'mousemove',
	END_EV = hasTouch ? 'touchend' : 'mouseup',
	CANCEL_EV = hasTouch ? 'touchcancel' : 'mouseup',
	TRNEND_EV = (function () {
		if ( vendor === false ) return false;

		var transitionEnd = {
				''			: 'transitionend',
				'webkit'	: 'webkitTransitionEnd',
				'Moz'		: 'transitionend',
				'O'			: 'otransitionend',
				'ms'		: 'MSTransitionEnd'
			};

		return transitionEnd[vendor];
	})(),

	nextFrame = (function() {
		return window.requestAnimationFrame ||
			window.webkitRequestAnimationFrame ||
			window.mozRequestAnimationFrame ||
			window.oRequestAnimationFrame ||
			window.msRequestAnimationFrame ||
			function(callback) { return setTimeout(callback, 1); };
	})(),
	cancelFrame = (function () {
		return window.cancelRequestAnimationFrame ||
			window.webkitCancelAnimationFrame ||
			window.webkitCancelRequestAnimationFrame ||
			window.mozCancelRequestAnimationFrame ||
			window.oCancelRequestAnimationFrame ||
			window.msCancelRequestAnimationFrame ||
			clearTimeout;
	})(),

	// Helpers
	translateZ = has3d ? ' translateZ(0)' : '',

	// Constructor
	iScroll = function (el, options) {
		var that = this,
			i;

		that.wrapper = typeof el == 'object' ? el : doc.getElementById(el);
		that.wrapper.style.overflow = 'hidden';
		that.scroller = that.wrapper.children[0];

		// Default options
		that.options = {
			hScroll: true,
			vScroll: true,
			x: 0,
			y: 0,
			bounce: true,
			bounceLock: false,
			momentum: true,
			lockDirection: true,
			useTransform: true,
			useTransition: false,
			topOffset: 0,
			checkDOMChanges: false,		// Experimental
			handleClick: true,

			// Scrollbar
			hScrollbar: true,
			vScrollbar: true,
			fixedScrollbar: isAndroid,
			hideScrollbar: isIDevice,
			fadeScrollbar: isIDevice && has3d,
			scrollbarClass: '',

			// Zoom
			zoom: false,
			zoomMin: 1,
			zoomMax: 4,
			doubleTapZoom: 2,
			wheelAction: 'scroll',

			// Snap
			snap: false,
			snapThreshold: 1,

			// Events
			onRefresh: null,
			onBeforeScrollStart: function (e) { e.preventDefault(); },
			onScrollStart: null,
			onBeforeScrollMove: null,
			onScrollMove: null,
			onBeforeScrollEnd: null,
			onScrollEnd: null,
			onTouchEnd: null,
			onDestroy: null,
			onZoomStart: null,
			onZoom: null,
			onZoomEnd: null
		};

		// User defined options
		for (i in options) that.options[i] = options[i];
		
		// Set starting position
		that.x = that.options.x;
		that.y = that.options.y;

		// Normalize options
		that.options.useTransform = hasTransform && that.options.useTransform;
		that.options.hScrollbar = that.options.hScroll && that.options.hScrollbar;
		that.options.vScrollbar = that.options.vScroll && that.options.vScrollbar;
		that.options.zoom = that.options.useTransform && that.options.zoom;
		that.options.useTransition = hasTransitionEnd && that.options.useTransition;

		// Helpers FIX ANDROID BUG!
		// translate3d and scale doesn't work together!
		// Ignoring 3d ONLY WHEN YOU SET that.options.zoom
		if ( that.options.zoom && isAndroid ){
			translateZ = '';
		}
		
		// Set some default styles
		that.scroller.style[transitionProperty] = that.options.useTransform ? cssVendor + 'transform' : 'top left';
		that.scroller.style[transitionDuration] = '0';
		that.scroller.style[transformOrigin] = '0 0';
		if (that.options.useTransition) that.scroller.style[transitionTimingFunction] = 'cubic-bezier(0.33,0.66,0.66,1)';
		
		if (that.options.useTransform) that.scroller.style[transform] = 'translate(' + that.x + 'px,' + that.y + 'px)' + translateZ;
		else that.scroller.style.cssText += ';position:absolute;top:' + that.y + 'px;left:' + that.x + 'px';

		if (that.options.useTransition) that.options.fixedScrollbar = true;

		that.refresh();

		that._bind(RESIZE_EV, window);
		that._bind(START_EV);
		if (!hasTouch) {
			if (that.options.wheelAction != 'none') {
				that._bind('DOMMouseScroll');
				that._bind('mousewheel');
			}
		}

		if (that.options.checkDOMChanges) that.checkDOMTime = setInterval(function () {
			that._checkDOMChanges();
		}, 500);
	};

// Prototype
iScroll.prototype = {
	enabled: true,
	x: 0,
	y: 0,
	steps: [],
	scale: 1,
	currPageX: 0, currPageY: 0,
	pagesX: [], pagesY: [],
	aniTime: null,
	wheelZoomCount: 0,
	
	handleEvent: function (e) {
		var that = this;
		switch(e.type) {
			case START_EV:
				if (!hasTouch && e.button !== 0) return;
				that._start(e);
				break;
			case MOVE_EV: that._move(e); break;
			case END_EV:
			case CANCEL_EV: that._end(e); break;
			case RESIZE_EV: that._resize(); break;
			case 'DOMMouseScroll': case 'mousewheel': that._wheel(e); break;
			case TRNEND_EV: that._transitionEnd(e); break;
		}
	},
	
	_checkDOMChanges: function () {
		if (this.moved || this.zoomed || this.animating ||
			(this.scrollerW == this.scroller.offsetWidth * this.scale && this.scrollerH == this.scroller.offsetHeight * this.scale)) return;

		this.refresh();
	},
	
	_scrollbar: function (dir) {
		var that = this,
			bar;

		if (!that[dir + 'Scrollbar']) {
			if (that[dir + 'ScrollbarWrapper']) {
				if (hasTransform) that[dir + 'ScrollbarIndicator'].style[transform] = '';
				that[dir + 'ScrollbarWrapper'].parentNode.removeChild(that[dir + 'ScrollbarWrapper']);
				that[dir + 'ScrollbarWrapper'] = null;
				that[dir + 'ScrollbarIndicator'] = null;
			}

			return;
		}

		if (!that[dir + 'ScrollbarWrapper']) {
			// Create the scrollbar wrapper
			bar = doc.createElement('div');

			if (that.options.scrollbarClass) bar.className = that.options.scrollbarClass + dir.toUpperCase();
			else bar.style.cssText = 'position:absolute;z-index:100;' + (dir == 'h' ? 'height:7px;bottom:1px;left:2px;right:' + (that.vScrollbar ? '7' : '2') + 'px' : 'width:7px;bottom:' + (that.hScrollbar ? '7' : '2') + 'px;top:2px;right:1px');

			bar.style.cssText += ';pointer-events:none;' + cssVendor + 'transition-property:opacity;' + cssVendor + 'transition-duration:' + (that.options.fadeScrollbar ? '350ms' : '0') + ';overflow:hidden;opacity:' + (that.options.hideScrollbar ? '0' : '1');

			that.wrapper.appendChild(bar);
			that[dir + 'ScrollbarWrapper'] = bar;

			// Create the scrollbar indicator
			bar = doc.createElement('div');
			if (!that.options.scrollbarClass) {
				bar.style.cssText = 'position:absolute;z-index:100;background:rgba(0,0,0,0.5);border:1px solid rgba(255,255,255,0.9);' + cssVendor + 'background-clip:padding-box;' + cssVendor + 'box-sizing:border-box;' + (dir == 'h' ? 'height:100%' : 'width:100%') + ';' + cssVendor + 'border-radius:3px;border-radius:3px';
			}
			bar.style.cssText += ';pointer-events:none;' + cssVendor + 'transition-property:' + cssVendor + 'transform;' + cssVendor + 'transition-timing-function:cubic-bezier(0.33,0.66,0.66,1);' + cssVendor + 'transition-duration:0;' + cssVendor + 'transform: translate(0,0)' + translateZ;
			if (that.options.useTransition) bar.style.cssText += ';' + cssVendor + 'transition-timing-function:cubic-bezier(0.33,0.66,0.66,1)';

			that[dir + 'ScrollbarWrapper'].appendChild(bar);
			that[dir + 'ScrollbarIndicator'] = bar;
		}

		if (dir == 'h') {
			that.hScrollbarSize = that.hScrollbarWrapper.clientWidth;
			that.hScrollbarIndicatorSize = m.max(m.round(that.hScrollbarSize * that.hScrollbarSize / that.scrollerW), 8);
			that.hScrollbarIndicator.style.width = that.hScrollbarIndicatorSize + 'px';
			that.hScrollbarMaxScroll = that.hScrollbarSize - that.hScrollbarIndicatorSize;
			that.hScrollbarProp = that.hScrollbarMaxScroll / that.maxScrollX;
		} else {
			that.vScrollbarSize = that.vScrollbarWrapper.clientHeight;
			that.vScrollbarIndicatorSize = m.max(m.round(that.vScrollbarSize * that.vScrollbarSize / that.scrollerH), 8);
			that.vScrollbarIndicator.style.height = that.vScrollbarIndicatorSize + 'px';
			that.vScrollbarMaxScroll = that.vScrollbarSize - that.vScrollbarIndicatorSize;
			that.vScrollbarProp = that.vScrollbarMaxScroll / that.maxScrollY;
		}

		// Reset position
		that._scrollbarPos(dir, true);
	},
	
	_resize: function () {
		var that = this;
		setTimeout(function () { that.refresh(); }, isAndroid ? 200 : 0);
	},
	
	_pos: function (x, y) {
		if (this.zoomed) return;

		x = this.hScroll ? x : 0;
		y = this.vScroll ? y : 0;

		if (this.options.useTransform) {
			this.scroller.style[transform] = 'translate(' + x + 'px,' + y + 'px) scale(' + this.scale + ')' + translateZ;
		} else {
			x = m.round(x);
			y = m.round(y);
			this.scroller.style.left = x + 'px';
			this.scroller.style.top = y + 'px';
		}

		this.x = x;
		this.y = y;

		this._scrollbarPos('h');
		this._scrollbarPos('v');
	},

	_scrollbarPos: function (dir, hidden) {
		var that = this,
			pos = dir == 'h' ? that.x : that.y,
			size;

		if (!that[dir + 'Scrollbar']) return;

		pos = that[dir + 'ScrollbarProp'] * pos;

		if (pos < 0) {
			if (!that.options.fixedScrollbar) {
				size = that[dir + 'ScrollbarIndicatorSize'] + m.round(pos * 3);
				if (size < 8) size = 8;
				that[dir + 'ScrollbarIndicator'].style[dir == 'h' ? 'width' : 'height'] = size + 'px';
			}
			pos = 0;
		} else if (pos > that[dir + 'ScrollbarMaxScroll']) {
			if (!that.options.fixedScrollbar) {
				size = that[dir + 'ScrollbarIndicatorSize'] - m.round((pos - that[dir + 'ScrollbarMaxScroll']) * 3);
				if (size < 8) size = 8;
				that[dir + 'ScrollbarIndicator'].style[dir == 'h' ? 'width' : 'height'] = size + 'px';
				pos = that[dir + 'ScrollbarMaxScroll'] + (that[dir + 'ScrollbarIndicatorSize'] - size);
			} else {
				pos = that[dir + 'ScrollbarMaxScroll'];
			}
		}

		that[dir + 'ScrollbarWrapper'].style[transitionDelay] = '0';
		that[dir + 'ScrollbarWrapper'].style.opacity = hidden && that.options.hideScrollbar ? '0' : '1';
		that[dir + 'ScrollbarIndicator'].style[transform] = 'translate(' + (dir == 'h' ? pos + 'px,0)' : '0,' + pos + 'px)') + translateZ;
	},
	
	_start: function (e) {
		var that = this,
			point = hasTouch ? e.touches[0] : e,
			matrix, x, y,
			c1, c2;

		if (!that.enabled) return;

		if (that.options.onBeforeScrollStart) that.options.onBeforeScrollStart.call(that, e);

		if (that.options.useTransition || that.options.zoom) that._transitionTime(0);

		that.moved = false;
		that.animating = false;
		that.zoomed = false;
		that.distX = 0;
		that.distY = 0;
		that.absDistX = 0;
		that.absDistY = 0;
		that.dirX = 0;
		that.dirY = 0;

		// Gesture start
		if (that.options.zoom && hasTouch && e.touches.length > 1) {
			c1 = m.abs(e.touches[0].pageX-e.touches[1].pageX);
			c2 = m.abs(e.touches[0].pageY-e.touches[1].pageY);
			that.touchesDistStart = m.sqrt(c1 * c1 + c2 * c2);

			that.originX = m.abs(e.touches[0].pageX + e.touches[1].pageX - that.wrapperOffsetLeft * 2) / 2 - that.x;
			that.originY = m.abs(e.touches[0].pageY + e.touches[1].pageY - that.wrapperOffsetTop * 2) / 2 - that.y;

			if (that.options.onZoomStart) that.options.onZoomStart.call(that, e);
		}

		if (that.options.momentum) {
			if (that.options.useTransform) {
				// Very lame general purpose alternative to CSSMatrix
				matrix = getComputedStyle(that.scroller, null)[transform].replace(/[^0-9\-.,]/g, '').split(',');
				x = +(matrix[12] || matrix[4]);
				y = +(matrix[13] || matrix[5]);
			} else {
				x = +getComputedStyle(that.scroller, null).left.replace(/[^0-9-]/g, '');
				y = +getComputedStyle(that.scroller, null).top.replace(/[^0-9-]/g, '');
			}
			
			if (x != that.x || y != that.y) {
				if (that.options.useTransition) that._unbind(TRNEND_EV);
				else cancelFrame(that.aniTime);
				that.steps = [];
				that._pos(x, y);
				if (that.options.onScrollEnd) that.options.onScrollEnd.call(that);
			}
		}

		that.absStartX = that.x;	// Needed by snap threshold
		that.absStartY = that.y;

		that.startX = that.x;
		that.startY = that.y;
		that.pointX = point.pageX;
		that.pointY = point.pageY;

		that.startTime = e.timeStamp || Date.now();

		if (that.options.onScrollStart) that.options.onScrollStart.call(that, e);

		that._bind(MOVE_EV, window);
		that._bind(END_EV, window);
		that._bind(CANCEL_EV, window);
	},
	
	_move: function (e) {
		var that = this,
			point = hasTouch ? e.touches[0] : e,
			deltaX = point.pageX - that.pointX,
			deltaY = point.pageY - that.pointY,
			newX = that.x + deltaX,
			newY = that.y + deltaY,
			c1, c2, scale,
			timestamp = e.timeStamp || Date.now();

		if (that.options.onBeforeScrollMove) that.options.onBeforeScrollMove.call(that, e);

		// Zoom
		if (that.options.zoom && hasTouch && e.touches.length > 1) {
			c1 = m.abs(e.touches[0].pageX - e.touches[1].pageX);
			c2 = m.abs(e.touches[0].pageY - e.touches[1].pageY);
			that.touchesDist = m.sqrt(c1*c1+c2*c2);

			that.zoomed = true;

			scale = 1 / that.touchesDistStart * that.touchesDist * this.scale;

			if (scale < that.options.zoomMin) scale = 0.5 * that.options.zoomMin * Math.pow(2.0, scale / that.options.zoomMin);
			else if (scale > that.options.zoomMax) scale = 2.0 * that.options.zoomMax * Math.pow(0.5, that.options.zoomMax / scale);

			that.lastScale = scale / this.scale;

			newX = this.originX - this.originX * that.lastScale + this.x,
			newY = this.originY - this.originY * that.lastScale + this.y;

			this.scroller.style[transform] = 'translate(' + newX + 'px,' + newY + 'px) scale(' + scale + ')' + translateZ;

			if (that.options.onZoom) that.options.onZoom.call(that, e);
			return;
		}

		that.pointX = point.pageX;
		that.pointY = point.pageY;

		// Slow down if outside of the boundaries
		if (newX > 0 || newX < that.maxScrollX) {
			newX = that.options.bounce ? that.x + (deltaX / 2) : newX >= 0 || that.maxScrollX >= 0 ? 0 : that.maxScrollX;
		}
		if (newY > that.minScrollY || newY < that.maxScrollY) {
			newY = that.options.bounce ? that.y + (deltaY / 2) : newY >= that.minScrollY || that.maxScrollY >= 0 ? that.minScrollY : that.maxScrollY;
		}

		that.distX += deltaX;
		that.distY += deltaY;
		that.absDistX = m.abs(that.distX);
		that.absDistY = m.abs(that.distY);

		if (that.absDistX < 6 && that.absDistY < 6) {
			return;
		}

		// Lock direction
		if (that.options.lockDirection) {
			if (that.absDistX > that.absDistY + 5) {
				newY = that.y;
				deltaY = 0;
			} else if (that.absDistY > that.absDistX + 5) {
				newX = that.x;
				deltaX = 0;
			}
		}

		that.moved = true;
		that._pos(newX, newY);
		that.dirX = deltaX > 0 ? -1 : deltaX < 0 ? 1 : 0;
		that.dirY = deltaY > 0 ? -1 : deltaY < 0 ? 1 : 0;

		if (timestamp - that.startTime > 300) {
			that.startTime = timestamp;
			that.startX = that.x;
			that.startY = that.y;
		}
		
		if (that.options.onScrollMove) that.options.onScrollMove.call(that, e);
	},
	
	_end: function (e) {
		if (hasTouch && e.touches.length !== 0) return;

		var that = this,
			point = hasTouch ? e.changedTouches[0] : e,
			target, ev,
			momentumX = { dist:0, time:0 },
			momentumY = { dist:0, time:0 },
			duration = (e.timeStamp || Date.now()) - that.startTime,
			newPosX = that.x,
			newPosY = that.y,
			distX, distY,
			newDuration,
			snap,
			scale;

		that._unbind(MOVE_EV, window);
		that._unbind(END_EV, window);
		that._unbind(CANCEL_EV, window);

		if (that.options.onBeforeScrollEnd) that.options.onBeforeScrollEnd.call(that, e);

		if (that.zoomed) {
			scale = that.scale * that.lastScale;
			scale = Math.max(that.options.zoomMin, scale);
			scale = Math.min(that.options.zoomMax, scale);
			that.lastScale = scale / that.scale;
			that.scale = scale;

			that.x = that.originX - that.originX * that.lastScale + that.x;
			that.y = that.originY - that.originY * that.lastScale + that.y;
			
			that.scroller.style[transitionDuration] = '200ms';
			that.scroller.style[transform] = 'translate(' + that.x + 'px,' + that.y + 'px) scale(' + that.scale + ')' + translateZ;
			
			that.zoomed = false;
			that.refresh();

			if (that.options.onZoomEnd) that.options.onZoomEnd.call(that, e);
			return;
		}

		if (!that.moved) {
			if (hasTouch) {
				if (that.doubleTapTimer && that.options.zoom) {
					// Double tapped
					clearTimeout(that.doubleTapTimer);
					that.doubleTapTimer = null;
					if (that.options.onZoomStart) that.options.onZoomStart.call(that, e);
					that.zoom(that.pointX, that.pointY, that.scale == 1 ? that.options.doubleTapZoom : 1);
					if (that.options.onZoomEnd) {
						setTimeout(function() {
							that.options.onZoomEnd.call(that, e);
						}, 200); // 200 is default zoom duration
					}
				} else if (this.options.handleClick) {
					that.doubleTapTimer = setTimeout(function () {
						that.doubleTapTimer = null;

						// Find the last touched element
						target = point.target;
						while (target.nodeType != 1) target = target.parentNode;

						if (target.tagName != 'SELECT' && target.tagName != 'INPUT' && target.tagName != 'TEXTAREA') {
							ev = doc.createEvent('MouseEvents');
							ev.initMouseEvent('click', true, true, e.view, 1,
								point.screenX, point.screenY, point.clientX, point.clientY,
								e.ctrlKey, e.altKey, e.shiftKey, e.metaKey,
								0, null);
							ev._fake = true;
							target.dispatchEvent(ev);
						}
					}, that.options.zoom ? 250 : 0);
				}
			}

			that._resetPos(400);

			if (that.options.onTouchEnd) that.options.onTouchEnd.call(that, e);
			return;
		}

		if (duration < 300 && that.options.momentum) {
			momentumX = newPosX ? that._momentum(newPosX - that.startX, duration, -that.x, that.scrollerW - that.wrapperW + that.x, that.options.bounce ? that.wrapperW : 0) : momentumX;
			momentumY = newPosY ? that._momentum(newPosY - that.startY, duration, -that.y, (that.maxScrollY < 0 ? that.scrollerH - that.wrapperH + that.y - that.minScrollY : 0), that.options.bounce ? that.wrapperH : 0) : momentumY;

			newPosX = that.x + momentumX.dist;
			newPosY = that.y + momentumY.dist;

			if ((that.x > 0 && newPosX > 0) || (that.x < that.maxScrollX && newPosX < that.maxScrollX)) momentumX = { dist:0, time:0 };
			if ((that.y > that.minScrollY && newPosY > that.minScrollY) || (that.y < that.maxScrollY && newPosY < that.maxScrollY)) momentumY = { dist:0, time:0 };
		}

		if (momentumX.dist || momentumY.dist) {
			newDuration = m.max(m.max(momentumX.time, momentumY.time), 10);

			// Do we need to snap?
			if (that.options.snap) {
				distX = newPosX - that.absStartX;
				distY = newPosY - that.absStartY;
				if (m.abs(distX) < that.options.snapThreshold && m.abs(distY) < that.options.snapThreshold) { that.scrollTo(that.absStartX, that.absStartY, 200); }
				else {
					snap = that._snap(newPosX, newPosY);
					newPosX = snap.x;
					newPosY = snap.y;
					newDuration = m.max(snap.time, newDuration);
				}
			}

			that.scrollTo(m.round(newPosX), m.round(newPosY), newDuration);

			if (that.options.onTouchEnd) that.options.onTouchEnd.call(that, e);
			return;
		}

		// Do we need to snap?
		if (that.options.snap) {
			distX = newPosX - that.absStartX;
			distY = newPosY - that.absStartY;
			if (m.abs(distX) < that.options.snapThreshold && m.abs(distY) < that.options.snapThreshold) that.scrollTo(that.absStartX, that.absStartY, 200);
			else {
				snap = that._snap(that.x, that.y);
				if (snap.x != that.x || snap.y != that.y) that.scrollTo(snap.x, snap.y, snap.time);
			}

			if (that.options.onTouchEnd) that.options.onTouchEnd.call(that, e);
			return;
		}

		that._resetPos(200);
		if (that.options.onTouchEnd) that.options.onTouchEnd.call(that, e);
	},
	
	_resetPos: function (time) {
		var that = this,
			resetX = that.x >= 0 ? 0 : that.x < that.maxScrollX ? that.maxScrollX : that.x,
			resetY = that.y >= that.minScrollY || that.maxScrollY > 0 ? that.minScrollY : that.y < that.maxScrollY ? that.maxScrollY : that.y;

		if (resetX == that.x && resetY == that.y) {
			if (that.moved) {
				that.moved = false;
				if (that.options.onScrollEnd) that.options.onScrollEnd.call(that);		// Execute custom code on scroll end
			}

			if (that.hScrollbar && that.options.hideScrollbar) {
				if (vendor == 'webkit') that.hScrollbarWrapper.style[transitionDelay] = '300ms';
				that.hScrollbarWrapper.style.opacity = '0';
			}
			if (that.vScrollbar && that.options.hideScrollbar) {
				if (vendor == 'webkit') that.vScrollbarWrapper.style[transitionDelay] = '300ms';
				that.vScrollbarWrapper.style.opacity = '0';
			}

			return;
		}

		that.scrollTo(resetX, resetY, time || 0);
	},

	_wheel: function (e) {
		var that = this,
			wheelDeltaX, wheelDeltaY,
			deltaX, deltaY,
			deltaScale;

		if ('wheelDeltaX' in e) {
			wheelDeltaX = e.wheelDeltaX / 12;
			wheelDeltaY = e.wheelDeltaY / 12;
		} else if('wheelDelta' in e) {
			wheelDeltaX = wheelDeltaY = e.wheelDelta / 12;
		} else if ('detail' in e) {
			wheelDeltaX = wheelDeltaY = -e.detail * 3;
		} else {
			return;
		}
		
		if (that.options.wheelAction == 'zoom') {
			deltaScale = that.scale * Math.pow(2, 1/3 * (wheelDeltaY ? wheelDeltaY / Math.abs(wheelDeltaY) : 0));
			if (deltaScale < that.options.zoomMin) deltaScale = that.options.zoomMin;
			if (deltaScale > that.options.zoomMax) deltaScale = that.options.zoomMax;
			
			if (deltaScale != that.scale) {
				if (!that.wheelZoomCount && that.options.onZoomStart) that.options.onZoomStart.call(that, e);
				that.wheelZoomCount++;
				
				that.zoom(e.pageX, e.pageY, deltaScale, 400);
				
				setTimeout(function() {
					that.wheelZoomCount--;
					if (!that.wheelZoomCount && that.options.onZoomEnd) that.options.onZoomEnd.call(that, e);
				}, 400);
			}
			
			return;
		}
		
		deltaX = that.x + wheelDeltaX;
		deltaY = that.y + wheelDeltaY;

		if (deltaX > 0) deltaX = 0;
		else if (deltaX < that.maxScrollX) deltaX = that.maxScrollX;

		if (deltaY > that.minScrollY) deltaY = that.minScrollY;
		else if (deltaY < that.maxScrollY) deltaY = that.maxScrollY;
    
		if (that.maxScrollY < 0) {
			that.scrollTo(deltaX, deltaY, 0);
		}
	},
	
	_transitionEnd: function (e) {
		var that = this;

		if (e.target != that.scroller) return;

		that._unbind(TRNEND_EV);
		
		that._startAni();
	},


	/**
	*
	* Utilities
	*
	*/
	_startAni: function () {
		var that = this,
			startX = that.x, startY = that.y,
			startTime = Date.now(),
			step, easeOut,
			animate;

		if (that.animating) return;
		
		if (!that.steps.length) {
			that._resetPos(400);
			return;
		}
		
		step = that.steps.shift();
		
		if (step.x == startX && step.y == startY) step.time = 0;

		that.animating = true;
		that.moved = true;
		
		if (that.options.useTransition) {
			that._transitionTime(step.time);
			that._pos(step.x, step.y);
			that.animating = false;
			if (step.time) that._bind(TRNEND_EV);
			else that._resetPos(0);
			return;
		}

		animate = function () {
			var now = Date.now(),
				newX, newY;

			if (now >= startTime + step.time) {
				that._pos(step.x, step.y);
				that.animating = false;
				if (that.options.onAnimationEnd) that.options.onAnimationEnd.call(that);			// Execute custom code on animation end
				that._startAni();
				return;
			}

			now = (now - startTime) / step.time - 1;
			easeOut = m.sqrt(1 - now * now);
			newX = (step.x - startX) * easeOut + startX;
			newY = (step.y - startY) * easeOut + startY;
			that._pos(newX, newY);
			if (that.animating) that.aniTime = nextFrame(animate);
		};

		animate();
	},

	_transitionTime: function (time) {
		time += 'ms';
		this.scroller.style[transitionDuration] = time;
		if (this.hScrollbar) this.hScrollbarIndicator.style[transitionDuration] = time;
		if (this.vScrollbar) this.vScrollbarIndicator.style[transitionDuration] = time;
	},

	_momentum: function (dist, time, maxDistUpper, maxDistLower, size) {
		var deceleration = 0.0006,
			speed = m.abs(dist) / time,
			newDist = (speed * speed) / (2 * deceleration),
			newTime = 0, outsideDist = 0;

		// Proportinally reduce speed if we are outside of the boundaries
		if (dist > 0 && newDist > maxDistUpper) {
			outsideDist = size / (6 / (newDist / speed * deceleration));
			maxDistUpper = maxDistUpper + outsideDist;
			speed = speed * maxDistUpper / newDist;
			newDist = maxDistUpper;
		} else if (dist < 0 && newDist > maxDistLower) {
			outsideDist = size / (6 / (newDist / speed * deceleration));
			maxDistLower = maxDistLower + outsideDist;
			speed = speed * maxDistLower / newDist;
			newDist = maxDistLower;
		}

		newDist = newDist * (dist < 0 ? -1 : 1);
		newTime = speed / deceleration;

		return { dist: newDist, time: m.round(newTime) };
	},

	_offset: function (el) {
		var left = -el.offsetLeft,
			top = -el.offsetTop;
			
		while (el = el.offsetParent) {
			left -= el.offsetLeft;
			top -= el.offsetTop;
		}
		
		if (el != this.wrapper) {
			left *= this.scale;
			top *= this.scale;
		}

		return { left: left, top: top };
	},

	_snap: function (x, y) {
		var that = this,
			i, l,
			page, time,
			sizeX, sizeY;

		// Check page X
		page = that.pagesX.length - 1;
		for (i=0, l=that.pagesX.length; i<l; i++) {
			if (x >= that.pagesX[i]) {
				page = i;
				break;
			}
		}
		if (page == that.currPageX && page > 0 && that.dirX < 0) page--;
		x = that.pagesX[page];
		sizeX = m.abs(x - that.pagesX[that.currPageX]);
		sizeX = sizeX ? m.abs(that.x - x) / sizeX * 500 : 0;
		that.currPageX = page;

		// Check page Y
		page = that.pagesY.length-1;
		for (i=0; i<page; i++) {
			if (y >= that.pagesY[i]) {
				page = i;
				break;
			}
		}
		if (page == that.currPageY && page > 0 && that.dirY < 0) page--;
		y = that.pagesY[page];
		sizeY = m.abs(y - that.pagesY[that.currPageY]);
		sizeY = sizeY ? m.abs(that.y - y) / sizeY * 500 : 0;
		that.currPageY = page;

		// Snap with constant speed (proportional duration)
		time = m.round(m.max(sizeX, sizeY)) || 200;

		return { x: x, y: y, time: time };
	},

	_bind: function (type, el, bubble) {
		(el || this.scroller).addEventListener(type, this, !!bubble);
	},

	_unbind: function (type, el, bubble) {
		(el || this.scroller).removeEventListener(type, this, !!bubble);
	},


	/**
	*
	* Public methods
	*
	*/
	destroy: function () {
		var that = this;

		that.scroller.style[transform] = '';

		// Remove the scrollbars
		that.hScrollbar = false;
		that.vScrollbar = false;
		that._scrollbar('h');
		that._scrollbar('v');

		// Remove the event listeners
		that._unbind(RESIZE_EV, window);
		that._unbind(START_EV);
		that._unbind(MOVE_EV, window);
		that._unbind(END_EV, window);
		that._unbind(CANCEL_EV, window);
		
		if (!that.options.hasTouch) {
			that._unbind('DOMMouseScroll');
			that._unbind('mousewheel');
		}
		
		if (that.options.useTransition) that._unbind(TRNEND_EV);
		
		if (that.options.checkDOMChanges) clearInterval(that.checkDOMTime);
		
		if (that.options.onDestroy) that.options.onDestroy.call(that);
	},

	refresh: function () {
		var that = this,
			offset,
			i, l,
			els,
			pos = 0,
			page = 0;

		if (that.scale < that.options.zoomMin) that.scale = that.options.zoomMin;
		that.wrapperW = that.wrapper.clientWidth || 1;
		that.wrapperH = that.wrapper.clientHeight || 1;

		that.minScrollY = -that.options.topOffset || 0;
		that.scrollerW = m.round(that.scroller.offsetWidth * that.scale);
		that.scrollerH = m.round((that.scroller.offsetHeight + that.minScrollY) * that.scale);
		that.maxScrollX = that.wrapperW - that.scrollerW;
		that.maxScrollY = that.wrapperH - that.scrollerH + that.minScrollY;
		that.dirX = 0;
		that.dirY = 0;

		if (that.options.onRefresh) that.options.onRefresh.call(that);

		that.hScroll = that.options.hScroll && that.maxScrollX < 0;
		that.vScroll = that.options.vScroll && (!that.options.bounceLock && !that.hScroll || that.scrollerH > that.wrapperH);

		that.hScrollbar = that.hScroll && that.options.hScrollbar;
		that.vScrollbar = that.vScroll && that.options.vScrollbar && that.scrollerH > that.wrapperH;

		offset = that._offset(that.wrapper);
		that.wrapperOffsetLeft = -offset.left;
		that.wrapperOffsetTop = -offset.top;

		// Prepare snap
		if (typeof that.options.snap == 'string') {
			that.pagesX = [];
			that.pagesY = [];
			els = that.scroller.querySelectorAll(that.options.snap);
			for (i=0, l=els.length; i<l; i++) {
				pos = that._offset(els[i]);
				pos.left += that.wrapperOffsetLeft;
				pos.top += that.wrapperOffsetTop;
				that.pagesX[i] = pos.left < that.maxScrollX ? that.maxScrollX : pos.left * that.scale;
				that.pagesY[i] = pos.top < that.maxScrollY ? that.maxScrollY : pos.top * that.scale;
			}
		} else if (that.options.snap) {
			that.pagesX = [];
			while (pos >= that.maxScrollX) {
				that.pagesX[page] = pos;
				pos = pos - that.wrapperW;
				page++;
			}
			if (that.maxScrollX%that.wrapperW) that.pagesX[that.pagesX.length] = that.maxScrollX - that.pagesX[that.pagesX.length-1] + that.pagesX[that.pagesX.length-1];

			pos = 0;
			page = 0;
			that.pagesY = [];
			while (pos >= that.maxScrollY) {
				that.pagesY[page] = pos;
				pos = pos - that.wrapperH;
				page++;
			}
			if (that.maxScrollY%that.wrapperH) that.pagesY[that.pagesY.length] = that.maxScrollY - that.pagesY[that.pagesY.length-1] + that.pagesY[that.pagesY.length-1];
		}

		// Prepare the scrollbars
		that._scrollbar('h');
		that._scrollbar('v');

		if (!that.zoomed) {
			that.scroller.style[transitionDuration] = '0';
			that._resetPos(400);
		}
	},

	scrollTo: function (x, y, time, relative) {
		var that = this,
			step = x,
			i, l;

		that.stop();

		if (!step.length) step = [{ x: x, y: y, time: time, relative: relative }];
		
		for (i=0, l=step.length; i<l; i++) {
			if (step[i].relative) { step[i].x = that.x - step[i].x; step[i].y = that.y - step[i].y; }
			that.steps.push({ x: step[i].x, y: step[i].y, time: step[i].time || 0 });
		}

		that._startAni();
	},

	scrollToElement: function (el, time) {
		var that = this, pos;
		el = el.nodeType ? el : that.scroller.querySelector(el);
		if (!el) return;

		pos = that._offset(el);
		pos.left += that.wrapperOffsetLeft;
		pos.top += that.wrapperOffsetTop;

		pos.left = pos.left > 0 ? 0 : pos.left < that.maxScrollX ? that.maxScrollX : pos.left;
		pos.top = pos.top > that.minScrollY ? that.minScrollY : pos.top < that.maxScrollY ? that.maxScrollY : pos.top;
		time = time === undefined ? m.max(m.abs(pos.left)*2, m.abs(pos.top)*2) : time;

		that.scrollTo(pos.left, pos.top, time);
	},

	scrollToPage: function (pageX, pageY, time) {
		var that = this, x, y;
		
		time = time === undefined ? 400 : time;

		if (that.options.onScrollStart) that.options.onScrollStart.call(that);

		if (that.options.snap) {
			pageX = pageX == 'next' ? that.currPageX+1 : pageX == 'prev' ? that.currPageX-1 : pageX;
			pageY = pageY == 'next' ? that.currPageY+1 : pageY == 'prev' ? that.currPageY-1 : pageY;

			pageX = pageX < 0 ? 0 : pageX > that.pagesX.length-1 ? that.pagesX.length-1 : pageX;
			pageY = pageY < 0 ? 0 : pageY > that.pagesY.length-1 ? that.pagesY.length-1 : pageY;

			that.currPageX = pageX;
			that.currPageY = pageY;
			x = that.pagesX[pageX];
			y = that.pagesY[pageY];
		} else {
			x = -that.wrapperW * pageX;
			y = -that.wrapperH * pageY;
			if (x < that.maxScrollX) x = that.maxScrollX;
			if (y < that.maxScrollY) y = that.maxScrollY;
		}

		that.scrollTo(x, y, time);
	},

	disable: function () {
		this.stop();
		this._resetPos(0);
		this.enabled = false;

		// If disabled after touchstart we make sure that there are no left over events
		this._unbind(MOVE_EV, window);
		this._unbind(END_EV, window);
		this._unbind(CANCEL_EV, window);
	},
	
	enable: function () {
		this.enabled = true;
	},
	
	stop: function () {
		if (this.options.useTransition) this._unbind(TRNEND_EV);
		else cancelFrame(this.aniTime);
		this.steps = [];
		this.moved = false;
		this.animating = false;
	},
	
	zoom: function (x, y, scale, time) {
		var that = this,
			relScale = scale / that.scale;

		if (!that.options.useTransform) return;

		that.zoomed = true;
		time = time === undefined ? 200 : time;
		x = x - that.wrapperOffsetLeft - that.x;
		y = y - that.wrapperOffsetTop - that.y;
		that.x = x - x * relScale + that.x;
		that.y = y - y * relScale + that.y;

		that.scale = scale;
		that.refresh();

		that.x = that.x > 0 ? 0 : that.x < that.maxScrollX ? that.maxScrollX : that.x;
		that.y = that.y > that.minScrollY ? that.minScrollY : that.y < that.maxScrollY ? that.maxScrollY : that.y;

		that.scroller.style[transitionDuration] = time + 'ms';
		that.scroller.style[transform] = 'translate(' + that.x + 'px,' + that.y + 'px) scale(' + scale + ')' + translateZ;
		that.zoomed = false;
	},
	
	isReady: function () {
		return !this.moved && !this.zoomed && !this.animating;
	}
};

function prefixStyle (style) {
	if ( vendor === '' ) return style;

	style = style.charAt(0).toUpperCase() + style.substr(1);
	return vendor + style;
}

dummyStyle = null;	// for the sake of it

if (typeof exports !== 'undefined') exports.iScroll = iScroll;
else window.iScroll = iScroll;

})(window, document);
;
function levenshtein(a, b) {
  if(a.length === 0) return b.length;
  if(b.length === 0) return a.length;

  var matrix = [];

  // increment along the first column of each row
  var i;
  for(i = 0; i <= b.length; i++){
    matrix[i] = [i];
  }

  // increment each column in the first row
  var j;
  for(j = 0; j <= a.length; j++){
    matrix[0][j] = j;
  }

  // Fill in the rest of the matrix
  for(i = 1; i <= b.length; i++){
    for(j = 1; j <= a.length; j++){
      if(b.charAt(i-1) == a.charAt(j-1)){
        matrix[i][j] = matrix[i-1][j-1];
      } else {
        matrix[i][j] = Math.min(matrix[i-1][j-1] + 1, // substitution
                                Math.min(matrix[i][j-1] + 1, // insertion
                                         matrix[i-1][j] + 1)); // deletion
      }
    }
  }

  return matrix[b.length][a.length];
};
/*
CryptoJS v3.1.2
code.google.com/p/crypto-js
(c) 2009-2013 by Jeff Mott. All rights reserved.
code.google.com/p/crypto-js/wiki/License
*/
var CryptoJS=CryptoJS||function(s,p){var m={},l=m.lib={},n=function(){},r=l.Base={extend:function(b){n.prototype=this;var h=new n;b&&h.mixIn(b);h.hasOwnProperty("init")||(h.init=function(){h.$super.init.apply(this,arguments)});h.init.prototype=h;h.$super=this;return h},create:function(){var b=this.extend();b.init.apply(b,arguments);return b},init:function(){},mixIn:function(b){for(var h in b)b.hasOwnProperty(h)&&(this[h]=b[h]);b.hasOwnProperty("toString")&&(this.toString=b.toString)},clone:function(){return this.init.prototype.extend(this)}},
q=l.WordArray=r.extend({init:function(b,h){b=this.words=b||[];this.sigBytes=h!=p?h:4*b.length},toString:function(b){return(b||t).stringify(this)},concat:function(b){var h=this.words,a=b.words,j=this.sigBytes;b=b.sigBytes;this.clamp();if(j%4)for(var g=0;g<b;g++)h[j+g>>>2]|=(a[g>>>2]>>>24-8*(g%4)&255)<<24-8*((j+g)%4);else if(65535<a.length)for(g=0;g<b;g+=4)h[j+g>>>2]=a[g>>>2];else h.push.apply(h,a);this.sigBytes+=b;return this},clamp:function(){var b=this.words,h=this.sigBytes;b[h>>>2]&=4294967295<<
32-8*(h%4);b.length=s.ceil(h/4)},clone:function(){var b=r.clone.call(this);b.words=this.words.slice(0);return b},random:function(b){for(var h=[],a=0;a<b;a+=4)h.push(4294967296*s.random()|0);return new q.init(h,b)}}),v=m.enc={},t=v.Hex={stringify:function(b){var a=b.words;b=b.sigBytes;for(var g=[],j=0;j<b;j++){var k=a[j>>>2]>>>24-8*(j%4)&255;g.push((k>>>4).toString(16));g.push((k&15).toString(16))}return g.join("")},parse:function(b){for(var a=b.length,g=[],j=0;j<a;j+=2)g[j>>>3]|=parseInt(b.substr(j,
2),16)<<24-4*(j%8);return new q.init(g,a/2)}},a=v.Latin1={stringify:function(b){var a=b.words;b=b.sigBytes;for(var g=[],j=0;j<b;j++)g.push(String.fromCharCode(a[j>>>2]>>>24-8*(j%4)&255));return g.join("")},parse:function(b){for(var a=b.length,g=[],j=0;j<a;j++)g[j>>>2]|=(b.charCodeAt(j)&255)<<24-8*(j%4);return new q.init(g,a)}},u=v.Utf8={stringify:function(b){try{return decodeURIComponent(escape(a.stringify(b)))}catch(g){throw Error("Malformed UTF-8 data");}},parse:function(b){return a.parse(unescape(encodeURIComponent(b)))}},
g=l.BufferedBlockAlgorithm=r.extend({reset:function(){this._data=new q.init;this._nDataBytes=0},_append:function(b){"string"==typeof b&&(b=u.parse(b));this._data.concat(b);this._nDataBytes+=b.sigBytes},_process:function(b){var a=this._data,g=a.words,j=a.sigBytes,k=this.blockSize,m=j/(4*k),m=b?s.ceil(m):s.max((m|0)-this._minBufferSize,0);b=m*k;j=s.min(4*b,j);if(b){for(var l=0;l<b;l+=k)this._doProcessBlock(g,l);l=g.splice(0,b);a.sigBytes-=j}return new q.init(l,j)},clone:function(){var b=r.clone.call(this);
b._data=this._data.clone();return b},_minBufferSize:0});l.Hasher=g.extend({cfg:r.extend(),init:function(b){this.cfg=this.cfg.extend(b);this.reset()},reset:function(){g.reset.call(this);this._doReset()},update:function(b){this._append(b);this._process();return this},finalize:function(b){b&&this._append(b);return this._doFinalize()},blockSize:16,_createHelper:function(b){return function(a,g){return(new b.init(g)).finalize(a)}},_createHmacHelper:function(b){return function(a,g){return(new k.HMAC.init(b,
g)).finalize(a)}}});var k=m.algo={};return m}(Math);
(function(s){function p(a,k,b,h,l,j,m){a=a+(k&b|~k&h)+l+m;return(a<<j|a>>>32-j)+k}function m(a,k,b,h,l,j,m){a=a+(k&h|b&~h)+l+m;return(a<<j|a>>>32-j)+k}function l(a,k,b,h,l,j,m){a=a+(k^b^h)+l+m;return(a<<j|a>>>32-j)+k}function n(a,k,b,h,l,j,m){a=a+(b^(k|~h))+l+m;return(a<<j|a>>>32-j)+k}for(var r=CryptoJS,q=r.lib,v=q.WordArray,t=q.Hasher,q=r.algo,a=[],u=0;64>u;u++)a[u]=4294967296*s.abs(s.sin(u+1))|0;q=q.MD5=t.extend({_doReset:function(){this._hash=new v.init([1732584193,4023233417,2562383102,271733878])},
_doProcessBlock:function(g,k){for(var b=0;16>b;b++){var h=k+b,w=g[h];g[h]=(w<<8|w>>>24)&16711935|(w<<24|w>>>8)&4278255360}var b=this._hash.words,h=g[k+0],w=g[k+1],j=g[k+2],q=g[k+3],r=g[k+4],s=g[k+5],t=g[k+6],u=g[k+7],v=g[k+8],x=g[k+9],y=g[k+10],z=g[k+11],A=g[k+12],B=g[k+13],C=g[k+14],D=g[k+15],c=b[0],d=b[1],e=b[2],f=b[3],c=p(c,d,e,f,h,7,a[0]),f=p(f,c,d,e,w,12,a[1]),e=p(e,f,c,d,j,17,a[2]),d=p(d,e,f,c,q,22,a[3]),c=p(c,d,e,f,r,7,a[4]),f=p(f,c,d,e,s,12,a[5]),e=p(e,f,c,d,t,17,a[6]),d=p(d,e,f,c,u,22,a[7]),
c=p(c,d,e,f,v,7,a[8]),f=p(f,c,d,e,x,12,a[9]),e=p(e,f,c,d,y,17,a[10]),d=p(d,e,f,c,z,22,a[11]),c=p(c,d,e,f,A,7,a[12]),f=p(f,c,d,e,B,12,a[13]),e=p(e,f,c,d,C,17,a[14]),d=p(d,e,f,c,D,22,a[15]),c=m(c,d,e,f,w,5,a[16]),f=m(f,c,d,e,t,9,a[17]),e=m(e,f,c,d,z,14,a[18]),d=m(d,e,f,c,h,20,a[19]),c=m(c,d,e,f,s,5,a[20]),f=m(f,c,d,e,y,9,a[21]),e=m(e,f,c,d,D,14,a[22]),d=m(d,e,f,c,r,20,a[23]),c=m(c,d,e,f,x,5,a[24]),f=m(f,c,d,e,C,9,a[25]),e=m(e,f,c,d,q,14,a[26]),d=m(d,e,f,c,v,20,a[27]),c=m(c,d,e,f,B,5,a[28]),f=m(f,c,
d,e,j,9,a[29]),e=m(e,f,c,d,u,14,a[30]),d=m(d,e,f,c,A,20,a[31]),c=l(c,d,e,f,s,4,a[32]),f=l(f,c,d,e,v,11,a[33]),e=l(e,f,c,d,z,16,a[34]),d=l(d,e,f,c,C,23,a[35]),c=l(c,d,e,f,w,4,a[36]),f=l(f,c,d,e,r,11,a[37]),e=l(e,f,c,d,u,16,a[38]),d=l(d,e,f,c,y,23,a[39]),c=l(c,d,e,f,B,4,a[40]),f=l(f,c,d,e,h,11,a[41]),e=l(e,f,c,d,q,16,a[42]),d=l(d,e,f,c,t,23,a[43]),c=l(c,d,e,f,x,4,a[44]),f=l(f,c,d,e,A,11,a[45]),e=l(e,f,c,d,D,16,a[46]),d=l(d,e,f,c,j,23,a[47]),c=n(c,d,e,f,h,6,a[48]),f=n(f,c,d,e,u,10,a[49]),e=n(e,f,c,d,
C,15,a[50]),d=n(d,e,f,c,s,21,a[51]),c=n(c,d,e,f,A,6,a[52]),f=n(f,c,d,e,q,10,a[53]),e=n(e,f,c,d,y,15,a[54]),d=n(d,e,f,c,w,21,a[55]),c=n(c,d,e,f,v,6,a[56]),f=n(f,c,d,e,D,10,a[57]),e=n(e,f,c,d,t,15,a[58]),d=n(d,e,f,c,B,21,a[59]),c=n(c,d,e,f,r,6,a[60]),f=n(f,c,d,e,z,10,a[61]),e=n(e,f,c,d,j,15,a[62]),d=n(d,e,f,c,x,21,a[63]);b[0]=b[0]+c|0;b[1]=b[1]+d|0;b[2]=b[2]+e|0;b[3]=b[3]+f|0},_doFinalize:function(){var a=this._data,k=a.words,b=8*this._nDataBytes,h=8*a.sigBytes;k[h>>>5]|=128<<24-h%32;var l=s.floor(b/
4294967296);k[(h+64>>>9<<4)+15]=(l<<8|l>>>24)&16711935|(l<<24|l>>>8)&4278255360;k[(h+64>>>9<<4)+14]=(b<<8|b>>>24)&16711935|(b<<24|b>>>8)&4278255360;a.sigBytes=4*(k.length+1);this._process();a=this._hash;k=a.words;for(b=0;4>b;b++)h=k[b],k[b]=(h<<8|h>>>24)&16711935|(h<<24|h>>>8)&4278255360;return a},clone:function(){var a=t.clone.call(this);a._hash=this._hash.clone();return a}});r.MD5=t._createHelper(q);r.HmacMD5=t._createHmacHelper(q)})(Math);
;
(function() {
  var $, Morris, minutesSpecHelper, secondsSpecHelper,
    __slice = [].slice,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  Morris = window.Morris = {};

  // $ = jQuery;

  Morris.EventEmitter = (function() {

    function EventEmitter() {}

    EventEmitter.prototype.on = function(name, handler) {
      if (this.handlers == null) {
        this.handlers = {};
      }
      if (this.handlers[name] == null) {
        this.handlers[name] = [];
      }
      return this.handlers[name].push(handler);
    };

    EventEmitter.prototype.fire = function() {
      var args, handler, name, _i, _len, _ref, _results;
      name = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];
      if ((this.handlers != null) && (this.handlers[name] != null)) {
        _ref = this.handlers[name];
        _results = [];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          handler = _ref[_i];
          _results.push(handler.apply(null, args));
        }
        return _results;
      }
    };

    return EventEmitter;

  })();

  Morris.commas = function(num) {
    var absnum, intnum, ret, strabsnum;
    if (num != null) {
      ret = num < 0 ? "-" : "";
      absnum = Math.abs(num);
      intnum = Math.floor(absnum).toFixed(0);
      ret += intnum.replace(/(?=(?:\d{3})+$)(?!^)/g, ',');
      strabsnum = absnum.toString();
      if (strabsnum.length > intnum.length) {
        ret += strabsnum.slice(intnum.length);
      }
      return ret;
    } else {
      return '-';
    }
  };

  Morris.pad2 = function(number) {
    return (number < 10 ? '0' : '') + number;
  };

  Morris.Grid = (function(_super) {

    __extends(Grid, _super);

    function Grid(options) {
      var _this = this;
      if (typeof options.element === 'string') {
        this.el = $(document.getElementById(options.element));
      } else {
        this.el = $(options.element);
      }
      if (!(this.el != null) || this.el.length === 0) {
        throw new Error("Graph container element not found");
      }
      if (this.el.css('position') === 'static') {
        this.el.css('position', 'relative');
      }
      this.options = $.extend({}, this.gridDefaults, this.defaults || {}, options);
      if (this.options.data === void 0 || this.options.data.length === 0) {
        return;
      }
      if (typeof this.options.units === 'string') {
        this.options.postUnits = options.units;
      }
      this.r = new Raphael(this.el[0]);
      this.elementWidth = null;
      this.elementHeight = null;
      this.dirty = false;
      if (this.init) {
        this.init();
      }
      this.setData(this.options.data);
      this.el.bind('mousemove', function(evt) {
        var offset;
        offset = _this.el.offset();
        return _this.fire('hovermove', evt.pageX - offset.left, evt.pageY - offset.top);
      });
      this.el.bind('mouseout', function(evt) {
        return _this.fire('hoverout');
      });
      this.el.bind('touchstart touchmove touchend', function(evt) {
        var offset, touch;
        touch = evt.originalEvent.touches[0] || evt.originalEvent.changedTouches[0];
        offset = _this.el.offset();
        _this.fire('hover', touch.pageX - offset.left, touch.pageY - offset.top);
        return touch;
      });
      if (this.postInit) {
        this.postInit();
      }
    }

    Grid.prototype.gridDefaults = {
      dateFormat: null,
      axes: true,
      grid: true,
      gridLineColor: '#aaa',
      gridStrokeWidth: 0.5,
      gridTextColor: '#888',
      gridTextSize: 12,
      hideHover: false,
      yLabelFormat: null,
      numLines: 5,
      padding: 25,
      parseTime: true,
      postUnits: '',
      preUnits: '',
      ymax: 'auto',
      ymin: 'auto 0',
      goals: [],
      goalStrokeWidth: 1.0,
      goalLineColors: ['#666633', '#999966', '#cc6666', '#663333'],
      events: [],
      eventStrokeWidth: 1.0,
      eventLineColors: ['#005a04', '#ccffbb', '#3a5f0b', '#005502']
    };

    Grid.prototype.setData = function(data, redraw) {
      var e, idx, index, maxGoal, minGoal, ret, row, total, ykey, ymax, ymin, yval;
      if (redraw == null) {
        redraw = true;
      }
      ymax = this.cumulative ? 0 : null;
      ymin = this.cumulative ? 0 : null;
      if (this.options.goals.length > 0) {
        minGoal = Math.min.apply(null, this.options.goals);
        maxGoal = Math.max.apply(null, this.options.goals);
        ymin = ymin != null ? Math.min(ymin, minGoal) : minGoal;
        ymax = ymax != null ? Math.max(ymax, maxGoal) : maxGoal;
      }
      this.data = (function() {
        var _i, _len, _results;
        _results = [];
        for (index = _i = 0, _len = data.length; _i < _len; index = ++_i) {
          row = data[index];
          ret = {};
          ret.label = row[this.options.xkey];
          if (this.options.parseTime) {
            ret.x = Morris.parseDate(ret.label);
            if (this.options.dateFormat) {
              ret.label = this.options.dateFormat(ret.x);
            } else if (typeof ret.label === 'number') {
              ret.label = new Date(ret.label).toString();
            }
          } else {
            ret.x = index;
          }
          total = 0;
          ret.y = (function() {
            var _j, _len1, _ref, _results1;
            _ref = this.options.ykeys;
            _results1 = [];
            for (idx = _j = 0, _len1 = _ref.length; _j < _len1; idx = ++_j) {
              ykey = _ref[idx];
              yval = row[ykey];
              if (typeof yval === 'string') {
                yval = parseFloat(yval);
              }
              if ((yval != null) && typeof yval !== 'number') {
                yval = null;
              }
              if (yval != null) {
                if (this.cumulative) {
                  total += yval;
                } else {
                  if (ymax != null) {
                    ymax = Math.max(yval, ymax);
                    ymin = Math.min(yval, ymin);
                  } else {
                    ymax = ymin = yval;
                  }
                }
              }
              if (this.cumulative && (total != null)) {
                ymax = Math.max(total, ymax);
                ymin = Math.min(total, ymin);
              }
              _results1.push(yval);
            }
            return _results1;
          }).call(this);
          _results.push(ret);
        }
        return _results;
      }).call(this);
      if (this.options.parseTime) {
        this.data = this.data.sort(function(a, b) {
          return (a.x > b.x) - (b.x > a.x);
        });
      }
      this.xmin = this.data[0].x;
      this.xmax = this.data[this.data.length - 1].x;
      this.events = [];
      if (this.options.parseTime && this.options.events.length > 0) {
        this.events = (function() {
          var _i, _len, _ref, _results;
          _ref = this.options.events;
          _results = [];
          for (_i = 0, _len = _ref.length; _i < _len; _i++) {
            e = _ref[_i];
            _results.push(Morris.parseDate(e));
          }
          return _results;
        }).call(this);
        this.xmax = Math.max(this.xmax, Math.max.apply(null, this.events));
        this.xmin = Math.min(this.xmin, Math.min.apply(null, this.events));
      }
      if (this.xmin === this.xmax) {
        this.xmin -= 1;
        this.xmax += 1;
      }
      if (typeof this.options.ymax === 'string') {
        if (this.options.ymax.slice(0, 4) === 'auto') {
          if (this.options.ymax.length > 5) {
            this.ymax = parseInt(this.options.ymax.slice(5), 10);
            if (ymax != null) {
              this.ymax = Math.max(ymax, this.ymax);
            }
          } else {
            this.ymax = ymax != null ? ymax : 0;
          }
        } else {
          this.ymax = parseInt(this.options.ymax, 10);
        }
      } else {
        this.ymax = this.options.ymax;
      }
      if (typeof this.options.ymin === 'string') {
        if (this.options.ymin.slice(0, 4) === 'auto') {
          if (this.options.ymin.length > 5) {
            this.ymin = parseInt(this.options.ymin.slice(5), 10);
            if (ymin != null) {
              this.ymin = Math.min(ymin, this.ymin);
            }
          } else {
            this.ymin = ymin !== null ? ymin : 0;
          }
        } else {
          this.ymin = parseInt(this.options.ymin, 10);
        }
      } else {
        this.ymin = this.options.ymin;
      }
      if (this.ymin === this.ymax) {
        if (ymin) {
          this.ymin -= 1;
        }
        this.ymax += 1;
      }
      this.yInterval = (this.ymax - this.ymin) / (this.options.numLines - 1);
      if (this.yInterval > 0 && this.yInterval < 1) {
        this.precision = -Math.floor(Math.log(this.yInterval) / Math.log(10));
      } else {
        this.precision = 0;
      }
      this.dirty = true;
      if (redraw) {
        return this.redraw();
      }
    };

    Grid.prototype._calc = function() {
      var h, maxYLabelWidth, w;
      w = this.el.width();
      h = this.el.height();
      if (this.elementWidth !== w || this.elementHeight !== h || this.dirty) {
        this.elementWidth = w;
        this.elementHeight = h;
        this.dirty = false;
        this.left = this.options.padding;
        this.right = this.elementWidth - this.options.padding;
        this.top = this.options.padding;
        this.bottom = this.elementHeight - this.options.padding;
        if (this.options.axes) {
          maxYLabelWidth = Math.max(this.measureText(this.yAxisFormat(this.ymin), this.options.gridTextSize).width, this.measureText(this.yAxisFormat(this.ymax), this.options.gridTextSize).width);
          this.left += maxYLabelWidth;
          this.bottom -= 1.5 * this.options.gridTextSize;
        }
        this.width = this.right - this.left;
        this.height = this.bottom - this.top;
        this.dx = this.width / (this.xmax - this.xmin);
        this.dy = this.height / (this.ymax - this.ymin);
        if (this.calc) {
          return this.calc();
        }
      }
    };

    Grid.prototype.transY = function(y) {
      return this.bottom - (y - this.ymin) * this.dy;
    };

    Grid.prototype.transX = function(x) {
      if (this.data.length === 1) {
        return (this.left + this.right) / 2;
      } else {
        return this.left + (x - this.xmin) * this.dx;
      }
    };

    Grid.prototype.redraw = function() {
      this.r.clear();
      this._calc();
      this.drawGrid();
      this.drawGoals();
      this.drawEvents();
      if (this.draw) {
        return this.draw();
      }
    };

    Grid.prototype.drawGoals = function() {
      var goal, i, _i, _len, _ref, _results;
      _ref = this.options.goals;
      _results = [];
      for (i = _i = 0, _len = _ref.length; _i < _len; i = ++_i) {
        goal = _ref[i];
        _results.push(this.r.path("M" + this.left + "," + (this.transY(goal)) + "H" + (this.left + this.width)).attr('stroke', this.options.goalLineColors[i % this.options.goalLineColors.length]).attr('stroke-width', this.options.goalStrokeWidth));
      }
      return _results;
    };

    Grid.prototype.drawEvents = function() {
      var event, i, _i, _len, _ref, _results;
      _ref = this.events;
      _results = [];
      for (i = _i = 0, _len = _ref.length; _i < _len; i = ++_i) {
        event = _ref[i];
        _results.push(this.r.path("M" + (this.transX(event)) + "," + this.bottom + "V" + this.top).attr('stroke', this.options.eventLineColors[i % this.options.eventLineColors.length]).attr('stroke-width', this.options.eventStrokeWidth));
      }
      return _results;
    };

    Grid.prototype.drawGrid = function() {
      var firstY, lastY, lineY, v, y, _i, _ref, _results;
      if (this.options.grid === false && this.options.axes === false) {
        return;
      }
      firstY = this.ymin;
      lastY = this.ymax;
      _results = [];
      for (lineY = _i = firstY, _ref = this.yInterval; firstY <= lastY ? _i <= lastY : _i >= lastY; lineY = _i += _ref) {
        v = parseFloat(lineY.toFixed(this.precision));
        y = this.transY(v);
        if (this.options.axes) {
          this.r.text(this.left - this.options.padding / 2, y, this.yAxisFormat(v)).attr('font-size', this.options.gridTextSize).attr('fill', this.options.gridTextColor).attr('text-anchor', 'end');
        }
        if (this.options.grid) {
          _results.push(this.r.path("M" + this.left + "," + y + "H" + (this.left + this.width)).attr('stroke', this.options.gridLineColor).attr('stroke-width', this.options.gridStrokeWidth));
        } else {
          _results.push(void 0);
        }
      }
      return _results;
    };

    Grid.prototype.measureText = function(text, fontSize) {
      var ret, tt;
      if (fontSize == null) {
        fontSize = 12;
      }
      tt = this.r.text(100, 100, text).attr('font-size', fontSize);
      ret = tt.getBBox();
      tt.remove();
      return ret;
    };

    Grid.prototype.yAxisFormat = function(label) {
      return this.yLabelFormat(label);
    };

    Grid.prototype.yLabelFormat = function(label) {
      if (typeof this.options.yLabelFormat === 'function') {
        return this.options.yLabelFormat(label);
      } else {
        return "" + this.options.preUnits + (Morris.commas(label)) + this.options.postUnits;
      }
    };

    Grid.prototype.updateHover = function(x, y) {
      var hit, _ref;
      hit = this.hitTest(x, y);
      if (hit != null) {
        return (_ref = this.hover).update.apply(_ref, hit);
      }
    };

    return Grid;

  })(Morris.EventEmitter);

  Morris.parseDate = function(date) {
    var isecs, m, msecs, n, o, offsetmins, p, q, r, ret, secs;
    if (typeof date === 'number') {
      return date;
    }
    m = date.match(/^(\d+) Q(\d)$/);
    n = date.match(/^(\d+)-(\d+)$/);
    o = date.match(/^(\d+)-(\d+)-(\d+)$/);
    p = date.match(/^(\d+) W(\d+)$/);
    q = date.match(/^(\d+)-(\d+)-(\d+)[ T](\d+):(\d+)(Z|([+-])(\d\d):?(\d\d))?$/);
    r = date.match(/^(\d+)-(\d+)-(\d+)[ T](\d+):(\d+):(\d+(\.\d+)?)(Z|([+-])(\d\d):?(\d\d))?$/);
    if (m) {
      return new Date(parseInt(m[1], 10), parseInt(m[2], 10) * 3 - 1, 1).getTime();
    } else if (n) {
      return new Date(parseInt(n[1], 10), parseInt(n[2], 10) - 1, 1).getTime();
    } else if (o) {
      return new Date(parseInt(o[1], 10), parseInt(o[2], 10) - 1, parseInt(o[3], 10)).getTime();
    } else if (p) {
      ret = new Date(parseInt(p[1], 10), 0, 1);
      if (ret.getDay() !== 4) {
        ret.setMonth(0, 1 + ((4 - ret.getDay()) + 7) % 7);
      }
      return ret.getTime() + parseInt(p[2], 10) * 604800000;
    } else if (q) {
      if (!q[6]) {
        return new Date(parseInt(q[1], 10), parseInt(q[2], 10) - 1, parseInt(q[3], 10), parseInt(q[4], 10), parseInt(q[5], 10)).getTime();
      } else {
        offsetmins = 0;
        if (q[6] !== 'Z') {
          offsetmins = parseInt(q[8], 10) * 60 + parseInt(q[9], 10);
          if (q[7] === '+') {
            offsetmins = 0 - offsetmins;
          }
        }
        return Date.UTC(parseInt(q[1], 10), parseInt(q[2], 10) - 1, parseInt(q[3], 10), parseInt(q[4], 10), parseInt(q[5], 10) + offsetmins);
      }
    } else if (r) {
      secs = parseFloat(r[6]);
      isecs = Math.floor(secs);
      msecs = Math.round((secs - isecs) * 1000);
      if (!r[8]) {
        return new Date(parseInt(r[1], 10), parseInt(r[2], 10) - 1, parseInt(r[3], 10), parseInt(r[4], 10), parseInt(r[5], 10), isecs, msecs).getTime();
      } else {
        offsetmins = 0;
        if (r[8] !== 'Z') {
          offsetmins = parseInt(r[10], 10) * 60 + parseInt(r[11], 10);
          if (r[9] === '+') {
            offsetmins = 0 - offsetmins;
          }
        }
        return Date.UTC(parseInt(r[1], 10), parseInt(r[2], 10) - 1, parseInt(r[3], 10), parseInt(r[4], 10), parseInt(r[5], 10) + offsetmins, isecs, msecs);
      }
    } else {
      return new Date(parseInt(date, 10), 0, 1).getTime();
    }
  };

  Morris.Hover = (function() {

    Hover.defaults = {
      "class": 'morris-hover morris-default-style'
    };

    function Hover(options) {
      if (options == null) {
        options = {};
      }
      this.options = $.extend({}, Morris.Hover.defaults, options);
      this.el = $("<div class='" + this.options["class"] + "'></div>");
      this.el.hide();
      this.options.parent.append(this.el);
    }

    Hover.prototype.update = function(html, x, y) {
      this.html(html);
      this.show();
      return this.moveTo(x, y);
    };

    Hover.prototype.html = function(content) {
      return this.el.html(content);
    };

    Hover.prototype.moveTo = function(x, y) {
      var hoverHeight, hoverWidth, left, parentHeight, parentWidth, top;
      parentWidth = this.options.parent.innerWidth();
      parentHeight = this.options.parent.innerHeight();
      hoverWidth = this.el.outerWidth();
      hoverHeight = this.el.outerHeight();
      left = Math.min(Math.max(0, x - hoverWidth / 2), parentWidth - hoverWidth);
      if (y != null) {
        top = y - hoverHeight - 10;
        if (top < 0) {
          top = y + 10;
          if (top + hoverHeight > parentHeight) {
            top = parentHeight / 2 - hoverHeight / 2;
          }
        }
      } else {
        top = parentHeight / 2 - hoverHeight / 2;
      }
      return this.el.css({
        left: left + "px",
        top: top + "px"
      });
    };

    Hover.prototype.show = function() {
      return this.el.show();
    };

    Hover.prototype.hide = function() {
      return this.el.hide();
    };

    return Hover;

  })();

  Morris.Line = (function(_super) {

    __extends(Line, _super);

    function Line(options) {
      this.hilight = __bind(this.hilight, this);

      this.onHoverOut = __bind(this.onHoverOut, this);

      this.onHoverMove = __bind(this.onHoverMove, this);
      if (!(this instanceof Morris.Line)) {
        return new Morris.Line(options);
      }
      Line.__super__.constructor.call(this, options);
    }

    Line.prototype.init = function() {
      this.pointGrow = Raphael.animation({
        r: this.options.pointSize + 3
      }, 25, 'linear');
      this.pointShrink = Raphael.animation({
        r: this.options.pointSize
      }, 25, 'linear');
      if (this.options.hideHover !== 'always') {
        this.hover = new Morris.Hover({
          parent: this.el
        });
        this.on('hovermove', this.onHoverMove);
        return this.on('hoverout', this.onHoverOut);
      }
    };

    Line.prototype.defaults = {
      lineWidth: 3,
      pointSize: 4,
      lineColors: ['#0b62a4', '#7A92A3', '#4da74d', '#afd8f8', '#edc240', '#cb4b4b', '#9440ed'],
      pointWidths: [1],
      pointStrokeColors: ['#ffffff'],
      pointFillColors: [],
      smooth: true,
      xLabels: 'auto',
      xLabelFormat: null,
      xLabelMargin: 50,
      continuousLine: true,
      hideHover: false
    };

    Line.prototype.calc = function() {
      this.calcPoints();
      return this.generatePaths();
    };

    Line.prototype.calcPoints = function() {
      var row, y, _i, _len, _ref, _results;
      _ref = this.data;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        row = _ref[_i];
        row._x = this.transX(row.x);
        row._y = (function() {
          var _j, _len1, _ref1, _results1;
          _ref1 = row.y;
          _results1 = [];
          for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
            y = _ref1[_j];
            if (y != null) {
              _results1.push(this.transY(y));
            } else {
              _results1.push(y);
            }
          }
          return _results1;
        }).call(this);
        _results.push(row._ymax = Math.min.apply(null, [this.bottom].concat((function() {
          var _j, _len1, _ref1, _results1;
          _ref1 = row._y;
          _results1 = [];
          for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
            y = _ref1[_j];
            if (y != null) {
              _results1.push(y);
            }
          }
          return _results1;
        })())));
      }
      return _results;
    };

    Line.prototype.hitTest = function(x, y) {
      var index, r, _i, _len, _ref;
      _ref = this.data.slice(1);
      for (index = _i = 0, _len = _ref.length; _i < _len; index = ++_i) {
        r = _ref[index];
        if (x < (r._x + this.data[index]._x) / 2) {
          break;
        }
      }
      return index;
    };

    Line.prototype.onHoverMove = function(x, y) {
      var index;
      index = this.hitTest(x, y);
      return this.displayHoverForRow(index);
    };

    Line.prototype.onHoverOut = function() {
      if (this.options.hideHover === 'auto') {
        return this.displayHoverForIndex(null);
      }
    };

    Line.prototype.displayHoverForRow = function(index) {
      var _ref;
      if (index != null) {
        (_ref = this.hover).update.apply(_ref, this.hoverContentForRow(index));
        return this.hilight(index);
      } else {
        this.hover.hide();
        return this.hilight();
      }
    };

    Line.prototype.hoverContentForRow = function(index) {
      var content, j, row, y, _i, _len, _ref;
      row = this.data[index];
      if (typeof this.options.hoverCallback === 'function') {
        content = this.options.hoverCallback(index, this.options);
      } else {
        content = "<div class='morris-hover-row-label'>" + row.label + "</div>";
        _ref = row.y;
        for (j = _i = 0, _len = _ref.length; _i < _len; j = ++_i) {
          y = _ref[j];
          content += "<div class='morris-hover-point' style='color: " + (this.colorFor(row, j, 'label')) + "'>\n  " + this.options.labels[j] + ":\n  " + (this.yLabelFormat(y)) + "\n</div>";
        }
      }
      return [content, row._x, row._ymax];
    };

    Line.prototype.generatePaths = function() {
      var c, coords, i, r, smooth;
      return this.paths = (function() {
        var _i, _ref, _ref1, _results;
        _results = [];
        for (i = _i = 0, _ref = this.options.ykeys.length; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {
          smooth = this.options.smooth === true || (_ref1 = this.options.ykeys[i], __indexOf.call(this.options.smooth, _ref1) >= 0);
          coords = (function() {
            var _j, _len, _ref2, _results1;
            _ref2 = this.data;
            _results1 = [];
            for (_j = 0, _len = _ref2.length; _j < _len; _j++) {
              r = _ref2[_j];
              if (r._y[i] !== void 0) {
                _results1.push({
                  x: r._x,
                  y: r._y[i]
                });
              }
            }
            return _results1;
          }).call(this);
          if (this.options.continuousLine) {
            coords = (function() {
              var _j, _len, _results1;
              _results1 = [];
              for (_j = 0, _len = coords.length; _j < _len; _j++) {
                c = coords[_j];
                if (c.y !== null) {
                  _results1.push(c);
                }
              }
              return _results1;
            })();
          }
          if (coords.length > 1) {
            _results.push(Morris.Line.createPath(coords, smooth, this.bottom));
          } else {
            _results.push(null);
          }
        }
        return _results;
      }).call(this);
    };

    Line.prototype.draw = function() {
      if (this.options.axes) {
        this.drawXAxis();
      }
      this.drawSeries();
      if (this.options.hideHover === false) {
        return this.displayHoverForRow(this.data.length - 1);
      }
    };

    Line.prototype.drawXAxis = function() {
      var drawLabel, l, labels, prevLabelMargin, row, ypos, _i, _len, _results,
        _this = this;
      ypos = this.bottom + this.options.gridTextSize * 1.25;
      prevLabelMargin = null;
      drawLabel = function(labelText, xpos) {
        var label, labelBox;
        label = _this.r.text(_this.transX(xpos), ypos, labelText).attr('font-size', _this.options.gridTextSize).attr('fill', _this.options.gridTextColor);
        labelBox = label.getBBox();
        if ((!(prevLabelMargin != null) || prevLabelMargin >= labelBox.x + labelBox.width) && labelBox.x >= 0 && (labelBox.x + labelBox.width) < _this.el.width()) {
          return prevLabelMargin = labelBox.x - _this.options.xLabelMargin;
        } else {
          return label.remove();
        }
      };
      if (this.options.parseTime) {
        if (this.data.length === 1 && this.options.xLabels === 'auto') {
          labels = [[this.data[0].label, this.data[0].x]];
        } else {
          labels = Morris.labelSeries(this.xmin, this.xmax, this.width, this.options.xLabels, this.options.xLabelFormat);
        }
      } else {
        labels = (function() {
          var _i, _len, _ref, _results;
          _ref = this.data;
          _results = [];
          for (_i = 0, _len = _ref.length; _i < _len; _i++) {
            row = _ref[_i];
            _results.push([row.label, row.x]);
          }
          return _results;
        }).call(this);
      }
      labels.reverse();
      _results = [];
      for (_i = 0, _len = labels.length; _i < _len; _i++) {
        l = labels[_i];
        _results.push(drawLabel(l[0], l[1]));
      }
      return _results;
    };

    Line.prototype.drawSeries = function() {
      var circle, i, path, row, _i, _j, _ref, _ref1, _results;
      for (i = _i = _ref = this.options.ykeys.length - 1; _ref <= 0 ? _i <= 0 : _i >= 0; i = _ref <= 0 ? ++_i : --_i) {
        path = this.paths[i];
        if (path !== null) {
          this.r.path(path).attr('stroke', this.colorFor(row, i, 'line')).attr('stroke-width', this.options.lineWidth);
        }
      }
      this.seriesPoints = (function() {
        var _j, _ref1, _results;
        _results = [];
        for (i = _j = 0, _ref1 = this.options.ykeys.length; 0 <= _ref1 ? _j < _ref1 : _j > _ref1; i = 0 <= _ref1 ? ++_j : --_j) {
          _results.push([]);
        }
        return _results;
      }).call(this);
      _results = [];
      for (i = _j = _ref1 = this.options.ykeys.length - 1; _ref1 <= 0 ? _j <= 0 : _j >= 0; i = _ref1 <= 0 ? ++_j : --_j) {
        _results.push((function() {
          var _k, _len, _ref2, _results1;
          _ref2 = this.data;
          _results1 = [];
          for (_k = 0, _len = _ref2.length; _k < _len; _k++) {
            row = _ref2[_k];
            if (row._y[i] != null) {
              circle = this.r.circle(row._x, row._y[i], this.options.pointSize).attr('fill', this.colorFor(row, i, 'point')).attr('stroke-width', this.strokeWidthForSeries(i)).attr('stroke', this.strokeForSeries(i));
            } else {
              circle = null;
            }
            _results1.push(this.seriesPoints[i].push(circle));
          }
          return _results1;
        }).call(this));
      }
      return _results;
    };

    Line.createPath = function(coords, smooth, bottom) {
      var coord, g, grads, i, ix, lg, path, prevCoord, x1, x2, y1, y2, _i, _len;
      path = "";
      if (smooth) {
        grads = Morris.Line.gradients(coords);
      }
      prevCoord = {
        y: null
      };
      for (i = _i = 0, _len = coords.length; _i < _len; i = ++_i) {
        coord = coords[i];
        if (coord.y != null) {
          if (prevCoord.y != null) {
            if (smooth) {
              g = grads[i];
              lg = grads[i - 1];
              ix = (coord.x - prevCoord.x) / 4;
              x1 = prevCoord.x + ix;
              y1 = Math.min(bottom, prevCoord.y + ix * lg);
              x2 = coord.x - ix;
              y2 = Math.min(bottom, coord.y - ix * g);
              path += "C" + x1 + "," + y1 + "," + x2 + "," + y2 + "," + coord.x + "," + coord.y;
            } else {
              path += "L" + coord.x + "," + coord.y;
            }
          } else {
            if (!smooth || (grads[i] != null)) {
              path += "M" + coord.x + "," + coord.y;
            }
          }
        }
        prevCoord = coord;
      }
      return path;
    };

    Line.gradients = function(coords) {
      var coord, grad, i, nextCoord, prevCoord, _i, _len, _results;
      grad = function(a, b) {
        return (a.y - b.y) / (a.x - b.x);
      };
      _results = [];
      for (i = _i = 0, _len = coords.length; _i < _len; i = ++_i) {
        coord = coords[i];
        if (coord.y != null) {
          nextCoord = coords[i + 1] || {
            y: null
          };
          prevCoord = coords[i - 1] || {
            y: null
          };
          if ((prevCoord.y != null) && (nextCoord.y != null)) {
            _results.push(grad(prevCoord, nextCoord));
          } else if (prevCoord.y != null) {
            _results.push(grad(prevCoord, coord));
          } else if (nextCoord.y != null) {
            _results.push(grad(coord, nextCoord));
          } else {
            _results.push(null);
          }
        } else {
          _results.push(null);
        }
      }
      return _results;
    };

    Line.prototype.hilight = function(index) {
      var i, _i, _j, _ref, _ref1;
      if (this.prevHilight !== null && this.prevHilight !== index) {
        for (i = _i = 0, _ref = this.seriesPoints.length - 1; 0 <= _ref ? _i <= _ref : _i >= _ref; i = 0 <= _ref ? ++_i : --_i) {
          if (this.seriesPoints[i][this.prevHilight]) {
            this.seriesPoints[i][this.prevHilight].animate(this.pointShrink);
          }
        }
      }
      if (index !== null && this.prevHilight !== index) {
        for (i = _j = 0, _ref1 = this.seriesPoints.length - 1; 0 <= _ref1 ? _j <= _ref1 : _j >= _ref1; i = 0 <= _ref1 ? ++_j : --_j) {
          if (this.seriesPoints[i][index]) {
            this.seriesPoints[i][index].animate(this.pointGrow);
          }
        }
      }
      return this.prevHilight = index;
    };

    Line.prototype.strokeWidthForSeries = function(index) {
      return this.options.pointWidths[index % this.options.pointWidths.length];
    };

    Line.prototype.strokeForSeries = function(index) {
      return this.options.pointStrokeColors[index % this.options.pointStrokeColors.length];
    };

    Line.prototype.colorFor = function(row, sidx, type) {
      if (typeof this.options.lineColors === 'function') {
        return this.options.lineColors.call(this, row, sidx, type);
      } else if (type === 'point') {
        return this.options.pointFillColors[sidx % this.options.pointFillColors.length] || this.options.lineColors[sidx % this.options.lineColors.length];
      } else {
        return this.options.lineColors[sidx % this.options.lineColors.length];
      }
    };

    return Line;

  })(Morris.Grid);

  Morris.labelSeries = function(dmin, dmax, pxwidth, specName, xLabelFormat) {
    var d, d0, ddensity, name, ret, s, spec, t, _i, _len, _ref;
    ddensity = 200 * (dmax - dmin) / pxwidth;
    d0 = new Date(dmin);
    spec = Morris.LABEL_SPECS[specName];
    if (spec === void 0) {
      _ref = Morris.AUTO_LABEL_ORDER;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        name = _ref[_i];
        s = Morris.LABEL_SPECS[name];
        if (ddensity >= s.span) {
          spec = s;
          break;
        }
      }
    }
    if (spec === void 0) {
      spec = Morris.LABEL_SPECS["second"];
    }
    if (xLabelFormat) {
      spec = $.extend({}, spec, {
        fmt: xLabelFormat
      });
    }
    d = spec.start(d0);
    ret = [];
    while ((t = d.getTime()) <= dmax) {
      if (t >= dmin) {
        ret.push([spec.fmt(d), t]);
      }
      spec.incr(d);
    }
    return ret;
  };

  minutesSpecHelper = function(interval) {
    return {
      span: interval * 60 * 1000,
      start: function(d) {
        return new Date(d.getFullYear(), d.getMonth(), d.getDate(), d.getHours());
      },
      fmt: function(d) {
        return "" + (Morris.pad2(d.getHours())) + ":" + (Morris.pad2(d.getMinutes()));
      },
      incr: function(d) {
        return d.setMinutes(d.getMinutes() + interval);
      }
    };
  };

  secondsSpecHelper = function(interval) {
    return {
      span: interval * 1000,
      start: function(d) {
        return new Date(d.getFullYear(), d.getMonth(), d.getDate(), d.getHours(), d.getMinutes());
      },
      fmt: function(d) {
        return "" + (Morris.pad2(d.getHours())) + ":" + (Morris.pad2(d.getMinutes())) + ":" + (Morris.pad2(d.getSeconds()));
      },
      incr: function(d) {
        return d.setSeconds(d.getSeconds() + interval);
      }
    };
  };

  Morris.LABEL_SPECS = {
    "decade": {
      span: 172800000000,
      start: function(d) {
        return new Date(d.getFullYear() - d.getFullYear() % 10, 0, 1);
      },
      fmt: function(d) {
        return "" + (d.getFullYear());
      },
      incr: function(d) {
        return d.setFullYear(d.getFullYear() + 10);
      }
    },
    "year": {
      span: 17280000000,
      start: function(d) {
        return new Date(d.getFullYear(), 0, 1);
      },
      fmt: function(d) {
        return "" + (d.getFullYear());
      },
      incr: function(d) {
        return d.setFullYear(d.getFullYear() + 1);
      }
    },
    "month": {
      span: 2419200000,
      start: function(d) {
        return new Date(d.getFullYear(), d.getMonth(), 1);
      },
      fmt: function(d) {
        return "" + (d.getFullYear()) + "-" + (Morris.pad2(d.getMonth() + 1));
      },
      incr: function(d) {
        return d.setMonth(d.getMonth() + 1);
      }
    },
    "day": {
      span: 86400000,
      start: function(d) {
        return new Date(d.getFullYear(), d.getMonth(), d.getDate());
      },
      fmt: function(d) {
        return "" + (d.getFullYear()) + "-" + (Morris.pad2(d.getMonth() + 1)) + "-" + (Morris.pad2(d.getDate()));
      },
      incr: function(d) {
        return d.setDate(d.getDate() + 1);
      }
    },
    "hour": minutesSpecHelper(60),
    "30min": minutesSpecHelper(30),
    "15min": minutesSpecHelper(15),
    "10min": minutesSpecHelper(10),
    "5min": minutesSpecHelper(5),
    "minute": minutesSpecHelper(1),
    "30sec": secondsSpecHelper(30),
    "15sec": secondsSpecHelper(15),
    "10sec": secondsSpecHelper(10),
    "5sec": secondsSpecHelper(5),
    "second": secondsSpecHelper(1)
  };

  Morris.AUTO_LABEL_ORDER = ["decade", "year", "month", "day", "hour", "30min", "15min", "10min", "5min", "minute", "30sec", "15sec", "10sec", "5sec", "second"];

  Morris.Area = (function(_super) {

    __extends(Area, _super);

    function Area(options) {
      if (!(this instanceof Morris.Area)) {
        return new Morris.Area(options);
      }
      this.cumulative = true;
      Area.__super__.constructor.call(this, options);
    }

    Area.prototype.calcPoints = function() {
      var row, total, y, _i, _len, _ref, _results;
      _ref = this.data;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        row = _ref[_i];
        row._x = this.transX(row.x);
        total = 0;
        row._y = (function() {
          var _j, _len1, _ref1, _results1;
          _ref1 = row.y;
          _results1 = [];
          for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
            y = _ref1[_j];
            total += y || 0;
            _results1.push(this.transY(total));
          }
          return _results1;
        }).call(this);
        _results.push(row._ymax = row._y[row._y.length - 1]);
      }
      return _results;
    };

    Area.prototype.drawSeries = function() {
      var i, path, _i, _ref;
      for (i = _i = _ref = this.options.ykeys.length - 1; _ref <= 0 ? _i <= 0 : _i >= 0; i = _ref <= 0 ? ++_i : --_i) {
        path = this.paths[i];
        if (path !== null) {
          path = path + ("L" + (this.transX(this.xmax)) + "," + this.bottom + "L" + (this.transX(this.xmin)) + "," + this.bottom + "Z");
          this.r.path(path).attr('fill', this.fillForSeries(i)).attr('stroke-width', 0);
        }
      }
      return Area.__super__.drawSeries.call(this);
    };

    Area.prototype.fillForSeries = function(i) {
      var color;
      color = Raphael.rgb2hsl(this.colorFor(this.data[i], i, 'line'));
      return Raphael.hsl(color.h, Math.min(255, color.s * 0.75), Math.min(255, color.l * 1.25));
    };

    return Area;

  })(Morris.Line);

  Morris.Bar = (function(_super) {

    __extends(Bar, _super);

    function Bar(options) {
      this.onHoverOut = __bind(this.onHoverOut, this);

      this.onHoverMove = __bind(this.onHoverMove, this);
      if (!(this instanceof Morris.Bar)) {
        return new Morris.Bar(options);
      }
      Bar.__super__.constructor.call(this, $.extend({}, options, {
        parseTime: false
      }));
    }

    Bar.prototype.init = function() {
      this.cumulative = this.options.stacked;
      if (this.options.hideHover !== 'always') {
        this.hover = new Morris.Hover({
          parent: this.el
        });
        this.on('hovermove', this.onHoverMove);
        return this.on('hoverout', this.onHoverOut);
      }
    };

    Bar.prototype.defaults = {
      barSizeRatio: 0.75,
      barGap: 3,
      barColors: ['#0b62a4', '#7a92a3', '#4da74d', '#afd8f8', '#edc240', '#cb4b4b', '#9440ed'],
      xLabelMargin: 50
    };

    Bar.prototype.calc = function() {
      var _ref;
      this.calcBars();
      if (this.options.hideHover === false) {
        return (_ref = this.hover).update.apply(_ref, this.hoverContentForRow(this.data.length - 1));
      }
    };

    Bar.prototype.calcBars = function() {
      var idx, row, y, _i, _len, _ref, _results;
      _ref = this.data;
      _results = [];
      for (idx = _i = 0, _len = _ref.length; _i < _len; idx = ++_i) {
        row = _ref[idx];
        row._x = this.left + this.width * (idx + 0.5) / this.data.length;
        _results.push(row._y = (function() {
          var _j, _len1, _ref1, _results1;
          _ref1 = row.y;
          _results1 = [];
          for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
            y = _ref1[_j];
            if (y != null) {
              _results1.push(this.transY(y));
            } else {
              _results1.push(null);
            }
          }
          return _results1;
        }).call(this));
      }
      return _results;
    };

    Bar.prototype.draw = function() {
      if (this.options.axes) {
        this.drawXAxis();
      }
      return this.drawSeries();
    };

    Bar.prototype.drawXAxis = function() {
      var i, label, labelBox, prevLabelMargin, row, ypos, _i, _ref, _results;
      ypos = this.bottom + this.options.gridTextSize * 1.25;
      prevLabelMargin = null;
      _results = [];
      for (i = _i = 0, _ref = this.data.length; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {
        row = this.data[this.data.length - 1 - i];
        label = this.r.text(row._x, ypos, row.label).attr('font-size', this.options.gridTextSize).attr('fill', this.options.gridTextColor);
        labelBox = label.getBBox();
        if ((!(prevLabelMargin != null) || prevLabelMargin >= labelBox.x + labelBox.width) && labelBox.x >= 0 && (labelBox.x + labelBox.width) < this.el.width()) {
          _results.push(prevLabelMargin = labelBox.x - this.options.xLabelMargin);
        } else {
          _results.push(label.remove());
        }
      }
      return _results;
    };

    Bar.prototype.drawSeries = function() {
      var barWidth, bottom, groupWidth, idx, lastTop, left, leftPadding, numBars, row, sidx, size, top, ypos, zeroPos;
      groupWidth = this.width / this.options.data.length;
      numBars = this.options.stacked != null ? 1 : this.options.ykeys.length;
      barWidth = (groupWidth * this.options.barSizeRatio - this.options.barGap * (numBars - 1)) / numBars;
      leftPadding = groupWidth * (1 - this.options.barSizeRatio) / 2;
      zeroPos = this.ymin <= 0 && this.ymax >= 0 ? this.transY(0) : null;
      return this.bars = (function() {
        var _i, _len, _ref, _results;
        _ref = this.data;
        _results = [];
        for (idx = _i = 0, _len = _ref.length; _i < _len; idx = ++_i) {
          row = _ref[idx];
          lastTop = 0;
          _results.push((function() {
            var _j, _len1, _ref1, _results1;
            _ref1 = row._y;
            _results1 = [];
            for (sidx = _j = 0, _len1 = _ref1.length; _j < _len1; sidx = ++_j) {
              ypos = _ref1[sidx];
              if (ypos !== null) {
                if (zeroPos) {
                  top = Math.min(ypos, zeroPos);
                  bottom = Math.max(ypos, zeroPos);
                } else {
                  top = ypos;
                  bottom = this.bottom;
                }
                left = this.left + idx * groupWidth + leftPadding;
                if (!this.options.stacked) {
                  left += sidx * (barWidth + this.options.barGap);
                }
                size = bottom - top;
                if (this.options.stacked) {
                  top -= lastTop;
                }
                this.r.rect(left, top, barWidth, size).attr('fill', this.colorFor(row, sidx, 'bar')).attr('stroke-width', 0);
                _results1.push(lastTop += size);
              } else {
                _results1.push(null);
              }
            }
            return _results1;
          }).call(this));
        }
        return _results;
      }).call(this);
    };

    Bar.prototype.colorFor = function(row, sidx, type) {
      var r, s;
      if (typeof this.options.barColors === 'function') {
        r = {
          x: row.x,
          y: row.y[sidx],
          label: row.label
        };
        s = {
          index: sidx,
          key: this.options.ykeys[sidx],
          label: this.options.labels[sidx]
        };
        return this.options.barColors.call(this, r, s, type);
      } else {
        return this.options.barColors[sidx % this.options.barColors.length];
      }
    };

    Bar.prototype.hitTest = function(x, y) {
      x = Math.max(Math.min(x, this.right), this.left);
      return Math.min(this.data.length - 1, Math.floor((x - this.left) / (this.width / this.data.length)));
    };

    Bar.prototype.onHoverMove = function(x, y) {
      var index, _ref;
      index = this.hitTest(x, y);
      return (_ref = this.hover).update.apply(_ref, this.hoverContentForRow(index));
    };

    Bar.prototype.onHoverOut = function() {
      if (this.options.hideHover === 'auto') {
        return this.hover.hide();
      }
    };

    Bar.prototype.hoverContentForRow = function(index) {
      var content, j, row, x, y, _i, _len, _ref;
      if (typeof this.options.hoverCallback === 'function') {
        content = this.options.hoverCallback(index, this.options);
      } else {
        row = this.data[index];
        content = "<div class='morris-hover-row-label'>" + row.label + "</div>";
        _ref = row.y;
        for (j = _i = 0, _len = _ref.length; _i < _len; j = ++_i) {
          y = _ref[j];
          content += "<div class='morris-hover-point' style='color: " + (this.colorFor(row, j, 'label')) + "'>\n  " + this.options.labels[j] + ":\n  " + (this.yLabelFormat(y)) + "\n</div>";
        }
      }
      x = this.left + (index + 0.5) * this.width / this.data.length;
      return [content, x];
    };

    return Bar;

  })(Morris.Grid);

  Morris.Donut = (function() {

    Donut.prototype.defaults = {
      colors: ['#0B62A4', '#3980B5', '#679DC6', '#95BBD7', '#B0CCE1', '#095791', '#095085', '#083E67', '#052C48', '#042135'],
      formatter: Morris.commas
    };

    function Donut(options) {
      this.select = __bind(this.select, this);
      if (!(this instanceof Morris.Donut)) {
        return new Morris.Donut(options);
      }
      if (typeof options.element === 'string') {
        this.el = $(document.getElementById(options.element));
      } else {
        this.el = $(options.element);
      }
      this.options = $.extend({}, this.defaults, options);
      if (this.el === null || this.el.length === 0) {
        throw new Error("Graph placeholder not found.");
      }
      if (options.data === void 0 || options.data.length === 0) {
        return;
      }
      this.data = options.data;
      this.redraw();
    }

    Donut.prototype.redraw = function() {
      var C, cx, cy, d, idx, last, max_value, min, next, seg, total, w, x, _i, _j, _k, _len, _len1, _len2, _ref, _ref1, _ref2, _results;
      this.el.empty();
      this.r = new Raphael(this.el[0]);
      cx = this.el.width() / 2;
      cy = this.el.height() / 2;
      w = (Math.min(cx, cy) - 10) / 3;
      total = 0;
      _ref = this.data;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        x = _ref[_i];
        total += x.value;
      }
      min = 5 / (2 * w);
      C = 1.9999 * Math.PI - min * this.data.length;
      last = 0;
      idx = 0;
      this.segments = [];
      _ref1 = this.data;
      for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
        d = _ref1[_j];
        next = last + min + C * (d.value / total);
        seg = new Morris.DonutSegment(cx, cy, w * 2, w, last, next, this.options.colors[idx % this.options.colors.length], d);
        seg.render(this.r);
        this.segments.push(seg);
        seg.on('hover', this.select);
        last = next;
        idx += 1;
      }
      this.text1 = this.r.text(cx, cy - 10, '').attr({
        'font-size': 15,
        'font-weight': 800
      });
      this.text2 = this.r.text(cx, cy + 10, '').attr({
        'font-size': 14
      });
      max_value = Math.max.apply(null, (function() {
        var _k, _len2, _ref2, _results;
        _ref2 = this.data;
        _results = [];
        for (_k = 0, _len2 = _ref2.length; _k < _len2; _k++) {
          d = _ref2[_k];
          _results.push(d.value);
        }
        return _results;
      }).call(this));
      idx = 0;
      _ref2 = this.data;
      _results = [];
      for (_k = 0, _len2 = _ref2.length; _k < _len2; _k++) {
        d = _ref2[_k];
        if (d.value === max_value) {
          this.select(idx);
          break;
        }
        _results.push(idx += 1);
      }
      return _results;
    };

    Donut.prototype.select = function(idx) {
      var s, segment, _i, _len, _ref;
      _ref = this.segments;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        s = _ref[_i];
        s.deselect();
      }
      if (typeof idx === 'number') {
        segment = this.segments[idx];
      } else {
        segment = idx;
      }
      segment.select();
      return this.setLabels(segment.data.label, this.options.formatter(segment.data.value, segment.data));
    };

    Donut.prototype.setLabels = function(label1, label2) {
      var inner, maxHeightBottom, maxHeightTop, maxWidth, text1bbox, text1scale, text2bbox, text2scale;
      inner = (Math.min(this.el.width() / 2, this.el.height() / 2) - 10) * 2 / 3;
      maxWidth = 1.8 * inner;
      maxHeightTop = inner / 2;
      maxHeightBottom = inner / 3;
      this.text1.attr({
        text: label1,
        transform: ''
      });
      text1bbox = this.text1.getBBox();
      text1scale = Math.min(maxWidth / text1bbox.width, maxHeightTop / text1bbox.height);
      this.text1.attr({
        transform: "S" + text1scale + "," + text1scale + "," + (text1bbox.x + text1bbox.width / 2) + "," + (text1bbox.y + text1bbox.height)
      });
      this.text2.attr({
        text: label2,
        transform: ''
      });
      text2bbox = this.text2.getBBox();
      text2scale = Math.min(maxWidth / text2bbox.width, maxHeightBottom / text2bbox.height);
      return this.text2.attr({
        transform: "S" + text2scale + "," + text2scale + "," + (text2bbox.x + text2bbox.width / 2) + "," + text2bbox.y
      });
    };

    return Donut;

  })();

  Morris.DonutSegment = (function(_super) {

    __extends(DonutSegment, _super);

    function DonutSegment(cx, cy, inner, outer, p0, p1, color, data) {
      this.cx = cx;
      this.cy = cy;
      this.inner = inner;
      this.outer = outer;
      this.color = color;
      this.data = data;
      this.deselect = __bind(this.deselect, this);

      this.select = __bind(this.select, this);

      this.sin_p0 = Math.sin(p0);
      this.cos_p0 = Math.cos(p0);
      this.sin_p1 = Math.sin(p1);
      this.cos_p1 = Math.cos(p1);
      this.long = (p1 - p0) > Math.PI ? 1 : 0;
      this.path = this.calcSegment(this.inner + 3, this.inner + this.outer - 5);
      this.selectedPath = this.calcSegment(this.inner + 3, this.inner + this.outer);
      this.hilight = this.calcArc(this.inner);
    }

    DonutSegment.prototype.calcArcPoints = function(r) {
      return [this.cx + r * this.sin_p0, this.cy + r * this.cos_p0, this.cx + r * this.sin_p1, this.cy + r * this.cos_p1];
    };

    DonutSegment.prototype.calcSegment = function(r1, r2) {
      var ix0, ix1, iy0, iy1, ox0, ox1, oy0, oy1, _ref, _ref1;
      _ref = this.calcArcPoints(r1), ix0 = _ref[0], iy0 = _ref[1], ix1 = _ref[2], iy1 = _ref[3];
      _ref1 = this.calcArcPoints(r2), ox0 = _ref1[0], oy0 = _ref1[1], ox1 = _ref1[2], oy1 = _ref1[3];
      return ("M" + ix0 + "," + iy0) + ("A" + r1 + "," + r1 + ",0," + this.long + ",0," + ix1 + "," + iy1) + ("L" + ox1 + "," + oy1) + ("A" + r2 + "," + r2 + ",0," + this.long + ",1," + ox0 + "," + oy0) + "Z";
    };

    DonutSegment.prototype.calcArc = function(r) {
      var ix0, ix1, iy0, iy1, _ref;
      _ref = this.calcArcPoints(r), ix0 = _ref[0], iy0 = _ref[1], ix1 = _ref[2], iy1 = _ref[3];
      return ("M" + ix0 + "," + iy0) + ("A" + r + "," + r + ",0," + this.long + ",0," + ix1 + "," + iy1);
    };

    DonutSegment.prototype.render = function(r) {
      var _this = this;
      this.arc = r.path(this.hilight).attr({
        stroke: this.color,
        'stroke-width': 2,
        opacity: 0
      });
      return this.seg = r.path(this.path).attr({
        fill: this.color,
        stroke: 'white',
        'stroke-width': 3
      }).hover(function() {
        return _this.fire('hover', _this);
      });
    };

    DonutSegment.prototype.select = function() {
      if (!this.selected) {
        this.seg.animate({
          path: this.selectedPath
        }, 150, '<>');
        this.arc.animate({
          opacity: 1
        }, 150, '<>');
        return this.selected = true;
      }
    };

    DonutSegment.prototype.deselect = function() {
      if (this.selected) {
        this.seg.animate({
          path: this.path
        }, 150, '<>');
        this.arc.animate({
          opacity: 0
        }, 150, '<>');
        return this.selected = false;
      }
    };

    return DonutSegment;

  })(Morris.EventEmitter);

}).call(this);;
/*!
 * Parse JavaScript SDK
 * Version: 1.2.2
 * Built: Tue Mar 05 2013 13:27:37
 * http://parse.com
 *
 * Copyright 2013 Parse, Inc.
 * The Parse JavaScript SDK is freely distributable under the MIT license.
 *
 * Includes: Underscore.js
 * Copyright 2009-2012 Jeremy Ashkenas, DocumentCloud Inc.
 * Released under the MIT license.
 */
(function(root) {
  root.Parse = root.Parse || {};
  root.Parse.VERSION = "js1.2.2";
}(this));


//     Underscore.js 1.3.3
//     (c) 2009-2012 Jeremy Ashkenas, DocumentCloud Inc.
//     Underscore is freely distributable under the MIT license.
//     Portions of Underscore are inspired or borrowed from Prototype,
//     Oliver Steele's Functional, and John Resig's Micro-Templating.
//     For all details and documentation:
//     http://documentcloud.github.com/underscore

(function() {

  // Baseline setup
  // --------------

  // Establish the root object, `window` in the browser, or `global` on the server.
  var root = this;

  // Save the previous value of the `_` variable.
  var previousUnderscore = root._;

  // Establish the object that gets returned to break out of a loop iteration.
  var breaker = {};

  // Save bytes in the minified (but not gzipped) version:
  var ArrayProto = Array.prototype, ObjProto = Object.prototype, FuncProto = Function.prototype;

  // Create quick reference variables for speed access to core prototypes.
  var slice            = ArrayProto.slice,
      unshift          = ArrayProto.unshift,
      toString         = ObjProto.toString,
      hasOwnProperty   = ObjProto.hasOwnProperty;

  // All **ECMAScript 5** native function implementations that we hope to use
  // are declared here.
  var
    nativeForEach      = ArrayProto.forEach,
    nativeMap          = ArrayProto.map,
    nativeReduce       = ArrayProto.reduce,
    nativeReduceRight  = ArrayProto.reduceRight,
    nativeFilter       = ArrayProto.filter,
    nativeEvery        = ArrayProto.every,
    nativeSome         = ArrayProto.some,
    nativeIndexOf      = ArrayProto.indexOf,
    nativeLastIndexOf  = ArrayProto.lastIndexOf,
    nativeIsArray      = Array.isArray,
    nativeKeys         = Object.keys,
    nativeBind         = FuncProto.bind;

  // Create a safe reference to the Underscore object for use below.
  var _ = function(obj) { return new wrapper(obj); };

  // Export the Underscore object for **Node.js**, with
  // backwards-compatibility for the old `require()` API. If we're in
  // the browser, add `_` as a global object via a string identifier,
  // for Closure Compiler "advanced" mode.
  if (typeof exports !== 'undefined') {
    if (typeof module !== 'undefined' && module.exports) {
      exports = module.exports = _;
    }
    exports._ = _;
  } else {
    root['_'] = _;
  }

  // Current version.
  _.VERSION = '1.3.3';

  // Collection Functions
  // --------------------

  // The cornerstone, an `each` implementation, aka `forEach`.
  // Handles objects with the built-in `forEach`, arrays, and raw objects.
  // Delegates to **ECMAScript 5**'s native `forEach` if available.
  var each = _.each = _.forEach = function(obj, iterator, context) {
    if (obj == null) return;
    if (nativeForEach && obj.forEach === nativeForEach) {
      obj.forEach(iterator, context);
    } else if (obj.length === +obj.length) {
      for (var i = 0, l = obj.length; i < l; i++) {
        if (i in obj && iterator.call(context, obj[i], i, obj) === breaker) return;
      }
    } else {
      for (var key in obj) {
        if (_.has(obj, key)) {
          if (iterator.call(context, obj[key], key, obj) === breaker) return;
        }
      }
    }
  };

  // Return the results of applying the iterator to each element.
  // Delegates to **ECMAScript 5**'s native `map` if available.
  _.map = _.collect = function(obj, iterator, context) {
    var results = [];
    if (obj == null) return results;
    if (nativeMap && obj.map === nativeMap) return obj.map(iterator, context);
    each(obj, function(value, index, list) {
      results[results.length] = iterator.call(context, value, index, list);
    });
    if (obj.length === +obj.length) results.length = obj.length;
    return results;
  };

  // **Reduce** builds up a single result from a list of values, aka `inject`,
  // or `foldl`. Delegates to **ECMAScript 5**'s native `reduce` if available.
  _.reduce = _.foldl = _.inject = function(obj, iterator, memo, context) {
    var initial = arguments.length > 2;
    if (obj == null) obj = [];
    if (nativeReduce && obj.reduce === nativeReduce) {
      if (context) iterator = _.bind(iterator, context);
      return initial ? obj.reduce(iterator, memo) : obj.reduce(iterator);
    }
    each(obj, function(value, index, list) {
      if (!initial) {
        memo = value;
        initial = true;
      } else {
        memo = iterator.call(context, memo, value, index, list);
      }
    });
    if (!initial) throw new TypeError('Reduce of empty array with no initial value');
    return memo;
  };

  // The right-associative version of reduce, also known as `foldr`.
  // Delegates to **ECMAScript 5**'s native `reduceRight` if available.
  _.reduceRight = _.foldr = function(obj, iterator, memo, context) {
    var initial = arguments.length > 2;
    if (obj == null) obj = [];
    if (nativeReduceRight && obj.reduceRight === nativeReduceRight) {
      if (context) iterator = _.bind(iterator, context);
      return initial ? obj.reduceRight(iterator, memo) : obj.reduceRight(iterator);
    }
    var reversed = _.toArray(obj).reverse();
    if (context && !initial) iterator = _.bind(iterator, context);
    return initial ? _.reduce(reversed, iterator, memo, context) : _.reduce(reversed, iterator);
  };

  // Return the first value which passes a truth test. Aliased as `detect`.
  _.find = _.detect = function(obj, iterator, context) {
    var result;
    any(obj, function(value, index, list) {
      if (iterator.call(context, value, index, list)) {
        result = value;
        return true;
      }
    });
    return result;
  };

  // Return all the elements that pass a truth test.
  // Delegates to **ECMAScript 5**'s native `filter` if available.
  // Aliased as `select`.
  _.filter = _.select = function(obj, iterator, context) {
    var results = [];
    if (obj == null) return results;
    if (nativeFilter && obj.filter === nativeFilter) return obj.filter(iterator, context);
    each(obj, function(value, index, list) {
      if (iterator.call(context, value, index, list)) results[results.length] = value;
    });
    return results;
  };

  // Return all the elements for which a truth test fails.
  _.reject = function(obj, iterator, context) {
    var results = [];
    if (obj == null) return results;
    each(obj, function(value, index, list) {
      if (!iterator.call(context, value, index, list)) results[results.length] = value;
    });
    return results;
  };

  // Determine whether all of the elements match a truth test.
  // Delegates to **ECMAScript 5**'s native `every` if available.
  // Aliased as `all`.
  _.every = _.all = function(obj, iterator, context) {
    var result = true;
    if (obj == null) return result;
    if (nativeEvery && obj.every === nativeEvery) return obj.every(iterator, context);
    each(obj, function(value, index, list) {
      if (!(result = result && iterator.call(context, value, index, list))) return breaker;
    });
    return !!result;
  };

  // Determine if at least one element in the object matches a truth test.
  // Delegates to **ECMAScript 5**'s native `some` if available.
  // Aliased as `any`.
  var any = _.some = _.any = function(obj, iterator, context) {
    iterator || (iterator = _.identity);
    var result = false;
    if (obj == null) return result;
    if (nativeSome && obj.some === nativeSome) return obj.some(iterator, context);
    each(obj, function(value, index, list) {
      if (result || (result = iterator.call(context, value, index, list))) return breaker;
    });
    return !!result;
  };

  // Determine if a given value is included in the array or object using `===`.
  // Aliased as `contains`.
  _.include = _.contains = function(obj, target) {
    var found = false;
    if (obj == null) return found;
    if (nativeIndexOf && obj.indexOf === nativeIndexOf) return obj.indexOf(target) != -1;
    found = any(obj, function(value) {
      return value === target;
    });
    return found;
  };

  // Invoke a method (with arguments) on every item in a collection.
  _.invoke = function(obj, method) {
    var args = slice.call(arguments, 2);
    return _.map(obj, function(value) {
      return (_.isFunction(method) ? method || value : value[method]).apply(value, args);
    });
  };

  // Convenience version of a common use case of `map`: fetching a property.
  _.pluck = function(obj, key) {
    return _.map(obj, function(value){ return value[key]; });
  };

  // Return the maximum element or (element-based computation).
  _.max = function(obj, iterator, context) {
    if (!iterator && _.isArray(obj) && obj[0] === +obj[0]) return Math.max.apply(Math, obj);
    if (!iterator && _.isEmpty(obj)) return -Infinity;
    var result = {computed : -Infinity};
    each(obj, function(value, index, list) {
      var computed = iterator ? iterator.call(context, value, index, list) : value;
      computed >= result.computed && (result = {value : value, computed : computed});
    });
    return result.value;
  };

  // Return the minimum element (or element-based computation).
  _.min = function(obj, iterator, context) {
    if (!iterator && _.isArray(obj) && obj[0] === +obj[0]) return Math.min.apply(Math, obj);
    if (!iterator && _.isEmpty(obj)) return Infinity;
    var result = {computed : Infinity};
    each(obj, function(value, index, list) {
      var computed = iterator ? iterator.call(context, value, index, list) : value;
      computed < result.computed && (result = {value : value, computed : computed});
    });
    return result.value;
  };

  // Shuffle an array.
  _.shuffle = function(obj) {
    var shuffled = [], rand;
    each(obj, function(value, index, list) {
      rand = Math.floor(Math.random() * (index + 1));
      shuffled[index] = shuffled[rand];
      shuffled[rand] = value;
    });
    return shuffled;
  };

  // Sort the object's values by a criterion produced by an iterator.
  _.sortBy = function(obj, val, context) {
    var iterator = _.isFunction(val) ? val : function(obj) { return obj[val]; };
    return _.pluck(_.map(obj, function(value, index, list) {
      return {
        value : value,
        criteria : iterator.call(context, value, index, list)
      };
    }).sort(function(left, right) {
      var a = left.criteria, b = right.criteria;
      if (a === void 0) return 1;
      if (b === void 0) return -1;
      return a < b ? -1 : a > b ? 1 : 0;
    }), 'value');
  };

  // Groups the object's values by a criterion. Pass either a string attribute
  // to group by, or a function that returns the criterion.
  _.groupBy = function(obj, val) {
    var result = {};
    var iterator = _.isFunction(val) ? val : function(obj) { return obj[val]; };
    each(obj, function(value, index) {
      var key = iterator(value, index);
      (result[key] || (result[key] = [])).push(value);
    });
    return result;
  };

  // Use a comparator function to figure out at what index an object should
  // be inserted so as to maintain order. Uses binary search.
  _.sortedIndex = function(array, obj, iterator) {
    iterator || (iterator = _.identity);
    var low = 0, high = array.length;
    while (low < high) {
      var mid = (low + high) >> 1;
      iterator(array[mid]) < iterator(obj) ? low = mid + 1 : high = mid;
    }
    return low;
  };

  // Safely convert anything iterable into a real, live array.
  _.toArray = function(obj) {
    if (!obj)                                     return [];
    if (_.isArray(obj))                           return slice.call(obj);
    if (_.isArguments(obj))                       return slice.call(obj);
    if (obj.toArray && _.isFunction(obj.toArray)) return obj.toArray();
    return _.values(obj);
  };

  // Return the number of elements in an object.
  _.size = function(obj) {
    return _.isArray(obj) ? obj.length : _.keys(obj).length;
  };

  // Array Functions
  // ---------------

  // Get the first element of an array. Passing **n** will return the first N
  // values in the array. Aliased as `head` and `take`. The **guard** check
  // allows it to work with `_.map`.
  _.first = _.head = _.take = function(array, n, guard) {
    return (n != null) && !guard ? slice.call(array, 0, n) : array[0];
  };

  // Returns everything but the last entry of the array. Especcialy useful on
  // the arguments object. Passing **n** will return all the values in
  // the array, excluding the last N. The **guard** check allows it to work with
  // `_.map`.
  _.initial = function(array, n, guard) {
    return slice.call(array, 0, array.length - ((n == null) || guard ? 1 : n));
  };

  // Get the last element of an array. Passing **n** will return the last N
  // values in the array. The **guard** check allows it to work with `_.map`.
  _.last = function(array, n, guard) {
    if ((n != null) && !guard) {
      return slice.call(array, Math.max(array.length - n, 0));
    } else {
      return array[array.length - 1];
    }
  };

  // Returns everything but the first entry of the array. Aliased as `tail`.
  // Especially useful on the arguments object. Passing an **index** will return
  // the rest of the values in the array from that index onward. The **guard**
  // check allows it to work with `_.map`.
  _.rest = _.tail = function(array, index, guard) {
    return slice.call(array, (index == null) || guard ? 1 : index);
  };

  // Trim out all falsy values from an array.
  _.compact = function(array) {
    return _.filter(array, function(value){ return !!value; });
  };

  // Return a completely flattened version of an array.
  _.flatten = function(array, shallow) {
    return _.reduce(array, function(memo, value) {
      if (_.isArray(value)) return memo.concat(shallow ? value : _.flatten(value));
      memo[memo.length] = value;
      return memo;
    }, []);
  };

  // Return a version of the array that does not contain the specified value(s).
  _.without = function(array) {
    return _.difference(array, slice.call(arguments, 1));
  };

  // Produce a duplicate-free version of the array. If the array has already
  // been sorted, you have the option of using a faster algorithm.
  // Aliased as `unique`.
  _.uniq = _.unique = function(array, isSorted, iterator) {
    var initial = iterator ? _.map(array, iterator) : array;
    var results = [];
    // The `isSorted` flag is irrelevant if the array only contains two elements.
    if (array.length < 3) isSorted = true;
    _.reduce(initial, function (memo, value, index) {
      if (isSorted ? _.last(memo) !== value || !memo.length : !_.include(memo, value)) {
        memo.push(value);
        results.push(array[index]);
      }
      return memo;
    }, []);
    return results;
  };

  // Produce an array that contains the union: each distinct element from all of
  // the passed-in arrays.
  _.union = function() {
    return _.uniq(_.flatten(arguments, true));
  };

  // Produce an array that contains every item shared between all the
  // passed-in arrays. (Aliased as "intersect" for back-compat.)
  _.intersection = _.intersect = function(array) {
    var rest = slice.call(arguments, 1);
    return _.filter(_.uniq(array), function(item) {
      return _.every(rest, function(other) {
        return _.indexOf(other, item) >= 0;
      });
    });
  };

  // Take the difference between one array and a number of other arrays.
  // Only the elements present in just the first array will remain.
  _.difference = function(array) {
    var rest = _.flatten(slice.call(arguments, 1), true);
    return _.filter(array, function(value){ return !_.include(rest, value); });
  };

  // Zip together multiple lists into a single array -- elements that share
  // an index go together.
  _.zip = function() {
    var args = slice.call(arguments);
    var length = _.max(_.pluck(args, 'length'));
    var results = new Array(length);
    for (var i = 0; i < length; i++) results[i] = _.pluck(args, "" + i);
    return results;
  };

  // If the browser doesn't supply us with indexOf (I'm looking at you, **MSIE**),
  // we need this function. Return the position of the first occurrence of an
  // item in an array, or -1 if the item is not included in the array.
  // Delegates to **ECMAScript 5**'s native `indexOf` if available.
  // If the array is large and already in sort order, pass `true`
  // for **isSorted** to use binary search.
  _.indexOf = function(array, item, isSorted) {
    if (array == null) return -1;
    var i, l;
    if (isSorted) {
      i = _.sortedIndex(array, item);
      return array[i] === item ? i : -1;
    }
    if (nativeIndexOf && array.indexOf === nativeIndexOf) return array.indexOf(item);
    for (i = 0, l = array.length; i < l; i++) if (i in array && array[i] === item) return i;
    return -1;
  };

  // Delegates to **ECMAScript 5**'s native `lastIndexOf` if available.
  _.lastIndexOf = function(array, item) {
    if (array == null) return -1;
    if (nativeLastIndexOf && array.lastIndexOf === nativeLastIndexOf) return array.lastIndexOf(item);
    var i = array.length;
    while (i--) if (i in array && array[i] === item) return i;
    return -1;
  };

  // Generate an integer Array containing an arithmetic progression. A port of
  // the native Python `range()` function. See
  // [the Python documentation](http://docs.python.org/library/functions.html#range).
  _.range = function(start, stop, step) {
    if (arguments.length <= 1) {
      stop = start || 0;
      start = 0;
    }
    step = arguments[2] || 1;

    var len = Math.max(Math.ceil((stop - start) / step), 0);
    var idx = 0;
    var range = new Array(len);

    while(idx < len) {
      range[idx++] = start;
      start += step;
    }

    return range;
  };

  // Function (ahem) Functions
  // ------------------

  // Reusable constructor function for prototype setting.
  var ctor = function(){};

  // Create a function bound to a given object (assigning `this`, and arguments,
  // optionally). Binding with arguments is also known as `curry`.
  // Delegates to **ECMAScript 5**'s native `Function.bind` if available.
  // We check for `func.bind` first, to fail fast when `func` is undefined.
  _.bind = function bind(func, context) {
    var bound, args;
    if (func.bind === nativeBind && nativeBind) return nativeBind.apply(func, slice.call(arguments, 1));
    if (!_.isFunction(func)) throw new TypeError;
    args = slice.call(arguments, 2);
    return bound = function() {
      if (!(this instanceof bound)) return func.apply(context, args.concat(slice.call(arguments)));
      ctor.prototype = func.prototype;
      var self = new ctor;
      var result = func.apply(self, args.concat(slice.call(arguments)));
      if (Object(result) === result) return result;
      return self;
    };
  };

  // Bind all of an object's methods to that object. Useful for ensuring that
  // all callbacks defined on an object belong to it.
  _.bindAll = function(obj) {
    var funcs = slice.call(arguments, 1);
    if (funcs.length == 0) funcs = _.functions(obj);
    each(funcs, function(f) { obj[f] = _.bind(obj[f], obj); });
    return obj;
  };

  // Memoize an expensive function by storing its results.
  _.memoize = function(func, hasher) {
    var memo = {};
    hasher || (hasher = _.identity);
    return function() {
      var key = hasher.apply(this, arguments);
      return _.has(memo, key) ? memo[key] : (memo[key] = func.apply(this, arguments));
    };
  };

  // Delays a function for the given number of milliseconds, and then calls
  // it with the arguments supplied.
  _.delay = function(func, wait) {
    var args = slice.call(arguments, 2);
    return setTimeout(function(){ return func.apply(null, args); }, wait);
  };

  // Defers a function, scheduling it to run after the current call stack has
  // cleared.
  _.defer = function(func) {
    return _.delay.apply(_, [func, 1].concat(slice.call(arguments, 1)));
  };

  // Returns a function, that, when invoked, will only be triggered at most once
  // during a given window of time.
  _.throttle = function(func, wait) {
    var context, args, timeout, throttling, more, result;
    var whenDone = _.debounce(function(){ more = throttling = false; }, wait);
    return function() {
      context = this; args = arguments;
      var later = function() {
        timeout = null;
        if (more) func.apply(context, args);
        whenDone();
      };
      if (!timeout) timeout = setTimeout(later, wait);
      if (throttling) {
        more = true;
      } else {
        result = func.apply(context, args);
      }
      whenDone();
      throttling = true;
      return result;
    };
  };

  // Returns a function, that, as long as it continues to be invoked, will not
  // be triggered. The function will be called after it stops being called for
  // N milliseconds. If `immediate` is passed, trigger the function on the
  // leading edge, instead of the trailing.
  _.debounce = function(func, wait, immediate) {
    var timeout;
    return function() {
      var context = this, args = arguments;
      var later = function() {
        timeout = null;
        if (!immediate) func.apply(context, args);
      };
      if (immediate && !timeout) func.apply(context, args);
      clearTimeout(timeout);
      timeout = setTimeout(later, wait);
    };
  };

  // Returns a function that will be executed at most one time, no matter how
  // often you call it. Useful for lazy initialization.
  _.once = function(func) {
    var ran = false, memo;
    return function() {
      if (ran) return memo;
      ran = true;
      return memo = func.apply(this, arguments);
    };
  };

  // Returns the first function passed as an argument to the second,
  // allowing you to adjust arguments, run code before and after, and
  // conditionally execute the original function.
  _.wrap = function(func, wrapper) {
    return function() {
      var args = [func].concat(slice.call(arguments, 0));
      return wrapper.apply(this, args);
    };
  };

  // Returns a function that is the composition of a list of functions, each
  // consuming the return value of the function that follows.
  _.compose = function() {
    var funcs = arguments;
    return function() {
      var args = arguments;
      for (var i = funcs.length - 1; i >= 0; i--) {
        args = [funcs[i].apply(this, args)];
      }
      return args[0];
    };
  };

  // Returns a function that will only be executed after being called N times.
  _.after = function(times, func) {
    if (times <= 0) return func();
    return function() {
      if (--times < 1) { return func.apply(this, arguments); }
    };
  };

  // Object Functions
  // ----------------

  // Retrieve the names of an object's properties.
  // Delegates to **ECMAScript 5**'s native `Object.keys`
  _.keys = nativeKeys || function(obj) {
    if (obj !== Object(obj)) throw new TypeError('Invalid object');
    var keys = [];
    for (var key in obj) if (_.has(obj, key)) keys[keys.length] = key;
    return keys;
  };

  // Retrieve the values of an object's properties.
  _.values = function(obj) {
    return _.map(obj, _.identity);
  };

  // Return a sorted list of the function names available on the object.
  // Aliased as `methods`
  _.functions = _.methods = function(obj) {
    var names = [];
    for (var key in obj) {
      if (_.isFunction(obj[key])) names.push(key);
    }
    return names.sort();
  };

  // Extend a given object with all the properties in passed-in object(s).
  _.extend = function(obj) {
    each(slice.call(arguments, 1), function(source) {
      for (var prop in source) {
        obj[prop] = source[prop];
      }
    });
    return obj;
  };

  // Return a copy of the object only containing the whitelisted properties.
  _.pick = function(obj) {
    var result = {};
    each(_.flatten(slice.call(arguments, 1)), function(key) {
      if (key in obj) result[key] = obj[key];
    });
    return result;
  };

  // Fill in a given object with default properties.
  _.defaults = function(obj) {
    each(slice.call(arguments, 1), function(source) {
      for (var prop in source) {
        if (obj[prop] == null) obj[prop] = source[prop];
      }
    });
    return obj;
  };

  // Create a (shallow-cloned) duplicate of an object.
  _.clone = function(obj) {
    if (!_.isObject(obj)) return obj;
    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);
  };

  // Invokes interceptor with the obj, and then returns obj.
  // The primary purpose of this method is to "tap into" a method chain, in
  // order to perform operations on intermediate results within the chain.
  _.tap = function(obj, interceptor) {
    interceptor(obj);
    return obj;
  };

  // Internal recursive comparison function.
  function eq(a, b, stack) {
    // Identical objects are equal. `0 === -0`, but they aren't identical.
    // See the Harmony `egal` proposal: http://wiki.ecmascript.org/doku.php?id=harmony:egal.
    if (a === b) return a !== 0 || 1 / a == 1 / b;
    // A strict comparison is necessary because `null == undefined`.
    if (a == null || b == null) return a === b;
    // Unwrap any wrapped objects.
    if (a._chain) a = a._wrapped;
    if (b._chain) b = b._wrapped;
    // Invoke a custom `isEqual` method if one is provided.
    if (a.isEqual && _.isFunction(a.isEqual)) return a.isEqual(b);
    if (b.isEqual && _.isFunction(b.isEqual)) return b.isEqual(a);
    // Compare `[[Class]]` names.
    var className = toString.call(a);
    if (className != toString.call(b)) return false;
    switch (className) {
      // Strings, numbers, dates, and booleans are compared by value.
      case '[object String]':
        // Primitives and their corresponding object wrappers are equivalent; thus, `"5"` is
        // equivalent to `new String("5")`.
        return a == String(b);
      case '[object Number]':
        // `NaN`s are equivalent, but non-reflexive. An `egal` comparison is performed for
        // other numeric values.
        return a != +a ? b != +b : (a == 0 ? 1 / a == 1 / b : a == +b);
      case '[object Date]':
      case '[object Boolean]':
        // Coerce dates and booleans to numeric primitive values. Dates are compared by their
        // millisecond representations. Note that invalid dates with millisecond representations
        // of `NaN` are not equivalent.
        return +a == +b;
      // RegExps are compared by their source patterns and flags.
      case '[object RegExp]':
        return a.source == b.source &&
               a.global == b.global &&
               a.multiline == b.multiline &&
               a.ignoreCase == b.ignoreCase;
    }
    if (typeof a != 'object' || typeof b != 'object') return false;
    // Assume equality for cyclic structures. The algorithm for detecting cyclic
    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.
    var length = stack.length;
    while (length--) {
      // Linear search. Performance is inversely proportional to the number of
      // unique nested structures.
      if (stack[length] == a) return true;
    }
    // Add the first object to the stack of traversed objects.
    stack.push(a);
    var size = 0, result = true;
    // Recursively compare objects and arrays.
    if (className == '[object Array]') {
      // Compare array lengths to determine if a deep comparison is necessary.
      size = a.length;
      result = size == b.length;
      if (result) {
        // Deep compare the contents, ignoring non-numeric properties.
        while (size--) {
          // Ensure commutative equality for sparse arrays.
          if (!(result = size in a == size in b && eq(a[size], b[size], stack))) break;
        }
      }
    } else {
      // Objects with different constructors are not equivalent.
      if ('constructor' in a != 'constructor' in b || a.constructor != b.constructor) return false;
      // Deep compare objects.
      for (var key in a) {
        if (_.has(a, key)) {
          // Count the expected number of properties.
          size++;
          // Deep compare each member.
          if (!(result = _.has(b, key) && eq(a[key], b[key], stack))) break;
        }
      }
      // Ensure that both objects contain the same number of properties.
      if (result) {
        for (key in b) {
          if (_.has(b, key) && !(size--)) break;
        }
        result = !size;
      }
    }
    // Remove the first object from the stack of traversed objects.
    stack.pop();
    return result;
  }

  // Perform a deep comparison to check if two objects are equal.
  _.isEqual = function(a, b) {
    return eq(a, b, []);
  };

  // Is a given array, string, or object empty?
  // An "empty" object has no enumerable own-properties.
  _.isEmpty = function(obj) {
    if (obj == null) return true;
    if (_.isArray(obj) || _.isString(obj)) return obj.length === 0;
    for (var key in obj) if (_.has(obj, key)) return false;
    return true;
  };

  // Is a given value a DOM element?
  _.isElement = function(obj) {
    return !!(obj && obj.nodeType == 1);
  };

  // Is a given value an array?
  // Delegates to ECMA5's native Array.isArray
  _.isArray = nativeIsArray || function(obj) {
    return toString.call(obj) == '[object Array]';
  };

  // Is a given variable an object?
  _.isObject = function(obj) {
    return obj === Object(obj);
  };

  // Is a given variable an arguments object?
  _.isArguments = function(obj) {
    return toString.call(obj) == '[object Arguments]';
  };
  if (!_.isArguments(arguments)) {
    _.isArguments = function(obj) {
      return !!(obj && _.has(obj, 'callee'));
    };
  }

  // Is a given value a function?
  _.isFunction = function(obj) {
    return toString.call(obj) == '[object Function]';
  };

  // Is a given value a string?
  _.isString = function(obj) {
    return toString.call(obj) == '[object String]';
  };

  // Is a given value a number?
  _.isNumber = function(obj) {
    return toString.call(obj) == '[object Number]';
  };

  // Is a given object a finite number?
  _.isFinite = function(obj) {
    return _.isNumber(obj) && isFinite(obj);
  };

  // Is the given value `NaN`?
  _.isNaN = function(obj) {
    // `NaN` is the only value for which `===` is not reflexive.
    return obj !== obj;
  };

  // Is a given value a boolean?
  _.isBoolean = function(obj) {
    return obj === true || obj === false || toString.call(obj) == '[object Boolean]';
  };

  // Is a given value a date?
  _.isDate = function(obj) {
    return toString.call(obj) == '[object Date]';
  };

  // Is the given value a regular expression?
  _.isRegExp = function(obj) {
    return toString.call(obj) == '[object RegExp]';
  };

  // Is a given value equal to null?
  _.isNull = function(obj) {
    return obj === null;
  };

  // Is a given variable undefined?
  _.isUndefined = function(obj) {
    return obj === void 0;
  };

  // Has own property?
  _.has = function(obj, key) {
    return hasOwnProperty.call(obj, key);
  };

  // Utility Functions
  // -----------------

  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its
  // previous owner. Returns a reference to the Underscore object.
  _.noConflict = function() {
    root._ = previousUnderscore;
    return this;
  };

  // Keep the identity function around for default iterators.
  _.identity = function(value) {
    return value;
  };

  // Run a function **n** times.
  _.times = function (n, iterator, context) {
    for (var i = 0; i < n; i++) iterator.call(context, i);
  };

  // Escape a string for HTML interpolation.
  _.escape = function(string) {
    return (''+string).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/"/g, '&quot;').replace(/'/g, '&#x27;').replace(/\//g,'&#x2F;');
  };

  // If the value of the named property is a function then invoke it;
  // otherwise, return it.
  _.result = function(object, property) {
    if (object == null) return null;
    var value = object[property];
    return _.isFunction(value) ? value.call(object) : value;
  };

  // Add your own custom functions to the Underscore object, ensuring that
  // they're correctly added to the OOP wrapper as well.
  _.mixin = function(obj) {
    each(_.functions(obj), function(name){
      addToWrapper(name, _[name] = obj[name]);
    });
  };

  // Generate a unique integer id (unique within the entire client session).
  // Useful for temporary DOM ids.
  var idCounter = 0;
  _.uniqueId = function(prefix) {
    var id = idCounter++;
    return prefix ? prefix + id : id;
  };

  // By default, Underscore uses ERB-style template delimiters, change the
  // following template settings to use alternative delimiters.
  _.templateSettings = {
    evaluate    : /<%([\s\S]+?)%>/g,
    interpolate : /<%=([\s\S]+?)%>/g,
    escape      : /<%-([\s\S]+?)%>/g
  };

  // When customizing `templateSettings`, if you don't want to define an
  // interpolation, evaluation or escaping regex, we need one that is
  // guaranteed not to match.
  var noMatch = /.^/;

  // Certain characters need to be escaped so that they can be put into a
  // string literal.
  var escapes = {
    '\\': '\\',
    "'": "'",
    'r': '\r',
    'n': '\n',
    't': '\t',
    'u2028': '\u2028',
    'u2029': '\u2029'
  };

  for (var p in escapes) escapes[escapes[p]] = p;
  var escaper = /\\|'|\r|\n|\t|\u2028|\u2029/g;
  var unescaper = /\\(\\|'|r|n|t|u2028|u2029)/g;

  // Within an interpolation, evaluation, or escaping, remove HTML escaping
  // that had been previously added.
  var unescape = function(code) {
    return code.replace(unescaper, function(match, escape) {
      return escapes[escape];
    });
  };

  // JavaScript micro-templating, similar to John Resig's implementation.
  // Underscore templating handles arbitrary delimiters, preserves whitespace,
  // and correctly escapes quotes within interpolated code.
  _.template = function(text, data, settings) {
    settings = _.defaults(settings || {}, _.templateSettings);

    // Compile the template source, taking care to escape characters that
    // cannot be included in a string literal and then unescape them in code
    // blocks.
    var source = "__p+='" + text
      .replace(escaper, function(match) {
        return '\\' + escapes[match];
      })
      .replace(settings.escape || noMatch, function(match, code) {
        return "'+\n_.escape(" + unescape(code) + ")+\n'";
      })
      .replace(settings.interpolate || noMatch, function(match, code) {
        return "'+\n(" + unescape(code) + ")+\n'";
      })
      .replace(settings.evaluate || noMatch, function(match, code) {
        return "';\n" + unescape(code) + "\n;__p+='";
      }) + "';\n";

    // If a variable is not specified, place data values in local scope.
    if (!settings.variable) source = 'with(obj||{}){\n' + source + '}\n';

    source = "var __p='';" +
      "var print=function(){__p+=Array.prototype.join.call(arguments, '')};\n" +
      source + "return __p;\n";

    var render = new Function(settings.variable || 'obj', '_', source);
    if (data) return render(data, _);
    var template = function(data) {
      return render.call(this, data, _);
    };

    // Provide the compiled function source as a convenience for build time
    // precompilation.
    template.source = 'function(' + (settings.variable || 'obj') + '){\n' +
      source + '}';

    return template;
  };

  // Add a "chain" function, which will delegate to the wrapper.
  _.chain = function(obj) {
    return _(obj).chain();
  };

  // The OOP Wrapper
  // ---------------

  // If Underscore is called as a function, it returns a wrapped object that
  // can be used OO-style. This wrapper holds altered versions of all the
  // underscore functions. Wrapped objects may be chained.
  var wrapper = function(obj) { this._wrapped = obj; };

  // Expose `wrapper.prototype` as `_.prototype`
  _.prototype = wrapper.prototype;

  // Helper function to continue chaining intermediate results.
  var result = function(obj, chain) {
    return chain ? _(obj).chain() : obj;
  };

  // A method to easily add functions to the OOP wrapper.
  var addToWrapper = function(name, func) {
    wrapper.prototype[name] = function() {
      var args = slice.call(arguments);
      unshift.call(args, this._wrapped);
      return result(func.apply(_, args), this._chain);
    };
  };

  // Add all of the Underscore functions to the wrapper object.
  _.mixin(_);

  // Add all mutator Array functions to the wrapper.
  each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {
    var method = ArrayProto[name];
    wrapper.prototype[name] = function() {
      var wrapped = this._wrapped;
      method.apply(wrapped, arguments);
      var length = wrapped.length;
      if ((name == 'shift' || name == 'splice') && length === 0) delete wrapped[0];
      return result(wrapped, this._chain);
    };
  });

  // Add all accessor Array functions to the wrapper.
  each(['concat', 'join', 'slice'], function(name) {
    var method = ArrayProto[name];
    wrapper.prototype[name] = function() {
      return result(method.apply(this._wrapped, arguments), this._chain);
    };
  });

  // Start chaining a wrapped Underscore object.
  wrapper.prototype.chain = function() {
    this._chain = true;
    return this;
  };

  // Extracts the result from a wrapped and chained object.
  wrapper.prototype.value = function() {
    return this._wrapped;
  };

}).call(this);

/*global _: false, $: false, localStorage: false, XMLHttpRequest: false,
 XDomainRequest: false, exports: false, require: false */
(function(root) {
  root.Parse = root.Parse || {};
  /**
   * Contains all Parse API classes and functions.
   * @name Parse
   * @namespace
   *
   * Contains all Parse API classes and functions.
   */
  var Parse = root.Parse;

  // Import Parse's local copy of underscore.
  if (typeof(exports) !== "undefined" && exports._) {
    // We're running in Node.js.  Pull in the dependencies.
    Parse._ = exports._.noConflict();
    Parse.localStorage = require('localStorage');
    Parse.XMLHttpRequest = require('xmlhttprequest').XMLHttpRequest;
    exports.Parse = Parse;
  } else {
    Parse._ = _.noConflict();
    if (typeof(localStorage) !== "undefined") {
      Parse.localStorage = localStorage;
    }
    if (typeof(XMLHttpRequest) !== "undefined") {
      Parse.XMLHttpRequest = XMLHttpRequest;
    }
  }

  // If jQuery or Zepto has been included, grab a reference to it.
  if (typeof($) !== "undefined") {
    Parse.$ = $;
  }

  // Helpers
  // -------

  // Shared empty constructor function to aid in prototype-chain creation.
  var EmptyConstructor = function() {};

  
  // Helper function to correctly set up the prototype chain, for subclasses.
  // Similar to `goog.inherits`, but uses a hash of prototype properties and
  // class properties to be extended.
  var inherits = function(parent, protoProps, staticProps) {
    var child;

    // The constructor function for the new subclass is either defined by you
    // (the "constructor" property in your `extend` definition), or defaulted
    // by us to simply call the parent's constructor.
    if (protoProps && protoProps.hasOwnProperty('constructor')) {
      child = protoProps.constructor;
    } else {
      /** @ignore */
      child = function(){ parent.apply(this, arguments); };
    }

    // Inherit class (static) properties from parent.
    Parse._.extend(child, parent);

    // Set the prototype chain to inherit from `parent`, without calling
    // `parent`'s constructor function.
    EmptyConstructor.prototype = parent.prototype;
    child.prototype = new EmptyConstructor();

    // Add prototype properties (instance properties) to the subclass,
    // if supplied.
    if (protoProps) {
      Parse._.extend(child.prototype, protoProps);
    }

    // Add static properties to the constructor function, if supplied.
    if (staticProps) {
      Parse._.extend(child, staticProps);
    }

    // Correctly set child's `prototype.constructor`.
    child.prototype.constructor = child;

    // Set a convenience property in case the parent's prototype is
    // needed later.
    child.__super__ = parent.prototype;

    return child;
  };

  // Set the server for Parse to talk to.
  Parse.serverURL = "https://api.parse.com";

  /**
   * Call this method first to set up your authentication tokens for Parse.
   * You can get your keys from the Data Browser on parse.com.
   * @param {String} applicationId Your Parse Application ID.
   * @param {String} javaScriptKey Your Parse JavaScript Key.
   */
  Parse.initialize = function(applicationId, javaScriptKey) {
    Parse._initialize(applicationId, javaScriptKey);
  };

  /**
   * Call this method first to set up master authentication tokens for Parse.
   * This method is for Parse's own private use.
   * @param {String} applicationId Your Parse Application ID.
   * @param {String} javaScriptKey Your Parse JavaScript Key.
   * @param {String} masterKey Your Parse Master Key.
   */
  Parse._initialize = function(applicationId, javaScriptKey, masterKey) {
    Parse.applicationId = applicationId;
    Parse.javaScriptKey = javaScriptKey;
    Parse.masterKey = masterKey;
    Parse._useMasterKey = false;
  };

  /**
   * Returns prefix for localStorage keys used by this instance of Parse.
   * @param {String} path The relative suffix to append to it.
   *     null or undefined is treated as the empty string.
   * @return {String} The full key name.
   */
  Parse._getParsePath = function(path) {
    if (!Parse.applicationId) {
      throw "You need to call Parse.initialize before using Parse.";
    }
    if (!path) {
      path = "";
    }
    if (!Parse._.isString(path)) {
      throw "Tried to get a localStorage path that wasn't a String.";
    }
    if (path[0] === "/") {
      path = path.substring(1);
    }
    return "Parse/" + Parse.applicationId + "/" + path;
  };

  /**
   * Returns the unique string for this app on this machine.
   * Gets reset when localStorage is cleared.
   */
  Parse._installationId = null;
  Parse._getInstallationId = function() {
    // See if it's cached in RAM.
    if (Parse._installationId) {
      return Parse._installationId;
    }

    // Try to get it from localStorage.
    var path = Parse._getParsePath("installationId");
    Parse._installationId = Parse.localStorage.getItem(path);

    if (!Parse._installationId || Parse._installationId === "") {
      // It wasn't in localStorage, so create a new one.
      var hexOctet = function() {
        return Math.floor((1+Math.random())*0x10000).toString(16).substring(1);
      };
      Parse._installationId = (
        hexOctet() + hexOctet() + "-" +
        hexOctet() + "-" +
        hexOctet() + "-" +
        hexOctet() + "-" +
        hexOctet() + hexOctet() + hexOctet());
      Parse.localStorage.setItem(path, Parse._installationId);
    }

    return Parse._installationId;
  };

  Parse._parseDate = function(iso8601) {
    var regexp = new RegExp(
      "^([0-9]{1,4})-([0-9]{1,2})-([0-9]{1,2})" + "T" +
      "([0-9]{1,2}):([0-9]{1,2}):([0-9]{1,2})" +
      "(.([0-9]+))?" + "Z$");
    var match = regexp.exec(iso8601);
    if (!match) {
      return null;
    }

    var year = match[1] || 0;
    var month = (match[2] || 1) - 1;
    var day = match[3] || 0;
    var hour = match[4] || 0;
    var minute = match[5] || 0;
    var second = match[6] || 0;
    var milli = match[8] || 0;

    return new Date(Date.UTC(year, month, day, hour, minute, second, milli));
  };

  Parse._ajaxIE8 = function(method, url, data, success, error) {
    var promise = new Parse.Promise();
    var xdr = new XDomainRequest();
    xdr.onload = function() {
      var response;
      try {
        response = JSON.parse(xdr.responseText);
      } catch (e) {
        if (error) {
          error(xdr);
        }
        promise.reject(e);
      }
      if (response) {
        if (success) {
          success(response, xdr);
        }
        promise.resolve(response);
      }
    };
    xdr.onerror = xdr.ontimeout = function() {
      if (error) {
        error(xdr);
      }
      promise.reject(xdr);
    };
    xdr.onprogress = function() {};
    xdr.open(method, url);
    xdr.send(data);
    return promise;
  };

  Parse._ajax = function(method, url, data, success, error) {
    if (typeof(XDomainRequest) !== "undefined") {
      return Parse._ajaxIE8(method, url, data, success, error);
    }

    var promise = new Parse.Promise();
    var handled = false;

    var xhr = new Parse.XMLHttpRequest();
    xhr.onreadystatechange = function() {
      if (xhr.readyState === 4) {
        if (handled) {
          return;
        }
        handled = true;

        if (xhr.status >= 200 && xhr.status < 300) {
          var response;
          try {
            response = JSON.parse(xhr.responseText);
          } catch (e) {
            if (error) {
              error(xhr);
            }
            promise.reject(e);
          }
          if (response) {
            if (success) {
              success(response, xhr.status, xhr);
            }
            promise.resolve(response, xhr.status, xhr);
          }
        } else {
          if (error) {
            error(xhr);
          }
          promise.reject(xhr);
        }
      }
    };
    xhr.open(method, url, true);
    xhr.setRequestHeader("Content-Type", "text/plain");  // avoid pre-flight.
    xhr.send(data);
    return promise;
  };

  // A self-propagating extend function.
  Parse._extend = function(protoProps, classProps) {
    var child = inherits(this, protoProps, classProps);
    child.extend = this.extend;
    return child;
  };

  /**
   * route is classes, users, login, etc.
   * objectId is null if there is no associated objectId.
   * method is the http method for the REST API.
   * dataObject is the payload as an object, or null if there is none.
   * options is just a success/error callback hash.
   * @ignore
   */
  Parse._request = function(route, className, objectId, method, dataObject,
                            options) {
    if (!Parse.applicationId) {
      throw "You must specify your applicationId using Parse.initialize";
    }

    if (!Parse.javaScriptKey && !Parse.masterKey) {
      throw "You must specify a key using Parse.initialize";
    }

    
    if (route !== "batch" &&
        route !== "classes" &&
        route !== "functions" &&
        route !== "login" &&
        route !== "push" &&
        route !== "requestPasswordReset" &&
        route !== "users") {
      throw "Bad route: '" + route + "'.";
    }

    var url = Parse.serverURL;
    if (url.charAt(url.length - 1) !== "/") {
      url += "/";
    }
    url += "1/" + route;
    if (className) {
      url += "/" + className;
    }
    if (objectId) {
      url += "/" + objectId;
    }

    dataObject = Parse._.clone(dataObject || {});
    if (method !== "POST") {
      dataObject._method = method;
      method = "POST";
    }
    dataObject._ApplicationId = Parse.applicationId;
    if (!Parse._useMasterKey) {
      dataObject._JavaScriptKey = Parse.javaScriptKey;
    } else {
      dataObject._MasterKey = Parse.masterKey;
    }

    dataObject._ClientVersion = Parse.VERSION;
    dataObject._InstallationId = Parse._getInstallationId();
    // Pass the session token on every request.
    var currentUser = Parse.User.current();
    if (currentUser && currentUser._sessionToken) {
      dataObject._SessionToken = currentUser._sessionToken;
    }
    var data = JSON.stringify(dataObject);

    options = options || {};
    return Parse._ajax(method, url, data, options.success, options.error);
  };

  // Helper function to get a value from a Backbone object as a property
  // or as a function.
  Parse._getValue = function(object, prop) {
    if (!(object && object[prop])) {
      return null;
    }
    return Parse._.isFunction(object[prop]) ? object[prop]() : object[prop];
  };

  /**
   * Converts a value in a Parse Object into the appropriate representation.
   * This is the JS equivalent of Java's Parse.maybeReferenceAndEncode(Object)
   * if seenObjects is falsey. Otherwise any Parse.Objects not in
   * seenObjects will be fully embedded rather than encoded
   * as a pointer.  This array will be used to prevent going into an infinite
   * loop because we have circular references.  If <seenObjects>
   * is set, then none of the Parse Objects that are serialized can be dirty.
   */
  Parse._encode = function(value, seenObjects, disallowObjects) {
    var _ = Parse._;
    if (value instanceof Parse.Object) {
      if (disallowObjects) {
        throw "Parse.Objects not allowed here";
      }
      if (!seenObjects || _.include(seenObjects, value) || !value._hasData) {
        return value._toPointer();
      } else if (!value.dirty()) {
        seenObjects = seenObjects.concat(value);
        return Parse._encode(value._toFullJSON(seenObjects),
                             seenObjects,
                             disallowObjects);
      } else {
        throw "Can't fully embed a dirty object";
      }
    } else if (value instanceof Parse.ACL) {
      return value.toJSON();
    } else if (_.isDate(value)) {
      return { "__type": "Date", "iso": value.toJSON() };
    } else if (value instanceof Parse.GeoPoint) {
      return value.toJSON();
    } else if (_.isArray(value)) {
      return _.map(value, function(x) {
        return Parse._encode(x, seenObjects, disallowObjects);
      });
    } else if (_.isRegExp(value)) {
      return value.source;
    } else if (value instanceof Parse.Relation) {
      return value.toJSON();
    } else if (value instanceof Parse.Op) {
      return value.toJSON();
    } else if (value instanceof Object) {
      var output = {};
      Parse._each(value, function(v, k) {
        output[k] = Parse._encode(v, seenObjects, disallowObjects);
      });
      return output;
    } else {
      return value;
    }
  };

  /**
   * The inverse function of Parse._encode.
   * TODO: make decode not mutate value.
   */
  Parse._decode = function(key, value) {
    var _ = Parse._;
    if (!_.isObject(value)) {
      return value;
    } else if (_.isArray(value)) {
      Parse._each(value, function(v, k) {
        value[k] = Parse._decode(k, v);
      });
      return value;
    } else if (value instanceof Parse.Object) {
      return value;
    } else if (value instanceof Parse.Op) {
      return value;
    } else if (value.__op) {
      // Must be a Op.
      return Parse.Op._decode(value);
    } else if (value.__type === "Pointer") {
      var pointer = Parse.Object._create(value.className);
      pointer._finishFetch({ objectId: value.objectId }, false);
      return pointer;
    } else if (value.__type === "Object") {
      // It's an Object included in a query result.
      var className = value.className;
      delete value.__type;
      delete value.className;
      var object = Parse.Object._create(className);
      object._finishFetch(value, true);
      return object;
    } else if (value.__type === "Date") {
      return Parse._parseDate(value.iso);
    } else if (value.__type === "GeoPoint") {
      return new Parse.GeoPoint({
        latitude: value.latitude,
        longitude: value.longitude
      });
    } else if (key === "ACL") {
      if (value instanceof Parse.ACL) {
        return value;
      } else {
        return new Parse.ACL(value);
      }
    } else if (value.__type === "Relation") {
      var relation = new Parse.Relation(null, key);
      relation.targetClassName = value.className;
      return relation;
    } else {
      Parse._each(value, function(v, k) {
        value[k] = Parse._decode(k, v);
      });
     return value;
    }
  };

  /**
   * Does a deep traversal of every item in object, calling func on all
   * instances of Parse.Object.
   * @param {Object} object The object or array to traverse deeply.
   * @param {Function} func The function to call for every Parse.Object. It will
   *     be passed the Parse Object. If it returns a truthy value, that value
   *     will replace the object in its parent container.
   * @returns {} Undefined, unless object is a Parse.Object, in which case it
   *     returns the result of calling func on that object.
   */
  Parse._traverse = function(object, func) {
    if (object instanceof Parse.Object) {
      Parse._traverse(object.attributes, func);
      return func(object);
    }
    if (object instanceof Parse.Relation) {
      // Nothing needs to be done, but we don't want to recurse into the
      // relation's parent infinitely, so we catch this case.
      return;
    }
    if (Parse._.isArray(object)) {
      Parse._.each(object, function(child, index) {
        var newChild = Parse._traverse(child, func);
        if (newChild) {
          object[index] = newChild;
        }
      });
      return;
    }
    if (Parse._.isObject(object)) {
      Parse._each(object, function(child, key) {
        var newChild = Parse._traverse(child, func);
        if (newChild) {
          object[key] = newChild;
        }
      });
      return;
    }
  };

  /**
   * This is like _.each, except:
   * * it doesn't work for so-called array-like objects,
   * * it does work for dictionaries with a "length" attribute.
   */
  Parse._each = function(obj, callback) {
    var _ = Parse._;
    if (_.isObject(obj)) {
      _.each(_.keys(obj), function(key) {
        callback(obj[key], key);
      });
    } else {
      _.each(obj, callback);
    }
  };

  // Helper function to check null or undefined.
  Parse._isNullOrUndefined = function(x) {
    return Parse._.isNull(x) || Parse._.isUndefined(x);
  };
}(this));

(function(root) {
  root.Parse = root.Parse || {};
  var Parse = root.Parse;
  var _ = Parse._;

  /**
   * Constructs a new Parse.Error object with the given code and message.
   * @param {Number} code An error code constant from <code>Parse.Error</code>.
   * @param {String} message A detailed description of the error.
   * @class
   *
   * <p>Class used for all objects passed to error callbacks.</p>
   */
  Parse.Error = function(code, message) {
    this.code = code;
    this.message = message;
  };

  _.extend(Parse.Error, /** @lends Parse.Error */ {
    /**
     * Error code indicating some error other than those enumerated here.
     * @constant
     */
    OTHER_CAUSE: -1,

    /**
     * Error code indicating that something has gone wrong with the server.
     * If you get this error code, it is Parse's fault. Contact us at 
     * https://parse.com/help
     * @constant
     */
    INTERNAL_SERVER_ERROR: 1,

    /**
     * Error code indicating the connection to the Parse servers failed.
     * @constant
     */
    CONNECTION_FAILED: 100,

    /**
     * Error code indicating the specified object doesn't exist.
     * @constant
     */
    OBJECT_NOT_FOUND: 101,

    /**
     * Error code indicating you tried to query with a datatype that doesn't
     * support it, like exact matching an array or object.
     * @constant
     */
    INVALID_QUERY: 102,

    /**
     * Error code indicating a missing or invalid classname. Classnames are
     * case-sensitive. They must start with a letter, and a-zA-Z0-9_ are the
     * only valid characters.
     * @constant
     */
    INVALID_CLASS_NAME: 103,

    /**
     * Error code indicating an unspecified object id.
     * @constant
     */
    MISSING_OBJECT_ID: 104,

    /**
     * Error code indicating an invalid key name. Keys are case-sensitive. They
     * must start with a letter, and a-zA-Z0-9_ are the only valid characters.
     * @constant
     */
    INVALID_KEY_NAME: 105,

    /**
     * Error code indicating a malformed pointer. You should not see this unless
     * you have been mucking about changing internal Parse code.
     * @constant
     */
    INVALID_POINTER: 106,

    /**
     * Error code indicating that badly formed JSON was received upstream. This
     * either indicates you have done something unusual with modifying how
     * things encode to JSON, or the network is failing badly.
     * @constant
     */
    INVALID_JSON: 107,

    /**
     * Error code indicating that the feature you tried to access is only
     * available internally for testing purposes.
     * @constant
     */
    COMMAND_UNAVAILABLE: 108,

    /**
     * You must call Parse.initialize before using the Parse library.
     * @constant
     */
    NOT_INITIALIZED: 109,

    /**
     * Error code indicating that a field was set to an inconsistent type.
     * @constant
     */
    INCORRECT_TYPE: 111,

    /**
     * Error code indicating an invalid channel name. A channel name is either
     * an empty string (the broadcast channel) or contains only a-zA-Z0-9_
     * characters and starts with a letter.
     * @constant
     */
    INVALID_CHANNEL_NAME: 112,

    /**
     * Error code indicating that push is misconfigured.
     * @constant
     */
    PUSH_MISCONFIGURED: 115,

    /**
     * Error code indicating that the object is too large.
     * @constant
     */
    OBJECT_TOO_LARGE: 116,

    /**
     * Error code indicating that the operation isn't allowed for clients.
     * @constant
     */
    OPERATION_FORBIDDEN: 119,

    /**
     * Error code indicating the result was not found in the cache.
     * @constant
     */
    CACHE_MISS: 120,

    /**
     * Error code indicating that an invalid key was used in a nested
     * JSONObject.
     * @constant
     */
    INVALID_NESTED_KEY: 121,

    /**
     * Error code indicating that an invalid filename was used for ParseFile.
     * A valid file name contains only a-zA-Z0-9_. characters and is between 1
     * and 128 characters.
     * @constant
     */
    INVALID_FILE_NAME: 122,

    /**
     * Error code indicating an invalid ACL was provided.
     * @constant
     */
    INVALID_ACL: 123,

    /**
     * Error code indicating that the request timed out on the server. Typically
     * this indicates that the request is too expensive to run.
     * @constant
     */
    TIMEOUT: 124,

    /**
     * Error code indicating that the email address was invalid.
     * @constant
     */
    INVALID_EMAIL_ADDRESS: 125,

    /**
     * Error code indicating a missing content type.
     * @constant
     */
    MISSING_CONTENT_TYPE: 126,

    /**
     * Error code indicating a missing content length.
     * @constant
     */
    MISSING_CONTENT_LENGTH: 127,

    /**
     * Error code indicating an invalid content length.
     * @constant
     */
    INVALID_CONTENT_LENGTH: 128,

    /**
     * Error code indicating a file that was too large.
     * @constant
     */
    FILE_TOO_LARGE: 129,

    /**
     * Error code indicating an error saving a file.
     * @constant
     */
    FILE_SAVE_ERROR: 130,

    /**
     * Error code indicating an error deleting a file.
     * @constant
     */
    FILE_DELETE_ERROR: 153,

    /**
     * Error code indicating that a unique field was given a value that is
     * already taken.
     * @constant
     */
    DUPLICATE_VALUE: 137,

    /**
     * Error code indicating that a role's name is invalid.
     * @constant
     */
    INVALID_ROLE_NAME: 139,

    /**
     * Error code indicating that an application quota was exceeded.  Upgrade to
     * resolve.
     * @constant
     */
    EXCEEDED_QUOTA: 140,

    /**
     * Error code indicating that a Cloud Code script failed.
     * @constant
     */
    SCRIPT_FAILED: 141,

    /**
     * Error code indicating that a Cloud Code validation failed.
     * @constant
     */
    VALIDATION_ERROR: 142,

    /**
     * Error code indicating that invalid image data was provided.
     * @constant
     */
    INVALID_IMAGE_DATA: 150,

    /**
     * Error code indicating an unsaved file.
     * @constant
     */
    UNSAVED_FILE_ERROR: 151,

    /**
     * Error code indicating an invalid push time.
     */
    INVALID_PUSH_TIME_ERROR: 152,

    /**
     * Error code indicating that the username is missing or empty.
     * @constant
     */
    USERNAME_MISSING: 200,

    /**
     * Error code indicating that the password is missing or empty.
     * @constant
     */
    PASSWORD_MISSING: 201,

    /**
     * Error code indicating that the username has already been taken.
     * @constant
     */
    USERNAME_TAKEN: 202,

    /**
     * Error code indicating that the email has already been taken.
     * @constant
     */
    EMAIL_TAKEN: 203,

    /**
     * Error code indicating that the email is missing, but must be specified.
     * @constant
     */
    EMAIL_MISSING: 204,

    /**
     * Error code indicating that a user with the specified email was not found.
     * @constant
     */
    EMAIL_NOT_FOUND: 205,

    /**
     * Error code indicating that a user object without a valid session could
     * not be altered.
     * @constant
     */
    SESSION_MISSING: 206,

    /**
     * Error code indicating that a user can only be created through signup.
     * @constant
     */
    MUST_CREATE_USER_THROUGH_SIGNUP: 207,

    /**
     * Error code indicating that an an account being linked is already linked
     * to another user.
     * @constant
     */
    ACCOUNT_ALREADY_LINKED: 208,

    /**
     * Error code indicating that a user cannot be linked to an account because
     * that account's id could not be found.
     * @constant
     */
    LINKED_ID_MISSING: 250,

    /**
     * Error code indicating that a user with a linked (e.g. Facebook) account
     * has an invalid session.
     * @constant
     */
    INVALID_LINKED_SESSION: 251,

    /**
     * Error code indicating that a service being linked (e.g. Facebook or
     * Twitter) is unsupported.
     * @constant
     */
    UNSUPPORTED_SERVICE: 252
  });

}(this));

/*global _: false */
(function() {
  var root = this;
  var Parse = (root.Parse || (root.Parse = {}));
  var eventSplitter = /\s+/;
  var slice = Array.prototype.slice;

  /**
   * @class
   *
   * <p>Parse.Events is a fork of Backbone's Events module, provided for your
   * convenience.</p>
   *
   * <p>A module that can be mixed in to any object in order to provide
   * it with custom events. You may bind callback functions to an event
   * with `on`, or remove these functions with `off`.
   * Triggering an event fires all callbacks in the order that `on` was
   * called.
   *
   * <pre>
   *     var object = {};
   *     _.extend(object, Parse.Events);
   *     object.on('expand', function(){ alert('expanded'); });
   *     object.trigger('expand');</pre></p>
   *
   * <p>For more information, see the
   * <a href="http://documentcloud.github.com/backbone/#Events">Backbone
   * documentation</a>.</p>
   */
  Parse.Events = {
    /**
     * Bind one or more space separated events, `events`, to a `callback`
     * function. Passing `"all"` will bind the callback to all events fired.
     */
    on: function(events, callback, context) {

      var calls, event, node, tail, list;
      if (!callback) {
        return this;
      }
      events = events.split(eventSplitter);
      calls = this._callbacks || (this._callbacks = {});

      // Create an immutable callback list, allowing traversal during
      // modification.  The tail is an empty object that will always be used
      // as the next node.
      event = events.shift();
      while (event) {
        list = calls[event];
        node = list ? list.tail : {};
        node.next = tail = {};
        node.context = context;
        node.callback = callback;
        calls[event] = {tail: tail, next: list ? list.next : node};
        event = events.shift();
      }

      return this;
    },

    /**
     * Remove one or many callbacks. If `context` is null, removes all callbacks
     * with that function. If `callback` is null, removes all callbacks for the
     * event. If `events` is null, removes all bound callbacks for all events.
     */
    off: function(events, callback, context) {
      var event, calls, node, tail, cb, ctx;

      // No events, or removing *all* events.
      if (!(calls = this._callbacks)) {
        return;
      }
      if (!(events || callback || context)) {
        delete this._callbacks;
        return this;
      }

      // Loop through the listed events and contexts, splicing them out of the
      // linked list of callbacks if appropriate.
      events = events ? events.split(eventSplitter) : _.keys(calls);
      event = events.shift();
      while (event) {
        node = calls[event];
        delete calls[event];
        if (!node || !(callback || context)) {
          continue;
        }
        // Create a new list, omitting the indicated callbacks.
        tail = node.tail;
        node = node.next;
        while (node !== tail) {
          cb = node.callback;
          ctx = node.context;
          if ((callback && cb !== callback) || (context && ctx !== context)) {
            this.on(event, cb, ctx);
          }
          node = node.next;
        }
        event = events.shift();
      }

      return this;
    },

    /**
     * Trigger one or many events, firing all bound callbacks. Callbacks are
     * passed the same arguments as `trigger` is, apart from the event name
     * (unless you're listening on `"all"`, which will cause your callback to
     * receive the true name of the event as the first argument).
     */
    trigger: function(events) {
      var event, node, calls, tail, args, all, rest;
      if (!(calls = this._callbacks)) {
        return this;
      }
      all = calls.all;
      events = events.split(eventSplitter);
      rest = slice.call(arguments, 1);

      // For each event, walk through the linked list of callbacks twice,
      // first to trigger the event, then to trigger any `"all"` callbacks.
      event = events.shift();
      while (event) {
        node = calls[event];
        if (node) {
          tail = node.tail;
          while ((node = node.next) !== tail) {
            node.callback.apply(node.context || this, rest);
          }
        }
        node = all;
        if (node) {
          tail = node.tail;
          args = [event].concat(rest);
          while ((node = node.next) !== tail) {
            node.callback.apply(node.context || this, args);
          }
        }
        event = events.shift();
      }

      return this;
    }
  };  

  /**
   * @function
   */
  Parse.Events.bind = Parse.Events.on;

  /**
   * @function
   */
  Parse.Events.unbind = Parse.Events.off;
}.call(this));


/*global navigator: false */
(function(root) {
  root.Parse = root.Parse || {};
  var Parse = root.Parse;
  var _ = Parse._;

  /**
   * Creates a new GeoPoint with any of the following forms:<br>
   *   <pre>
   *   new GeoPoint(otherGeoPoint)
   *   new GeoPoint(30, 30)
   *   new GeoPoint([30, 30])
   *   new GeoPoint({latitude: 30, longitude: 30})
   *   new GeoPoint()  // defaults to (0, 0)
   *   </pre>
   * @class
   *
   * <p>Represents a latitude / longitude point that may be associated
   * with a key in a ParseObject or used as a reference point for geo queries.
   * This allows proximity-based queries on the key.</p>
   *
   * <p>Only one key in a class may contain a GeoPoint.</p>
   *
   * <p>Example:<pre>
   *   var point = new Parse.GeoPoint(30.0, -20.0);
   *   var object = new Parse.Object("PlaceObject");
   *   object.set("location", point);
   *   object.save();</pre></p>
   */
  Parse.GeoPoint = function(arg1, arg2) {
    if (_.isArray(arg1)) {
      Parse.GeoPoint._validate(arg1[0], arg1[1]);
      this.latitude = arg1[0];
      this.longitude = arg1[1];
    } else if (_.isObject(arg1)) {
      Parse.GeoPoint._validate(arg1.latitude, arg1.longitude);
      this.latitude = arg1.latitude;
      this.longitude = arg1.longitude;
    } else if (_.isNumber(arg1) && _.isNumber(arg2)) {
      Parse.GeoPoint._validate(arg1, arg2);
      this.latitude = arg1;
      this.longitude = arg2;
    } else {
      this.latitude = 0;
      this.longitude = 0;
    }

    // Add properties so that anyone using Webkit or Mozilla will get an error
    // if they try to set values that are out of bounds.
    var self = this;
    if (this.__defineGetter__ && this.__defineSetter__) {
      // Use _latitude and _longitude to actually store the values, and add
      // getters and setters for latitude and longitude.
      this._latitude = this.latitude;
      this._longitude = this.longitude;
      this.__defineGetter__("latitude", function() {
        return self._latitude;
      });
      this.__defineGetter__("longitude", function() {
        return self._longitude;
      });
      this.__defineSetter__("latitude", function(val) {
        Parse.GeoPoint._validate(val, self.longitude);
        self._latitude = val;
      });
      this.__defineSetter__("longitude", function(val) {
        Parse.GeoPoint._validate(self.latitude, val);
        self._longitude = val;
      });
    }
  };

  /**
   * @lends Parse.GeoPoint.prototype
   * @property {float} latitude North-south portion of the coordinate, in range
   *   [-90, 90].  Throws an exception if set out of range in a modern browser.
   * @property {float} longitude East-west portion of the coordinate, in range
   *   [-180, 180].  Throws if set out of range in a modern browser.
   */

  /**
   * Throws an exception if the given lat-long is out of bounds.
   */
  Parse.GeoPoint._validate = function(latitude, longitude) {
    if (latitude < -90.0) {
      throw "Parse.GeoPoint latitude " + latitude + " < -90.0.";
    }
    if (latitude > 90.0) {
      throw "Parse.GeoPoint latitude " + latitude + " > 90.0.";
    }
    if (longitude < -180.0) {
      throw "Parse.GeoPoint longitude " + longitude + " < -180.0.";
    }
    if (longitude > 180.0) {
      throw "Parse.GeoPoint longitude " + longitude + " > 180.0.";
    }
  };

  /**
   * Creates a GeoPoint with the user's current location, if available.
   * Calls options.success with a new GeoPoint instance or calls options.error.
   * @param {Object} options An object with success and error callbacks.
   */
  Parse.GeoPoint.current = function(options) {
    var success = function(location) {
      if (options.success) {
        options.success(new Parse.GeoPoint({
          latitude: location.coords.latitude,
          longitude: location.coords.longitude
        }));
      }
    };
    var error = function(e) {
      if (options.error) {
        options.error(e);
      }
    };
    navigator.geolocation.getCurrentPosition(success, error);
  };

  Parse.GeoPoint.prototype = {
    /**
     * Returns a JSON representation of the GeoPoint, suitable for Parse.
     * @return {Object}
     */
    toJSON: function() {
      Parse.GeoPoint._validate(this.latitude, this.longitude);
      return {
        "__type": "GeoPoint",
        latitude: this.latitude,
        longitude: this.longitude
      };
    },

    /**
     * Returns the distance from this GeoPoint to another in radians.
     * @param {Parse.GeoPoint} point the other Parse.GeoPoint.
     * @return {Number}
     */
    radiansTo: function(point) {
      var d2r = Math.PI / 180.0;
      var lat1rad = this.latitude * d2r;
      var long1rad = this.longitude * d2r;
      var lat2rad = point.latitude * d2r;
      var long2rad = point.longitude * d2r;
      var deltaLat = lat1rad - lat2rad;
      var deltaLong = long1rad - long2rad;
      var sinDeltaLatDiv2 = Math.sin(deltaLat / 2);
      var sinDeltaLongDiv2 = Math.sin(deltaLong / 2);
      // Square of half the straight line chord distance between both points.
      var a = ((sinDeltaLatDiv2 * sinDeltaLatDiv2) +
               (Math.cos(lat1rad) * Math.cos(lat2rad) *
                sinDeltaLongDiv2 * sinDeltaLongDiv2));
      a = Math.min(1.0, a);
      return 2 * Math.asin(Math.sqrt(a));
    },

    /**
     * Returns the distance from this GeoPoint to another in kilometers.
     * @param {Parse.GeoPoint} point the other Parse.GeoPoint.
     * @return {Number}
     */
    kilometersTo: function(point) {
      return this.radiansTo(point) * 6371.0;
    },

    /**
     * Returns the distance from this GeoPoint to another in miles.
     * @param {Parse.GeoPoint} point the other Parse.GeoPoint.
     * @return {Number}
     */
    milesTo: function(point) {
      return this.radiansTo(point) * 3958.8;
    }
  };
}(this));

/*global navigator: false */
(function(root) {
  root.Parse = root.Parse || {};
  var Parse = root.Parse;
  var _ = Parse._;

  var PUBLIC_KEY = "*";

  /**
   * Creates a new ACL.
   * If no argument is given, the ACL has no permissions for anyone.
   * If the argument is a Parse.User, the ACL will have read and write
   *   permission for only that user.
   * If the argument is any other JSON object, that object will be interpretted
   *   as a serialized ACL created with toJSON().
   * @see Parse.Object#setACL
   * @class
   *
   * <p>An ACL, or Access Control List can be added to any
   * <code>Parse.Object</code> to restrict access to only a subset of users
   * of your application.</p>
   */
  Parse.ACL = function(arg1) {
    var self = this;
    self.permissionsById = {};
    if (_.isObject(arg1)) {
      if (arg1 instanceof Parse.User) {
        self.setReadAccess(arg1, true);
        self.setWriteAccess(arg1, true);
      } else {
        if (_.isFunction(arg1)) {
          throw "Parse.ACL() called with a function.  Did you forget ()?";
        }
        Parse._each(arg1, function(accessList, userId) {
          if (!_.isString(userId)) {
            throw "Tried to create an ACL with an invalid userId.";
          }
          self.permissionsById[userId] = {};
          Parse._each(accessList, function(allowed, permission) {
            if (permission !== "read" && permission !== "write") {
              throw "Tried to create an ACL with an invalid permission type.";
            }
            if (!_.isBoolean(allowed)) {
              throw "Tried to create an ACL with an invalid permission value.";
            }
            self.permissionsById[userId][permission] = allowed;
          });
        });
      }
    }
  };

  /**
   * Returns a JSON-encoded version of the ACL.
   * @return {Object}
   */
  Parse.ACL.prototype.toJSON = function() {
    return _.clone(this.permissionsById);
  };

  Parse.ACL.prototype._setAccess = function(accessType, userId, allowed) {
    if (userId instanceof Parse.User) {
      userId = userId.id;
    } else if (userId instanceof Parse.Role) {
      userId = "role:" + userId.getName();
    }
    if (!_.isString(userId)) {
      throw "userId must be a string.";
    }
    if (!_.isBoolean(allowed)) {
      throw "allowed must be either true or false.";
    }
    var permissions = this.permissionsById[userId];
    if (!permissions) {
      if (!allowed) {
        // The user already doesn't have this permission, so no action needed.
        return;
      } else {
        permissions = {};
        this.permissionsById[userId] = permissions;
      }
    }

    if (allowed) {
      this.permissionsById[userId][accessType] = true;
    } else {
      delete permissions[accessType];
      if (_.isEmpty(permissions)) {
        delete permissions[userId];
      }
    }
  };

  Parse.ACL.prototype._getAccess = function(accessType, userId) {
    if (userId instanceof Parse.User) {
      userId = userId.id;
    } else if (userId instanceof Parse.Role) {
      userId = "role:" + userId.getName();
    }
    var permissions = this.permissionsById[userId];
    if (!permissions) {
      return false;
    }
    return permissions[accessType] ? true : false;
  };

  /**
   * Set whether the given user is allowed to read this object.
   * @param userId An instance of Parse.User or its objectId.
   * @param {Boolean} allowed Whether that user should have read access.
   */
  Parse.ACL.prototype.setReadAccess = function(userId, allowed) {
    this._setAccess("read", userId, allowed);
  };

  /**
   * Get whether the given user id is *explicitly* allowed to read this object.
   * Even if this returns false, the user may still be able to access it if
   * getPublicReadAccess returns true or a role that the user belongs to has
   * write access.
   * @param userId An instance of Parse.User or its objectId, or a Parse.Role.
   * @return {Boolean}
   */
  Parse.ACL.prototype.getReadAccess = function(userId) {
    return this._getAccess("read", userId);
  };

  /**
   * Set whether the given user id is allowed to write this object.
   * @param userId An instance of Parse.User or its objectId, or a Parse.Role..
   * @param {Boolean} allowed Whether that user should have write access.
   */
  Parse.ACL.prototype.setWriteAccess = function(userId, allowed) {
    this._setAccess("write", userId, allowed);
  };

  /**
   * Get whether the given user id is *explicitly* allowed to write this object.
   * Even if this returns false, the user may still be able to write it if
   * getPublicWriteAccess returns true or a role that the user belongs to has
   * write access.
   * @param userId An instance of Parse.User or its objectId, or a Parse.Role.
   * @return {Boolean}
   */
  Parse.ACL.prototype.getWriteAccess = function(userId) {
    return this._getAccess("write", userId);
  };

  /**
   * Set whether the public is allowed to read this object.
   * @param {Boolean} allowed
   */
  Parse.ACL.prototype.setPublicReadAccess = function(allowed) {
    this.setReadAccess(PUBLIC_KEY, allowed);
  };

  /**
   * Get whether the public is allowed to read this object.
   * @return {Boolean}
   */
  Parse.ACL.prototype.getPublicReadAccess = function() {
    return this.getReadAccess(PUBLIC_KEY);
  };

  /**
   * Set whether the public is allowed to write this object.
   * @param {Boolean} allowed
   */
  Parse.ACL.prototype.setPublicWriteAccess = function(allowed) {
    this.setWriteAccess(PUBLIC_KEY, allowed);
  };

  /**
   * Get whether the public is allowed to write this object.
   * @return {Boolean}
   */
  Parse.ACL.prototype.getPublicWriteAccess = function() {
    return this.getWriteAccess(PUBLIC_KEY);
  };
  
  /**
   * Get whether users belonging to the given role are allowed
   * to read this object. Even if this returns false, the role may
   * still be able to write it if a parent role has read access.
   * 
   * @param role The name of the role, or a Parse.Role object.
   * @return {Boolean} true if the role has read access. false otherwise.
   * @throws {String} If role is neither a Parse.Role nor a String.
   */
  Parse.ACL.prototype.getRoleReadAccess = function(role) {
    if (role instanceof Parse.Role) {
      // Normalize to the String name
      role = role.getName();
    }
    if (_.isString(role)) {
      return this.getReadAccess("role:" + role);
    }
    throw "role must be a Parse.Role or a String";
  };
  
  /**
   * Get whether users belonging to the given role are allowed
   * to write this object. Even if this returns false, the role may
   * still be able to write it if a parent role has write access.
   * 
   * @param role The name of the role, or a Parse.Role object.
   * @return {Boolean} true if the role has write access. false otherwise.
   * @throws {String} If role is neither a Parse.Role nor a String.
   */
  Parse.ACL.prototype.getRoleWriteAccess = function(role) {
    if (role instanceof Parse.Role) {
      // Normalize to the String name
      role = role.getName();
    }
    if (_.isString(role)) {
      return this.getWriteAccess("role:" + role);
    }
    throw "role must be a Parse.Role or a String";
  };
  
  /**
   * Set whether users belonging to the given role are allowed
   * to read this object.
   * 
   * @param role The name of the role, or a Parse.Role object.
   * @param {Boolean} allowed Whether the given role can read this object.
   * @throws {String} If role is neither a Parse.Role nor a String.
   */
  Parse.ACL.prototype.setRoleReadAccess = function(role, allowed) {
    if (role instanceof Parse.Role) {
      // Normalize to the String name
      role = role.getName();
    }
    if (_.isString(role)) {
      this.setReadAccess("role:" + role, allowed);
      return;
    }
    throw "role must be a Parse.Role or a String";
  };
  
  /**
   * Set whether users belonging to the given role are allowed
   * to write this object.
   * 
   * @param role The name of the role, or a Parse.Role object.
   * @param {Boolean} allowed Whether the given role can write this object.
   * @throws {String} If role is neither a Parse.Role nor a String.
   */
  Parse.ACL.prototype.setRoleWriteAccess = function(role, allowed) {
    if (role instanceof Parse.Role) {
      // Normalize to the String name
      role = role.getName();
    }
    if (_.isString(role)) {
      this.setWriteAccess("role:" + role, allowed);
      return;
    }
    throw "role must be a Parse.Role or a String";
  };

}(this));

(function(root) {
  root.Parse = root.Parse || {};
  var Parse = root.Parse;
  var _ = Parse._;

  /**
   * @class
   * A Parse.Op is an atomic operation that can be applied to a field in a
   * Parse.Object. For example, calling <code>object.set("foo", "bar")</code>
   * is an example of a Parse.Op.Set. Calling <code>object.unset("foo")</code>
   * is a Parse.Op.Unset. These operations are stored in a Parse.Object and
   * sent to the server as part of <code>object.save()</code> operations.
   * Instances of Parse.Op should be immutable.
   *
   * You should not create subclasses of Parse.Op or instantiate Parse.Op
   * directly.
   */
  Parse.Op = function() {
    this._initialize.apply(this, arguments);
  };

  Parse.Op.prototype = {
    _initialize: function() {}
  };

  _.extend(Parse.Op, {
    /**
     * To create a new Op, call Parse.Op._extend();
     */
    _extend: Parse._extend,

    // A map of __op string to decoder function.
    _opDecoderMap: {},

    /**
     * Registers a function to convert a json object with an __op field into an
     * instance of a subclass of Parse.Op.
     */
    _registerDecoder: function(opName, decoder) {
      Parse.Op._opDecoderMap[opName] = decoder;
    },

    /**
     * Converts a json object into an instance of a subclass of Parse.Op.
     */
    _decode: function(json) {
      var decoder = Parse.Op._opDecoderMap[json.__op];
      if (decoder) {
        return decoder(json);
      } else {
        return undefined;
      }
    }
  });

  /*
   * Add a handler for Batch ops.
   */
  Parse.Op._registerDecoder("Batch", function(json) {
    var op = null;
    _.each(json.ops, function(nextOp) {
      nextOp = Parse.Op._decode(nextOp);
      op = nextOp._mergeWithPrevious(op);
    });
    return op;
  });

  /**
   * @class
   * A Set operation indicates that either the field was changed using
   * Parse.Object.set, or it is a mutable container that was detected as being
   * changed.
   */
  Parse.Op.Set = Parse.Op._extend(/** @lends Parse.Op.Set.prototype */ {
    _initialize: function(value) {
      this._value = value;
    },

    /**
     * Returns the new value of this field after the set.
     */
    value: function() {
      return this._value;
    },

    /**
     * Returns a JSON version of the operation suitable for sending to Parse.
     * @return {Object}
     */
    toJSON: function() {
      return Parse._encode(this.value());
    },

    _mergeWithPrevious: function(previous) {
      return this;
    },

    _estimate: function(oldValue) {
      return this.value();
    }
  });

  /**
   * A sentinel value that is returned by Parse.Op.Unset._estimate to
   * indicate the field should be deleted. Basically, if you find _UNSET as a
   * value in your object, you should remove that key.
   */
  Parse.Op._UNSET = {};

  /**
   * @class
   * An Unset operation indicates that this field has been deleted from the
   * object.
   */
  Parse.Op.Unset = Parse.Op._extend(/** @lends Parse.Op.Unset.prototype */ {
    /**
     * Returns a JSON version of the operation suitable for sending to Parse.
     * @return {Object}
     */
    toJSON: function() {
      return { __op: "Delete" };
    },

    _mergeWithPrevious: function(previous) {
      return this;
    },

    _estimate: function(oldValue) {
      return Parse.Op._UNSET;
    }
  });

  Parse.Op._registerDecoder("Delete", function(json) {
    return new Parse.Op.Unset();
  });

  /**
   * @class
   * An Increment is an atomic operation where the numeric value for the field
   * will be increased by a given amount.
   */
  Parse.Op.Increment = Parse.Op._extend(
      /** @lends Parse.Op.Increment.prototype */ {

    _initialize: function(amount) {
      this._amount = amount;
    },

    /**
     * Returns the amount to increment by.
     * @return {Number} the amount to increment by.
     */
    amount: function() {
      return this._amount;
    },

    /**
     * Returns a JSON version of the operation suitable for sending to Parse.
     * @return {Object}
     */
    toJSON: function() {
      return { __op: "Increment", amount: this._amount };
    },

    _mergeWithPrevious: function(previous) {
      if (!previous) {
        return this;
      } else if (previous instanceof Parse.Op.Unset) {
        return new Parse.Op.Set(this.amount());
      } else if (previous instanceof Parse.Op.Set) {
        return new Parse.Op.Set(previous.value() + this.amount());
      } else if (previous instanceof Parse.Op.Increment) {
        return new Parse.Op.Increment(this.amount() + previous.amount());
      } else {
        throw "Op is invalid after previous op.";
      }
    },

    _estimate: function(oldValue) {
      if (!oldValue) {
        return this.amount();
      }
      return oldValue + this.amount();
    }
  });

  Parse.Op._registerDecoder("Increment", function(json) {
    return new Parse.Op.Increment(json.amount);
  });

  /**
   * @class
   * Add is an atomic operation where the given objects will be appended to the
   * array that is stored in this field.
   */
  Parse.Op.Add = Parse.Op._extend(/** @lends Parse.Op.Add.prototype */ {
    _initialize: function(objects) {
      this._objects = objects;
    },

    /**
     * Returns the objects to be added to the array.
     * @return {Array} The objects to be added to the array.
     */
    objects: function() {
      return this._objects;
    },

    /**
     * Returns a JSON version of the operation suitable for sending to Parse.
     * @return {Object}
     */
    toJSON: function() {
      return { __op: "Add", objects: Parse._encode(this.objects()) };
    },

    _mergeWithPrevious: function(previous) {
      if (!previous) {
        return this;
      } else if (previous instanceof Parse.Op.Unset) {
        return new Parse.Op.Set(this.objects());
      } else if (previous instanceof Parse.Op.Set) {
        return new Parse.Op.Set(this._estimate(previous.value()));
      } else if (previous instanceof Parse.Op.Add) {
        return new Parse.Op.Add(previous.objects().concat(this.objects()));
      } else {
        throw "Op is invalid after previous op.";
      }
    },

    _estimate: function(oldValue) {
      if (!oldValue) {
        return _.clone(this.objects());
      } else {
        return oldValue.concat(this.objects());
      }
    }
  });

  Parse.Op._registerDecoder("Add", function(json) {
    return new Parse.Op.Add(Parse._decode(undefined, json.objects));
  });

  /**
   * @class
   * AddUnique is an atomic operation where the given items will be appended to
   * the array that is stored in this field only if they were not already
   * present in the array.
   */
  Parse.Op.AddUnique = Parse.Op._extend(
      /** @lends Parse.Op.AddUnique.prototype */ {

    _initialize: function(objects) {
      this._objects = _.uniq(objects);
    },

    /**
     * Returns the objects to be added to the array.
     * @return {Array} The objects to be added to the array.
     */
    objects: function() {
      return this._objects;
    },

    /**
     * Returns a JSON version of the operation suitable for sending to Parse.
     * @return {Object}
     */
    toJSON: function() {
      return { __op: "AddUnique", objects: Parse._encode(this.objects()) };
    },

    _mergeWithPrevious: function(previous) {
      if (!previous) {
        return this;
      } else if (previous instanceof Parse.Op.Unset) {
        return new Parse.Op.Set(this.objects());
      } else if (previous instanceof Parse.Op.Set) {
        return new Parse.Op.Set(this._estimate(previous.value()));
      } else if (previous instanceof Parse.Op.AddUnique) {
        return new Parse.Op.AddUnique(
          _.union(previous.objects(), this.objects()));
      } else {
        throw "Op is invalid after previous op.";
      }
    },

    _estimate: function(oldValue) {
      if (!oldValue) {
        return _.clone(this.objects());
      } else {
        return oldValue.concat(_.difference(this.objects(), oldValue));
      }
    }
  });

  Parse.Op._registerDecoder("AddUnique", function(json) {
    return new Parse.Op.AddUnique(Parse._decode(undefined, json.objects));
  });

  /**
   * @class
   * Remove is an atomic operation where the given objects will be removed from
   * the array that is stored in this field.
   */
  Parse.Op.Remove = Parse.Op._extend(/** @lends Parse.Op.Remove.prototype */ {
    _initialize: function(objects) {
      this._objects = _.uniq(objects);
    },

    /**
     * Returns the objects to be removed from the array.
     * @return {Array} The objects to be removed from the array.
     */
    objects: function() {
      return this._objects;
    },

    /**
     * Returns a JSON version of the operation suitable for sending to Parse.
     * @return {Object}
     */
    toJSON: function() {
      return { __op: "Remove", objects: Parse._encode(this.objects()) };
    },

    _mergeWithPrevious: function(previous) {
      if (!previous) {
        return this;
      } else if (previous instanceof Parse.Op.Unset) {
        return previous;
      } else if (previous instanceof Parse.Op.Set) {
        return new Parse.Op.Set(this._estimate(previous.value()));
      } else if (previous instanceof Parse.Op.Remove) {
        return new Parse.Op.Remove(_.union(previous.objects(), this.objects()));
      } else {
        throw "Op is invalid after previous op.";
      }
    },

    _estimate: function(oldValue) {
      if (!oldValue) {
        return [];
      } else {
        var newValue = _.difference(oldValue, this.objects());
        // If there are saved Parse Objects being removed, also remove them.
        _.each(this.objects(), function(obj) {
          if (obj instanceof Parse.Object && obj.id) {
            newValue = _.reject(newValue, function(other) {
              return (other instanceof Parse.Object) && (other.id === obj.id);
            });
          }
        });
        return newValue;
      }
    }
  });

  Parse.Op._registerDecoder("Remove", function(json) {
    return new Parse.Op.Remove(Parse._decode(undefined, json.objects));
  });

  /**
   * @class
   * A Relation operation indicates that the field is an instance of
   * Parse.Relation, and objects are being added to, or removed from, that
   * relation.
   */
  Parse.Op.Relation = Parse.Op._extend(
      /** @lends Parse.Op.Relation.prototype */ {

    _initialize: function(adds, removes) {
      this._targetClassName = null;

      var self = this;

      var pointerToId = function(object) {
        if (object instanceof Parse.Object) {
          if (!object.id) {
            throw "You can't add an unsaved Parse.Object to a relation.";
          }
          if (!self._targetClassName) {
            self._targetClassName = object.className;
          }
          if (self._targetClassName !== object.className) {
            throw "Tried to create a Parse.Relation with 2 different types: " +
                  self._targetClassName + " and " + object.className + ".";
          }
          return object.id;
        }
        return object;
      };

      this.relationsToAdd = _.uniq(_.map(adds, pointerToId));
      this.relationsToRemove = _.uniq(_.map(removes, pointerToId));
    },

    /**
     * Returns an array of unfetched Parse.Object that are being added to the
     * relation.
     * @return {Array}
     */
    added: function() {
      var self = this;
      return _.map(this.relationsToAdd, function(objectId) {
        var object = Parse.Object._create(self._targetClassName);
        object.id = objectId;
        return object;
      });
    },

    /**
     * Returns an array of unfetched Parse.Object that are being removed from
     * the relation.
     * @return {Array}
     */
    removed: function() {
      var self = this;
      return _.map(this.relationsToRemove, function(objectId) {
        var object = Parse.Object._create(self._targetClassName);
        object.id = objectId;
        return object;
      });
    },

    /**
     * Returns a JSON version of the operation suitable for sending to Parse.
     * @return {Object}
     */
    toJSON: function() {
      var adds = null;
      var removes = null;
      var self = this;
      var idToPointer = function(id) {
        return { __type: 'Pointer',
                 className: self._targetClassName,
                 objectId: id };
      };
      var pointers = null;
      if (this.relationsToAdd.length > 0) {
        pointers = _.map(this.relationsToAdd, idToPointer);
        adds = { "__op": "AddRelation", "objects": pointers };
      }

      if (this.relationsToRemove.length > 0) {
        pointers = _.map(this.relationsToRemove, idToPointer);
        removes = { "__op": "RemoveRelation", "objects": pointers };
      }

      if (adds && removes) {
        return { "__op": "Batch", "ops": [adds, removes]};
      }

      return adds || removes || {};
    },

    _mergeWithPrevious: function(previous) {
      if (!previous) {
        return this;
      } else if (previous instanceof Parse.Op.Unset) {
        throw "You can't modify a relation after deleting it.";
      } else if (previous instanceof Parse.Op.Relation) {
        if (previous._targetClassName &&
            previous._targetClassName !== this._targetClassName) {
          throw "Related object must be of class " + previous._targetClassName +
              ", but " + this._targetClassName + " was passed in.";
        }
        var newAdd = _.union(_.difference(previous.relationsToAdd,
                                          this.relationsToRemove),
                             this.relationsToAdd);
        var newRemove = _.union(_.difference(previous.relationsToRemove,
                                             this.relationsToAdd),
                                this.relationsToRemove);

        var newRelation = new Parse.Op.Relation(newAdd, newRemove);
        newRelation._targetClassName = this._targetClassName;
        return newRelation;
      } else {
        throw "Op is invalid after previous op.";
      }
    },

    _estimate: function(oldValue, object, key) {
      if (!oldValue) {
        var relation = new Parse.Relation(object, key);
        relation.targetClassName = this._targetClassName;
      } else if (oldValue instanceof Parse.Relation) {
        if (this._targetClassName) {
          if (oldValue.targetClassName) {
            if (oldValue.targetClassName !== this._targetClassName) {
              throw "Related object must be a " + oldValue.targetClassName +
                  ", but a " + this._targetClassName + " was passed in.";
            }
          } else {
            oldValue.targetClassName = this._targetClassName;
          }
        }
        return oldValue;
      } else {
        throw "Op is invalid after previous op.";
      }
    }
  });

  Parse.Op._registerDecoder("AddRelation", function(json) {
    return new Parse.Op.Relation(Parse._decode(undefined, json.objects), []);
  });
  Parse.Op._registerDecoder("RemoveRelation", function(json) {
    return new Parse.Op.Relation([], Parse._decode(undefined, json.objects));
  });

}(this));

(function(root) {
  root.Parse = root.Parse || {};
  var Parse = root.Parse;
  var _ = Parse._;

  /**
   * Creates a new Relation for the given parent object and key. This
   * constructor should rarely be used directly, but rather created by
   * Parse.Object.relation.
   * @param {Parse.Object} parent The parent of this relation.
   * @param {String} key The key for this relation on the parent.
   * @see Parse.Object#relation
   * @class
   *
   * <p>
   * A class that is used to access all of the children of a many-to-many
   * relationship.  Each instance of Parse.Relation is associated with a
   * particular parent object and key.
   * </p>
   */
  Parse.Relation = function(parent, key) {
    this.parent = parent;
    this.key = key;
    this.targetClassName = null;
  };

  Parse.Relation.prototype = {
    /**
     * Makes sure that this relation has the right parent and key.
     */
    _ensureParentAndKey: function(parent, key) {
      this.parent = this.parent || parent;
      this.key = this.key || key;
      if (this.parent !== parent) {
        throw "Internal Error. Relation retrieved from two different Objects.";
      }
      if (this.key !== key) {
        throw "Internal Error. Relation retrieved from two different keys.";
      }
    },

    /**
     * Adds a Parse.Object or an array of Parse.Objects to the relation.
     * @param {} objects The item or items to add.
     */
    add: function(objects) {
      if (!_.isArray(objects)) {
        objects = [objects];
      }

      var change = new Parse.Op.Relation(objects, []);
      this.parent.set(this.key, change);
      this.targetClassName = change._targetClassName;
    },

    /**
     * Removes a Parse.Object or an array of Parse.Objects from this relation.
     * @param {} objects The item or items to remove.
     */
    remove: function(objects) {
      if (!_.isArray(objects)) {
        objects = [objects];
      }

      var change = new Parse.Op.Relation([], objects);
      this.parent.set(this.key, change);
      this.targetClassName = change._targetClassName;
    },

    /**
     * Returns a JSON version of the object suitable for saving to disk.
     * @return {Object}
     */
    toJSON: function() {
      return { "__type": "Relation", "className": this.targetClassName };
    },

    /**
     * Returns a Parse.Query that is limited to objects in this
     * relation.
     * @return {Parse.Query}
     */
    query: function() {
      var targetClass;
      var query;
      if (!this.targetClassName) {
        targetClass = Parse.Object._getSubclass(this.parent.className);
        query = new Parse.Query(targetClass);
        query._extraOptions.redirectClassNameForKey = this.key;
      } else {
        targetClass = Parse.Object._getSubclass(this.targetClassName);
        query = new Parse.Query(targetClass);
      }
      query._addCondition("$relatedTo", "object", this.parent._toPointer());
      query._addCondition("$relatedTo", "key", this.key);

      return query;
    }
  };
}(this));

(function(root) {
  root.Parse = root.Parse || {};
  var Parse = root.Parse;
  var _ = Parse._;

  /**
   * A Promise is returned by async methods as a hook to provide callbacks to be
   * called when the async task is fulfilled.
   *
   * <p>Typical usage would be like:<pre>
   *    query.findAsync().then(function(results) {
   *      results[0].set("foo", "bar");
   *      return results[0].saveAsync();
   *    }).then(function(result) {
   *      console.log("Updated " + result.id);
   *    });
   * </pre></p>
   *
   * @see Parse.Promise.prototype.next
   * @class
   */
  Parse.Promise = function() {
    this._resolved = false;
    this._rejected = false;
    this._resolvedCallbacks = [];
    this._rejectedCallbacks = [];
  };

  _.extend(Parse.Promise, /** @lends Parse.Promise */ {

    /**
     * Returns true iff the given object fulfils the Promise interface.
     * @return {Boolean}
     */
    is: function(promise) {
      return promise && promise.then && _.isFunction(promise.then);
    },

    /**
     * Returns a new promise that is resolved with a given value.
     * @return {Parse.Promise} the new promise.
     */
    as: function() {
      var promise = new Parse.Promise();
      promise.resolve.apply(promise, arguments);
      return promise;
    },

    /**
     * Returns a new promise that is rejected with a given error.
     * @return {Parse.Promise} the new promise.
     */
    error: function() {
      var promise = new Parse.Promise();
      promise.reject.apply(promise, arguments);
      return promise;
    },

    /**
     * Returns a new promise that is fulfilled when all of the input promises
     * are resolved. If any promise in the list fails, then the returned promise
     * will fail with the last error. If they all succeed, then the returned
     * promise will succeed, with the result being an array with the results of
     * all the input promises.
     * @param {Array} promises a list of promises to wait for.
     * @return {Parse.Promise} the new promise.
     */
    when: function(promises) {
      // Allow passing in Promises as separate arguments instead of an Array.
      var objects;
      if (promises && Parse._isNullOrUndefined(promises.length)) {
        objects = arguments;
      } else {
        objects = promises;
      }

      var total = objects.length;
      var hadError = false;
      var results = [];
      var errors = [];
      results.length = objects.length;
      errors.length = objects.length;

      if (total === 0) {
        return Parse.Promise.as.apply(this, results);
      }

      var promise = new Parse.Promise();

      var resolveOne = function() {
        total = total - 1;
        if (total === 0) {
          if (hadError) {
            promise.reject(errors);
          } else {
            promise.resolve.apply(promise, results);
          }
        }
      };

      _.each(objects, function(object, i) {
        if (Parse.Promise.is(object)) {
          object.then(function(result) {
            results[i] = result;
            resolveOne();
          }, function(error) {
            errors[i] = error;
            hadError = true;
            resolveOne();
          });
        } else {
          results[i] = object;
          resolveOne();
        }
      });

      return promise;
    },

    /**
     * Runs the given asyncFunction repeatedly, as long as the predicate
     * function returns a truthy value. Stops repeating if asyncFunction returns
     * a rejected promise.
     * @param {Function} predicate should return false when ready to stop.
     * @param {Function} asyncFunction should return a Promise.
     */
    _continueWhile: function(predicate, asyncFunction) {
      if (predicate()) {
        return asyncFunction().then(function() {
          return Parse.Promise._continueWhile(predicate, asyncFunction);
        });
      }
      return Parse.Promise.as();
    }
  });

  _.extend(Parse.Promise.prototype, /** @lends Parse.Promise.prototype */ {

    /**
     * Marks this promise as fulfilled, firing any callbacks waiting on it.
     * @param {Object} result the result to pass to the callbacks.
     */
    resolve: function(result) {
      if (this._resolved || this._rejected) {
        throw "A promise was resolved even though it had already been " +
          (this._resolved ? "resolved" : "rejected") + ".";
      }
      this._resolved = true;
      this._result = arguments;
      var results = arguments;
      _.each(this._resolvedCallbacks, function(resolvedCallback) {
        resolvedCallback.apply(this, results);
      });
      this._resolvedCallbacks = [];
      this._rejectedCallbacks = [];
    },

    /**
     * Marks this promise as fulfilled, firing any callbacks waiting on it.
     * @param {Object} error the error to pass to the callbacks.
     */
    reject: function(error) {
      if (this._resolved || this._rejected) {
        throw "A promise was rejected even though it had already been " +
          (this._resolved ? "resolved" : "rejected") + ".";
      }
      this._rejected = true;
      this._error = error;
      _.each(this._rejectedCallbacks, function(rejectedCallback) {
        rejectedCallback(error);
      });
      this._resolvedCallbacks = [];
      this._rejectedCallbacks = [];
    },

    /**
     * Adds callbacks to be called when this promise is fulfilled. Returns a new
     * Promise that will be fulfilled when the callback is complete. It allows
     * chaining. If the callback itself returns a Promise, then the one returned
     * by "then" will not be fulfilled until that one returned by the callback
     * is fulfilled.
     * @param {Function} resolvedCallback Function that is called when this
     * Promise is resolved. Once the callback is complete, then the Promise
     * returned by "then" will also be fulfilled.
     * @param {Function} rejectedCallback Function that is called when this
     * Promise is rejected with an error. Once the callback is complete, then
     * the promise returned by "then" with be resolved successfully. If
     * rejectedCallback is null, or it returns a rejected Promise, then the
     * Promise returned by "then" will be rejected with that error.
     * @return {Parse.Promise} A new Promise that will be fulfilled after this
     * Promise is fulfilled and either callback has completed. If the callback
     * returned a Promise, then this Promise will not be fulfilled until that
     * one is.
     */
    then: function(resolvedCallback, rejectedCallback) {
      var promise = new Parse.Promise();

      var wrappedResolvedCallback = function() {
        var result = arguments;
        if (resolvedCallback) {
          result = [resolvedCallback.apply(this, result)];
        }
        if (result.length === 1 && Parse.Promise.is(result[0])) {
          result[0].then(function() {
            promise.resolve.apply(promise, arguments);
          }, function(error) {
            promise.reject(error);
          });
        } else {
          promise.resolve.apply(promise, result);
        }
      };

      var wrappedRejectedCallback = function(error) {
        var result = [];
        if (rejectedCallback) {
          result = [rejectedCallback(error)];
          if (result.length === 1 && Parse.Promise.is(result[0])) {
            result[0].then(function() {
              promise.resolve.apply(promise, arguments);
            }, function(error) {
              promise.reject(error);
            });
          } else {
            // A Promises/A+ compliant implementation would call:
            // promise.resolve.apply(promise, result);
            promise.reject(result[0]);
          }
        } else {
          promise.reject(error);
        }
      };

      if (this._resolved) {
        wrappedResolvedCallback.apply(this, this._result);
      } else if (this._rejected) {
        wrappedRejectedCallback(this._error);
      } else {
        this._resolvedCallbacks.push(wrappedResolvedCallback);
        this._rejectedCallbacks.push(wrappedRejectedCallback);
      }

      return promise;
    },

    /**
     * Run the given callbacks after this promise is fulfilled.
     * @param optionsOrCallback {} A Backbone-style options callback, or a
     * callback function. If this is an options object and contains a "model"
     * attributes, that will be passed to error callbacks as the first argument.
     * @return {Parse.Promise} A promise that will be resolved after the
     * callbacks are run, with the same result as this.
     */
    _thenRunCallbacks: function(optionsOrCallback) {
      var options;
      if (_.isFunction(optionsOrCallback)) {
        var callback = optionsOrCallback;
        options = {
          success: function(result) {
            callback(result, null);
          },
          error: function(error) {
            callback(null, error);
          }
        };
      } else {
        options = _.clone(optionsOrCallback);
      }
      options = options || {};

      return this.then(function(result) {
        if (options.success) {
          options.success(result);
        }
        return result;
      }, function(error) {
        if (options.error) {
          if (options.model) {
            options.error(options.model, error);
          } else {
            options.error(error);
          }
        }
        return Parse.Promise.error(error);
      });
    },

    /**
     * Adds a callback function that should be called regardless of whether
     * this promise failed or succeeded. The callback will be given either the
     * array of results for its first argument, or the error as its second,
     * depending on whether this Promise was rejected or resolved. Returns a
     * new Promise, like "then" would.
     * @param {Function} continuation the callback.
     */
    _continueWith: function(continuation) {
      return this.then(function() {
        return continuation(arguments, null);
      }, function(error) {
        return continuation(null, error);
      });
    }

  });

}(this));

// Parse.Object is analogous to the Java ParseObject.
// It also implements the same interface as a Backbone model.

(function(root) {
  root.Parse = root.Parse || {};
  var Parse = root.Parse;
  var _ = Parse._;

  /**
   * Creates a new model with defined attributes. A client id (cid) is
   * automatically generated and assigned for you.
   *
   * <p>You won't normally call this method directly.  It is recommended that
   * you use a subclass of <code>Parse.Object</code> instead, created by calling
   * <code>extend</code>.</p>
   *
   * <p>However, if you don't want to use a subclass, or aren't sure which
   * subclass is appropriate, you can use this form:<pre>
   *     var object = new Parse.Object("ClassName");
   * </pre>
   * That is basically equivalent to:<pre>
   *     var MyClass = Parse.Object.extend("ClassName");
   *     var object = new MyClass();
   * </pre></p>
   *
   * @param {Object} attributes The initial set of data to store in the object.
   * @param {Object} options A set of Backbone-like options for creating the
   *     object.  The only option currently supported is "collection".
   * @see Parse.Object.extend
   *
   * @class
   *
   * <p>The fundamental unit of Parse data, which implements the Backbone Model
   * interface.</p>
   */
  Parse.Object = function(attributes, options) {
    // Allow new Parse.Object("ClassName") as a shortcut to _create.
    if (_.isString(attributes)) {
      return Parse.Object._create.apply(this, arguments);
    }

    attributes = attributes || {};
    if (options && options.parse) {
      attributes = this.parse(attributes);
    }
    var defaults = Parse._getValue(this, 'defaults');
    if (defaults) {
      attributes = _.extend({}, defaults, attributes);
    }
    if (options && options.collection) {
      this.collection = options.collection;
    }

    this._serverData = {};  // The last known data for this object from cloud.
    this._opSetQueue = [{}];  // List of sets of changes to the data.
    this.attributes = {};  // The best estimate of this's current data.

    this._hashedJSON = {};  // Hash of values of containers at last save.
    this._escapedAttributes = {};
    this.cid = _.uniqueId('c');
    this.changed = {};
    this._silent = {};
    this._pending = {};
    if (!this.set(attributes, {silent: true})) {
      throw new Error("Can't create an invalid Parse.Object");
    }
    this.changed = {};
    this._silent = {};
    this._pending = {};
    this._hasData = true;
    this._previousAttributes = _.clone(this.attributes);
    this.initialize.apply(this, arguments);
  };

  /**
   * @lends Parse.Object.prototype
   * @property {String} id The objectId of the Parse Object.
   */

  /**
   * Saves the given list of Parse.Object.
   * If any error is encountered, stops and calls the error handler.
   * There are two ways you can call this function.
   *
   * The Backbone way:<pre>
   *   Parse.Object.saveAll([object1, object2, ...], {
   *     success: function(list) {
   *       // All the objects were saved.
   *     },
   *     error: function(error) {
   *       // An error occurred while saving one of the objects.
   *     },
   *   });
   * </pre>
   * A simplified syntax:<pre>
   *   Parse.Object.saveAll([object1, object2, ...], function(list, error) {
   *     if (list) {
   *       // All the objects were saved.
   *     } else {
   *       // An error occurred.
   *     }
   *   });
   * </pre>
   *
   * @param {Array} list A list of <code>Parse.Object</code>.
   * @param {Object} options A Backbone-style callback object.
   */
  Parse.Object.saveAll = function(list, options) {
    return Parse.Object._deepSaveAsync(list)._thenRunCallbacks(options);
  };

  // Attach all inheritable methods to the Parse.Object prototype.
  _.extend(Parse.Object.prototype, Parse.Events,
           /** @lends Parse.Object.prototype */ {
    _existed: false,

    /**
     * Initialize is an empty function by default. Override it with your own
     * initialization logic.
     */
    initialize: function(){},

    /**
     * Returns a JSON version of the object suitable for saving to Parse.
     * @return {Object}
     */
    toJSON: function() {
      var json = this._toFullJSON();
      _.each(["__type", "className"],
             function(key) { delete json[key]; });
      return json;
    },

    _toFullJSON: function(seenObjects) {
      var json = _.clone(this.attributes);
      Parse._each(json, function(val, key) {
        json[key] = Parse._encode(val, seenObjects);
      });
      Parse._each(this._operations, function(val, key) {
        json[key] = val;
      });

      if (_.has(this, "id")) {
        json.objectId = this.id;
      }
      if (_.has(this, "createdAt")) {
        if (_.isDate(this.createdAt)) {
          json.createdAt = this.createdAt.toJSON();
        } else {
          json.createdAt = this.createdAt;
        }
      }

      if (_.has(this, "updatedAt")) {
        if (_.isDate(this.updatedAt)) {
          json.updatedAt = this.updatedAt.toJSON();
        } else {
          json.updatedAt = this.updatedAt;
        }
      }
      json.__type = "Object";
      json.className = this.className;
      return json;
    },

    /**
     * Updates _hashedJSON to reflect the current state of this object.
     * Adds any changed hash values to the set of pending changes.
     */
    _refreshCache: function() {
      var self = this;
      Parse._each(this.attributes, function(value, key) {
        if (value instanceof Parse.Object) {
          value._refreshCache();
        } else if (_.isObject(value)) {
          if (self._resetCacheForKey(key)) {
            self.set(key, new Parse.Op.Set(value), { silent: true });
          }
        }
      });
    },

    /**
     * Returns true if this object has been modified since its last
     * save/refresh.  If an attribute is specified, it returns true only if that
     * particular attribute has been modified since the last save/refresh.
     * @param {String} attr An attribute name (optional).
     * @return {Boolean}
     */
    dirty: function(attr) {
      this._refreshCache();

      var currentChanges = _.last(this._opSetQueue);

      if (attr) {
        return (currentChanges[attr] ? true : false);
      }
      if (!this.id) {
        return true;
      }
      if (_.keys(currentChanges).length > 0) {
        return true;
      }
      return false;
    },

    /**
     * Gets a Pointer referencing this Object.
     */
    _toPointer: function() {
      if (!this.id) {
        throw new Error("Can't serialize an unsaved Parse.Object");
      }
      return { __type: "Pointer",
               className: this.className,
               objectId: this.id };
    },

    /**
     * Gets the value of an attribute.
     * @param {String} attr The string name of an attribute.
     */
    get: function(attr) {
      return this.attributes[attr];
    },

    /**
     * Gets a relation on the given class for the attribute.
     * @param String attr The attribute to get the relation for.
     */
    relation: function(attr) {
      var value = this.get(attr);
      if (value) {
        if (!(value instanceof Parse.Relation)) {
          throw "Called relation() on non-relation field " + attr;
        }
        value._ensureParentAndKey(this, attr);
        return value;
      } else {
        return new Parse.Relation(this, attr);
      }
    },

    /**
     * Gets the HTML-escaped value of an attribute.
     */
    escape: function(attr) {
      var html = this._escapedAttributes[attr];
      if (html) {
        return html;
      }
      var val = this.attributes[attr];
      var escaped;
      if (Parse._isNullOrUndefined(val)) {
        escaped = '';
      } else {
        escaped = _.escape(val.toString());
      }
      this._escapedAttributes[attr] = escaped;
      return escaped;
    },

    /**
     * Returns <code>true</code> if the attribute contains a value that is not
     * null or undefined.
     * @param {String} attr The string name of the attribute.
     * @return {Boolean}
     */
    has: function(attr) {
      return !Parse._isNullOrUndefined(this.attributes[attr]);
    },

    /**
     * Pulls "special" fields like objectId, createdAt, etc. out of attrs
     * and puts them on "this" directly.  Removes them from attrs.
     * @param attrs - A dictionary with the data for this Parse.Object.
     */
    _mergeMagicFields: function(attrs) {
      // Check for changes of magic fields.
      var model = this;
      _.each(["id", "objectId", "createdAt", "updatedAt"], function(attr) {
        if (attrs[attr]) {
          if (attr === "objectId") {
            model.id = attrs[attr];
          } else if ((attr === "createdAt" || attr === "updatedAt") &&
                     !_.isDate(attrs[attr])) {
            model[attr] = Parse._parseDate(attrs[attr]);
          } else {
            model[attr] = attrs[attr];
          }
          delete attrs[attr];
        }
      });
    },

    /**
     * Returns the json to be sent to the server.
     */
    _startSave: function() {
      this._opSetQueue.push({});
    },

    /**
     * Called when a save fails because of an error. Any changes that were part
     * of the save need to be merged with changes made after the save. This
     * might throw an exception is you do conflicting operations. For example,
     * if you do:
     *   object.set("foo", "bar");
     *   object.set("invalid field name", "baz");
     *   object.save();
     *   object.increment("foo");
     * then this will throw when the save fails and the client tries to merge
     * "bar" with the +1.
     */
    _cancelSave: function() {
      var self = this;
      var failedChanges = _.first(this._opSetQueue);
      this._opSetQueue = _.rest(this._opSetQueue);
      var nextChanges = _.first(this._opSetQueue);
      Parse._each(failedChanges, function(op, key) {
        var op1 = failedChanges[key];
        var op2 = nextChanges[key];
        if (op1 && op2) {
          nextChanges[key] = op2._mergeWithPrevious(op1);
        } else if (op1) {
          nextChanges[key] = op1;
        }
      });
      this._saving = this._saving - 1;
    },

    /**
     * Called when a save completes successfully. This merges the changes that
     * were saved into the known server data, and overrides it with any data
     * sent directly from the server.
     */
    _finishSave: function(serverData) {
      // Grab a copy of any object referenced by this object. These instances
      // may have already been fetched, and we don't want to lose their data.
      // Note that doing it like this means we will unify separate copies of the
      // same object, but that's a risk we have to take.
      var fetchedObjects = {};
      Parse._traverse(this.attributes, function(object) {
        if (object.id && object._hasData) {
          fetchedObjects[object.id] = object;
        }
      });

      var savedChanges = _.first(this._opSetQueue);
      this._opSetQueue = _.rest(this._opSetQueue);
      this._applyOpSet(savedChanges, this._serverData);
      this._mergeMagicFields(serverData);
      var self = this;
      Parse._each(serverData, function(value, key) {
        self._serverData[key] = Parse._decode(key, value);

        // Look for any objects that might have become unfetched and fix them
        // by replacing their values with the previously observed values.
        var fetched = Parse._traverse(self._serverData[key], function(object) {
          if (fetchedObjects[object.id]) {
            return fetchedObjects[object.id];
          }
        });
        if (fetched) {
          self._serverData[key] = fetched;
        }
      });
      this._rebuildAllEstimatedData();
      this._saving = this._saving - 1;
    },

    /**
     * Called when a fetch or login is complete to set the known server data to
     * the given object.
     */
    _finishFetch: function(serverData, hasData) {
      // Clear out any changes the user might have made previously.
      this._opSetQueue = [{}];

      // Bring in all the new server data.
      this._mergeMagicFields(serverData);
      var self = this;
      Parse._each(serverData, function(value, key) {
        self._serverData[key] = Parse._decode(key, value);
      });

      // Refresh the attributes.
      this._rebuildAllEstimatedData();

      // Clear out the cache of mutable containers.
      this._refreshCache();
      this._opSetQueue = [{}];

      this._hasData = hasData;
    },

    /**
     * Applies the set of Parse.Op in opSet to the object target.
     */
    _applyOpSet: function(opSet, target) {
      var self = this;
      Parse._.each(opSet, function(change, key) {
        target[key] = change._estimate(target[key], self, key);
        if (target[key] === Parse.Op._UNSET) {
          delete target[key];
        }
      });
    },

    /**
     * Replaces the cached value for key with the current value.
     * Returns true if the new value is different than the old value.
     */
    _resetCacheForKey: function(key) {
      var value = this.attributes[key];
      if (_.isObject(value) && !(value instanceof Parse.Object)) {
        value = value.toJSON ? value.toJSON() : value;
        var json = JSON.stringify(value);
        if (this._hashedJSON[key] !== json) {
          this._hashedJSON[key] = json;
          return true;
        }
      }
      return false;
    },

    /**
     * Populates attributes[key] by starting with the last known data from the
     * server, and applying all of the local changes that have been made to that
     * key since then.
     */
    _rebuildEstimatedDataForKey: function(key) {
      var self = this;
      delete this.attributes[key];
      if (this._serverData[key]) {
        this.attributes[key] = this._serverData[key];
      }
      _.each(this._opSetQueue, function(opSet) {
        var op = opSet[key];
        if (op) {
          self.attributes[key] = op._estimate(self.attributes[key], self, key);
          if (self.attributes[key] === Parse.Op._UNSET) {
            delete self.attributes[key];
          } else {
            self._resetCacheForKey(key);
          }
        }
      });
    },

    /**
     * Populates attributes by starting with the last known data from the
     * server, and applying all of the local changes that have been made since
     * then.
     */
    _rebuildAllEstimatedData: function() {
      var self = this;

      var previousAttributes = _.clone(this.attributes);

      this.attributes = _.clone(this._serverData);
      _.each(this._opSetQueue, function(opSet) {
        self._applyOpSet(opSet, self.attributes);
        _.each(opSet, function(op, key) {
          self._resetCacheForKey(key);
        });
      });

      // Trigger change events for anything that changed because of the fetch.
      _.each(previousAttributes, function(oldValue, key) {
        if (self.attributes[key] !== oldValue) {
          self.trigger('change:' + key, self, self.attributes[key], {});
        }
      });
      _.each(this.attributes, function(newValue, key) {
        if (!_.has(previousAttributes, key)) {
          self.trigger('change:' + key, self, newValue, {});
        }
      });
    },

    /**
     * Sets a hash of model attributes on the object, firing
     * <code>"change"</code> unless you choose to silence it.
     *
     * <p>You can call it with an object containing keys and values, or with one
     * key and value.  For example:<pre>
     *   gameTurn.set({
     *     player: player1,
     *     diceRoll: 2
     *   }, {
     *     error: function(gameTurnAgain, error) {
     *       // The set failed validation.
     *     }
     *   });
     *
     *   game.set("currentPlayer", player2, {
     *     error: function(gameTurnAgain, error) {
     *       // The set failed validation.
     *     }
     *   });
     *
     *   game.set("finished", true);</pre></p>
     * 
     * @param {String} key The key to set.
     * @param {} value The value to give it.
     * @param {Object} options A set of Backbone-like options for the set.
     *     The only supported options are <code>silent</code>,
     *     <code>error</code>, and <code>promise</code>.
     * @return {Boolean} true if the set succeeded.
     * @see Parse.Object#validate
     * @see Parse.Error
     */
    set: function(key, value, options) {
      var attrs, attr;
      if (_.isObject(key) || Parse._isNullOrUndefined(key)) {
        attrs = key;
        Parse._each(attrs, function(v, k) {
          attrs[k] = Parse._decode(k, v);
        });
        options = value;
      } else {
        attrs = {};
        attrs[key] = Parse._decode(key, value);
      }

      // Extract attributes and options.
      options = options || {};
      if (!attrs) {
        return this;
      }
      if (attrs instanceof Parse.Object) {
        attrs = attrs.attributes;
      }

      // If the unset option is used, every attribute should be a Unset.
      if (options.unset) {
        Parse._each(attrs, function(unused_value, key) {
          attrs[key] = new Parse.Op.Unset();
        });
      }

      // Apply all the attributes to get the estimated values.
      var dataToValidate = _.clone(attrs);
      var self = this;
      Parse._each(dataToValidate, function(value, key) {
        if (value instanceof Parse.Op) {
          dataToValidate[key] = value._estimate(self.attributes[key],
                                                self, key);
          if (dataToValidate[key] === Parse.Op._UNSET) {
            delete dataToValidate[key];
          }
        }
      });

      // Run validation.
      if (!this._validate(attrs, options)) {
        return false;
      }

      this._mergeMagicFields(attrs);

      options.changes = {};
      var escaped = this._escapedAttributes;
      var prev = this._previousAttributes || {};

      // Update attributes.
      Parse._each(_.keys(attrs), function(attr) {
        var val = attrs[attr];

        // If this is a relation object we need to set the parent correctly,
        // since the location where it was parsed does not have access to
        // this object.
        if (val instanceof Parse.Relation) {
          val.parent = self;
        }

        if (!(val instanceof Parse.Op)) {
          val = new Parse.Op.Set(val);
        }

        // See if this change will actually have any effect.
        var isRealChange = true;
        if (val instanceof Parse.Op.Set &&
            _.isEqual(self.attributes[attr], val.value)) {
          isRealChange = false;
        }

        if (isRealChange) {
          delete escaped[attr];
          if (options.silent) {
            self._silent[attr] = true;
          } else {
            options.changes[attr] = true;
          }
        }

        var currentChanges = _.last(self._opSetQueue);
        currentChanges[attr] = val._mergeWithPrevious(currentChanges[attr]);
        self._rebuildEstimatedDataForKey(attr);

        if (isRealChange) {
          self.changed[attr] = self.attributes[attr];
          if (!options.silent) {
            self._pending[attr] = true;
          }
        } else {
          delete self.changed[attr];
          delete self._pending[attr];
        }
      });

      if (!options.silent) {
        this.change(options);
      }
      return this;
    },

    /**
     * Remove an attribute from the model, firing <code>"change"</code> unless
     * you choose to silence it. This is a noop if the attribute doesn't
     * exist.
     */
    unset: function(attr, options) {
      options = options || {};
      options.unset = true;
      return this.set(attr, null, options);
    },

    /**
     * Atomically increments the value of the given attribute the next time the
     * object is saved. If no amount is specified, 1 is used by default.
     *
     * @param attr {String} The key.
     * @param amount {Number} The amount to increment by.
     */
    increment: function(attr, amount) {
      if (_.isUndefined(amount) || _.isNull(amount)) {
        amount = 1;
      }
      return this.set(attr, new Parse.Op.Increment(amount));
    },

    /**
     * Atomically add an object to the end of the array associated with a given
     * key.
     * @param attr {String} The key.
     * @param item {} The item to add.
     */
    add: function(attr, item) {
      return this.set(attr, new Parse.Op.Add([item]));
    },

    /**
     * Atomically add an object to the array associated with a given key, only
     * if it is not already present in the array. The position of the insert is
     * not guaranteed.
     *
     * @param attr {String} The key.
     * @param item {} The object to add.
     */
    addUnique: function(attr, item) {
      return this.set(attr, new Parse.Op.AddUnique([item]));
    },

    /**
     * Atomically remove all instances of an object from the array associated
     * with a given key.
     *
     * @param attr {String} The key.
     * @param item {} The object to remove.
     */
    remove: function(attr, item) {
      return this.set(attr, new Parse.Op.Remove([item]));
    },

    /**
     * Returns an instance of a subclass of Parse.Op describing what kind of
     * modification has been performed on this field since the last time it was
     * saved. For example, after calling object.increment("x"), calling
     * object.op("x") would return an instance of Parse.Op.Increment.
     *
     * @param attr {String} The key.
     * @returns {Parse.Op} The operation, or undefined if none.
     */
    op: function(attr) {
      return _.last(this._opSetQueue)[attr];
    },

    /**
     * Clear all attributes on the model, firing <code>"change"</code> unless
     * you choose to silence it.
     */
    clear: function(options) {
      options = options || {};
      options.unset = true;
      var keysToClear = _.extend(this.attributes, this._operations);
      return this.set(keysToClear, options);
    },

    /**
     * Returns a JSON-encoded set of operations to be sent with the next save
     * request.
     */
    _getSaveJSON: function() {
      var json = _.clone(_.first(this._opSetQueue));
      Parse._each(json, function(op, key) {
        json[key] = op.toJSON();
      });
      return json;
    },

    /**
     * Returns true if this object can be serialized for saving.
     */
    _canBeSerialized: function() {
      return Parse.Object._canBeSerializedAsValue(this.attributes);
    },

    /**
     * Fetch the model from the server. If the server's representation of the
     * model differs from its current attributes, they will be overriden,
     * triggering a <code>"change"</code> event.
     * @return {Parse.Promise} A promise that is fulfilled when the fetch
     *     completes.
     */
    fetch: function(options) {
      var promise = new Parse.Promise();
      options = options ? _.clone(options) : {};
      var model = this;
      var success = options.success;
      options.success = function(resp, status, xhr) {
        model._finishFetch(model.parse(resp, status, xhr), true);
        if (success) {
          success(model, resp);
        }
        promise.resolve(model);
      };
      options.error = Parse.Object._wrapError(options.error, model, options,
                                              promise);
      Parse._request(
          "classes", model.className, model.id, 'GET', null, options);
      return promise;
    },

    /**
     * Set a hash of model attributes, and save the model to the server.
     * updatedAt will be updated when the request returns.
     * You can either call it as:<pre>
     *   object.save();</pre>
     * or<pre>
     *   object.save(null, options);</pre>
     * or<pre>
     *   object.save(attrs, options);</pre>
     * or<pre>
     *   object.save(key, value, options);</pre>
     *
     * For example, <pre>
     *   gameTurn.save({
     *     player: "Jake Cutter",
     *     diceRoll: 2
     *   }, {
     *     success: function(gameTurnAgain) {
     *       // The save was successful.
     *     },
     *     error: function(gameTurnAgain, error) {
     *       // The save failed.  Error is an instance of Parse.Error.
     *     }
     *   });</pre>
     * or with promises:<pre>
     *   gameTurn.save({
     *     player: "Jake Cutter",
     *     diceRoll: 2
     *   }).then(function(gameTurnAgain) {
     *     // The save was successful.
     *   }, function(error) {
     *     // The save failed.  Error is an instance of Parse.Error.
     *   });</pre>
     * 
     * @return {Parse.Promise} A promise that is fulfilled when the save
     *     completes.
     * @see Parse.Error
     */
    save: function(arg1, arg2, arg3) {
      var promise = new Parse.Promise();

      var i, attrs, current, options, saved;
      if (_.isObject(arg1) || Parse._isNullOrUndefined(arg1)) {
        attrs = arg1;
        options = arg2;
      } else {
        attrs = {};
        attrs[arg1] = arg2;
        options = arg3;
      }

      // Make save({ success: function() {} }) work.
      if (!options && attrs) {
        var extra_keys = _.reject(attrs, function(value, key) {
          return _.include(["success", "error", "wait"], key);
        });
        if (extra_keys.length === 0) {
          var all_functions = true;
          if (_.has(attrs, "success") && !_.isFunction(attrs.success)) {
            all_functions = false;
          }
          if (_.has(attrs, "error") && !_.isFunction(attrs.error)) {
            all_functions = false;
          }
          if (all_functions) {
            // This attrs object looks like it's really an options object,
            // and there's no other options object, so let's just use it.
            return this.save(null, attrs);
          }
        }
      }

      options = options ? _.clone(options) : {};
      if (options.wait) {
        current = _.clone(this.attributes);
      }
      var setOptions = _.clone(options);
      if (setOptions.wait) {
        setOptions.silent = true;
      }
      setOptions.error = function(model, error) {
        if (options.error) {
          options.error.apply(this, arguments);
        }
        promise.reject(error);
      };
      if (attrs && !this.set(attrs, setOptions)) {
        return promise;
      }
      var oldOptions = options;  // Psuedonym more accurate in some contexts.
      var newOptions = _.clone(options);

      var model = this;

      // If there is any unsaved child, save it first.
      model._refreshCache();

      

      var unsavedChildren = Parse.Object._findUnsavedChildren(model.attributes);
      if (unsavedChildren.length > 0) {
        return Parse.Object._deepSaveAsync(this.attributes).then(function() {
          return model.save(null, oldOptions);
        }, function(error) {
          if (options.error) {
            options.error.apply(this, arguments);
          }
          return Parse.Promise.error(error);
        });
      }

      /** ignore */
      newOptions.success = function(resp, status, xhr) {
        var serverAttrs = model.parse(resp, status, xhr);
        if (newOptions.wait) {
          serverAttrs = _.extend(attrs || {}, serverAttrs);
        }

        model._finishSave(serverAttrs);

        if (oldOptions.success) {
          oldOptions.success(model, resp);
        } else {
          model.trigger('sync', model, resp, newOptions);
        }

        promise.resolve(model);
      };

      newOptions.error = function(model, error) {
        model._cancelSave();
        if (oldOptions.error) {
          oldOptions.error.apply(this, arguments);
        }

        promise.reject(error);
      };

      newOptions.error = Parse.Object._wrapError(newOptions.error, model,
                                                 newOptions);

      this._startSave();
      this._saving = (this._saving || 0) + 1;

      this._allPreviousSaves = this._allPreviousSaves || Parse.Promise.as();
      this._allPreviousSaves._continueWith(function() {
        var method = model.id ? 'PUT' : 'POST';

        var json = model._getSaveJSON();

        var route = "classes";
        var className = model.className;
        if (model.className === "_User" && !model.id) {
          // Special-case user sign-up.
          route = "users";
          className = null;
        }
        var request =
          Parse._request(route, className, model.id, method, json, newOptions);
        if (newOptions.wait) {
          model.set(current, setOptions);
        }
        return request;

      });
      this._allPreviousSaves = promise;

      return promise;
    },

    /**
     * Destroy this model on the server if it was already persisted.
     * Optimistically removes the model from its collection, if it has one.
     * If `wait: true` is passed, waits for the server to respond
     * before removal.
     *
     * @return {Parse.Promise} A promise that is fulfilled when the destroy
     *     completes.
     */
    destroy: function(options) {
      var promise = new Parse.Promise();
      options = options ? _.clone(options) : {};
      var model = this;
      var success = options.success;

      var triggerDestroy = function() {
        model.trigger('destroy', model, model.collection, options);
      };

      if (!this.id) {
        return triggerDestroy();
      }
      /** ignore */
      options.success = function(resp) {
        if (options.wait) {
          triggerDestroy();
        }
        if (success) {
          success(model, resp);
        } else {
          model.trigger('sync', model, resp, options);
        }
        promise.resolve(model);
      };
      options.error = Parse.Object._wrapError(options.error, model, options,
                                              promise);

      Parse._request("classes", this.className, this.id, 'DELETE', null,
                    options);
      if (!options.wait) {
        triggerDestroy();
      }
      return promise;
    },

    /**
     * Converts a response into the hash of attributes to be set on the model.
     * @ignore
     */
    parse: function(resp, status, xhr) {
      var output = _.clone(resp);
      _(["createdAt", "updatedAt"]).each(function(key) {
        if (output[key]) {
          output[key] = Parse._parseDate(output[key]);
        }
      });
      if (!output.updatedAt) {
        output.updatedAt = output.createdAt;
      }
      if (status) {
        this._existed = (status !== 201);
      }
      return output;
    },

    /**
     * Creates a new model with identical attributes to this one.
     * @return {Parse.Object}
     */
    clone: function() {
      return new this.constructor(this.attributes);
    },

    /**
     * Returns true if this object has never been saved to Parse.
     * @return {Boolean}
     */
    isNew: function() {
      return !this.id;
    },

    /**
     * Call this method to manually fire a `"change"` event for this model and
     * a `"change:attribute"` event for each changed attribute.
     * Calling this will cause all objects observing the model to update.
     */
    change: function(options) {
      options = options || {};
      var changing = this._changing;
      this._changing = true;

      // Silent changes become pending changes.
      var self = this;
      Parse._each(this._silent, function(attr) {
        self._pending[attr] = true;
      });

      // Silent changes are triggered.
      var changes = _.extend({}, options.changes, this._silent);
      this._silent = {};
      Parse._each(changes, function(unused_value, attr) {
        self.trigger('change:' + attr, self, self.get(attr), options);
      });
      if (changing) {
        return this;
      }

      // This is to get around lint not letting us make a function in a loop.
      var deleteChanged = function(value, attr) {
        if (!self._pending[attr] && !self._silent[attr]) {
          delete self.changed[attr];
        }
      };

      // Continue firing `"change"` events while there are pending changes.
      while (!_.isEmpty(this._pending)) {
        this._pending = {};
        this.trigger('change', this, options);
        // Pending and silent changes still remain.
        Parse._each(this.changed, deleteChanged);
        self._previousAttributes = _.clone(this.attributes);
      }

      this._changing = false;
      return this;
    },

    /**
     * Returns true if this object was created by the Parse server when the
     * object might have already been there (e.g. in the case of a Facebook
     * login)
     */
    existed: function() {
      return this._existed;
    },

    /**
     * Determine if the model has changed since the last <code>"change"</code>
     * event.  If you specify an attribute name, determine if that attribute
     * has changed.
     * @param {String} attr Optional attribute name
     * @return {Boolean}
     */
    hasChanged: function(attr) {
      if (!arguments.length) {
        return !_.isEmpty(this.changed);
      }
      return this.changed && _.has(this.changed, attr);
    },

    /**
     * Returns an object containing all the attributes that have changed, or
     * false if there are no changed attributes. Useful for determining what
     * parts of a view need to be updated and/or what attributes need to be
     * persisted to the server. Unset attributes will be set to undefined.
     * You can also pass an attributes object to diff against the model,
     * determining if there *would be* a change.
     */
    changedAttributes: function(diff) {
      if (!diff) {
        return this.hasChanged() ? _.clone(this.changed) : false;
      }
      var changed = {};
      var old = this._previousAttributes;
      Parse._each(diff, function(diffVal, attr) {
        if (!_.isEqual(old[attr], diffVal)) {
          changed[attr] = diffVal;
        }
      });
      return changed;
    },

    /**
     * Gets the previous value of an attribute, recorded at the time the last
     * <code>"change"</code> event was fired.
     * @param {String} attr Name of the attribute to get.
     */
    previous: function(attr) {
      if (!arguments.length || !this._previousAttributes) {
        return null;
      }
      return this._previousAttributes[attr];
    },

    /**
     * Gets all of the attributes of the model at the time of the previous
     * <code>"change"</code> event.
     * @return {Object}
     */
    previousAttributes: function() {
      return _.clone(this._previousAttributes);
    },

    /**
     * Checks if the model is currently in a valid state. It's only possible to
     * get into an *invalid* state if you're using silent changes.
     * @return {Boolean}
     */
    isValid: function() {
      return !this.validate(this.attributes);
    },

    /**
     * You should not call this function directly unless you subclass
     * <code>Parse.Object</code>, in which case you can override this method
     * to provide additional validation on <code>set</code> and
     * <code>save</code>.  Your implementation should return 
     *
     * @param {Object} attrs The current data to validate.
     * @param {Object} options A Backbone-like options object.
     * @return {} False if the data is valid.  An error object otherwise.
     * @see Parse.Object#set
     */
    validate: function(attrs, options) {
      if (_.has(attrs, "ACL") && !(attrs.ACL instanceof Parse.ACL)) {
        return new Parse.Error(Parse.Error.OTHER_CAUSE,
                               "ACL must be a Parse.ACL.");
      }
      return false;
    },

    /**
     * Run validation against a set of incoming attributes, returning `true`
     * if all is well. If a specific `error` callback has been passed,
     * call that instead of firing the general `"error"` event.
     */
    _validate: function(attrs, options) {
      if (options.silent || !this.validate) {
        return true;
      }
      attrs = _.extend({}, this.attributes, attrs);
      var error = this.validate(attrs, options);
      if (!error) {
        return true;
      }
      if (options && options.error) {
        options.error(this, error, options);
      } else {
        this.trigger('error', this, error, options);
      }
      return false;
    },

    /**
     * Returns the ACL for this object.
     * @returns {Parse.ACL} An instance of Parse.ACL.
     * @see Parse.Object#get
     */
    getACL: function() {
      return this.get("ACL");
    },

    /**
     * Sets the ACL to be used for this object.
     * @param {Parse.ACL} acl An instance of Parse.ACL.
     * @param {Object} options Optional Backbone-like options object to be
     *     passed in to set.
     * @return {Boolean} Whether the set passed validation.
     * @see Parse.Object#set
     */
    setACL: function(acl, options) {
      return this.set("ACL", acl, options);
    }

  });

  /**
   * Returns the appropriate subclass for making new instances of the given
   * className string.
   */
  Parse.Object._getSubclass = function(className) {
    if (!_.isString(className)) {
      throw "Parse.Object._getSubclass requires a string argument.";
    }
    var ObjectClass = Parse.Object._classMap[className];
    if (!ObjectClass) {
      ObjectClass = Parse.Object.extend(className);
      Parse.Object._classMap[className] = ObjectClass;
    }
    return ObjectClass;
  };

  /**
   * Creates an instance of a subclass of Parse.Object for the given classname.
   */
  Parse.Object._create = function(className, attributes, options) {
    var ObjectClass = Parse.Object._getSubclass(className);
    return new ObjectClass(attributes, options);
  };

  // Set up a map of className to class so that we can create new instances of
  // Parse Objects from JSON automatically.
  Parse.Object._classMap = {};

  Parse.Object._extend = Parse._extend;

  /**
   * Creates a new subclass of Parse.Object for the given Parse class name.
   *
   * <p>Every extension of a Parse class will inherit from the most recent
   * previous extension of that class. When a Parse.Object is automatically
   * created by parsing JSON, it will use the most recent extension of that
   * class.</p>
   *
   * <p>You should call either:<pre>
   *     var MyClass = Parse.Object.extend("MyClass", {
   *         <i>Instance properties</i>
   *     }, {
   *         <i>Class properties</i>
   *     });</pre>
   * or, for Backbone compatibility:<pre>
   *     var MyClass = Parse.Object.extend({
   *         className: "MyClass",
   *         <i>Other instance properties</i>
   *     }, {
   *         <i>Class properties</i>
   *     });</pre></p>
   *
   * @param {String} className The name of the Parse class backing this model.
   * @param {Object} protoProps Instance properties to add to instances of the
   *     class returned from this method.
   * @param {Object} classProps Class properties to add the class returned from
   *     this method.
   * @return {Class} A new subclass of Parse.Object.
   */
  Parse.Object.extend = function(className, protoProps, classProps) {
    // Handle the case with only two args.
    if (!_.isString(className)) {
      if (className && _.has(className, "className")) {
        return Parse.Object.extend(className.className, className, protoProps);
      } else {
        throw new Error(
            "Parse.Object.extend's first argument should be the className.");
      }
    }

    // If someone tries to subclass "User", coerce it to the right type.
    if (className === "User") {
      className = "_User";
    }

    var NewClassObject = null;
    if (_.has(Parse.Object._classMap, className)) {
      var OldClassObject = Parse.Object._classMap[className];
      // This new subclass has been told to extend both from "this" and from
      // OldClassObject. This is multiple inheritance, which isn't supported.
      // For now, let's just pick one.
      NewClassObject = OldClassObject._extend(protoProps, classProps);
    } else {
      protoProps = protoProps || {};
      protoProps.className = className;
      NewClassObject = this._extend(protoProps, classProps);
    }
    // Extending a subclass should reuse the classname automatically.
    NewClassObject.extend = function(arg0) {
      if (_.isString(arg0) || (arg0 && _.has(arg0, "className"))) {
        return Parse.Object.extend.apply(NewClassObject, arguments);
      }
      var newArguments = [className].concat(Parse._.toArray(arguments));
      return Parse.Object.extend.apply(NewClassObject, newArguments);
    };
    Parse.Object._classMap[className] = NewClassObject;
    return NewClassObject;
  };

  /**
   * Wrap an optional error callback with a fallback error event.
   */
  Parse.Object._wrapError = function(onError, originalModel, options, promise) {
    return function(model, response) {
      if (model !== originalModel) {
        response = model;
      }
      var error = new Parse.Error(-1, response.responseText);
      if (response.responseText) {
        var errorJSON = JSON.parse(response.responseText);
        if (errorJSON) {
          error = new Parse.Error(errorJSON.code, errorJSON.error);
        }
      }
      if (onError) {
        onError(originalModel, error, options);
      } else {
        originalModel.trigger('error', originalModel, error, options);
      }
      if (promise) {
        promise.reject(error);
      }
    };
  };

  Parse.Object._findUnsavedChildren = function(object) {
    var results = [];
    Parse._traverse(object, function(object) {
      object._refreshCache();
      if (object.dirty()) {
        results.push(object);
      }
    });
    return results;
  };

  Parse.Object._canBeSerializedAsValue = function(object) {
    var canBeSerializedAsValue = true;

    if (object instanceof Parse.Object) {
      canBeSerializedAsValue = !!object.id;

    } else if (_.isArray(object)) {
      _.each(object, function(child) {
        if (!Parse.Object._canBeSerializedAsValue(child)) {
          canBeSerializedAsValue = false;
        }
      });

    } else if (_.isObject(object)) {
      Parse._each(object, function(child) {
        if (!Parse.Object._canBeSerializedAsValue(child)) {
          canBeSerializedAsValue = false;
        }
      });
    }

    return canBeSerializedAsValue;
  };

  Parse.Object._deepSaveAsync = function(object) {
    var objects = _.uniq(Parse.Object._findUnsavedChildren(object));
    var remaining = _.uniq(objects);

    return Parse.Promise._continueWhile(function() {
      return remaining.length > 0;
    }, function() {

      // Gather up all the objects that can be saved in this batch.
      var batch = [];
      var newRemaining = [];
      _.each(remaining, function(object) {
        // Limit batches to 20 objects.
        if (batch.length > 20) {
          newRemaining.push(object);
          return;
        }

        if (object._canBeSerialized()) {
          batch.push(object);
        } else {
          newRemaining.push(object);
        }
      });
      remaining = newRemaining;

      // If we can't save any objects, there must be a circular reference.
      if (batch.length === 0) {
        return Parse.Promise.error(
          new Parse.Error(Parse.Error.OTHER_CAUSE,
                          "Tried to save a batch with a cycle."));
      }

      // Reserve a spot in every object's save queue.
      var readyToStart = Parse.Promise.when(_.map(batch, function(object) {
        return object._allPreviousSaves || Parse.Promise.as();
      }));
      var batchFinished = new Parse.Promise();
      _.each(batch, function(object) {
        object._allPreviousSaves = batchFinished;
      });

      // Save a single batch, whether previous saves succeeded or failed.
      return readyToStart._continueWith(function() {
        return Parse._request("batch", null, null, "POST", {
          requests: _.map(batch, function(object) {
            var json = object._getSaveJSON();
            var method = "POST";

            var path = "/1/classes/" + object.className;
            if (object.id) {
              path = path + "/" + object.id;
              method = "PUT";
            }

            object._startSave();

            return {
              method: method,
              path: path,
              body: json
            };
          })

        }).then(function(response, status, xhr) {
          var error;
          _.each(batch, function(object, i) {
            if (response[i].success) {
              object._finishSave(
                object.parse(response[i].success, status, xhr));
            } else {
              error = error || response[i].error;
              object._cancelSave();
            }
          });
          if (error) {
            return Parse.Promise.error(
              new Parse.Error(error.code, error.error));
          }

        }).then(function(results) {
          batchFinished.resolve(results);
          return results;
        }, function(error) {
          batchFinished.reject(error);
          return Parse.Promise.error(error);

        });
      });
    }).then(function() {
      return object;

    });
  };

}(this));

(function(root) {
  root.Parse = root.Parse || {};
  var Parse = root.Parse;
  var _ = Parse._;

  /**
   * Represents a Role on the Parse server. Roles represent groupings of
   * Users for the purposes of granting permissions (e.g. specifying an ACL
   * for an Object). Roles are specified by their sets of child users and
   * child roles, all of which are granted any permissions that the parent
   * role has.
   *
   * <p>Roles must have a name (which cannot be changed after creation of the
   * role), and must specify an ACL.</p>
   * @class
   * A Parse.Role is a local representation of a role persisted to the Parse
   * cloud.
   */
  Parse.Role = Parse.Object.extend("_Role", /** @lends Parse.Role.prototype */ {
    // Instance Methods
    
    /**
     * Constructs a new ParseRole with the given name and ACL.
     * 
     * @param {String} name The name of the Role to create.
     * @param {Parse.ACL} acl The ACL for this role. Roles must have an ACL.
     */
    constructor: function(name, acl) {
      if (_.isString(name) && (acl instanceof Parse.ACL)) {
        Parse.Object.prototype.constructor.call(this, null, null);
        this.setName(name);
        this.setACL(acl);
      } else {
        Parse.Object.prototype.constructor.call(this, name, acl);
      }
    },
    
    /**
     * Gets the name of the role.  You can alternatively call role.get("name")
     * 
     * @return {String} the name of the role.
     */
    getName: function() {
      return this.get("name");
    },
    
    /**
     * Sets the name for a role. This value must be set before the role has
     * been saved to the server, and cannot be set once the role has been
     * saved.
     * 
     * <p>
     *   A role's name can only contain alphanumeric characters, _, -, and
     *   spaces.
     * </p>
     *
     * <p>This is equivalent to calling role.set("name", name)</p>
     * 
     * @param {String} name The name of the role.
     * @param {Object} options Standard options object with success and error
     *     callbacks.
     */
    setName: function(name, options) {
      return this.set("name", name, options);
    },
    
    /**
     * Gets the Parse.Relation for the Parse.Users that are direct
     * children of this role. These users are granted any privileges that this
     * role has been granted (e.g. read or write access through ACLs). You can
     * add or remove users from the role through this relation.
     * 
     * <p>This is equivalent to calling role.relation("users")</p>
     * 
     * @return {Parse.Relation} the relation for the users belonging to this
     *     role.
     */
    getUsers: function() {
      return this.relation("users");
    },
    
    /**
     * Gets the Parse.Relation for the Parse.Roles that are direct
     * children of this role. These roles' users are granted any privileges that
     * this role has been granted (e.g. read or write access through ACLs). You
     * can add or remove child roles from this role through this relation.
     * 
     * <p>This is equivalent to calling role.relation("roles")</p>
     * 
     * @return {Parse.Relation} the relation for the roles belonging to this
     *     role.
     */
    getRoles: function() {
      return this.relation("roles");
    },
    
    /**
     * @ignore
     */
    validate: function(attrs, options) {
      if ("name" in attrs && attrs.name !== this.getName()) {
        var newName = attrs.name;
        if (this.id && this.id !== attrs.objectId) {
          // Check to see if the objectId being set matches this.id.
          // This happens during a fetch -- the id is set before calling fetch.
          // Let the name be set in this case.
          return new Parse.Error(Parse.Error.OTHER_CAUSE,
              "A role's name can only be set before it has been saved.");
        }
        if (!_.isString(newName)) {
          return new Parse.Error(Parse.Error.OTHER_CAUSE,
              "A role's name must be a String.");
        }
        if (!(/^[0-9a-zA-Z\-_ ]+$/).test(newName)) {
          return new Parse.Error(Parse.Error.OTHER_CAUSE,
              "A role's name can only contain alphanumeric characters, _," +
              " -, and spaces.");
        }
      }
      if (Parse.Object.prototype.validate) {
        return Parse.Object.prototype.validate.call(this, attrs, options);
      }
      return false;
    }
  });
}(this));


/*global _: false */
(function(root) {
  root.Parse = root.Parse || {};
  var Parse = root.Parse;
  var _ = Parse._;

  /**
   * Creates a new instance with the given models and options.  Typically, you
   * will not call this method directly, but will instead make a subclass using
   * <code>Parse.Collection.extend</code>.
   *
   * @param {Array} models An array of instances of <code>Parse.Object</code>.
   *
   * @param {Object} options An optional object with Backbone-style options.
   * Valid options are:<ul>
   *   <li>model: The Parse.Object subclass that this collection contains.
   *   <li>query: An instance of Parse.Query to use when fetching items.
   *   <li>comparator: A string property name or function to sort by.
   * </ul>
   *
   * @see Parse.Collection.extend
   *
   * @class
   *
   * <p>Provides a standard collection class for our sets of models, ordered
   * or unordered.  For more information, see the
   * <a href="http://documentcloud.github.com/backbone/#Collection">Backbone
   * documentation</a>.</p>
   */
  Parse.Collection = function(models, options) {
    options = options || {};
    if (options.comparator) {
      this.comparator = options.comparator;
    }
    if (options.model) {
      this.model = options.model;
    }
    if (options.query) {
      this.query = options.query;
    }
    this._reset();
    this.initialize.apply(this, arguments);
    if (models) {
      this.reset(models, {silent: true, parse: options.parse});
    }
  };

  // Define the Collection's inheritable methods.
  _.extend(Parse.Collection.prototype, Parse.Events,
      /** @lends Parse.Collection.prototype */ {

    // The default model for a collection is just a Parse.Object.
    // This should be overridden in most cases.
    
    model: Parse.Object,

    /**
     * Initialize is an empty function by default. Override it with your own
     * initialization logic.
     */
    initialize: function(){},

    /**
     * The JSON representation of a Collection is an array of the
     * models' attributes.
     */
    toJSON: function() {
      return this.map(function(model){ return model.toJSON(); });
    },

    /**
     * Add a model, or list of models to the set. Pass **silent** to avoid
     * firing the `add` event for every new model.
     */
    add: function(models, options) {
      var i, index, length, model, cid, id, cids = {}, ids = {};
      options = options || {};
      models = _.isArray(models) ? models.slice() : [models];

      // Begin by turning bare objects into model references, and preventing
      // invalid models or duplicate models from being added.
      for (i = 0, length = models.length; i < length; i++) {
        models[i] = this._prepareModel(models[i], options);
        model = models[i];
        if (!model) {
          throw new Error("Can't add an invalid model to a collection");
        }
        cid = model.cid;
        if (cids[cid] || this._byCid[cid]) {
          throw new Error("Duplicate cid: can't add the same model " +
                          "to a collection twice");
        }
        id = model.id;
        if (!Parse._isNullOrUndefined(id) && (ids[id] || this._byId[id])) {
          throw new Error("Duplicate id: can't add the same model " +
                          "to a collection twice");
        }
        ids[id] = model;
        cids[cid] = model;
      }

      // Listen to added models' events, and index models for lookup by
      // `id` and by `cid`.
      for (i = 0; i < length; i++) {
        (model = models[i]).on('all', this._onModelEvent, this);
        this._byCid[model.cid] = model;
        if (model.id) {
          this._byId[model.id] = model;
        }
      }

      // Insert models into the collection, re-sorting if needed, and triggering
      // `add` events unless silenced.
      this.length += length;
      index = Parse._isNullOrUndefined(options.at) ? 
          this.models.length : options.at;
      this.models.splice.apply(this.models, [index, 0].concat(models));
      if (this.comparator) {
        this.sort({silent: true});
      }
      if (options.silent) {
        return this;
      }
      for (i = 0, length = this.models.length; i < length; i++) {
        model = this.models[i];
        if (cids[model.cid]) {
          options.index = i;
          model.trigger('add', model, this, options);
        }
      }
      return this;
    },

    /**
     * Remove a model, or a list of models from the set. Pass silent to avoid
     * firing the <code>remove</code> event for every model removed.
     */
    remove: function(models, options) {
      var i, l, index, model;
      options = options || {};
      models = _.isArray(models) ? models.slice() : [models];
      for (i = 0, l = models.length; i < l; i++) {
        model = this.getByCid(models[i]) || this.get(models[i]);
        if (!model) {
          continue;
        }
        delete this._byId[model.id];
        delete this._byCid[model.cid];
        index = this.indexOf(model);
        this.models.splice(index, 1);
        this.length--;
        if (!options.silent) {
          options.index = index;
          model.trigger('remove', model, this, options);
        }
        this._removeReference(model);
      }
      return this;
    },

    /**
     * Gets a model from the set by id.
     */
    get: function(id) {
      return id && this._byId[id.id || id];
    },

    /**
     * Gets a model from the set by client id.
     */
    getByCid: function(cid) {
      return cid && this._byCid[cid.cid || cid];
    },

    /**
     * Gets the model at the given index.
     */
    at: function(index) {
      return this.models[index];
    },

    /**
     * Forces the collection to re-sort itself. You don't need to call this
     * under normal circumstances, as the set will maintain sort order as each
     * item is added.
     */
    sort: function(options) {
      options = options || {};
      if (!this.comparator) {
        throw new Error('Cannot sort a set without a comparator');
      }
      var boundComparator = _.bind(this.comparator, this);
      if (this.comparator.length === 1) {
        this.models = this.sortBy(boundComparator);
      } else {
        this.models.sort(boundComparator);
      }
      if (!options.silent) {
        this.trigger('reset', this, options);
      }
      return this;
    },

    /**
     * Plucks an attribute from each model in the collection.
     */
    pluck: function(attr) {
      return _.map(this.models, function(model){ return model.get(attr); });
    },

    /**
     * When you have more items than you want to add or remove individually,
     * you can reset the entire set with a new list of models, without firing
     * any `add` or `remove` events. Fires `reset` when finished.
     */
    reset: function(models, options) {
      var self = this;
      models = models || [];
      options = options || {};
      _.each(this.models, function(model) {
        self._removeReference(model);
      });
      this._reset();
      this.add(models, {silent: true, parse: options.parse});
      if (!options.silent) {
        this.trigger('reset', this, options);
      }
      return this;
    },

    /**
     * Fetches the default set of models for this collection, resetting the
     * collection when they arrive. If `add: true` is passed, appends the
     * models to the collection instead of resetting.
     */
    fetch: function(options) {
      options = options ? _.clone(options) : {};
      if (options.parse === undefined) {
        options.parse = true;
      }
      var collection = this;
      var success = options.success;
      options.success = function(results, resp) {
        if (options.add) {
          collection.add(results, options);
        } else {
          collection.reset(results, options);
        }
        if (success) {
          success(collection, resp);
        }
      };
      options.error = Parse.Object._wrapError(options.error, collection,
                                              options);
      var query = this.query || new Parse.Query(this.model);
      query.find(options);
    },

    /**
     * Creates a new instance of a model in this collection. Add the model to
     * the collection immediately, unless `wait: true` is passed, in which case
     * we wait for the server to agree.
     */
    create: function(model, options) {
      var coll = this;
      options = options ? _.clone(options) : {};
      model = this._prepareModel(model, options);
      if (!model) {
        return false;
      }
      if (!options.wait) {
        coll.add(model, options);
      }
      var success = options.success;
      options.success = function(nextModel, resp, xhr) {
        if (options.wait) {
          coll.add(nextModel, options);
        }
        if (success) {
          success(nextModel, resp);
        } else {
          nextModel.trigger('sync', model, resp, options);
        }
      };
      model.save(null, options);
      return model;
    },

    /**
     * Converts a response into a list of models to be added to the collection.
     * The default implementation is just to pass it through.
     * @ignore
     */
    parse: function(resp, xhr) {
      return resp;
    },

    /**
     * Proxy to _'s chain. Can't be proxied the same way the rest of the
     * underscore methods are proxied because it relies on the underscore
     * constructor.
     */
    chain: function() {
      return _(this.models).chain();
    },

    /**
     * Reset all internal state. Called when the collection is reset.
     */
    _reset: function(options) {
      this.length = 0;
      this.models = [];
      this._byId  = {};
      this._byCid = {};
    },

    /**
     * Prepare a model or hash of attributes to be added to this collection.
     */
    _prepareModel: function(model, options) {
      if (!(model instanceof Parse.Object)) {
        var attrs = model;
        options.collection = this;
        model = new this.model(attrs, options);
        if (!model._validate(model.attributes, options)) {
          model = false;
        }
      } else if (!model.collection) {
        model.collection = this;
      }
      return model;
    },

    /**
     * Internal method to remove a model's ties to a collection.
     */
    _removeReference: function(model) {
      if (this === model.collection) {
        delete model.collection;
      }
      model.off('all', this._onModelEvent, this);
    },

    /**
     * Internal method called every time a model in the set fires an event.
     * Sets need to update their indexes when models change ids. All other
     * events simply proxy through. "add" and "remove" events that originate
     * in other collections are ignored.
     */
    _onModelEvent: function(ev, model, collection, options) {
      if ((ev === 'add' || ev === 'remove') && collection !== this) {
        return;
      }
      if (ev === 'destroy') {
        this.remove(model, options);
      }
      if (model && ev === 'change:objectId') {
        delete this._byId[model.previous("objectId")];
        this._byId[model.id] = model;
      }
      this.trigger.apply(this, arguments);
    }

  });

  // Underscore methods that we want to implement on the Collection.
  var methods = ['forEach', 'each', 'map', 'reduce', 'reduceRight', 'find',
    'detect', 'filter', 'select', 'reject', 'every', 'all', 'some', 'any',
    'include', 'contains', 'invoke', 'max', 'min', 'sortBy', 'sortedIndex',
    'toArray', 'size', 'first', 'initial', 'rest', 'last', 'without', 'indexOf',
    'shuffle', 'lastIndexOf', 'isEmpty', 'groupBy'];

  // Mix in each Underscore method as a proxy to `Collection#models`.
  _.each(methods, function(method) {
    Parse.Collection.prototype[method] = function() {
      return _[method].apply(_, [this.models].concat(_.toArray(arguments)));
    };
  });

  /**
   * Creates a new subclass of <code>Parse.Collection</code>.  For example,<pre>
   *   var MyCollection = Parse.Collection.extend({
   *     // Instance properties
   *
   *     model: MyClass,
   *     query: MyQuery,
   *
   *     getFirst: function() {
   *       return this.at(0);
   *     }
   *   }, {
   *     // Class properties
   *
   *     makeOne: function() {
   *       return new MyCollection();
   *     }
   *   });
   *
   *   var collection = new MyCollection();
   * </pre>
   *
   * @function
   * @param {Object} instanceProps Instance properties for the collection.
   * @param {Object} classProps Class properies for the collection.
   * @return {Class} A new subclass of <code>Parse.Collection</code>.
   */
  Parse.Collection.extend = Parse._extend;

}(this));

/*global _: false, document: false */
(function(root) {
  root.Parse = root.Parse || {};
  var Parse = root.Parse;
  var _ = Parse._;

  /**
   * Creating a Parse.View creates its initial element outside of the DOM,
   * if an existing element is not provided...
   * @class
   *
   * <p>A fork of Backbone.View, provided for your convenience.  If you use this
   * class, you must also include jQuery, or another library that provides a
   * jQuery-compatible $ function.  For more information, see the
   * <a href="http://documentcloud.github.com/backbone/#View">Backbone
   * documentation</a>.</p>
   * <p><strong><em>Available in the client SDK only.</em></strong></p>
   */
  Parse.View = function(options) {
    this.cid = _.uniqueId('view');
    this._configure(options || {});
    this._ensureElement();
    this.initialize.apply(this, arguments);
    this.delegateEvents();
  };

  // Cached regex to split keys for `delegate`.
  var eventSplitter = /^(\S+)\s*(.*)$/;

  // List of view options to be merged as properties.
  
  var viewOptions = ['model', 'collection', 'el', 'id', 'attributes',
                     'className', 'tagName'];

  // Set up all inheritable **Parse.View** properties and methods.
  _.extend(Parse.View.prototype, Parse.Events,
           /** @lends Parse.View.prototype */ {

    // The default `tagName` of a View's element is `"div"`.
    tagName: 'div',

    /**
     * jQuery delegate for element lookup, scoped to DOM elements within the
     * current view. This should be prefered to global lookups where possible.
     */
    $: function(selector) {
      return this.$el.find(selector);
    },

    /**
     * Initialize is an empty function by default. Override it with your own
     * initialization logic.
     */
    initialize: function(){},

    /**
     * The core function that your view should override, in order
     * to populate its element (`this.el`), with the appropriate HTML. The
     * convention is for **render** to always return `this`.
     */
    render: function() {
      return this;
    },

    /**
     * Remove this view from the DOM. Note that the view isn't present in the
     * DOM by default, so calling this method may be a no-op.
     */
    remove: function() {
      this.$el.remove();
      return this;
    },

    /**
     * For small amounts of DOM Elements, where a full-blown template isn't
     * needed, use **make** to manufacture elements, one at a time.
     * <pre>
     *     var el = this.make('li', {'class': 'row'},
     *                        this.model.escape('title'));</pre>
     */
    make: function(tagName, attributes, content) {
      var el = document.createElement(tagName);
      if (attributes) {
        Parse.$(el).attr(attributes);
      }
      if (content) {
        Parse.$(el).html(content);
      }
      return el;
    },

    /**
     * Changes the view's element (`this.el` property), including event
     * re-delegation.
     */
    setElement: function(element, delegate) {
      this.$el = Parse.$(element);
      this.el = this.$el[0];
      if (delegate !== false) {
        this.delegateEvents();
      }
      return this;
    },

    /**
     * Set callbacks.  <code>this.events</code> is a hash of
     * <pre>
     * *{"event selector": "callback"}*
     *
     *     {
     *       'mousedown .title':  'edit',
     *       'click .button':     'save'
     *       'click .open':       function(e) { ... }
     *     }
     * </pre>
     * pairs. Callbacks will be bound to the view, with `this` set properly.
     * Uses event delegation for efficiency.
     * Omitting the selector binds the event to `this.el`.
     * This only works for delegate-able events: not `focus`, `blur`, and
     * not `change`, `submit`, and `reset` in Internet Explorer.
     */
    delegateEvents: function(events) {
      events = events || Parse._getValue(this, 'events');
      if (!events) {
        return;
      }
      this.undelegateEvents();
      var self = this;
      Parse._each(events, function(method, key) {
        if (!_.isFunction(method)) {
          method = self[events[key]];
        }
        if (!method) {
          throw new Error('Event "' + events[key] + '" does not exist');
        }
        var match = key.match(eventSplitter);
        var eventName = match[1], selector = match[2];
        method = _.bind(method, self);
        eventName += '.delegateEvents' + self.cid;
        if (selector === '') {
          self.$el.bind(eventName, method);
        } else {
          self.$el.delegate(selector, eventName, method);
        }
      });
    },

    /**
     * Clears all callbacks previously bound to the view with `delegateEvents`.
     * You usually don't need to use this, but may wish to if you have multiple
     * Backbone views attached to the same DOM element.
     */
    undelegateEvents: function() {
      this.$el.unbind('.delegateEvents' + this.cid);
    },

    /**
     * Performs the initial configuration of a View with a set of options.
     * Keys with special meaning *(model, collection, id, className)*, are
     * attached directly to the view.
     */
    _configure: function(options) {
      if (this.options) {
        options = _.extend({}, this.options, options);
      }
      var self = this;
      _.each(viewOptions, function(attr) {
        if (options[attr]) {
          self[attr] = options[attr];
        }
      });
      this.options = options;
    },

    /**
     * Ensure that the View has a DOM element to render into.
     * If `this.el` is a string, pass it through `$()`, take the first
     * matching element, and re-assign it to `el`. Otherwise, create
     * an element from the `id`, `className` and `tagName` properties.
     */
    _ensureElement: function() {
      if (!this.el) {
        var attrs = Parse._getValue(this, 'attributes') || {};
        if (this.id) {
          attrs.id = this.id;
        }
        if (this.className) {
          attrs['class'] = this.className;
        }
        this.setElement(this.make(this.tagName, attrs), false);
      } else {
        this.setElement(this.el, false);
      }
    }

  });

  /**
   * @function
   * @param {Object} instanceProps Instance properties for the view.
   * @param {Object} classProps Class properies for the view.
   * @return {Class} A new subclass of <code>Parse.View</code>.
   */
  Parse.View.extend = Parse._extend;

}(this));

(function(root) {
  root.Parse = root.Parse || {};
  var Parse = root.Parse;
  var _ = Parse._;

  /**
   * @class
   *
   * <p>A Parse.User object is a local representation of a user persisted to the
   * Parse cloud. This class is a subclass of a Parse.Object, and retains the
   * same functionality of a Parse.Object, but also extends it with various
   * user specific methods, like authentication, signing up, and validation of
   * uniqueness.</p>
   */
  Parse.User = Parse.Object.extend("_User", /** @lends Parse.User.prototype */ {
    // Instance Variables
    _isCurrentUser: false,


    // Instance Methods

    /**
     * Internal method to handle special fields in a _User response.
     */
    _mergeMagicFields: function(attrs) {
      if (attrs.sessionToken) {
        this._sessionToken = attrs.sessionToken;
        delete attrs.sessionToken;
      }
      Parse.User.__super__._mergeMagicFields.call(this, attrs);
    },

    /**
     * Removes null values from authData (which exist temporarily for
     * unlinking)
     */
    _cleanupAuthData: function() {
      if (!this.isCurrent()) {
        return;
      }
      var authData = this.get('authData');
      if (!authData) {
        return;
      }
      _.each(this.get('authData'), function(value, key) {
        if (!authData[key]) {
          delete authData[key];
        }
      });
    },

    /**
     * Synchronizes authData for all providers.
     */
    _synchronizeAllAuthData: function() {
      var authData = this.get('authData');
      if (!authData) {
        return;
      }

      var self = this;
      _.each(this.get('authData'), function(value, key) {
        self._synchronizeAuthData(key);
      });
    },

    /**
     * Synchronizes auth data for a provider (e.g. puts the access token in the
     * right place to be used by the Facebook SDK).
     */
    _synchronizeAuthData: function(provider) {
      if (!this.isCurrent()) {
        return;
      }
      var authType;
      if (_.isString(provider)) {
        authType = provider;
        provider = Parse.User._authProviders[authType];
      } else {
        authType = provider.getAuthType();
      }
      var authData = this.get('authData');
      if (!authData || !provider) {
        return;
      }
      var success = provider.restoreAuthentication(authData[authType]);
      if (!success) {
        this._unlinkFrom(provider);
      }
    },

    _handleSaveResult: function(makeCurrent) {
      // Clean up and synchronize the authData object, removing any unset values
      if (makeCurrent) {
        this._isCurrentUser = true;
      }
      this._cleanupAuthData();
      this._synchronizeAllAuthData();
      // Don't keep the password around.
      delete this._serverData.password;
      this._rebuildEstimatedDataForKey("password");
      this._refreshCache();
      if (makeCurrent || this.isCurrent()) {
        Parse.User._saveCurrentUser(this);
      }
    },

    /**
     * Unlike in the Android/iOS SDKs, logInWith is unnecessary, since you can
     * call linkWith on the user (even if it doesn't exist yet on the server).
     */
    _linkWith: function(provider, options) {
      var authType;
      if (_.isString(provider)) {
        authType = provider;
        provider = Parse.User._authProviders[provider];
      } else {
        authType = provider.getAuthType();
      }
      if (_.has(options, 'authData')) {
        var authData = this.get('authData') || {};
        authData[authType] = options.authData;
        this.set('authData', authData);

        // Overridden so that the user can be made the current user.
        var newOptions = _.clone(options);
        newOptions.success = function(model) {
          model._handleSaveResult(true);
          if (options.success) {
            options.success.apply(this, arguments);
          }
        };
        return this.save({'authData': authData}, newOptions);
      } else {
        var self = this;
        return provider.authenticate({
          success: function(provider, result) {
            self._linkWith(provider, {
              authData: result,
              success: options.success,
              error: options.error
            });
          },
          error: function(provider, error) {
            if (options.error) {
              options.error(self, error);
            }
          }
        });
      }
    },

    /**
     * Unlinks a user from a service.
     */
    _unlinkFrom: function(provider, options) {
      var authType;
      if (_.isString(provider)) {
        authType = provider;
        provider = Parse.User._authProviders[provider];
      } else {
        authType = provider.getAuthType();
      }
      var newOptions = _.clone(options);
      var self = this;
      newOptions.authData = null;
      newOptions.success = function(model) {
        self._synchronizeAuthData(provider);
        if (options.success) {
          options.success.apply(this, arguments);
        }
      };
      return this._linkWith(provider, newOptions);
    },

    /**
     * Checks whether a user is linked to a service.
     */
    _isLinked: function(provider) {
      var authType;
      if (_.isString(provider)) {
        authType = provider;
      } else {
        authType = provider.getAuthType();
      }
      var authData = this.get('authData') || {};
      return !!authData[authType];
    },

    /**
     * Deauthenticates all providers.
     */
    _logOutWithAll: function() {
      var authData = this.get('authData');
      if (!authData) {
        return;
      }
      var self = this;
      _.each(this.get('authData'), function(value, key) {
        self._logOutWith(key);
      });
    },

    /**
     * Deauthenticates a single provider (e.g. removing access tokens from the
     * Facebook SDK).
     */
    _logOutWith: function(provider) {
      if (!this.isCurrent()) {
        return;
      }
      if (_.isString(provider)) {
        provider = Parse.User._authProviders[provider];
      }
      if (provider && provider.deauthenticate) {
        provider.deauthenticate();
      }
    },

    /**
     * Signs up a new user. You should call this instead of save for
     * new Parse.Users. This will create a new Parse.User on the server, and
     * also persist the session on disk so that you can access the user using
     * <code>current</code>.
     *
     * <p>A username and password must be set before calling signUp.</p>
     *
     * <p>Calls options.success or options.error on completion.</p>
     *
     * @param {Object} attrs Extra fields to set on the new user, or null.
     * @param {Object} options A Backbone-style options object.
     * @return {Parse.Promise} A promise that is fulfilled when the signup
     *     finishes.
     * @see Parse.User.signUp
     */
    signUp: function(attrs, options) {
      var error;
      options = options || {};

      var username = (attrs && attrs.username) || this.get("username");
      if (!username || (username === "")) {
        error = new Parse.Error(
            Parse.Error.OTHER_CAUSE,
            "Cannot sign up user with an empty name.");
        if (options && options.error) {
          options.error(this, error);
        }
        return Parse.Promise.error(error);
      }

      var password = (attrs && attrs.password) || this.get("password");
      if (!password || (password === "")) {
        error = new Parse.Error(
            Parse.Error.OTHER_CAUSE,
            "Cannot sign up user with an empty password.");
        if (options && options.error) {
          options.error(this, error);
        }
        return Parse.Promise.error(error);
      }

      // Overridden so that the user can be made the current user.
      var newOptions = _.clone(options);
      newOptions.success = function(model) {
        model._handleSaveResult(true);
        if (options.success) {
          options.success.apply(this, arguments);
        }
      };
      return this.save(attrs, newOptions);
    },

    /**
     * Logs in a Parse.User. On success, this saves the session to localStorage,
     * so you can retrieve the currently logged in user using
     * <code>current</code>.
     *
     * <p>A username and password must be set before calling logIn.</p>
     *
     * <p>Calls options.success or options.error on completion.</p>
     *
     * @param {Object} options A Backbone-style options object.
     * @see Parse.User.logIn
     * @return {Parse.Promise} A promise that is fulfilled with the user when
     *     the login is complete.
     */
    logIn: function(options) {
      var promise = new Parse.Promise();
      var model = this;
      var newOptions = options ? _.clone(options) : {};
      newOptions.success = function(resp, status, xhr) {
        var serverAttrs = model.parse(resp, status, xhr);
        model._finishFetch(serverAttrs);
        model._handleSaveResult(true);
        if (options && options.success) {
          options.success(model, resp);
        } else {
          model.trigger('sync', model, resp, newOptions);
        }
        promise.resolve(model);
      };
      newOptions.error = Parse.Object._wrapError(newOptions.error, model,
                                                 newOptions, promise);
      Parse._request("login", null, null, "GET", this.toJSON(), newOptions);
      return promise;
    },

    /**
     * @see Parse.Object#save
     */
    save: function(arg1, arg2, arg3) {
      var i, attrs, current, options, saved;
      if (_.isObject(arg1) || _.isNull(arg1) || _.isUndefined(arg1)) {
        attrs = arg1;
        options = arg2;
      } else {
        attrs = {};
        attrs[arg1] = arg2;
        options = arg3;
      }
      options = options || {};

      var newOptions = _.clone(options);
      newOptions.success = function(model) {
        model._handleSaveResult(false);
        if (options.success) {
          options.success.apply(this, arguments);
        }
      };
      return Parse.Object.prototype.save.call(this, attrs, newOptions);
    },

    /**
     * @see Parse.Object#fetch
     */
    fetch: function(options) {
      var newOptions = _.clone(options);
      newOptions.success = function(model) {
        model._handleSaveResult(false);
        if (options.success) {
          options.success.apply(this, arguments);
        }
      };
      return Parse.Object.prototype.fetch.call(this, newOptions);
    },

    /**
     * Returns true if <code>current</code> would return this user.
     * @see Parse.User#current
     */
    isCurrent: function() {
      return this._isCurrentUser;
    },

    /**
     * Returns get("username").
     * @return {String}
     * @see Parse.Object#get
     */
    getUsername: function() {
      return this.get("username");
    },

    /**
     * Calls set("username", username, options) and returns the result.
     * @param {String} username
     * @param {Object} options A Backbone-style options object.
     * @return {Boolean}
     * @see Parse.Object.set
     */
    setUsername: function(username, options) {
      return this.set("username", username, options);
    },

    /**
     * Calls set("password", password, options) and returns the result.
     * @param {String} password
     * @param {Object} options A Backbone-style options object.
     * @return {Boolean}
     * @see Parse.Object.set
     */
    setPassword: function(password, options) {
      return this.set("password", password, options);
    },

    /**
     * Returns get("email").
     * @return {String}
     * @see Parse.Object#get
     */
    getEmail: function() {
      return this.get("email");
    },

    /**
     * Calls set("email", email, options) and returns the result.
     * @param {String} email
     * @param {Object} options A Backbone-style options object.
     * @return {Boolean}
     * @see Parse.Object.set
     */
    setEmail: function(email, options) {
      return this.set("email", email, options);
    },

    /**
     * Checks whether this user is the current user and has been authenticated.
     * @return (Boolean) whether this user is the current user and is logged in.
     */
    authenticated: function() {
      return !!this._sessionToken &&
          (Parse.User.current() && Parse.User.current().id === this.id);
    }

  }, /** @lends Parse.User */ {
    // Class Variables

    // The currently logged-in user.
    _currentUser: null,

    // Whether currentUser is known to match the serialized version on disk.
    // This is useful for saving a localstorage check if you try to load
    // _currentUser frequently while there is none stored.
    _currentUserMatchesDisk: false,

    // The localStorage key suffix that the current user is stored under.
    _CURRENT_USER_KEY: "currentUser",

    // The mapping of auth provider names to actual providers
    _authProviders: {},


    // Class Methods

    /**
     * Signs up a new user with a username (or email) and password.
     * This will create a new Parse.User on the server, and also persist the
     * session in localStorage so that you can access the user using
     * {@link #current}.
     *
     * <p>Calls options.success or options.error on completion.</p>
     *
     * @param {String} username The username (or email) to sign up with.
     * @param {String} password The password to sign up with.
     * @param {Object} attrs Extra fields to set on the new user.
     * @param {Object} options A Backbone-style options object.
     * @return {Parse.Promise} A promise that is fulfilled with the user when
     *     the signup completes.
     * @see Parse.User#signUp
     */
    signUp: function(username, password, attrs, options) {
      attrs = attrs || {};
      attrs.username = username;
      attrs.password = password;
      var user = Parse.Object._create("_User");
      return user.signUp(attrs, options);
    },

    /**
     * Logs in a user with a username (or email) and password. On success, this
     * saves the session to disk, so you can retrieve the currently logged in
     * user using <code>current</code>.
     *
     * <p>Calls options.success or options.error on completion.</p>
     *
     * @param {String} username The username (or email) to log in with.
     * @param {String} password The password to log in with.
     * @param {Object} options A Backbone-style options object.
     * @return {Parse.Promise} A promise that is fulfilled with the user when
     *     the login completes.
     * @see Parse.User#logIn
     */
    logIn: function(username, password, options) {
      var user = Parse.Object._create("_User");
      user._finishFetch({ username: username, password: password });
      return user.logIn(options);
    },

    /**
     * Logs out the currently logged in user session. This will remove the
     * session from disk, log out of linked services, and future calls to
     * <code>current</code> will return <code>null</code>.
     */
    logOut: function() {
      if (Parse.User._currentUser !== null) {
        Parse.User._currentUser._logOutWithAll();
        Parse.User._currentUser._isCurrentUser = false;
      }
      Parse.User._currentUserMatchesDisk = true;
      Parse.User._currentUser = null;
      Parse.localStorage.removeItem(
          Parse._getParsePath(Parse.User._CURRENT_USER_KEY));
    },

    /**
     * Requests a password reset email to be sent to the specified email address
     * associated with the user account. This email allows the user to securely
     * reset their password on the Parse site.
     *
     * <p>Calls options.success or options.error on completion.</p>
     *
     * @param {String} email The email address associated with the user that
     *     forgot their password.
     * @param {Object} options A Backbone-style options object.
     */
    requestPasswordReset: function(email, options) {
      var json = { email: email };
      options.error = Parse.Query._wrapError(options.error, options);
      Parse._request("requestPasswordReset", null, null, "POST", json, options);
    },

    /**
     * Retrieves the currently logged in ParseUser with a valid session,
     * either from memory or localStorage, if necessary.
     * @return {Parse.Object} The currently logged in Parse.User.
     */
    current: function() {
      if (Parse.User._currentUser) {
        return Parse.User._currentUser;
      }

      if (Parse.User._currentUserMatchesDisk) {
        
        return Parse.User._currentUser;
      }

      // Load the user from local storage.
      Parse.User._currentUserMatchesDisk = true;

      var userData = Parse.localStorage.getItem(Parse._getParsePath(
          Parse.User._CURRENT_USER_KEY));
      if (!userData) {
        
        return null;
      }
      Parse.User._currentUser = new Parse.Object._create("_User");
      Parse.User._currentUser._isCurrentUser = true;

      var json = JSON.parse(userData);
      Parse.User._currentUser.id = json._id;
      delete json._id;
      Parse.User._currentUser._sessionToken = json._sessionToken;
      delete json._sessionToken;
      Parse.User._currentUser.set(json);

      Parse.User._currentUser._synchronizeAllAuthData();
      Parse.User._currentUser._refreshCache();
      Parse.User._currentUser._opSetQueue = [{}];
      return Parse.User._currentUser;
    },

    /**
     * Persists a user as currentUser to localStorage, and into the singleton.
     */
    _saveCurrentUser: function(user) {
      if (Parse.User._currentUser !== user) {
        Parse.User.logOut();
      }
      user._isCurrentUser = true;
      Parse.User._currentUser = user;
      Parse.User._currentUserMatchesDisk = true;

      var json = user.toJSON();
      json._id = user.id;
      json._sessionToken = user._sessionToken;
      Parse.localStorage.setItem(
          Parse._getParsePath(Parse.User._CURRENT_USER_KEY),
          JSON.stringify(json));
    },

    _registerAuthenticationProvider: function(provider) {
      Parse.User._authProviders[provider.getAuthType()] = provider;
      // Synchronize the current user with the auth provider.
      if (Parse.User.current()) {
        Parse.User.current()._synchronizeAuthData(provider.getAuthType());
      }
    },

    _logInWith: function(provider, options) {
      var user = new Parse.User();
      return user._linkWith(provider, options);
    }

  });
}(this));


// Parse.Query is a way to create a list of Parse.Objects.
(function(root) {
  root.Parse = root.Parse || {};
  var Parse = root.Parse;
  var _ = Parse._;

  /**
   * Creates a new parse Parse.Query for the given Parse.Object subclass.
   * @param objectClass -
   *   An instance of a subclass of Parse.Object, or a Parse className string.
   * @class
   *
   * <p>Parse.Query defines a query that is used to fetch Parse.Objects. The
   * most common use case is finding all objects that match a query through the
   * <code>find</code> method. For example, this sample code fetches all objects
   * of class <code>MyClass</code>. It calls a different function depending on
   * whether the fetch succeeded or not.
   * 
   * <pre>
   * var query = new Parse.Query(MyClass);
   * query.find({
   *   success: function(results) {
   *     // results is an array of Parse.Object.
   *   },
   *
   *   error: function(error) {
   *     // error is an instance of Parse.Error.
   *   }
   * });</pre></p>
   * 
   * <p>A Parse.Query can also be used to retrieve a single object whose id is
   * known, through the get method. For example, this sample code fetches an
   * object of class <code>MyClass</code> and id <code>myId</code>. It calls a
   * different function depending on whether the fetch succeeded or not.
   * 
   * <pre>
   * var query = new Parse.Query(MyClass);
   * query.get(myId, {
   *   success: function(object) {
   *     // object is an instance of Parse.Object.
   *   },
   *
   *   error: function(object, error) {
   *     // error is an instance of Parse.Error.
   *   }
   * });</pre></p>
   * 
   * <p>A Parse.Query can also be used to count the number of objects that match
   * the query without retrieving all of those objects. For example, this
   * sample code counts the number of objects of the class <code>MyClass</code>
   * <pre>
   * var query = new Parse.Query(MyClass);
   * query.count({
   *   success: function(number) {
   *     // There are number instances of MyClass.
   *   },
   *
   *   error: function(error) {
   *     // error is an instance of Parse.Error.
   *   }
   * });</pre></p>
   */
  Parse.Query = function(objectClass) {
    if (_.isString(objectClass)) {
      objectClass = Parse.Object._getSubclass(objectClass);
    }

    this.objectClass = objectClass;

    this.className = objectClass.prototype.className;

    this._where = {};
    this._include = [];
    this._limit = -1; // negative limit means, do not send a limit
    this._skip = 0;
    this._extraOptions = {};
  };

  /**
   * Constructs a Parse.Query that is the OR of the passed in queries.  For
   * example:
   * <pre>var compoundQuery = Parse.Query.or(query1, query2, query3);</pre>
   *
   * will create a compoundQuery that is an or of the query1, query2, and
   * query3.
   * @param {...Parse.Query} var_args The list of queries to OR.
   * @return {Parse.Query} The query that is the OR of the passed in queries.
   */
  Parse.Query.or = function() {
    var queries = _.toArray(arguments);
    var className = null;
    _.each(queries, function(q) {
      if (_.isNull(className)) {
        className = q.className;
      }

      if (className !== q.className) {
        throw "All queries must be for the same class";
      }
    });
    var query = new Parse.Query(className);
    query._orQuery(queries);
    return query;
  };

  Parse.Query.prototype = {
    /**
     * Constructs a Parse.Object whose id is already known by fetching data from
     * the server.  Either options.success or options.error is called when the
     * find completes.
     *
     * @param {} objectId The id of the object to be fetched.
     * @param {Object} options A Backbone-style options object.
     */
    get: function(objectId, options) {
      var self = this;
      var success = options.success || function() {};
      var error = options.error || function() {};
      var promise = new Parse.Promise();

      /** ignore */
      var ajaxOptions = {
        error: function(errorObject) {
          error(null, errorObject);
          promise.reject(errorObject);
        },
        success: function(response) {
          if (response) {
            success(response);
            promise.resolve(response);
          } else {
            var errorObject = new Parse.Error(Parse.Error.OBJECT_NOT_FOUND,
                                              "Object not found.");
            error(null, errorObject);
            promise.reject(errorObject);
          }
        }
      };

      self.equalTo('objectId', objectId);
      self.first(ajaxOptions);
      return promise;
    },

    /**
     * Returns a JSON representation of this query.
     * @return {Object}
     */
    toJSON: function() {
      var params = {
        where: this._where
      };

      if (this._include.length > 0) {
        params.include = this._include.join(",");
      }
      if (this._limit >= 0) {
        params.limit = this._limit;
      }
      if (this._skip > 0) {
        params.skip = this._skip;
      }
      if (this._order !== undefined) {
        params.order = this._order;
      }

      Parse._each(this._extraOptions, function(v, k) {
        params[k] = v;
      });

      return params;
    },

    /**
     * Retrieves a list of ParseObjects that satisfy this query.
     * Either options.success or options.error is called when the find
     * completes.
     *
     * @param {Object} options A Backbone-style options object.
     * @return {Parse.Promise} A promise that is resolved with the results when
     * the query completes.
     */
    find: function(options) {
      var self = this;
      options = options || {};
      var success = options.success || function() {};
      var promise = new Parse.Promise();

      /** ignore */
      var ajaxOptions = {
        error: options.error,
        success: function(response) {
          var results = _.map(response.results, function(json) {
            var obj;
            if (response.className) {
              obj = new Parse.Object(response.className);
            } else {
              obj = new self.objectClass();
            }
            obj._finishFetch(json, true);
            return obj;
          });
          success(results);
          promise.resolve(results);
        }
      };

      var params = this.toJSON();
      ajaxOptions.error = Parse.Query._wrapError(options.error, ajaxOptions,
                                                 promise);
      Parse._request("classes", this.className, null, "GET", params,
                     ajaxOptions);
      return promise;
    },

    /**
     * Counts the number of objects that match this query.
     * Either options.success or options.error is called when the count
     * completes.
     *
     * @param {Object} options A Backbone-style options object.
     * @return {Parse.Promise} A promise that is resolved with the count when
     * the query completes.
     */
    count: function(options) {
      var self = this;
      options = options || {};
      var success = options.success || function() {};
      var promise = new Parse.Promise();

      /** ignore */
      var ajaxOptions = {
        error: options.error,
        success: function(response) {
          success(response.count);
          promise.resolve(response.count);
        }
      };

      var params = this.toJSON();
      params.limit = 0;
      params.count = 1;
      ajaxOptions.error = Parse.Query._wrapError(options.error, ajaxOptions,
                                                 promise);
      Parse._request("classes", this.className, null, "GET", params,
                     ajaxOptions);
      return promise;
    },

    /**
     * Retrieves at most one Parse.Object that satisfies this query.
     *
     * Either options.success or options.error is called when it completes.
     * success is passed the object if there is one. otherwise, undefined.
     *
     * @param {Object} options A Backbone-style options object.
     * @return {Parse.Promise} A promise that is resolved with the object when
     * the query completes.
     */
    first: function(options) {
      var self = this;
      options = options || {};
      var success = options.success || function() {};
      var promise = new Parse.Promise();

      /** ignore */
      var ajaxOptions = {
        error: options.error,
        success: function(response) {
          var result = _.map(response.results, function(json) {
            var obj = new self.objectClass();
            obj._finishFetch(json, true);
            return obj;
          })[0];
          success(result);
          promise.resolve(result);
        }
      };

      var params = this.toJSON();
      params.limit = 1;
      ajaxOptions.error = Parse.Query._wrapError(options.error, ajaxOptions,
                                                 promise);
      Parse._request("classes", this.className, null, "GET", params,
                     ajaxOptions);
      return promise;
    },

    /**
     * Returns a new instance of Parse.Collection backed by this query.
     * @return {Parse.Collection}
     */
    collection: function(items, options) {
      options = options || {};
      return new Parse.Collection(items, _.extend(options, {
        model: this.objectClass,
        query: this
      }));
    },

    /**
     * Sets the number of results to skip before returning any results.
     * This is useful for pagination.
     * Default is to skip zero results.
     * @param {Number} n the number of results to skip.
     * @return {Parse.Query} Returns the query, so you can chain this call.
     */
    skip: function(n) {
      this._skip = n;
      return this;
    },

    /**
     * Sets the limit of the number of results to return. The default limit is
     * 100, with a maximum of 1000 results being returned at a time.
     * @param {Number} n the number of results to limit to.
     * @return {Parse.Query} Returns the query, so you can chain this call.
     */
    limit: function(n) {
      this._limit = n;
      return this;
    },

    /**
     * Add a constraint to the query that requires a particular key's value to
     * be equal to the provided value.
     * @param {String} key The key to check.
     * @param value The value that the Parse.Object must contain.
     * @return {Parse.Query} Returns the query, so you can chain this call.
     */
    equalTo: function(key, value) {
      this._where[key] = Parse._encode(value);
      return this;
    },

    /**
     * Helper for condition queries
     */
    _addCondition: function(key, condition, value) {
      // Check if we already have a condition
      if (!this._where[key]) {
        this._where[key] = {};
      }
      this._where[key][condition] = Parse._encode(value);
      return this;
    },

    /**
     * Add a constraint to the query that requires a particular key's value to
     * be not equal to the provided value.
     * @param {String} key The key to check.
     * @param value The value that must not be equalled.
     * @return {Parse.Query} Returns the query, so you can chain this call.
     */
    notEqualTo: function(key, value) {
      this._addCondition(key, "$ne", value);
      return this;
    },

    /**
     * Add a constraint to the query that requires a particular key's value to
     * be less than the provided value.
     * @param {String} key The key to check.
     * @param value The value that provides an upper bound.
     * @return {Parse.Query} Returns the query, so you can chain this call.
     */
    lessThan: function(key, value) {
      this._addCondition(key, "$lt", value);
      return this;
    },

    /**
     * Add a constraint to the query that requires a particular key's value to
     * be greater than the provided value.
     * @param {String} key The key to check.
     * @param value The value that provides an lower bound.
     * @return {Parse.Query} Returns the query, so you can chain this call.
     */
    greaterThan: function(key, value) {
      this._addCondition(key, "$gt", value);
      return this;
    },

    /**
     * Add a constraint to the query that requires a particular key's value to
     * be less than or equal to the provided value.
     * @param {String} key The key to check.
     * @param value The value that provides an upper bound.
     * @return {Parse.Query} Returns the query, so you can chain this call.
     */
    lessThanOrEqualTo: function(key, value) {
      this._addCondition(key, "$lte", value);
      return this;
    },

    /**
     * Add a constraint to the query that requires a particular key's value to
     * be greater than or equal to the provided value.
     * @param {String} key The key to check.
     * @param value The value that provides an lower bound.
     * @return {Parse.Query} Returns the query, so you can chain this call.
     */
    greaterThanOrEqualTo: function(key, value) {
      this._addCondition(key, "$gte", value);
      return this;
    },

    /**
     * Add a constraint to the query that requires a particular key's value to
     * be contained in the provided list of values.
     * @param {String} key The key to check.
     * @param {Array} values The values that will match.
     * @return {Parse.Query} Returns the query, so you can chain this call.
     */
    containedIn: function(key, values) {
      this._addCondition(key, "$in", values);
      return this;
    },

    /**
     * Add a constraint to the query that requires a particular key's value to
     * not be contained in the provided list of values.
     * @param {String} key The key to check.
     * @param {Array} values The values that will not match.
     * @return {Parse.Query} Returns the query, so you can chain this call.
     */
    notContainedIn: function(key, values) {
      this._addCondition(key, "$nin", values);
      return this;
    },

    /**
     * Add a constraint to the query that requires a particular key's value to
     * contain each one of the provided list of values.
     * @param {String} key The key to check.  This key's value must be an array.
     * @param {Array} values The values that will match.
     * @return {Parse.Query} Returns the query, so you can chain this call.
     */
    containsAll: function(key, values) {
      this._addCondition(key, "$all", values);
      return this;
    },


    /**
     * Add a constraint for finding objects that contain the given key.
     * @param {String} key The key that should exist.
     * @return {Parse.Query} Returns the query, so you can chain this call.
     */
    exists: function(key) {
      this._addCondition(key, "$exists", true);
      return this;
    },

    /**
     * Add a constraint for finding objects that do not contain a given key.
     * @param {String} key The key that should not exist
     * @return {Parse.Query} Returns the query, so you can chain this call.
     */
    doesNotExist: function(key) {
      this._addCondition(key, "$exists", false);
      return this;
    },

    /**
     * Add a regular expression constraint for finding string values that match
     * the provided regular expression.
     * This may be slow for large datasets.
     * @param {String} key The key that the string to match is stored in.
     * @param {RegExp} regex The regular expression pattern to match.
     * @return {Parse.Query} Returns the query, so you can chain this call.
     */
    matches: function(key, regex, modifiers) {
      this._addCondition(key, "$regex", regex);
      if (!modifiers) { modifiers = ""; }
      // Javascript regex options support mig as inline options but store them 
      // as properties of the object. We support mi & should migrate them to
      // modifiers
      if (regex.ignoreCase) { modifiers += 'i'; }
      if (regex.multiline) { modifiers += 'm'; }

      if (modifiers && modifiers.length) {
        this._addCondition(key, "$options", modifiers);
      }
      return this;
    },

    /**
     * Add a constraint that requires that a key's value matches a Parse.Query
     * constraint.
     * @param {String} key The key that the contains the object to match the
     *                     query.
     * @param {Parse.Query} query The query that should match.
     * @return {Parse.Query} Returns the query, so you can chain this call.
     */
    matchesQuery: function(key, query) {
      var queryJSON = query.toJSON();
      queryJSON.className = query.className;
      this._addCondition(key, "$inQuery", queryJSON);
      return this;
    },

   /**
     * Add a constraint that requires that a key's value not matches a
     * Parse.Query constraint.
     * @param {String} key The key that the contains the object to match the
     *                     query.
     * @param {Parse.Query} query The query that should not match.
     * @return {Parse.Query} Returns the query, so you can chain this call.
     */
    doesNotMatchQuery: function(key, query) {
      var queryJSON = query.toJSON();
      queryJSON.className = query.className;
      this._addCondition(key, "$notInQuery", queryJSON);
      return this;
    },


    /**
     * Add a constraint that requires that a key's value matches a value in
     * an object returned by a different Parse.Query.
     * @param {String} key The key that contains the value that is being
     *                     matched.
     * @param {String} queryKey The key in the objects returned by the query to
     *                          match against.
     * @param {Parse.Query} query The query to run.
     * @return {Parse.Query} Returns the query, so you can chain this call.
     */
    matchesKeyInQuery: function(key, queryKey, query) {
      var queryJSON = query.toJSON();
      queryJSON.className = query.className;
      this._addCondition(key, "$select",
                         { key: queryKey, query: queryJSON });
      return this;
    },

    /**
     * Add a constraint that requires that a key's value not match a value in
     * an object returned by a different Parse.Query.
     * @param {String} key The key that contains the value that is being
     *                     excluded.
     * @param {String} queryKey The key in the objects returned by the query to
     *                          match against.
     * @param {Parse.Query} query The query to run.
     * @return {Parse.Query} Returns the query, so you can chain this call.
     */
    doesNotMatchKeyInQuery: function(key, queryKey, query) {
      var queryJSON = query.toJSON();
      queryJSON.className = query.className;
      this._addCondition(key, "$dontSelect",
                         { key: queryKey, query: queryJSON });
      return this;
    },

    /**
     * Add constraint that at least one of the passed in queries matches.
     * @param {Array} queries
     * @return {Parse.Query} Returns the query, so you can chain this call.
     */
    _orQuery: function(queries) {
      var queryJSON = _.map(queries, function(q) {
        return q.toJSON().where;
      });

      this._where.$or = queryJSON;
      return this;
    },

    /**
     * Converts a string into a regex that matches it.
     * Surrounding with \Q .. \E does this, we just need to escape \E's in
     * the text separately.
     */
    _quote: function(s) {
      return "\\Q" + s.replace("\\E", "\\E\\\\E\\Q") + "\\E";
    },

    /**
     * Add a constraint for finding string values that contain a provided
     * string.  This may be slow for large datasets.
     * @param {String} key The key that the string to match is stored in.
     * @param {String} substring The substring that the value must contain.
     * @return {Parse.Query} Returns the query, so you can chain this call.
     */
    contains: function(key, value) {
      this._addCondition(key, "$regex", this._quote(value));
      return this;
    },

    /**
     * Add a constraint for finding string values that start with a provided
     * string.  This query will use the backend index, so it will be fast even
     * for large datasets.
     * @param {String} key The key that the string to match is stored in.
     * @param {String} prefix The substring that the value must start with.
     * @return {Parse.Query} Returns the query, so you can chain this call.
     */
    startsWith: function(key, value) {
      this._addCondition(key, "$regex", "^" + this._quote(value));
      return this;
    },

    /**
     * Add a constraint for finding string values that end with a provided
     * string.  This will be slow for large datasets.
     * @param {String} key The key that the string to match is stored in.
     * @param {String} suffix The substring that the value must end with.
     * @return {Parse.Query} Returns the query, so you can chain this call.
     */
    endsWith: function(key, value) {
      this._addCondition(key, "$regex", this._quote(value) + "$");
      return this;
    },

    /**
     * Sorts the results in ascending order by the given key.
     * 
     * @param {String} key The key to order by.
     * @return {Parse.Query} Returns the query, so you can chain this call.
     */
    ascending: function(key) {
      this._order = key;
      return this;
    },

    /**
     * Sorts the results in descending order by the given key.
     * 
     * @param {String} key The key to order by.
     * @return {Parse.Query} Returns the query, so you can chain this call.
     */
    descending: function(key) {
      this._order = "-" + key;
      return this;
    },

    /**
     * Add a proximity based constraint for finding objects with key point
     * values near the point given.
     * @param {String} key The key that the Parse.GeoPoint is stored in.
     * @param {Parse.GeoPoint} point The reference Parse.GeoPoint that is used.
     * @return {Parse.Query} Returns the query, so you can chain this call.
     */
    near: function(key, point) {
      if (!(point instanceof Parse.GeoPoint)) {
        // Try to cast it to a GeoPoint, so that near("loc", [20,30]) works.
        point = new Parse.GeoPoint(point);
      }
      this._addCondition(key, "$nearSphere", point);
      return this;
    },

    /**
     * Add a proximity based constraint for finding objects with key point
     * values near the point given and within the maximum distance given.
     * @param {String} key The key that the Parse.GeoPoint is stored in.
     * @param {Parse.GeoPoint} point The reference Parse.GeoPoint that is used.
     * @param maxDistance Maximum distance (in radians) of results to return.
     * @return {Parse.Query} Returns the query, so you can chain this call.
     */
    withinRadians: function(key, point, distance) {
      this.near(key, point);
      this._addCondition(key, "$maxDistance", distance);
      return this;
    },

    /**
     * Add a proximity based constraint for finding objects with key point
     * values near the point given and within the maximum distance given.
     * Radius of earth used is 3958.8 miles.
     * @param {String} key The key that the Parse.GeoPoint is stored in.
     * @param {Parse.GeoPoint} point The reference Parse.GeoPoint that is used.
     * @param {Number} maxDistance Maximum distance (in miles) of results to
     *     return.
     * @return {Parse.Query} Returns the query, so you can chain this call.
     */
    withinMiles: function(key, point, distance) {
      return this.withinRadians(key, point, distance / 3958.8);
    },

    /**
     * Add a proximity based constraint for finding objects with key point
     * values near the point given and within the maximum distance given.
     * Radius of earth used is 6371.0 kilometers.
     * @param {String} key The key that the Parse.GeoPoint is stored in.
     * @param {Parse.GeoPoint} point The reference Parse.GeoPoint that is used.
     * @param {Number} maxDistance Maximum distance (in kilometers) of results
     *     to return.
     * @return {Parse.Query} Returns the query, so you can chain this call.
     */
    withinKilometers: function(key, point, distance) {
      return this.withinRadians(key, point, distance / 6371.0);
    },

    /**
     * Add a constraint to the query that requires a particular key's
     * coordinates be contained within a given rectangular geographic bounding
     * box.
     * @param {String} key The key to be constrained.
     * @param {Parse.GeoPoint} southwest
     *     The lower-left inclusive corner of the box.
     * @param {Parse.GeoPoint} northeast
     *     The upper-right inclusive corner of the box.
     * @return {Parse.Query} Returns the query, so you can chain this call.
     */
    withinGeoBox: function(key, southwest, northeast) {
      if (!(southwest instanceof Parse.GeoPoint)) {
        southwest = new Parse.GeoPoint(southwest);
      }
      if (!(northeast instanceof Parse.GeoPoint)) {
        northeast = new Parse.GeoPoint(northeast);
      }
      this._addCondition(key, '$within', { '$box': [southwest, northeast] });
      return this;
    },

    /**
     * Include nested Parse.Objects for the provided key.  You can use dot
     * notation to specify which fields in the included object are also fetch.
     * @param {String} key The name of the key to include.
     * @return {Parse.Query} Returns the query, so you can chain this call.
     */
    include: function(key) {
      if (_.isArray(key)) {
        this._include = this._include.concat(key);
      } else {
        this._include.push(key);
      }
      return this;
    }
  };

  // Wrap an optional error callback with a fallback error event.
  Parse.Query._wrapError = function(onError, options, promise) {
    return function(response) {
      var error;
      if (response.responseText) {
        var errorJSON = JSON.parse(response.responseText);
        if (errorJSON) {
          error = new Parse.Error(errorJSON.code, errorJSON.error);
        }
      }
      error = error || new Parse.Error(-1, response.responseText);
      if (onError) {
        onError(error, options);
      }
      if (promise) {
        promise.reject(error);
      }
    };
  };
}(this));

/*global FB: false */
(function(root) {
  root.Parse = root.Parse || {};
  var Parse = root.Parse;
  var _ = Parse._;

  var PUBLIC_KEY = "*";
  
  var initialized = false;
  var requestedPermissions;
  var initOptions;
  var provider = {
    authenticate: function(options) {
      var self = this;
      FB.login(function(response) {
        if (response.authResponse) {
          if (options.success) {
            options.success(self, {
              id: response.authResponse.userID,
              access_token: response.authResponse.accessToken,
              expiration_date: new Date(response.authResponse.expiresIn * 1000 +
                  (new Date()).getTime()).toJSON()
            });
          }
        } else {
          if (options.error) {
            options.error(self, response);
          }
        }
      }, {
        scope: requestedPermissions
      });
    },
    restoreAuthentication: function(authData) {
      if (authData) {
        var authResponse = {
          userID: authData.id,
          accessToken: authData.access_token,
          expiresIn: (Parse._parseDate(authData.expiration_date).getTime() -
              (new Date()).getTime()) / 1000
        };
        var newOptions = _.clone(initOptions);
        newOptions.authResponse = authResponse;
        FB.init(newOptions);
      }
      return true;
    },
    getAuthType: function() {
      return "facebook";
    },
    deauthenticate: function() {
      this.restoreAuthentication(null);
      FB.logout();
    }
  };

  /**
   * Provides a set of utilities for using Parse with Facebook.
   * @namespace
   * Provides a set of utilities for using Parse with Facebook.
   */
  Parse.FacebookUtils = {
    /**
     * Initializes Parse Facebook integration.  Call this function after you
     * have loaded the Facebook Javascript SDK with the same parameters
     * as you would pass to<code>
     * <a href=
     * "https://developers.facebook.com/docs/reference/javascript/FB.init/">
     * FB.init()</a></code>.  Parse.FacebookUtils will invoke FB.init() for you
     * with these arguments.
     *
     * @param {Object} options Facebook options argument as described here:
     *   <a href=
     *   "https://developers.facebook.com/docs/reference/javascript/FB.init/">
     *   FB.init()</a>
     */
    init: function(options) {
      if (typeof(FB) === 'undefined') {
        throw "The Javascript Facebook SDK must be loaded before calling init.";
      } 
      initOptions = _.clone(options);
      FB.init(initOptions);
      Parse.User._registerAuthenticationProvider(provider);
      initialized = true;
    },
    
    /**
     * Gets whether the user has their account linked to Facebook.
     * 
     * @param {Parse.User} user User to check for a facebook link.
     *     The user must be logged in on this device.
     * @return {Boolean} <code>true</code> if the user has their account
     *     linked to Facebook.
     */
    isLinked: function(user) {
      return user._isLinked("facebook");
    },
    
    /**
     * Logs in a user using Facebook. This method delegates to the Facebook
     * SDK to authenticate the user, and then automatically logs in (or
     * creates, in the case where it is a new user) a Parse.User.
     * 
     * @param {String, Object} permissions The permissions required for Facebook
     *    log in.  This is a comma-separated string of permissions.
     *    Alternatively, supply a Facebook authData object as described in our
     *    REST API docs if you want to handle getting facebook auth tokens
     *    yourself.
     * @param {Object} options Standard options object with success and error
     *    callbacks.
     */
    logIn: function(permissions, options) {
      if (!permissions || _.isString(permissions)) {
        if (!initialized) {
          throw "You must initialize FacebookUtils before calling logIn.";
        }
        requestedPermissions = permissions;
        return Parse.User._logInWith("facebook", options);
      } else {
        var newOptions = _.clone(options);
        newOptions.authData = permissions;
        return Parse.User._logInWith("facebook", newOptions);
      }
    },
    
    /**
     * Links Facebook to an existing PFUser. This method delegates to the
     * Facebook SDK to authenticate the user, and then automatically links
     * the account to the Parse.User.
     *
     * @param {Parse.User} user User to link to Facebook. This must be the
     *     current user.
     * @param {String, Object} permissions The permissions required for Facebook
     *    log in.  This is a comma-separated string of permissions. 
     *    Alternatively, supply a Facebook authData object as described in our
     *    REST API docs if you want to handle getting facebook auth tokens
     *    yourself.
     * @param {Object} options Standard options object with success and error
     *    callbacks.
     */
    link: function(user, permissions, options) {
      if (!permissions || _.isString(permissions)) {
        if (!initialized) {
          throw "You must initialize FacebookUtils before calling link.";
        }
        requestedPermissions = permissions;
        return user._linkWith("facebook", options);
      } else {
        var newOptions = _.clone(options);
        newOptions.authData = permissions;
        return user._linkWith("facebook", newOptions);
      }
    },
    
    /**
     * Unlinks the Parse.User from a Facebook account. 
     * 
     * @param {Parse.User} user User to unlink from Facebook. This must be the
     *     current user.
     * @param {Object} options Standard options object with success and error
     *    callbacks.
     */
    unlink: function(user, options) {
      if (!initialized) {
        throw "You must initialize FacebookUtils before calling unlink.";
      }
      return user._unlinkFrom("facebook", options);
    }
  };
  
}(this));

/*global _: false, document: false, window: false, navigator: false */
(function(root) {
  root.Parse = root.Parse || {};
  var Parse = root.Parse;
  var _ = Parse._;

  /**
   * History serves as a global router (per frame) to handle hashchange
   * events or pushState, match the appropriate route, and trigger
   * callbacks. You shouldn't ever have to create one of these yourself
   * — you should use the reference to <code>Parse.history</code>
   * that will be created for you automatically if you make use of 
   * Routers with routes.
   * @class
   *   
   * <p>A fork of Backbone.History, provided for your convenience.  If you 
   * use this class, you must also include jQuery, or another library 
   * that provides a jQuery-compatible $ function.  For more information,
   * see the <a href="http://documentcloud.github.com/backbone/#History">
   * Backbone documentation</a>.</p>
   * <p><strong><em>Available in the client SDK only.</em></strong></p>
   */
  Parse.History = function() {
    this.handlers = [];
    _.bindAll(this, 'checkUrl');
  };

  // Cached regex for cleaning leading hashes and slashes .
  var routeStripper = /^[#\/]/;

  // Cached regex for detecting MSIE.
  var isExplorer = /msie [\w.]+/;

  // Has the history handling already been started?
  Parse.History.started = false;

  // Set up all inheritable **Parse.History** properties and methods.
  _.extend(Parse.History.prototype, Parse.Events,
           /** @lends Parse.History.prototype */ {

    // The default interval to poll for hash changes, if necessary, is
    // twenty times a second.
    interval: 50,

    // Gets the true hash value. Cannot use location.hash directly due to bug
    // in Firefox where location.hash will always be decoded.
    getHash: function(windowOverride) {
      var loc = windowOverride ? windowOverride.location : window.location;
      var match = loc.href.match(/#(.*)$/);
      return match ? match[1] : '';
    },

    // Get the cross-browser normalized URL fragment, either from the URL,
    // the hash, or the override.
    getFragment: function(fragment, forcePushState) {
      if (Parse._isNullOrUndefined(fragment)) {
        if (this._hasPushState || forcePushState) {
          fragment = window.location.pathname;
          var search = window.location.search;
          if (search) {
            fragment += search;
          }
        } else {
          fragment = this.getHash();
        }
      }
      if (!fragment.indexOf(this.options.root)) {
        fragment = fragment.substr(this.options.root.length);
      }
      return fragment.replace(routeStripper, '');
    },

    /**
     * Start the hash change handling, returning `true` if the current
     * URL matches an existing route, and `false` otherwise.
     */
    start: function(options) {
      if (Parse.History.started) {
        throw new Error("Parse.history has already been started");
      }
      Parse.History.started = true;

      // Figure out the initial configuration. Do we need an iframe?
      // Is pushState desired ... is it available?
      this.options = _.extend({}, {root: '/'}, this.options, options);
      this._wantsHashChange = this.options.hashChange !== false;
      this._wantsPushState = !!this.options.pushState;
      this._hasPushState = !!(this.options.pushState && 
                              window.history &&
                              window.history.pushState);
      var fragment = this.getFragment();
      var docMode = document.documentMode;
      var oldIE = (isExplorer.exec(navigator.userAgent.toLowerCase()) &&
                   (!docMode || docMode <= 7));

      if (oldIE) {
        this.iframe = Parse.$('<iframe src="javascript:0" tabindex="-1" />')
                      .hide().appendTo('body')[0].contentWindow;
        this.navigate(fragment);
      }

      // Depending on whether we're using pushState or hashes, and whether
      // 'onhashchange' is supported, determine how we check the URL state.
      if (this._hasPushState) {
        Parse.$(window).bind('popstate', this.checkUrl);
      } else if (this._wantsHashChange &&
                 ('onhashchange' in window) &&
                 !oldIE) {
        Parse.$(window).bind('hashchange', this.checkUrl);
      } else if (this._wantsHashChange) {
        this._checkUrlInterval = window.setInterval(this.checkUrl,
                                                    this.interval);
      }

      // Determine if we need to change the base url, for a pushState link
      // opened by a non-pushState browser.
      this.fragment = fragment;
      var loc = window.location;
      var atRoot  = loc.pathname === this.options.root;

      // If we've started off with a route from a `pushState`-enabled browser,
      // but we're currently in a browser that doesn't support it...
      if (this._wantsHashChange && 
          this._wantsPushState && 
          !this._hasPushState &&
          !atRoot) {
        this.fragment = this.getFragment(null, true);
        window.location.replace(this.options.root + '#' + this.fragment);
        // Return immediately as browser will do redirect to new url
        return true;

      // Or if we've started out with a hash-based route, but we're currently
      // in a browser where it could be `pushState`-based instead...
      } else if (this._wantsPushState &&
                 this._hasPushState && 
                 atRoot &&
                 loc.hash) {
        this.fragment = this.getHash().replace(routeStripper, '');
        window.history.replaceState({}, document.title,
            loc.protocol + '//' + loc.host + this.options.root + this.fragment);
      }

      if (!this.options.silent) {
        return this.loadUrl();
      }
    },

    // Disable Parse.history, perhaps temporarily. Not useful in a real app,
    // but possibly useful for unit testing Routers.
    stop: function() {
      Parse.$(window).unbind('popstate', this.checkUrl)
                     .unbind('hashchange', this.checkUrl);
      window.clearInterval(this._checkUrlInterval);
      Parse.History.started = false;
    },

    // Add a route to be tested when the fragment changes. Routes added later
    // may override previous routes.
    route: function(route, callback) {
      this.handlers.unshift({route: route, callback: callback});
    },

    // Checks the current URL to see if it has changed, and if it has,
    // calls `loadUrl`, normalizing across the hidden iframe.
    checkUrl: function(e) {
      var current = this.getFragment();
      if (current === this.fragment && this.iframe) {
        current = this.getFragment(this.getHash(this.iframe));
      }
      if (current === this.fragment) {
        return false;
      }
      if (this.iframe) {
        this.navigate(current);
      }
      if (!this.loadUrl()) {
       this.loadUrl(this.getHash());
      }
    },

    // Attempt to load the current URL fragment. If a route succeeds with a
    // match, returns `true`. If no defined routes matches the fragment,
    // returns `false`.
    loadUrl: function(fragmentOverride) {
      var fragment = this.fragment = this.getFragment(fragmentOverride);
      var matched = _.any(this.handlers, function(handler) {
        if (handler.route.test(fragment)) {
          handler.callback(fragment);
          return true;
        }
      });
      return matched;
    },

    // Save a fragment into the hash history, or replace the URL state if the
    // 'replace' option is passed. You are responsible for properly URL-encoding
    // the fragment in advance.
    //
    // The options object can contain `trigger: true` if you wish to have the
    // route callback be fired (not usually desirable), or `replace: true`, if
    // you wish to modify the current URL without adding an entry to the
    // history.
    navigate: function(fragment, options) {
      if (!Parse.History.started) {
        return false;
      }
      if (!options || options === true) {
        options = {trigger: options};
      }
      var frag = (fragment || '').replace(routeStripper, '');
      if (this.fragment === frag) {
        return;
      }

      // If pushState is available, we use it to set the fragment as a real URL.
      if (this._hasPushState) {
        if (frag.indexOf(this.options.root) !== 0) {
          frag = this.options.root + frag;
        }
        this.fragment = frag;
        var replaceOrPush = options.replace ? 'replaceState' : 'pushState';
        window.history[replaceOrPush]({}, document.title, frag);

      // If hash changes haven't been explicitly disabled, update the hash
      // fragment to store history.
      } else if (this._wantsHashChange) {
        this.fragment = frag;
        this._updateHash(window.location, frag, options.replace);
        if (this.iframe &&
            (frag !== this.getFragment(this.getHash(this.iframe)))) {
          // Opening and closing the iframe tricks IE7 and earlier
          // to push a history entry on hash-tag change.
          // When replace is true, we don't want this.
          if (!options.replace) {
            this.iframe.document.open().close();
          }
          this._updateHash(this.iframe.location, frag, options.replace);
        }

      // If you've told us that you explicitly don't want fallback hashchange-
      // based history, then `navigate` becomes a page refresh.
      } else {
        window.location.assign(this.options.root + fragment);
      }
      if (options.trigger) {
        this.loadUrl(fragment);
      }
    },

    // Update the hash location, either replacing the current entry, or adding
    // a new one to the browser history.
    _updateHash: function(location, fragment, replace) {
      if (replace) {
        var s = location.toString().replace(/(javascript:|#).*$/, '');
        location.replace(s + '#' + fragment);
      } else {
        location.hash = fragment;
      }
    }
  });
}(this));

/*global _: false*/
(function(root) {
  root.Parse = root.Parse || {};
  var Parse = root.Parse;
  var _ = Parse._;

  /**
   * Routers map faux-URLs to actions, and fire events when routes are
   * matched. Creating a new one sets its `routes` hash, if not set statically.
   * @class
   *
   * <p>A fork of Backbone.Router, provided for your convenience.
   * For more information, see the
   * <a href="http://documentcloud.github.com/backbone/#Router">Backbone
   * documentation</a>.</p>
   * <p><strong><em>Available in the client SDK only.</em></strong></p>
   */
  Parse.Router = function(options) {
    options = options || {};
    if (options.routes) {
      this.routes = options.routes;
    }
    this._bindRoutes();
    this.initialize.apply(this, arguments);
  };

  // Cached regular expressions for matching named param parts and splatted
  // parts of route strings.
  var namedParam    = /:\w+/g;
  var splatParam    = /\*\w+/g;
  var escapeRegExp  = /[\-\[\]{}()+?.,\\\^\$\|#\s]/g;

  // Set up all inheritable **Parse.Router** properties and methods.
  _.extend(Parse.Router.prototype, Parse.Events,
           /** @lends Parse.Router.prototype */ {

    /**
     * Initialize is an empty function by default. Override it with your own
     * initialization logic.
     */
    initialize: function(){},

    /**
     * Manually bind a single named route to a callback. For example:
     *
     * <pre>this.route('search/:query/p:num', 'search', function(query, num) {
     *       ...
     *     });</pre>
     */
    route: function(route, name, callback) {
      Parse.history = Parse.history || new Parse.History();
      if (!_.isRegExp(route)) {
        route = this._routeToRegExp(route);
      } 
      if (!callback) {
        callback = this[name];
      }
      Parse.history.route(route, _.bind(function(fragment) {
        var args = this._extractParameters(route, fragment);
        if (callback) {
          callback.apply(this, args);
        }
        this.trigger.apply(this, ['route:' + name].concat(args));
        Parse.history.trigger('route', this, name, args);
      }, this));
      return this;
    },

    /**
     * Whenever you reach a point in your application that you'd
     * like to save as a URL, call navigate in order to update the
     * URL. If you wish to also call the route function, set the 
     * trigger option to true. To update the URL without creating
     * an entry in the browser's history, set the replace option
     * to true.
     */
    navigate: function(fragment, options) {
      Parse.history.navigate(fragment, options);
    },

    // Bind all defined routes to `Parse.history`. We have to reverse the
    // order of the routes here to support behavior where the most general
    // routes can be defined at the bottom of the route map.
    _bindRoutes: function() {
      if (!this.routes) { 
        return;
      }
      var routes = [];
      for (var route in this.routes) {
        if (this.routes.hasOwnProperty(route)) {
          routes.unshift([route, this.routes[route]]);
        }
      }
      for (var i = 0, l = routes.length; i < l; i++) {
        this.route(routes[i][0], routes[i][1], this[routes[i][1]]);
      }
    },

    // Convert a route string into a regular expression, suitable for matching
    // against the current location hash.
    _routeToRegExp: function(route) {
      route = route.replace(escapeRegExp, '\\$&')
                   .replace(namedParam, '([^\/]+)')
                   .replace(splatParam, '(.*?)');
      return new RegExp('^' + route + '$');
    },

    // Given a route, and a URL fragment that it matches, return the array of
    // extracted parameters.
    _extractParameters: function(route, fragment) {
      return route.exec(fragment).slice(1);
    }
  });

  /**
   * @function
   * @param {Object} instanceProps Instance properties for the router.
   * @param {Object} classProps Class properies for the router.
   * @return {Class} A new subclass of <code>Parse.Router</code>.
   */
  Parse.Router.extend = Parse._extend;
}(this));
(function(root) {
  root.Parse = root.Parse || {};
  var Parse = root.Parse;
  var _ = Parse._;

  /**
   * 
   *
   * @namespace Contains functions for calling and declaring
   * <a href="/docs/cloud_code_guide#functions">cloud functions</a>.
   * <p><strong><em>
   *   Some functions are only available from Cloud Code.
   * </em></strong></p>
   */
  Parse.Cloud = {
    /**
     * Makes a call to a cloud function.
     * @param {String} name The function name.
     * @param {Object} data The parameters to send to the cloud function.
     * @param {Object} options A Backbone-style options object
     * options.success, if set, should be a function to handle a successful
     * call to a cloud function.  options.error should be a function that
     * handles an error running the cloud function.  Both functions are
     * optional.  Both functions take a single argument.
     */
    run: function(name, data, options) {
      var oldOptions = options;
      var newOptions = _.clone(options);
      newOptions.success = function(resp) {
        var results = Parse._decode(null, resp);
        if (oldOptions.success) {
          oldOptions.success(results.result);
        }
      };

      newOptions.error = Parse.Cloud._wrapError(oldOptions.error, options);
      Parse._request("functions",
                     name,
                     null,
                     'POST',
                     Parse._encode(data, null, true),
                     newOptions);
    },

    _wrapError: function(onError, options) {
      return function(response) {
        if (onError) {
          var error = new Parse.Error(-1, response.responseText);
          if (response.responseText) {
            var errorJSON = JSON.parse(response.responseText);
            if (errorJSON) {
              error = new Parse.Error(errorJSON.code, errorJSON.error);
            }
          }
          onError(error, options);
        }
      };
    }
  };
}(this));

(function(root) {
  root.Parse = root.Parse || {};
  var Parse = root.Parse;

  Parse.Installation = Parse.Object.extend("_Installation");

  /**
   * Contains functions to deal with Push in Parse
   * @name Parse.Push
   * @namespace
   */
  Parse.Push = Parse.Push || {};

  /**
   * Sends a push notification.
   * @param {Object} data -  The data of the push notification.  Valid fields
   * are:
   *   <ol>
   *     <li>channels - An Array of channels to push to.</li>
   *     <li>push_time - A Date object for when to send the push.</li>
   *     <li>expiration_time -  A Date object for when to expire
   *         the push.</li>
   *     <li>expiration_interval - The seconds from now to expire the push.</li>
   *     <li>where - A Parse.Query over Parse.Installation that is used to match
   *         a set of installations to push to.</li>
   *     <li>data - The data to send as part of the push</li>
   *   <ol>
   * @param {Object} options An object that has an optional success function,
   * that takes no arguments and will be called on a successful push, and
   * an error function that takes a Parse.Error and will be called if the push
   * failed.
   */
  Parse.Push.send = function(data, options) {
    if (data.where) {
      data.where = data.where.toJSON().where;
    }

    if (data.push_time) {
      data.push_time = data.push_time.toJSON();
    }

    if (data.expiration_time) {
      data.expiration_time = data.expiration_time.toJSON();
    }

    if (data.expiration_time && data.expiration_time_interval) {
      throw "Both expiration_time and expiration_time_interval can't be set";
    }
    var ajaxOptions = {
      error: options.error,
      success: options.success
    };
    ajaxOptions.error = Parse.Query._wrapError(options.error, ajaxOptions);
    Parse._request('push', null, null, 'POST', data, ajaxOptions);
  };
}(this));
;
// ┌────────────────────────────────────────────────────────────────────┐ \\
// │ Raphaël 2.1.0 - JavaScript Vector Library                          │ \\
// ├────────────────────────────────────────────────────────────────────┤ \\
// │ Copyright © 2008-2012 Dmitry Baranovskiy (http://raphaeljs.com)    │ \\
// │ Copyright © 2008-2012 Sencha Labs (http://sencha.com)              │ \\
// ├────────────────────────────────────────────────────────────────────┤ \\
// │ Licensed under the MIT (http://raphaeljs.com/license.html) license.│ \\
// └────────────────────────────────────────────────────────────────────┘ \\

// ┌──────────────────────────────────────────────────────────────────────────────────────┐ \\
// │ Eve 0.3.4 - JavaScript Events Library                                                │ \\
// ├──────────────────────────────────────────────────────────────────────────────────────┤ \\
// │ Copyright (c) 2008-2011 Dmitry Baranovskiy (http://dmitry.baranovskiy.com/)          │ \\
// │ Licensed under the MIT (http://www.opensource.org/licenses/mit-license.php) license. │ \\
// └──────────────────────────────────────────────────────────────────────────────────────┘ \\

(function (glob) {
    var version = "0.3.4",
        has = "hasOwnProperty",
        separator = /[\.\/]/,
        wildcard = "*",
        fun = function () {},
        numsort = function (a, b) {
            return a - b;
        },
        current_event,
        stop,
        events = {n: {}},

        eve = function (name, scope) {
            var e = events,
                oldstop = stop,
                args = Array.prototype.slice.call(arguments, 2),
                listeners = eve.listeners(name),
                z = 0,
                f = false,
                l,
                indexed = [],
                queue = {},
                out = [],
                ce = current_event,
                errors = [];
            current_event = name;
            stop = 0;
            for (var i = 0, ii = listeners.length; i < ii; i++) if ("zIndex" in listeners[i]) {
                indexed.push(listeners[i].zIndex);
                if (listeners[i].zIndex < 0) {
                    queue[listeners[i].zIndex] = listeners[i];
                }
            }
            indexed.sort(numsort);
            while (indexed[z] < 0) {
                l = queue[indexed[z++]];
                out.push(l.apply(scope, args));
                if (stop) {
                    stop = oldstop;
                    return out;
                }
            }
            for (i = 0; i < ii; i++) {
                l = listeners[i];
                if ("zIndex" in l) {
                    if (l.zIndex == indexed[z]) {
                        out.push(l.apply(scope, args));
                        if (stop) {
                            break;
                        }
                        do {
                            z++;
                            l = queue[indexed[z]];
                            l && out.push(l.apply(scope, args));
                            if (stop) {
                                break;
                            }
                        } while (l)
                    } else {
                        queue[l.zIndex] = l;
                    }
                } else {
                    out.push(l.apply(scope, args));
                    if (stop) {
                        break;
                    }
                }
            }
            stop = oldstop;
            current_event = ce;
            return out.length ? out : null;
        };
    
    eve.listeners = function (name) {
        var names = name.split(separator),
            e = events,
            item,
            items,
            k,
            i,
            ii,
            j,
            jj,
            nes,
            es = [e],
            out = [];
        for (i = 0, ii = names.length; i < ii; i++) {
            nes = [];
            for (j = 0, jj = es.length; j < jj; j++) {
                e = es[j].n;
                items = [e[names[i]], e[wildcard]];
                k = 2;
                while (k--) {
                    item = items[k];
                    if (item) {
                        nes.push(item);
                        out = out.concat(item.f || []);
                    }
                }
            }
            es = nes;
        }
        return out;
    };
    
    
    eve.on = function (name, f) {
        var names = name.split(separator),
            e = events;
        for (var i = 0, ii = names.length; i < ii; i++) {
            e = e.n;
            !e[names[i]] && (e[names[i]] = {n: {}});
            e = e[names[i]];
        }
        e.f = e.f || [];
        for (i = 0, ii = e.f.length; i < ii; i++) if (e.f[i] == f) {
            return fun;
        }
        e.f.push(f);
        return function (zIndex) {
            if (+zIndex == +zIndex) {
                f.zIndex = +zIndex;
            }
        };
    };
    
    eve.stop = function () {
        stop = 1;
    };
    
    eve.nt = function (subname) {
        if (subname) {
            return new RegExp("(?:\\.|\\/|^)" + subname + "(?:\\.|\\/|$)").test(current_event);
        }
        return current_event;
    };
    
    
    eve.off = eve.unbind = function (name, f) {
        var names = name.split(separator),
            e,
            key,
            splice,
            i, ii, j, jj,
            cur = [events];
        for (i = 0, ii = names.length; i < ii; i++) {
            for (j = 0; j < cur.length; j += splice.length - 2) {
                splice = [j, 1];
                e = cur[j].n;
                if (names[i] != wildcard) {
                    if (e[names[i]]) {
                        splice.push(e[names[i]]);
                    }
                } else {
                    for (key in e) if (e[has](key)) {
                        splice.push(e[key]);
                    }
                }
                cur.splice.apply(cur, splice);
            }
        }
        for (i = 0, ii = cur.length; i < ii; i++) {
            e = cur[i];
            while (e.n) {
                if (f) {
                    if (e.f) {
                        for (j = 0, jj = e.f.length; j < jj; j++) if (e.f[j] == f) {
                            e.f.splice(j, 1);
                            break;
                        }
                        !e.f.length && delete e.f;
                    }
                    for (key in e.n) if (e.n[has](key) && e.n[key].f) {
                        var funcs = e.n[key].f;
                        for (j = 0, jj = funcs.length; j < jj; j++) if (funcs[j] == f) {
                            funcs.splice(j, 1);
                            break;
                        }
                        !funcs.length && delete e.n[key].f;
                    }
                } else {
                    delete e.f;
                    for (key in e.n) if (e.n[has](key) && e.n[key].f) {
                        delete e.n[key].f;
                    }
                }
                e = e.n;
            }
        }
    };
    
    eve.once = function (name, f) {
        var f2 = function () {
            var res = f.apply(this, arguments);
            eve.unbind(name, f2);
            return res;
        };
        return eve.on(name, f2);
    };
    
    eve.version = version;
    eve.toString = function () {
        return "You are running Eve " + version;
    };
    (typeof module != "undefined" && module.exports) ? (module.exports = eve) : (typeof define != "undefined" ? (define("eve", [], function() { return eve; })) : (glob.eve = eve));
})(this);


// ┌─────────────────────────────────────────────────────────────────────┐ \\
// │ "Raphaël 2.1.0" - JavaScript Vector Library                         │ \\
// ├─────────────────────────────────────────────────────────────────────┤ \\
// │ Copyright (c) 2008-2011 Dmitry Baranovskiy (http://raphaeljs.com)   │ \\
// │ Copyright (c) 2008-2011 Sencha Labs (http://sencha.com)             │ \\
// │ Licensed under the MIT (http://raphaeljs.com/license.html) license. │ \\
// └─────────────────────────────────────────────────────────────────────┘ \\
(function () {
    
    function R(first) {
        if (R.is(first, "function")) {
            return loaded ? first() : eve.on("raphael.DOMload", first);
        } else if (R.is(first, array)) {
            return R._engine.create[apply](R, first.splice(0, 3 + R.is(first[0], nu))).add(first);
        } else {
            var args = Array.prototype.slice.call(arguments, 0);
            if (R.is(args[args.length - 1], "function")) {
                var f = args.pop();
                return loaded ? f.call(R._engine.create[apply](R, args)) : eve.on("raphael.DOMload", function () {
                    f.call(R._engine.create[apply](R, args));
                });
            } else {
                return R._engine.create[apply](R, arguments);
            }
        }
    }
    R.version = "2.1.0";
    R.eve = eve;
    var loaded,
        separator = /[, ]+/,
        elements = {circle: 1, rect: 1, path: 1, ellipse: 1, text: 1, image: 1},
        formatrg = /\{(\d+)\}/g,
        proto = "prototype",
        has = "hasOwnProperty",
        g = {
            doc: document,
            win: window
        },
        oldRaphael = {
            was: Object.prototype[has].call(g.win, "Raphael"),
            is: g.win.Raphael
        },
        Paper = function () {
            
            
            this.ca = this.customAttributes = {};
        },
        paperproto,
        appendChild = "appendChild",
        apply = "apply",
        concat = "concat",
        supportsTouch = "createTouch" in g.doc,
        E = "",
        S = " ",
        Str = String,
        split = "split",
        events = "click dblclick mousedown mousemove mouseout mouseover mouseup touchstart touchmove touchend touchcancel"[split](S),
        touchMap = {
            mousedown: "touchstart",
            mousemove: "touchmove",
            mouseup: "touchend"
        },
        lowerCase = Str.prototype.toLowerCase,
        math = Math,
        mmax = math.max,
        mmin = math.min,
        abs = math.abs,
        pow = math.pow,
        PI = math.PI,
        nu = "number",
        string = "string",
        array = "array",
        toString = "toString",
        fillString = "fill",
        objectToString = Object.prototype.toString,
        paper = {},
        push = "push",
        ISURL = R._ISURL = /^url\(['"]?([^\)]+?)['"]?\)$/i,
        colourRegExp = /^\s*((#[a-f\d]{6})|(#[a-f\d]{3})|rgba?\(\s*([\d\.]+%?\s*,\s*[\d\.]+%?\s*,\s*[\d\.]+%?(?:\s*,\s*[\d\.]+%?)?)\s*\)|hsba?\(\s*([\d\.]+(?:deg|\xb0|%)?\s*,\s*[\d\.]+%?\s*,\s*[\d\.]+(?:%?\s*,\s*[\d\.]+)?)%?\s*\)|hsla?\(\s*([\d\.]+(?:deg|\xb0|%)?\s*,\s*[\d\.]+%?\s*,\s*[\d\.]+(?:%?\s*,\s*[\d\.]+)?)%?\s*\))\s*$/i,
        isnan = {"NaN": 1, "Infinity": 1, "-Infinity": 1},
        bezierrg = /^(?:cubic-)?bezier\(([^,]+),([^,]+),([^,]+),([^\)]+)\)/,
        round = math.round,
        setAttribute = "setAttribute",
        toFloat = parseFloat,
        toInt = parseInt,
        upperCase = Str.prototype.toUpperCase,
        availableAttrs = R._availableAttrs = {
            "arrow-end": "none",
            "arrow-start": "none",
            blur: 0,
            "clip-rect": "0 0 1e9 1e9",
            cursor: "default",
            cx: 0,
            cy: 0,
            fill: "#fff",
            "fill-opacity": 1,
            font: '10px "Arial"',
            "font-family": '"Arial"',
            "font-size": "10",
            "font-style": "normal",
            "font-weight": 400,
            gradient: 0,
            height: 0,
            href: "http://raphaeljs.com/",
            "letter-spacing": 0,
            opacity: 1,
            path: "M0,0",
            r: 0,
            rx: 0,
            ry: 0,
            src: "",
            stroke: "#000",
            "stroke-dasharray": "",
            "stroke-linecap": "butt",
            "stroke-linejoin": "butt",
            "stroke-miterlimit": 0,
            "stroke-opacity": 1,
            "stroke-width": 1,
            target: "_blank",
            "text-anchor": "middle",
            title: "Raphael",
            transform: "",
            width: 0,
            x: 0,
            y: 0
        },
        availableAnimAttrs = R._availableAnimAttrs = {
            blur: nu,
            "clip-rect": "csv",
            cx: nu,
            cy: nu,
            fill: "colour",
            "fill-opacity": nu,
            "font-size": nu,
            height: nu,
            opacity: nu,
            path: "path",
            r: nu,
            rx: nu,
            ry: nu,
            stroke: "colour",
            "stroke-opacity": nu,
            "stroke-width": nu,
            transform: "transform",
            width: nu,
            x: nu,
            y: nu
        },
        whitespace = /[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]/g,
        commaSpaces = /[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*,[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*/,
        hsrg = {hs: 1, rg: 1},
        p2s = /,?([achlmqrstvxz]),?/gi,
        pathCommand = /([achlmrqstvz])[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029,]*((-?\d*\.?\d*(?:e[\-+]?\d+)?[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*,?[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*)+)/ig,
        tCommand = /([rstm])[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029,]*((-?\d*\.?\d*(?:e[\-+]?\d+)?[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*,?[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*)+)/ig,
        pathValues = /(-?\d*\.?\d*(?:e[\-+]?\d+)?)[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*,?[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*/ig,
        radial_gradient = R._radial_gradient = /^r(?:\(([^,]+?)[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*,[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*([^\)]+?)\))?/,
        eldata = {},
        sortByKey = function (a, b) {
            return a.key - b.key;
        },
        sortByNumber = function (a, b) {
            return toFloat(a) - toFloat(b);
        },
        fun = function () {},
        pipe = function (x) {
            return x;
        },
        rectPath = R._rectPath = function (x, y, w, h, r) {
            if (r) {
                return [["M", x + r, y], ["l", w - r * 2, 0], ["a", r, r, 0, 0, 1, r, r], ["l", 0, h - r * 2], ["a", r, r, 0, 0, 1, -r, r], ["l", r * 2 - w, 0], ["a", r, r, 0, 0, 1, -r, -r], ["l", 0, r * 2 - h], ["a", r, r, 0, 0, 1, r, -r], ["z"]];
            }
            return [["M", x, y], ["l", w, 0], ["l", 0, h], ["l", -w, 0], ["z"]];
        },
        ellipsePath = function (x, y, rx, ry) {
            if (ry == null) {
                ry = rx;
            }
            return [["M", x, y], ["m", 0, -ry], ["a", rx, ry, 0, 1, 1, 0, 2 * ry], ["a", rx, ry, 0, 1, 1, 0, -2 * ry], ["z"]];
        },
        getPath = R._getPath = {
            path: function (el) {
                return el.attr("path");
            },
            circle: function (el) {
                var a = el.attrs;
                return ellipsePath(a.cx, a.cy, a.r);
            },
            ellipse: function (el) {
                var a = el.attrs;
                return ellipsePath(a.cx, a.cy, a.rx, a.ry);
            },
            rect: function (el) {
                var a = el.attrs;
                return rectPath(a.x, a.y, a.width, a.height, a.r);
            },
            image: function (el) {
                var a = el.attrs;
                return rectPath(a.x, a.y, a.width, a.height);
            },
            text: function (el) {
                var bbox = el._getBBox();
                return rectPath(bbox.x, bbox.y, bbox.width, bbox.height);
            }
        },
        
        mapPath = R.mapPath = function (path, matrix) {
            if (!matrix) {
                return path;
            }
            var x, y, i, j, ii, jj, pathi;
            path = path2curve(path);
            for (i = 0, ii = path.length; i < ii; i++) {
                pathi = path[i];
                for (j = 1, jj = pathi.length; j < jj; j += 2) {
                    x = matrix.x(pathi[j], pathi[j + 1]);
                    y = matrix.y(pathi[j], pathi[j + 1]);
                    pathi[j] = x;
                    pathi[j + 1] = y;
                }
            }
            return path;
        };

    R._g = g;
    
    R.type = (g.win.SVGAngle || g.doc.implementation.hasFeature("http://www.w3.org/TR/SVG11/feature#BasicStructure", "1.1") ? "SVG" : "VML");
    if (R.type == "VML") {
        var d = g.doc.createElement("div"),
            b;
        d.innerHTML = '<v:shape adj="1"/>';
        b = d.firstChild;
        b.style.behavior = "url(#default#VML)";
        if (!(b && typeof b.adj == "object")) {
            return (R.type = E);
        }
        d = null;
    }
    
    
    R.svg = !(R.vml = R.type == "VML");
    R._Paper = Paper;
    
    R.fn = paperproto = Paper.prototype = R.prototype;
    R._id = 0;
    R._oid = 0;
    
    R.is = function (o, type) {
        type = lowerCase.call(type);
        if (type == "finite") {
            return !isnan[has](+o);
        }
        if (type == "array") {
            return o instanceof Array;
        }
        return  (type == "null" && o === null) ||
                (type == typeof o && o !== null) ||
                (type == "object" && o === Object(o)) ||
                (type == "array" && Array.isArray && Array.isArray(o)) ||
                objectToString.call(o).slice(8, -1).toLowerCase() == type;
    };

    function clone(obj) {
        if (Object(obj) !== obj) {
            return obj;
        }
        var res = new obj.constructor;
        for (var key in obj) if (obj[has](key)) {
            res[key] = clone(obj[key]);
        }
        return res;
    }

    
    R.angle = function (x1, y1, x2, y2, x3, y3) {
        if (x3 == null) {
            var x = x1 - x2,
                y = y1 - y2;
            if (!x && !y) {
                return 0;
            }
            return (180 + math.atan2(-y, -x) * 180 / PI + 360) % 360;
        } else {
            return R.angle(x1, y1, x3, y3) - R.angle(x2, y2, x3, y3);
        }
    };
    
    R.rad = function (deg) {
        return deg % 360 * PI / 180;
    };
    
    R.deg = function (rad) {
        return rad * 180 / PI % 360;
    };
    
    R.snapTo = function (values, value, tolerance) {
        tolerance = R.is(tolerance, "finite") ? tolerance : 10;
        if (R.is(values, array)) {
            var i = values.length;
            while (i--) if (abs(values[i] - value) <= tolerance) {
                return values[i];
            }
        } else {
            values = +values;
            var rem = value % values;
            if (rem < tolerance) {
                return value - rem;
            }
            if (rem > values - tolerance) {
                return value - rem + values;
            }
        }
        return value;
    };
    
    
    var createUUID = R.createUUID = (function (uuidRegEx, uuidReplacer) {
        return function () {
            return "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(uuidRegEx, uuidReplacer).toUpperCase();
        };
    })(/[xy]/g, function (c) {
        var r = math.random() * 16 | 0,
            v = c == "x" ? r : (r & 3 | 8);
        return v.toString(16);
    });

    
    R.setWindow = function (newwin) {
        eve("raphael.setWindow", R, g.win, newwin);
        g.win = newwin;
        g.doc = g.win.document;
        if (R._engine.initWin) {
            R._engine.initWin(g.win);
        }
    };
    var toHex = function (color) {
        if (R.vml) {
            // http://dean.edwards.name/weblog/2009/10/convert-any-colour-value-to-hex-in-msie/
            var trim = /^\s+|\s+$/g;
            var bod;
            try {
                var docum = new ActiveXObject("htmlfile");
                docum.write("<body>");
                docum.close();
                bod = docum.body;
            } catch(e) {
                bod = createPopup().document.body;
            }
            var range = bod.createTextRange();
            toHex = cacher(function (color) {
                try {
                    bod.style.color = Str(color).replace(trim, E);
                    var value = range.queryCommandValue("ForeColor");
                    value = ((value & 255) << 16) | (value & 65280) | ((value & 16711680) >>> 16);
                    return "#" + ("000000" + value.toString(16)).slice(-6);
                } catch(e) {
                    return "none";
                }
            });
        } else {
            var i = g.doc.createElement("i");
            i.title = "Rapha\xebl Colour Picker";
            i.style.display = "none";
            g.doc.body.appendChild(i);
            toHex = cacher(function (color) {
                i.style.color = color;
                return g.doc.defaultView.getComputedStyle(i, E).getPropertyValue("color");
            });
        }
        return toHex(color);
    },
    hsbtoString = function () {
        return "hsb(" + [this.h, this.s, this.b] + ")";
    },
    hsltoString = function () {
        return "hsl(" + [this.h, this.s, this.l] + ")";
    },
    rgbtoString = function () {
        return this.hex;
    },
    prepareRGB = function (r, g, b) {
        if (g == null && R.is(r, "object") && "r" in r && "g" in r && "b" in r) {
            b = r.b;
            g = r.g;
            r = r.r;
        }
        if (g == null && R.is(r, string)) {
            var clr = R.getRGB(r);
            r = clr.r;
            g = clr.g;
            b = clr.b;
        }
        if (r > 1 || g > 1 || b > 1) {
            r /= 255;
            g /= 255;
            b /= 255;
        }
        
        return [r, g, b];
    },
    packageRGB = function (r, g, b, o) {
        r *= 255;
        g *= 255;
        b *= 255;
        var rgb = {
            r: r,
            g: g,
            b: b,
            hex: R.rgb(r, g, b),
            toString: rgbtoString
        };
        R.is(o, "finite") && (rgb.opacity = o);
        return rgb;
    };
    
    
    R.color = function (clr) {
        var rgb;
        if (R.is(clr, "object") && "h" in clr && "s" in clr && "b" in clr) {
            rgb = R.hsb2rgb(clr);
            clr.r = rgb.r;
            clr.g = rgb.g;
            clr.b = rgb.b;
            clr.hex = rgb.hex;
        } else if (R.is(clr, "object") && "h" in clr && "s" in clr && "l" in clr) {
            rgb = R.hsl2rgb(clr);
            clr.r = rgb.r;
            clr.g = rgb.g;
            clr.b = rgb.b;
            clr.hex = rgb.hex;
        } else {
            if (R.is(clr, "string")) {
                clr = R.getRGB(clr);
            }
            if (R.is(clr, "object") && "r" in clr && "g" in clr && "b" in clr) {
                rgb = R.rgb2hsl(clr);
                clr.h = rgb.h;
                clr.s = rgb.s;
                clr.l = rgb.l;
                rgb = R.rgb2hsb(clr);
                clr.v = rgb.b;
            } else {
                clr = {hex: "none"};
                clr.r = clr.g = clr.b = clr.h = clr.s = clr.v = clr.l = -1;
            }
        }
        clr.toString = rgbtoString;
        return clr;
    };
    
    R.hsb2rgb = function (h, s, v, o) {
        if (this.is(h, "object") && "h" in h && "s" in h && "b" in h) {
            v = h.b;
            s = h.s;
            h = h.h;
            o = h.o;
        }
        h *= 360;
        var R, G, B, X, C;
        h = (h % 360) / 60;
        C = v * s;
        X = C * (1 - abs(h % 2 - 1));
        R = G = B = v - C;

        h = ~~h;
        R += [C, X, 0, 0, X, C][h];
        G += [X, C, C, X, 0, 0][h];
        B += [0, 0, X, C, C, X][h];
        return packageRGB(R, G, B, o);
    };
    
    R.hsl2rgb = function (h, s, l, o) {
        if (this.is(h, "object") && "h" in h && "s" in h && "l" in h) {
            l = h.l;
            s = h.s;
            h = h.h;
        }
        if (h > 1 || s > 1 || l > 1) {
            h /= 360;
            s /= 100;
            l /= 100;
        }
        h *= 360;
        var R, G, B, X, C;
        h = (h % 360) / 60;
        C = 2 * s * (l < .5 ? l : 1 - l);
        X = C * (1 - abs(h % 2 - 1));
        R = G = B = l - C / 2;

        h = ~~h;
        R += [C, X, 0, 0, X, C][h];
        G += [X, C, C, X, 0, 0][h];
        B += [0, 0, X, C, C, X][h];
        return packageRGB(R, G, B, o);
    };
    
    R.rgb2hsb = function (r, g, b) {
        b = prepareRGB(r, g, b);
        r = b[0];
        g = b[1];
        b = b[2];

        var H, S, V, C;
        V = mmax(r, g, b);
        C = V - mmin(r, g, b);
        H = (C == 0 ? null :
             V == r ? (g - b) / C :
             V == g ? (b - r) / C + 2 :
                      (r - g) / C + 4
            );
        H = ((H + 360) % 6) * 60 / 360;
        S = C == 0 ? 0 : C / V;
        return {h: H, s: S, b: V, toString: hsbtoString};
    };
    
    R.rgb2hsl = function (r, g, b) {
        b = prepareRGB(r, g, b);
        r = b[0];
        g = b[1];
        b = b[2];

        var H, S, L, M, m, C;
        M = mmax(r, g, b);
        m = mmin(r, g, b);
        C = M - m;
        H = (C == 0 ? null :
             M == r ? (g - b) / C :
             M == g ? (b - r) / C + 2 :
                      (r - g) / C + 4);
        H = ((H + 360) % 6) * 60 / 360;
        L = (M + m) / 2;
        S = (C == 0 ? 0 :
             L < .5 ? C / (2 * L) :
                      C / (2 - 2 * L));
        return {h: H, s: S, l: L, toString: hsltoString};
    };
    R._path2string = function () {
        return this.join(",").replace(p2s, "$1");
    };
    function repush(array, item) {
        for (var i = 0, ii = array.length; i < ii; i++) if (array[i] === item) {
            return array.push(array.splice(i, 1)[0]);
        }
    }
    function cacher(f, scope, postprocessor) {
        function newf() {
            var arg = Array.prototype.slice.call(arguments, 0),
                args = arg.join("\u2400"),
                cache = newf.cache = newf.cache || {},
                count = newf.count = newf.count || [];
            if (cache[has](args)) {
                repush(count, args);
                return postprocessor ? postprocessor(cache[args]) : cache[args];
            }
            count.length >= 1e3 && delete cache[count.shift()];
            count.push(args);
            cache[args] = f[apply](scope, arg);
            return postprocessor ? postprocessor(cache[args]) : cache[args];
        }
        return newf;
    }

    var preload = R._preload = function (src, f) {
        var img = g.doc.createElement("img");
        img.style.cssText = "position:absolute;left:-9999em;top:-9999em";
        img.onload = function () {
            f.call(this);
            this.onload = null;
            g.doc.body.removeChild(this);
        };
        img.onerror = function () {
            g.doc.body.removeChild(this);
        };
        g.doc.body.appendChild(img);
        img.src = src;
    };
    
    function clrToString() {
        return this.hex;
    }

    
    R.getRGB = cacher(function (colour) {
        if (!colour || !!((colour = Str(colour)).indexOf("-") + 1)) {
            return {r: -1, g: -1, b: -1, hex: "none", error: 1, toString: clrToString};
        }
        if (colour == "none") {
            return {r: -1, g: -1, b: -1, hex: "none", toString: clrToString};
        }
        !(hsrg[has](colour.toLowerCase().substring(0, 2)) || colour.charAt() == "#") && (colour = toHex(colour));
        var res,
            red,
            green,
            blue,
            opacity,
            t,
            values,
            rgb = colour.match(colourRegExp);
        if (rgb) {
            if (rgb[2]) {
                blue = toInt(rgb[2].substring(5), 16);
                green = toInt(rgb[2].substring(3, 5), 16);
                red = toInt(rgb[2].substring(1, 3), 16);
            }
            if (rgb[3]) {
                blue = toInt((t = rgb[3].charAt(3)) + t, 16);
                green = toInt((t = rgb[3].charAt(2)) + t, 16);
                red = toInt((t = rgb[3].charAt(1)) + t, 16);
            }
            if (rgb[4]) {
                values = rgb[4][split](commaSpaces);
                red = toFloat(values[0]);
                values[0].slice(-1) == "%" && (red *= 2.55);
                green = toFloat(values[1]);
                values[1].slice(-1) == "%" && (green *= 2.55);
                blue = toFloat(values[2]);
                values[2].slice(-1) == "%" && (blue *= 2.55);
                rgb[1].toLowerCase().slice(0, 4) == "rgba" && (opacity = toFloat(values[3]));
                values[3] && values[3].slice(-1) == "%" && (opacity /= 100);
            }
            if (rgb[5]) {
                values = rgb[5][split](commaSpaces);
                red = toFloat(values[0]);
                values[0].slice(-1) == "%" && (red *= 2.55);
                green = toFloat(values[1]);
                values[1].slice(-1) == "%" && (green *= 2.55);
                blue = toFloat(values[2]);
                values[2].slice(-1) == "%" && (blue *= 2.55);
                (values[0].slice(-3) == "deg" || values[0].slice(-1) == "\xb0") && (red /= 360);
                rgb[1].toLowerCase().slice(0, 4) == "hsba" && (opacity = toFloat(values[3]));
                values[3] && values[3].slice(-1) == "%" && (opacity /= 100);
                return R.hsb2rgb(red, green, blue, opacity);
            }
            if (rgb[6]) {
                values = rgb[6][split](commaSpaces);
                red = toFloat(values[0]);
                values[0].slice(-1) == "%" && (red *= 2.55);
                green = toFloat(values[1]);
                values[1].slice(-1) == "%" && (green *= 2.55);
                blue = toFloat(values[2]);
                values[2].slice(-1) == "%" && (blue *= 2.55);
                (values[0].slice(-3) == "deg" || values[0].slice(-1) == "\xb0") && (red /= 360);
                rgb[1].toLowerCase().slice(0, 4) == "hsla" && (opacity = toFloat(values[3]));
                values[3] && values[3].slice(-1) == "%" && (opacity /= 100);
                return R.hsl2rgb(red, green, blue, opacity);
            }
            rgb = {r: red, g: green, b: blue, toString: clrToString};
            rgb.hex = "#" + (16777216 | blue | (green << 8) | (red << 16)).toString(16).slice(1);
            R.is(opacity, "finite") && (rgb.opacity = opacity);
            return rgb;
        }
        return {r: -1, g: -1, b: -1, hex: "none", error: 1, toString: clrToString};
    }, R);
    
    R.hsb = cacher(function (h, s, b) {
        return R.hsb2rgb(h, s, b).hex;
    });
    
    R.hsl = cacher(function (h, s, l) {
        return R.hsl2rgb(h, s, l).hex;
    });
    
    R.rgb = cacher(function (r, g, b) {
        return "#" + (16777216 | b | (g << 8) | (r << 16)).toString(16).slice(1);
    });
    
    R.getColor = function (value) {
        var start = this.getColor.start = this.getColor.start || {h: 0, s: 1, b: value || .75},
            rgb = this.hsb2rgb(start.h, start.s, start.b);
        start.h += .075;
        if (start.h > 1) {
            start.h = 0;
            start.s -= .2;
            start.s <= 0 && (this.getColor.start = {h: 0, s: 1, b: start.b});
        }
        return rgb.hex;
    };
    
    R.getColor.reset = function () {
        delete this.start;
    };

    // http://schepers.cc/getting-to-the-point
    function catmullRom2bezier(crp, z) {
        var d = [];
        for (var i = 0, iLen = crp.length; iLen - 2 * !z > i; i += 2) {
            var p = [
                        {x: +crp[i - 2], y: +crp[i - 1]},
                        {x: +crp[i],     y: +crp[i + 1]},
                        {x: +crp[i + 2], y: +crp[i + 3]},
                        {x: +crp[i + 4], y: +crp[i + 5]}
                    ];
            if (z) {
                if (!i) {
                    p[0] = {x: +crp[iLen - 2], y: +crp[iLen - 1]};
                } else if (iLen - 4 == i) {
                    p[3] = {x: +crp[0], y: +crp[1]};
                } else if (iLen - 2 == i) {
                    p[2] = {x: +crp[0], y: +crp[1]};
                    p[3] = {x: +crp[2], y: +crp[3]};
                }
            } else {
                if (iLen - 4 == i) {
                    p[3] = p[2];
                } else if (!i) {
                    p[0] = {x: +crp[i], y: +crp[i + 1]};
                }
            }
            d.push(["C",
                  (-p[0].x + 6 * p[1].x + p[2].x) / 6,
                  (-p[0].y + 6 * p[1].y + p[2].y) / 6,
                  (p[1].x + 6 * p[2].x - p[3].x) / 6,
                  (p[1].y + 6*p[2].y - p[3].y) / 6,
                  p[2].x,
                  p[2].y
            ]);
        }

        return d;
    }
    
    R.parsePathString = function (pathString) {
        if (!pathString) {
            return null;
        }
        var pth = paths(pathString);
        if (pth.arr) {
            return pathClone(pth.arr);
        }
        
        var paramCounts = {a: 7, c: 6, h: 1, l: 2, m: 2, r: 4, q: 4, s: 4, t: 2, v: 1, z: 0},
            data = [];
        if (R.is(pathString, array) && R.is(pathString[0], array)) { // rough assumption
            data = pathClone(pathString);
        }
        if (!data.length) {
            Str(pathString).replace(pathCommand, function (a, b, c) {
                var params = [],
                    name = b.toLowerCase();
                c.replace(pathValues, function (a, b) {
                    b && params.push(+b);
                });
                if (name == "m" && params.length > 2) {
                    data.push([b][concat](params.splice(0, 2)));
                    name = "l";
                    b = b == "m" ? "l" : "L";
                }
                if (name == "r") {
                    data.push([b][concat](params));
                } else while (params.length >= paramCounts[name]) {
                    data.push([b][concat](params.splice(0, paramCounts[name])));
                    if (!paramCounts[name]) {
                        break;
                    }
                }
            });
        }
        data.toString = R._path2string;
        pth.arr = pathClone(data);
        return data;
    };
    
    R.parseTransformString = cacher(function (TString) {
        if (!TString) {
            return null;
        }
        var paramCounts = {r: 3, s: 4, t: 2, m: 6},
            data = [];
        if (R.is(TString, array) && R.is(TString[0], array)) { // rough assumption
            data = pathClone(TString);
        }
        if (!data.length) {
            Str(TString).replace(tCommand, function (a, b, c) {
                var params = [],
                    name = lowerCase.call(b);
                c.replace(pathValues, function (a, b) {
                    b && params.push(+b);
                });
                data.push([b][concat](params));
            });
        }
        data.toString = R._path2string;
        return data;
    });
    // PATHS
    var paths = function (ps) {
        var p = paths.ps = paths.ps || {};
        if (p[ps]) {
            p[ps].sleep = 100;
        } else {
            p[ps] = {
                sleep: 100
            };
        }
        setTimeout(function () {
            for (var key in p) if (p[has](key) && key != ps) {
                p[key].sleep--;
                !p[key].sleep && delete p[key];
            }
        });
        return p[ps];
    };
    
    R.findDotsAtSegment = function (p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {
        var t1 = 1 - t,
            t13 = pow(t1, 3),
            t12 = pow(t1, 2),
            t2 = t * t,
            t3 = t2 * t,
            x = t13 * p1x + t12 * 3 * t * c1x + t1 * 3 * t * t * c2x + t3 * p2x,
            y = t13 * p1y + t12 * 3 * t * c1y + t1 * 3 * t * t * c2y + t3 * p2y,
            mx = p1x + 2 * t * (c1x - p1x) + t2 * (c2x - 2 * c1x + p1x),
            my = p1y + 2 * t * (c1y - p1y) + t2 * (c2y - 2 * c1y + p1y),
            nx = c1x + 2 * t * (c2x - c1x) + t2 * (p2x - 2 * c2x + c1x),
            ny = c1y + 2 * t * (c2y - c1y) + t2 * (p2y - 2 * c2y + c1y),
            ax = t1 * p1x + t * c1x,
            ay = t1 * p1y + t * c1y,
            cx = t1 * c2x + t * p2x,
            cy = t1 * c2y + t * p2y,
            alpha = (90 - math.atan2(mx - nx, my - ny) * 180 / PI);
        (mx > nx || my < ny) && (alpha += 180);
        return {
            x: x,
            y: y,
            m: {x: mx, y: my},
            n: {x: nx, y: ny},
            start: {x: ax, y: ay},
            end: {x: cx, y: cy},
            alpha: alpha
        };
    };
    
    R.bezierBBox = function (p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y) {
        if (!R.is(p1x, "array")) {
            p1x = [p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y];
        }
        var bbox = curveDim.apply(null, p1x);
        return {
            x: bbox.min.x,
            y: bbox.min.y,
            x2: bbox.max.x,
            y2: bbox.max.y,
            width: bbox.max.x - bbox.min.x,
            height: bbox.max.y - bbox.min.y
        };
    };
    
    R.isPointInsideBBox = function (bbox, x, y) {
        return x >= bbox.x && x <= bbox.x2 && y >= bbox.y && y <= bbox.y2;
    };
    
    R.isBBoxIntersect = function (bbox1, bbox2) {
        var i = R.isPointInsideBBox;
        return i(bbox2, bbox1.x, bbox1.y)
            || i(bbox2, bbox1.x2, bbox1.y)
            || i(bbox2, bbox1.x, bbox1.y2)
            || i(bbox2, bbox1.x2, bbox1.y2)
            || i(bbox1, bbox2.x, bbox2.y)
            || i(bbox1, bbox2.x2, bbox2.y)
            || i(bbox1, bbox2.x, bbox2.y2)
            || i(bbox1, bbox2.x2, bbox2.y2)
            || (bbox1.x < bbox2.x2 && bbox1.x > bbox2.x || bbox2.x < bbox1.x2 && bbox2.x > bbox1.x)
            && (bbox1.y < bbox2.y2 && bbox1.y > bbox2.y || bbox2.y < bbox1.y2 && bbox2.y > bbox1.y);
    };
    function base3(t, p1, p2, p3, p4) {
        var t1 = -3 * p1 + 9 * p2 - 9 * p3 + 3 * p4,
            t2 = t * t1 + 6 * p1 - 12 * p2 + 6 * p3;
        return t * t2 - 3 * p1 + 3 * p2;
    }
    function bezlen(x1, y1, x2, y2, x3, y3, x4, y4, z) {
        if (z == null) {
            z = 1;
        }
        z = z > 1 ? 1 : z < 0 ? 0 : z;
        var z2 = z / 2,
            n = 12,
            Tvalues = [-0.1252,0.1252,-0.3678,0.3678,-0.5873,0.5873,-0.7699,0.7699,-0.9041,0.9041,-0.9816,0.9816],
            Cvalues = [0.2491,0.2491,0.2335,0.2335,0.2032,0.2032,0.1601,0.1601,0.1069,0.1069,0.0472,0.0472],
            sum = 0;
        for (var i = 0; i < n; i++) {
            var ct = z2 * Tvalues[i] + z2,
                xbase = base3(ct, x1, x2, x3, x4),
                ybase = base3(ct, y1, y2, y3, y4),
                comb = xbase * xbase + ybase * ybase;
            sum += Cvalues[i] * math.sqrt(comb);
        }
        return z2 * sum;
    }
    function getTatLen(x1, y1, x2, y2, x3, y3, x4, y4, ll) {
        if (ll < 0 || bezlen(x1, y1, x2, y2, x3, y3, x4, y4) < ll) {
            return;
        }
        var t = 1,
            step = t / 2,
            t2 = t - step,
            l,
            e = .01;
        l = bezlen(x1, y1, x2, y2, x3, y3, x4, y4, t2);
        while (abs(l - ll) > e) {
            step /= 2;
            t2 += (l < ll ? 1 : -1) * step;
            l = bezlen(x1, y1, x2, y2, x3, y3, x4, y4, t2);
        }
        return t2;
    }
    function intersect(x1, y1, x2, y2, x3, y3, x4, y4) {
        if (
            mmax(x1, x2) < mmin(x3, x4) ||
            mmin(x1, x2) > mmax(x3, x4) ||
            mmax(y1, y2) < mmin(y3, y4) ||
            mmin(y1, y2) > mmax(y3, y4)
        ) {
            return;
        }
        var nx = (x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4),
            ny = (x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4),
            denominator = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);

        if (!denominator) {
            return;
        }
        var px = nx / denominator,
            py = ny / denominator,
            px2 = +px.toFixed(2),
            py2 = +py.toFixed(2);
        if (
            px2 < +mmin(x1, x2).toFixed(2) ||
            px2 > +mmax(x1, x2).toFixed(2) ||
            px2 < +mmin(x3, x4).toFixed(2) ||
            px2 > +mmax(x3, x4).toFixed(2) ||
            py2 < +mmin(y1, y2).toFixed(2) ||
            py2 > +mmax(y1, y2).toFixed(2) ||
            py2 < +mmin(y3, y4).toFixed(2) ||
            py2 > +mmax(y3, y4).toFixed(2)
        ) {
            return;
        }
        return {x: px, y: py};
    }
    function inter(bez1, bez2) {
        return interHelper(bez1, bez2);
    }
    function interCount(bez1, bez2) {
        return interHelper(bez1, bez2, 1);
    }
    function interHelper(bez1, bez2, justCount) {
        var bbox1 = R.bezierBBox(bez1),
            bbox2 = R.bezierBBox(bez2);
        if (!R.isBBoxIntersect(bbox1, bbox2)) {
            return justCount ? 0 : [];
        }
        var l1 = bezlen.apply(0, bez1),
            l2 = bezlen.apply(0, bez2),
            n1 = ~~(l1 / 5),
            n2 = ~~(l2 / 5),
            dots1 = [],
            dots2 = [],
            xy = {},
            res = justCount ? 0 : [];
        for (var i = 0; i < n1 + 1; i++) {
            var p = R.findDotsAtSegment.apply(R, bez1.concat(i / n1));
            dots1.push({x: p.x, y: p.y, t: i / n1});
        }
        for (i = 0; i < n2 + 1; i++) {
            p = R.findDotsAtSegment.apply(R, bez2.concat(i / n2));
            dots2.push({x: p.x, y: p.y, t: i / n2});
        }
        for (i = 0; i < n1; i++) {
            for (var j = 0; j < n2; j++) {
                var di = dots1[i],
                    di1 = dots1[i + 1],
                    dj = dots2[j],
                    dj1 = dots2[j + 1],
                    ci = abs(di1.x - di.x) < .001 ? "y" : "x",
                    cj = abs(dj1.x - dj.x) < .001 ? "y" : "x",
                    is = intersect(di.x, di.y, di1.x, di1.y, dj.x, dj.y, dj1.x, dj1.y);
                if (is) {
                    if (xy[is.x.toFixed(4)] == is.y.toFixed(4)) {
                        continue;
                    }
                    xy[is.x.toFixed(4)] = is.y.toFixed(4);
                    var t1 = di.t + abs((is[ci] - di[ci]) / (di1[ci] - di[ci])) * (di1.t - di.t),
                        t2 = dj.t + abs((is[cj] - dj[cj]) / (dj1[cj] - dj[cj])) * (dj1.t - dj.t);
                    if (t1 >= 0 && t1 <= 1 && t2 >= 0 && t2 <= 1) {
                        if (justCount) {
                            res++;
                        } else {
                            res.push({
                                x: is.x,
                                y: is.y,
                                t1: t1,
                                t2: t2
                            });
                        }
                    }
                }
            }
        }
        return res;
    }
    
    R.pathIntersection = function (path1, path2) {
        return interPathHelper(path1, path2);
    };
    R.pathIntersectionNumber = function (path1, path2) {
        return interPathHelper(path1, path2, 1);
    };
    function interPathHelper(path1, path2, justCount) {
        path1 = R._path2curve(path1);
        path2 = R._path2curve(path2);
        var x1, y1, x2, y2, x1m, y1m, x2m, y2m, bez1, bez2,
            res = justCount ? 0 : [];
        for (var i = 0, ii = path1.length; i < ii; i++) {
            var pi = path1[i];
            if (pi[0] == "M") {
                x1 = x1m = pi[1];
                y1 = y1m = pi[2];
            } else {
                if (pi[0] == "C") {
                    bez1 = [x1, y1].concat(pi.slice(1));
                    x1 = bez1[6];
                    y1 = bez1[7];
                } else {
                    bez1 = [x1, y1, x1, y1, x1m, y1m, x1m, y1m];
                    x1 = x1m;
                    y1 = y1m;
                }
                for (var j = 0, jj = path2.length; j < jj; j++) {
                    var pj = path2[j];
                    if (pj[0] == "M") {
                        x2 = x2m = pj[1];
                        y2 = y2m = pj[2];
                    } else {
                        if (pj[0] == "C") {
                            bez2 = [x2, y2].concat(pj.slice(1));
                            x2 = bez2[6];
                            y2 = bez2[7];
                        } else {
                            bez2 = [x2, y2, x2, y2, x2m, y2m, x2m, y2m];
                            x2 = x2m;
                            y2 = y2m;
                        }
                        var intr = interHelper(bez1, bez2, justCount);
                        if (justCount) {
                            res += intr;
                        } else {
                            for (var k = 0, kk = intr.length; k < kk; k++) {
                                intr[k].segment1 = i;
                                intr[k].segment2 = j;
                                intr[k].bez1 = bez1;
                                intr[k].bez2 = bez2;
                            }
                            res = res.concat(intr);
                        }
                    }
                }
            }
        }
        return res;
    }
    
    R.isPointInsidePath = function (path, x, y) {
        var bbox = R.pathBBox(path);
        return R.isPointInsideBBox(bbox, x, y) &&
               interPathHelper(path, [["M", x, y], ["H", bbox.x2 + 10]], 1) % 2 == 1;
    };
    R._removedFactory = function (methodname) {
        return function () {
            eve("raphael.log", null, "Rapha\xebl: you are calling to method \u201c" + methodname + "\u201d of removed object", methodname);
        };
    };
    
    var pathDimensions = R.pathBBox = function (path) {
        var pth = paths(path);
        if (pth.bbox) {
            return pth.bbox;
        }
        if (!path) {
            return {x: 0, y: 0, width: 0, height: 0, x2: 0, y2: 0};
        }
        path = path2curve(path);
        var x = 0, 
            y = 0,
            X = [],
            Y = [],
            p;
        for (var i = 0, ii = path.length; i < ii; i++) {
            p = path[i];
            if (p[0] == "M") {
                x = p[1];
                y = p[2];
                X.push(x);
                Y.push(y);
            } else {
                var dim = curveDim(x, y, p[1], p[2], p[3], p[4], p[5], p[6]);
                X = X[concat](dim.min.x, dim.max.x);
                Y = Y[concat](dim.min.y, dim.max.y);
                x = p[5];
                y = p[6];
            }
        }
        var xmin = mmin[apply](0, X),
            ymin = mmin[apply](0, Y),
            xmax = mmax[apply](0, X),
            ymax = mmax[apply](0, Y),
            bb = {
                x: xmin,
                y: ymin,
                x2: xmax,
                y2: ymax,
                width: xmax - xmin,
                height: ymax - ymin
            };
        pth.bbox = clone(bb);
        return bb;
    },
        pathClone = function (pathArray) {
            var res = clone(pathArray);
            res.toString = R._path2string;
            return res;
        },
        pathToRelative = R._pathToRelative = function (pathArray) {
            var pth = paths(pathArray);
            if (pth.rel) {
                return pathClone(pth.rel);
            }
            if (!R.is(pathArray, array) || !R.is(pathArray && pathArray[0], array)) { // rough assumption
                pathArray = R.parsePathString(pathArray);
            }
            var res = [],
                x = 0,
                y = 0,
                mx = 0,
                my = 0,
                start = 0;
            if (pathArray[0][0] == "M") {
                x = pathArray[0][1];
                y = pathArray[0][2];
                mx = x;
                my = y;
                start++;
                res.push(["M", x, y]);
            }
            for (var i = start, ii = pathArray.length; i < ii; i++) {
                var r = res[i] = [],
                    pa = pathArray[i];
                if (pa[0] != lowerCase.call(pa[0])) {
                    r[0] = lowerCase.call(pa[0]);
                    switch (r[0]) {
                        case "a":
                            r[1] = pa[1];
                            r[2] = pa[2];
                            r[3] = pa[3];
                            r[4] = pa[4];
                            r[5] = pa[5];
                            r[6] = +(pa[6] - x).toFixed(3);
                            r[7] = +(pa[7] - y).toFixed(3);
                            break;
                        case "v":
                            r[1] = +(pa[1] - y).toFixed(3);
                            break;
                        case "m":
                            mx = pa[1];
                            my = pa[2];
                        default:
                            for (var j = 1, jj = pa.length; j < jj; j++) {
                                r[j] = +(pa[j] - ((j % 2) ? x : y)).toFixed(3);
                            }
                    }
                } else {
                    r = res[i] = [];
                    if (pa[0] == "m") {
                        mx = pa[1] + x;
                        my = pa[2] + y;
                    }
                    for (var k = 0, kk = pa.length; k < kk; k++) {
                        res[i][k] = pa[k];
                    }
                }
                var len = res[i].length;
                switch (res[i][0]) {
                    case "z":
                        x = mx;
                        y = my;
                        break;
                    case "h":
                        x += +res[i][len - 1];
                        break;
                    case "v":
                        y += +res[i][len - 1];
                        break;
                    default:
                        x += +res[i][len - 2];
                        y += +res[i][len - 1];
                }
            }
            res.toString = R._path2string;
            pth.rel = pathClone(res);
            return res;
        },
        pathToAbsolute = R._pathToAbsolute = function (pathArray) {
            var pth = paths(pathArray);
            if (pth.abs) {
                return pathClone(pth.abs);
            }
            if (!R.is(pathArray, array) || !R.is(pathArray && pathArray[0], array)) { // rough assumption
                pathArray = R.parsePathString(pathArray);
            }
            if (!pathArray || !pathArray.length) {
                return [["M", 0, 0]];
            }
            var res = [],
                x = 0,
                y = 0,
                mx = 0,
                my = 0,
                start = 0;
            if (pathArray[0][0] == "M") {
                x = +pathArray[0][1];
                y = +pathArray[0][2];
                mx = x;
                my = y;
                start++;
                res[0] = ["M", x, y];
            }
            var crz = pathArray.length == 3 && pathArray[0][0] == "M" && pathArray[1][0].toUpperCase() == "R" && pathArray[2][0].toUpperCase() == "Z";
            for (var r, pa, i = start, ii = pathArray.length; i < ii; i++) {
                res.push(r = []);
                pa = pathArray[i];
                if (pa[0] != upperCase.call(pa[0])) {
                    r[0] = upperCase.call(pa[0]);
                    switch (r[0]) {
                        case "A":
                            r[1] = pa[1];
                            r[2] = pa[2];
                            r[3] = pa[3];
                            r[4] = pa[4];
                            r[5] = pa[5];
                            r[6] = +(pa[6] + x);
                            r[7] = +(pa[7] + y);
                            break;
                        case "V":
                            r[1] = +pa[1] + y;
                            break;
                        case "H":
                            r[1] = +pa[1] + x;
                            break;
                        case "R":
                            var dots = [x, y][concat](pa.slice(1));
                            for (var j = 2, jj = dots.length; j < jj; j++) {
                                dots[j] = +dots[j] + x;
                                dots[++j] = +dots[j] + y;
                            }
                            res.pop();
                            res = res[concat](catmullRom2bezier(dots, crz));
                            break;
                        case "M":
                            mx = +pa[1] + x;
                            my = +pa[2] + y;
                        default:
                            for (j = 1, jj = pa.length; j < jj; j++) {
                                r[j] = +pa[j] + ((j % 2) ? x : y);
                            }
                    }
                } else if (pa[0] == "R") {
                    dots = [x, y][concat](pa.slice(1));
                    res.pop();
                    res = res[concat](catmullRom2bezier(dots, crz));
                    r = ["R"][concat](pa.slice(-2));
                } else {
                    for (var k = 0, kk = pa.length; k < kk; k++) {
                        r[k] = pa[k];
                    }
                }
                switch (r[0]) {
                    case "Z":
                        x = mx;
                        y = my;
                        break;
                    case "H":
                        x = r[1];
                        break;
                    case "V":
                        y = r[1];
                        break;
                    case "M":
                        mx = r[r.length - 2];
                        my = r[r.length - 1];
                    default:
                        x = r[r.length - 2];
                        y = r[r.length - 1];
                }
            }
            res.toString = R._path2string;
            pth.abs = pathClone(res);
            return res;
        },
        l2c = function (x1, y1, x2, y2) {
            return [x1, y1, x2, y2, x2, y2];
        },
        q2c = function (x1, y1, ax, ay, x2, y2) {
            var _13 = 1 / 3,
                _23 = 2 / 3;
            return [
                    _13 * x1 + _23 * ax,
                    _13 * y1 + _23 * ay,
                    _13 * x2 + _23 * ax,
                    _13 * y2 + _23 * ay,
                    x2,
                    y2
                ];
        },
        a2c = function (x1, y1, rx, ry, angle, large_arc_flag, sweep_flag, x2, y2, recursive) {
            // for more information of where this math came from visit:
            // http://www.w3.org/TR/SVG11/implnote.html#ArcImplementationNotes
            var _120 = PI * 120 / 180,
                rad = PI / 180 * (+angle || 0),
                res = [],
                xy,
                rotate = cacher(function (x, y, rad) {
                    var X = x * math.cos(rad) - y * math.sin(rad),
                        Y = x * math.sin(rad) + y * math.cos(rad);
                    return {x: X, y: Y};
                });
            if (!recursive) {
                xy = rotate(x1, y1, -rad);
                x1 = xy.x;
                y1 = xy.y;
                xy = rotate(x2, y2, -rad);
                x2 = xy.x;
                y2 = xy.y;
                var cos = math.cos(PI / 180 * angle),
                    sin = math.sin(PI / 180 * angle),
                    x = (x1 - x2) / 2,
                    y = (y1 - y2) / 2;
                var h = (x * x) / (rx * rx) + (y * y) / (ry * ry);
                if (h > 1) {
                    h = math.sqrt(h);
                    rx = h * rx;
                    ry = h * ry;
                }
                var rx2 = rx * rx,
                    ry2 = ry * ry,
                    k = (large_arc_flag == sweep_flag ? -1 : 1) *
                        math.sqrt(abs((rx2 * ry2 - rx2 * y * y - ry2 * x * x) / (rx2 * y * y + ry2 * x * x))),
                    cx = k * rx * y / ry + (x1 + x2) / 2,
                    cy = k * -ry * x / rx + (y1 + y2) / 2,
                    f1 = math.asin(((y1 - cy) / ry).toFixed(9)),
                    f2 = math.asin(((y2 - cy) / ry).toFixed(9));

                f1 = x1 < cx ? PI - f1 : f1;
                f2 = x2 < cx ? PI - f2 : f2;
                f1 < 0 && (f1 = PI * 2 + f1);
                f2 < 0 && (f2 = PI * 2 + f2);
                if (sweep_flag && f1 > f2) {
                    f1 = f1 - PI * 2;
                }
                if (!sweep_flag && f2 > f1) {
                    f2 = f2 - PI * 2;
                }
            } else {
                f1 = recursive[0];
                f2 = recursive[1];
                cx = recursive[2];
                cy = recursive[3];
            }
            var df = f2 - f1;
            if (abs(df) > _120) {
                var f2old = f2,
                    x2old = x2,
                    y2old = y2;
                f2 = f1 + _120 * (sweep_flag && f2 > f1 ? 1 : -1);
                x2 = cx + rx * math.cos(f2);
                y2 = cy + ry * math.sin(f2);
                res = a2c(x2, y2, rx, ry, angle, 0, sweep_flag, x2old, y2old, [f2, f2old, cx, cy]);
            }
            df = f2 - f1;
            var c1 = math.cos(f1),
                s1 = math.sin(f1),
                c2 = math.cos(f2),
                s2 = math.sin(f2),
                t = math.tan(df / 4),
                hx = 4 / 3 * rx * t,
                hy = 4 / 3 * ry * t,
                m1 = [x1, y1],
                m2 = [x1 + hx * s1, y1 - hy * c1],
                m3 = [x2 + hx * s2, y2 - hy * c2],
                m4 = [x2, y2];
            m2[0] = 2 * m1[0] - m2[0];
            m2[1] = 2 * m1[1] - m2[1];
            if (recursive) {
                return [m2, m3, m4][concat](res);
            } else {
                res = [m2, m3, m4][concat](res).join()[split](",");
                var newres = [];
                for (var i = 0, ii = res.length; i < ii; i++) {
                    newres[i] = i % 2 ? rotate(res[i - 1], res[i], rad).y : rotate(res[i], res[i + 1], rad).x;
                }
                return newres;
            }
        },
        findDotAtSegment = function (p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {
            var t1 = 1 - t;
            return {
                x: pow(t1, 3) * p1x + pow(t1, 2) * 3 * t * c1x + t1 * 3 * t * t * c2x + pow(t, 3) * p2x,
                y: pow(t1, 3) * p1y + pow(t1, 2) * 3 * t * c1y + t1 * 3 * t * t * c2y + pow(t, 3) * p2y
            };
        },
        curveDim = cacher(function (p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y) {
            var a = (c2x - 2 * c1x + p1x) - (p2x - 2 * c2x + c1x),
                b = 2 * (c1x - p1x) - 2 * (c2x - c1x),
                c = p1x - c1x,
                t1 = (-b + math.sqrt(b * b - 4 * a * c)) / 2 / a,
                t2 = (-b - math.sqrt(b * b - 4 * a * c)) / 2 / a,
                y = [p1y, p2y],
                x = [p1x, p2x],
                dot;
            abs(t1) > "1e12" && (t1 = .5);
            abs(t2) > "1e12" && (t2 = .5);
            if (t1 > 0 && t1 < 1) {
                dot = findDotAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t1);
                x.push(dot.x);
                y.push(dot.y);
            }
            if (t2 > 0 && t2 < 1) {
                dot = findDotAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t2);
                x.push(dot.x);
                y.push(dot.y);
            }
            a = (c2y - 2 * c1y + p1y) - (p2y - 2 * c2y + c1y);
            b = 2 * (c1y - p1y) - 2 * (c2y - c1y);
            c = p1y - c1y;
            t1 = (-b + math.sqrt(b * b - 4 * a * c)) / 2 / a;
            t2 = (-b - math.sqrt(b * b - 4 * a * c)) / 2 / a;
            abs(t1) > "1e12" && (t1 = .5);
            abs(t2) > "1e12" && (t2 = .5);
            if (t1 > 0 && t1 < 1) {
                dot = findDotAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t1);
                x.push(dot.x);
                y.push(dot.y);
            }
            if (t2 > 0 && t2 < 1) {
                dot = findDotAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t2);
                x.push(dot.x);
                y.push(dot.y);
            }
            return {
                min: {x: mmin[apply](0, x), y: mmin[apply](0, y)},
                max: {x: mmax[apply](0, x), y: mmax[apply](0, y)}
            };
        }),
        path2curve = R._path2curve = cacher(function (path, path2) {
            var pth = !path2 && paths(path);
            if (!path2 && pth.curve) {
                return pathClone(pth.curve);
            }
            var p = pathToAbsolute(path),
                p2 = path2 && pathToAbsolute(path2),
                attrs = {x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null},
                attrs2 = {x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null},
                processPath = function (path, d) {
                    var nx, ny;
                    if (!path) {
                        return ["C", d.x, d.y, d.x, d.y, d.x, d.y];
                    }
                    !(path[0] in {T:1, Q:1}) && (d.qx = d.qy = null);
                    switch (path[0]) {
                        case "M":
                            d.X = path[1];
                            d.Y = path[2];
                            break;
                        case "A":
                            path = ["C"][concat](a2c[apply](0, [d.x, d.y][concat](path.slice(1))));
                            break;
                        case "S":
                            nx = d.x + (d.x - (d.bx || d.x));
                            ny = d.y + (d.y - (d.by || d.y));
                            path = ["C", nx, ny][concat](path.slice(1));
                            break;
                        case "T":
                            d.qx = d.x + (d.x - (d.qx || d.x));
                            d.qy = d.y + (d.y - (d.qy || d.y));
                            path = ["C"][concat](q2c(d.x, d.y, d.qx, d.qy, path[1], path[2]));
                            break;
                        case "Q":
                            d.qx = path[1];
                            d.qy = path[2];
                            path = ["C"][concat](q2c(d.x, d.y, path[1], path[2], path[3], path[4]));
                            break;
                        case "L":
                            path = ["C"][concat](l2c(d.x, d.y, path[1], path[2]));
                            break;
                        case "H":
                            path = ["C"][concat](l2c(d.x, d.y, path[1], d.y));
                            break;
                        case "V":
                            path = ["C"][concat](l2c(d.x, d.y, d.x, path[1]));
                            break;
                        case "Z":
                            path = ["C"][concat](l2c(d.x, d.y, d.X, d.Y));
                            break;
                    }
                    return path;
                },
                fixArc = function (pp, i) {
                    if (pp[i].length > 7) {
                        pp[i].shift();
                        var pi = pp[i];
                        while (pi.length) {
                            pp.splice(i++, 0, ["C"][concat](pi.splice(0, 6)));
                        }
                        pp.splice(i, 1);
                        ii = mmax(p.length, p2 && p2.length || 0);
                    }
                },
                fixM = function (path1, path2, a1, a2, i) {
                    if (path1 && path2 && path1[i][0] == "M" && path2[i][0] != "M") {
                        path2.splice(i, 0, ["M", a2.x, a2.y]);
                        a1.bx = 0;
                        a1.by = 0;
                        a1.x = path1[i][1];
                        a1.y = path1[i][2];
                        ii = mmax(p.length, p2 && p2.length || 0);
                    }
                };
            for (var i = 0, ii = mmax(p.length, p2 && p2.length || 0); i < ii; i++) {
                p[i] = processPath(p[i], attrs);
                fixArc(p, i);
                p2 && (p2[i] = processPath(p2[i], attrs2));
                p2 && fixArc(p2, i);
                fixM(p, p2, attrs, attrs2, i);
                fixM(p2, p, attrs2, attrs, i);
                var seg = p[i],
                    seg2 = p2 && p2[i],
                    seglen = seg.length,
                    seg2len = p2 && seg2.length;
                attrs.x = seg[seglen - 2];
                attrs.y = seg[seglen - 1];
                attrs.bx = toFloat(seg[seglen - 4]) || attrs.x;
                attrs.by = toFloat(seg[seglen - 3]) || attrs.y;
                attrs2.bx = p2 && (toFloat(seg2[seg2len - 4]) || attrs2.x);
                attrs2.by = p2 && (toFloat(seg2[seg2len - 3]) || attrs2.y);
                attrs2.x = p2 && seg2[seg2len - 2];
                attrs2.y = p2 && seg2[seg2len - 1];
            }
            if (!p2) {
                pth.curve = pathClone(p);
            }
            return p2 ? [p, p2] : p;
        }, null, pathClone),
        parseDots = R._parseDots = cacher(function (gradient) {
            var dots = [];
            for (var i = 0, ii = gradient.length; i < ii; i++) {
                var dot = {},
                    par = gradient[i].match(/^([^:]*):?([\d\.]*)/);
                dot.color = R.getRGB(par[1]);
                if (dot.color.error) {
                    return null;
                }
                dot.color = dot.color.hex;
                par[2] && (dot.offset = par[2] + "%");
                dots.push(dot);
            }
            for (i = 1, ii = dots.length - 1; i < ii; i++) {
                if (!dots[i].offset) {
                    var start = toFloat(dots[i - 1].offset || 0),
                        end = 0;
                    for (var j = i + 1; j < ii; j++) {
                        if (dots[j].offset) {
                            end = dots[j].offset;
                            break;
                        }
                    }
                    if (!end) {
                        end = 100;
                        j = ii;
                    }
                    end = toFloat(end);
                    var d = (end - start) / (j - i + 1);
                    for (; i < j; i++) {
                        start += d;
                        dots[i].offset = start + "%";
                    }
                }
            }
            return dots;
        }),
        tear = R._tear = function (el, paper) {
            el == paper.top && (paper.top = el.prev);
            el == paper.bottom && (paper.bottom = el.next);
            el.next && (el.next.prev = el.prev);
            el.prev && (el.prev.next = el.next);
        },
        tofront = R._tofront = function (el, paper) {
            if (paper.top === el) {
                return;
            }
            tear(el, paper);
            el.next = null;
            el.prev = paper.top;
            paper.top.next = el;
            paper.top = el;
        },
        toback = R._toback = function (el, paper) {
            if (paper.bottom === el) {
                return;
            }
            tear(el, paper);
            el.next = paper.bottom;
            el.prev = null;
            paper.bottom.prev = el;
            paper.bottom = el;
        },
        insertafter = R._insertafter = function (el, el2, paper) {
            tear(el, paper);
            el2 == paper.top && (paper.top = el);
            el2.next && (el2.next.prev = el);
            el.next = el2.next;
            el.prev = el2;
            el2.next = el;
        },
        insertbefore = R._insertbefore = function (el, el2, paper) {
            tear(el, paper);
            el2 == paper.bottom && (paper.bottom = el);
            el2.prev && (el2.prev.next = el);
            el.prev = el2.prev;
            el2.prev = el;
            el.next = el2;
        },
        
        toMatrix = R.toMatrix = function (path, transform) {
            var bb = pathDimensions(path),
                el = {
                    _: {
                        transform: E
                    },
                    getBBox: function () {
                        return bb;
                    }
                };
            extractTransform(el, transform);
            return el.matrix;
        },
        
        transformPath = R.transformPath = function (path, transform) {
            return mapPath(path, toMatrix(path, transform));
        },
        extractTransform = R._extractTransform = function (el, tstr) {
            if (tstr == null) {
                return el._.transform;
            }
            tstr = Str(tstr).replace(/\.{3}|\u2026/g, el._.transform || E);
            var tdata = R.parseTransformString(tstr),
                deg = 0,
                dx = 0,
                dy = 0,
                sx = 1,
                sy = 1,
                _ = el._,
                m = new Matrix;
            _.transform = tdata || [];
            if (tdata) {
                for (var i = 0, ii = tdata.length; i < ii; i++) {
                    var t = tdata[i],
                        tlen = t.length,
                        command = Str(t[0]).toLowerCase(),
                        absolute = t[0] != command,
                        inver = absolute ? m.invert() : 0,
                        x1,
                        y1,
                        x2,
                        y2,
                        bb;
                    if (command == "t" && tlen == 3) {
                        if (absolute) {
                            x1 = inver.x(0, 0);
                            y1 = inver.y(0, 0);
                            x2 = inver.x(t[1], t[2]);
                            y2 = inver.y(t[1], t[2]);
                            m.translate(x2 - x1, y2 - y1);
                        } else {
                            m.translate(t[1], t[2]);
                        }
                    } else if (command == "r") {
                        if (tlen == 2) {
                            bb = bb || el.getBBox(1);
                            m.rotate(t[1], bb.x + bb.width / 2, bb.y + bb.height / 2);
                            deg += t[1];
                        } else if (tlen == 4) {
                            if (absolute) {
                                x2 = inver.x(t[2], t[3]);
                                y2 = inver.y(t[2], t[3]);
                                m.rotate(t[1], x2, y2);
                            } else {
                                m.rotate(t[1], t[2], t[3]);
                            }
                            deg += t[1];
                        }
                    } else if (command == "s") {
                        if (tlen == 2 || tlen == 3) {
                            bb = bb || el.getBBox(1);
                            m.scale(t[1], t[tlen - 1], bb.x + bb.width / 2, bb.y + bb.height / 2);
                            sx *= t[1];
                            sy *= t[tlen - 1];
                        } else if (tlen == 5) {
                            if (absolute) {
                                x2 = inver.x(t[3], t[4]);
                                y2 = inver.y(t[3], t[4]);
                                m.scale(t[1], t[2], x2, y2);
                            } else {
                                m.scale(t[1], t[2], t[3], t[4]);
                            }
                            sx *= t[1];
                            sy *= t[2];
                        }
                    } else if (command == "m" && tlen == 7) {
                        m.add(t[1], t[2], t[3], t[4], t[5], t[6]);
                    }
                    _.dirtyT = 1;
                    el.matrix = m;
                }
            }

            
            el.matrix = m;

            _.sx = sx;
            _.sy = sy;
            _.deg = deg;
            _.dx = dx = m.e;
            _.dy = dy = m.f;

            if (sx == 1 && sy == 1 && !deg && _.bbox) {
                _.bbox.x += +dx;
                _.bbox.y += +dy;
            } else {
                _.dirtyT = 1;
            }
        },
        getEmpty = function (item) {
            var l = item[0];
            switch (l.toLowerCase()) {
                case "t": return [l, 0, 0];
                case "m": return [l, 1, 0, 0, 1, 0, 0];
                case "r": if (item.length == 4) {
                    return [l, 0, item[2], item[3]];
                } else {
                    return [l, 0];
                }
                case "s": if (item.length == 5) {
                    return [l, 1, 1, item[3], item[4]];
                } else if (item.length == 3) {
                    return [l, 1, 1];
                } else {
                    return [l, 1];
                }
            }
        },
        equaliseTransform = R._equaliseTransform = function (t1, t2) {
            t2 = Str(t2).replace(/\.{3}|\u2026/g, t1);
            t1 = R.parseTransformString(t1) || [];
            t2 = R.parseTransformString(t2) || [];
            var maxlength = mmax(t1.length, t2.length),
                from = [],
                to = [],
                i = 0, j, jj,
                tt1, tt2;
            for (; i < maxlength; i++) {
                tt1 = t1[i] || getEmpty(t2[i]);
                tt2 = t2[i] || getEmpty(tt1);
                if ((tt1[0] != tt2[0]) ||
                    (tt1[0].toLowerCase() == "r" && (tt1[2] != tt2[2] || tt1[3] != tt2[3])) ||
                    (tt1[0].toLowerCase() == "s" && (tt1[3] != tt2[3] || tt1[4] != tt2[4]))
                    ) {
                    return;
                }
                from[i] = [];
                to[i] = [];
                for (j = 0, jj = mmax(tt1.length, tt2.length); j < jj; j++) {
                    j in tt1 && (from[i][j] = tt1[j]);
                    j in tt2 && (to[i][j] = tt2[j]);
                }
            }
            return {
                from: from,
                to: to
            };
        };
    R._getContainer = function (x, y, w, h) {
        var container;
        container = h == null && !R.is(x, "object") ? g.doc.getElementById(x) : x;
        if (container == null) {
            return;
        }
        if (container.tagName) {
            if (y == null) {
                return {
                    container: container,
                    width: container.style.pixelWidth || container.offsetWidth,
                    height: container.style.pixelHeight || container.offsetHeight
                };
            } else {
                return {
                    container: container,
                    width: y,
                    height: w
                };
            }
        }
        return {
            container: 1,
            x: x,
            y: y,
            width: w,
            height: h
        };
    };
    
    R.pathToRelative = pathToRelative;
    R._engine = {};
    
    R.path2curve = path2curve;
    
    R.matrix = function (a, b, c, d, e, f) {
        return new Matrix(a, b, c, d, e, f);
    };
    function Matrix(a, b, c, d, e, f) {
        if (a != null) {
            this.a = +a;
            this.b = +b;
            this.c = +c;
            this.d = +d;
            this.e = +e;
            this.f = +f;
        } else {
            this.a = 1;
            this.b = 0;
            this.c = 0;
            this.d = 1;
            this.e = 0;
            this.f = 0;
        }
    }
    (function (matrixproto) {
        
        matrixproto.add = function (a, b, c, d, e, f) {
            var out = [[], [], []],
                m = [[this.a, this.c, this.e], [this.b, this.d, this.f], [0, 0, 1]],
                matrix = [[a, c, e], [b, d, f], [0, 0, 1]],
                x, y, z, res;

            if (a && a instanceof Matrix) {
                matrix = [[a.a, a.c, a.e], [a.b, a.d, a.f], [0, 0, 1]];
            }

            for (x = 0; x < 3; x++) {
                for (y = 0; y < 3; y++) {
                    res = 0;
                    for (z = 0; z < 3; z++) {
                        res += m[x][z] * matrix[z][y];
                    }
                    out[x][y] = res;
                }
            }
            this.a = out[0][0];
            this.b = out[1][0];
            this.c = out[0][1];
            this.d = out[1][1];
            this.e = out[0][2];
            this.f = out[1][2];
        };
        
        matrixproto.invert = function () {
            var me = this,
                x = me.a * me.d - me.b * me.c;
            return new Matrix(me.d / x, -me.b / x, -me.c / x, me.a / x, (me.c * me.f - me.d * me.e) / x, (me.b * me.e - me.a * me.f) / x);
        };
        
        matrixproto.clone = function () {
            return new Matrix(this.a, this.b, this.c, this.d, this.e, this.f);
        };
        
        matrixproto.translate = function (x, y) {
            this.add(1, 0, 0, 1, x, y);
        };
        
        matrixproto.scale = function (x, y, cx, cy) {
            y == null && (y = x);
            (cx || cy) && this.add(1, 0, 0, 1, cx, cy);
            this.add(x, 0, 0, y, 0, 0);
            (cx || cy) && this.add(1, 0, 0, 1, -cx, -cy);
        };
        
        matrixproto.rotate = function (a, x, y) {
            a = R.rad(a);
            x = x || 0;
            y = y || 0;
            var cos = +math.cos(a).toFixed(9),
                sin = +math.sin(a).toFixed(9);
            this.add(cos, sin, -sin, cos, x, y);
            this.add(1, 0, 0, 1, -x, -y);
        };
        
        matrixproto.x = function (x, y) {
            return x * this.a + y * this.c + this.e;
        };
        
        matrixproto.y = function (x, y) {
            return x * this.b + y * this.d + this.f;
        };
        matrixproto.get = function (i) {
            return +this[Str.fromCharCode(97 + i)].toFixed(4);
        };
        matrixproto.toString = function () {
            return R.svg ?
                "matrix(" + [this.get(0), this.get(1), this.get(2), this.get(3), this.get(4), this.get(5)].join() + ")" :
                [this.get(0), this.get(2), this.get(1), this.get(3), 0, 0].join();
        };
        matrixproto.toFilter = function () {
            return "progid:DXImageTransform.Microsoft.Matrix(M11=" + this.get(0) +
                ", M12=" + this.get(2) + ", M21=" + this.get(1) + ", M22=" + this.get(3) +
                ", Dx=" + this.get(4) + ", Dy=" + this.get(5) + ", sizingmethod='auto expand')";
        };
        matrixproto.offset = function () {
            return [this.e.toFixed(4), this.f.toFixed(4)];
        };
        function norm(a) {
            return a[0] * a[0] + a[1] * a[1];
        }
        function normalize(a) {
            var mag = math.sqrt(norm(a));
            a[0] && (a[0] /= mag);
            a[1] && (a[1] /= mag);
        }
        
        matrixproto.split = function () {
            var out = {};
            // translation
            out.dx = this.e;
            out.dy = this.f;

            // scale and shear
            var row = [[this.a, this.c], [this.b, this.d]];
            out.scalex = math.sqrt(norm(row[0]));
            normalize(row[0]);

            out.shear = row[0][0] * row[1][0] + row[0][1] * row[1][1];
            row[1] = [row[1][0] - row[0][0] * out.shear, row[1][1] - row[0][1] * out.shear];

            out.scaley = math.sqrt(norm(row[1]));
            normalize(row[1]);
            out.shear /= out.scaley;

            // rotation
            var sin = -row[0][1],
                cos = row[1][1];
            if (cos < 0) {
                out.rotate = R.deg(math.acos(cos));
                if (sin < 0) {
                    out.rotate = 360 - out.rotate;
                }
            } else {
                out.rotate = R.deg(math.asin(sin));
            }

            out.isSimple = !+out.shear.toFixed(9) && (out.scalex.toFixed(9) == out.scaley.toFixed(9) || !out.rotate);
            out.isSuperSimple = !+out.shear.toFixed(9) && out.scalex.toFixed(9) == out.scaley.toFixed(9) && !out.rotate;
            out.noRotation = !+out.shear.toFixed(9) && !out.rotate;
            return out;
        };
        
        matrixproto.toTransformString = function (shorter) {
            var s = shorter || this[split]();
            if (s.isSimple) {
                s.scalex = +s.scalex.toFixed(4);
                s.scaley = +s.scaley.toFixed(4);
                s.rotate = +s.rotate.toFixed(4);
                return  (s.dx || s.dy ? "t" + [s.dx, s.dy] : E) + 
                        (s.scalex != 1 || s.scaley != 1 ? "s" + [s.scalex, s.scaley, 0, 0] : E) +
                        (s.rotate ? "r" + [s.rotate, 0, 0] : E);
            } else {
                return "m" + [this.get(0), this.get(1), this.get(2), this.get(3), this.get(4), this.get(5)];
            }
        };
    })(Matrix.prototype);

    // WebKit rendering bug workaround method
    var version = navigator.userAgent.match(/Version\/(.*?)\s/) || navigator.userAgent.match(/Chrome\/(\d+)/);
    if ((navigator.vendor == "Apple Computer, Inc.") && (version && version[1] < 4 || navigator.platform.slice(0, 2) == "iP") ||
        (navigator.vendor == "Google Inc." && version && version[1] < 8)) {
        
        paperproto.safari = function () {
            var rect = this.rect(-99, -99, this.width + 99, this.height + 99).attr({stroke: "none"});
            setTimeout(function () {rect.remove();});
        };
    } else {
        paperproto.safari = fun;
    }
 
    var preventDefault = function () {
        this.returnValue = false;
    },
    preventTouch = function () {
        return this.originalEvent.preventDefault();
    },
    stopPropagation = function () {
        this.cancelBubble = true;
    },
    stopTouch = function () {
        return this.originalEvent.stopPropagation();
    },
    addEvent = (function () {
        if (g.doc.addEventListener) {
            return function (obj, type, fn, element) {
                var realName = supportsTouch && touchMap[type] ? touchMap[type] : type,
                    f = function (e) {
                        var scrollY = g.doc.documentElement.scrollTop || g.doc.body.scrollTop,
                            scrollX = g.doc.documentElement.scrollLeft || g.doc.body.scrollLeft,
                            x = e.clientX + scrollX,
                            y = e.clientY + scrollY;
                    if (supportsTouch && touchMap[has](type)) {
                        for (var i = 0, ii = e.targetTouches && e.targetTouches.length; i < ii; i++) {
                            if (e.targetTouches[i].target == obj) {
                                var olde = e;
                                e = e.targetTouches[i];
                                e.originalEvent = olde;
                                e.preventDefault = preventTouch;
                                e.stopPropagation = stopTouch;
                                break;
                            }
                        }
                    }
                    return fn.call(element, e, x, y);
                };
                obj.addEventListener(realName, f, false);
                return function () {
                    obj.removeEventListener(realName, f, false);
                    return true;
                };
            };
        } else if (g.doc.attachEvent) {
            return function (obj, type, fn, element) {
                var f = function (e) {
                    e = e || g.win.event;
                    var scrollY = g.doc.documentElement.scrollTop || g.doc.body.scrollTop,
                        scrollX = g.doc.documentElement.scrollLeft || g.doc.body.scrollLeft,
                        x = e.clientX + scrollX,
                        y = e.clientY + scrollY;
                    e.preventDefault = e.preventDefault || preventDefault;
                    e.stopPropagation = e.stopPropagation || stopPropagation;
                    return fn.call(element, e, x, y);
                };
                obj.attachEvent("on" + type, f);
                var detacher = function () {
                    obj.detachEvent("on" + type, f);
                    return true;
                };
                return detacher;
            };
        }
    })(),
    drag = [],
    dragMove = function (e) {
        var x = e.clientX,
            y = e.clientY,
            scrollY = g.doc.documentElement.scrollTop || g.doc.body.scrollTop,
            scrollX = g.doc.documentElement.scrollLeft || g.doc.body.scrollLeft,
            dragi,
            j = drag.length;
        while (j--) {
            dragi = drag[j];
            if (supportsTouch) {
                var i = e.touches.length,
                    touch;
                while (i--) {
                    touch = e.touches[i];
                    if (touch.identifier == dragi.el._drag.id) {
                        x = touch.clientX;
                        y = touch.clientY;
                        (e.originalEvent ? e.originalEvent : e).preventDefault();
                        break;
                    }
                }
            } else {
                e.preventDefault();
            }
            var node = dragi.el.node,
                o,
                next = node.nextSibling,
                parent = node.parentNode,
                display = node.style.display;
            g.win.opera && parent.removeChild(node);
            node.style.display = "none";
            o = dragi.el.paper.getElementByPoint(x, y);
            node.style.display = display;
            g.win.opera && (next ? parent.insertBefore(node, next) : parent.appendChild(node));
            o && eve("raphael.drag.over." + dragi.el.id, dragi.el, o);
            x += scrollX;
            y += scrollY;
            eve("raphael.drag.move." + dragi.el.id, dragi.move_scope || dragi.el, x - dragi.el._drag.x, y - dragi.el._drag.y, x, y, e);
        }
    },
    dragUp = function (e) {
        R.unmousemove(dragMove).unmouseup(dragUp);
        var i = drag.length,
            dragi;
        while (i--) {
            dragi = drag[i];
            dragi.el._drag = {};
            eve("raphael.drag.end." + dragi.el.id, dragi.end_scope || dragi.start_scope || dragi.move_scope || dragi.el, e);
        }
        drag = [];
    },
    
    elproto = R.el = {};
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    for (var i = events.length; i--;) {
        (function (eventName) {
            R[eventName] = elproto[eventName] = function (fn, scope) {
                if (R.is(fn, "function")) {
                    this.events = this.events || [];
                    this.events.push({name: eventName, f: fn, unbind: addEvent(this.shape || this.node || g.doc, eventName, fn, scope || this)});
                }
                return this;
            };
            R["un" + eventName] = elproto["un" + eventName] = function (fn) {
                var events = this.events || [],
                    l = events.length;
                while (l--) if (events[l].name == eventName && events[l].f == fn) {
                    events[l].unbind();
                    events.splice(l, 1);
                    !events.length && delete this.events;
                    return this;
                }
                return this;
            };
        })(events[i]);
    }
    
    
    elproto.data = function (key, value) {
        var data = eldata[this.id] = eldata[this.id] || {};
        if (arguments.length == 1) {
            if (R.is(key, "object")) {
                for (var i in key) if (key[has](i)) {
                    this.data(i, key[i]);
                }
                return this;
            }
            eve("raphael.data.get." + this.id, this, data[key], key);
            return data[key];
        }
        data[key] = value;
        eve("raphael.data.set." + this.id, this, value, key);
        return this;
    };
    
    elproto.removeData = function (key) {
        if (key == null) {
            eldata[this.id] = {};
        } else {
            eldata[this.id] && delete eldata[this.id][key];
        }
        return this;
    };
    
    elproto.hover = function (f_in, f_out, scope_in, scope_out) {
        return this.mouseover(f_in, scope_in).mouseout(f_out, scope_out || scope_in);
    };
    
    elproto.unhover = function (f_in, f_out) {
        return this.unmouseover(f_in).unmouseout(f_out);
    };
    var draggable = [];
    
    elproto.drag = function (onmove, onstart, onend, move_scope, start_scope, end_scope) {
        function start(e) {
            (e.originalEvent || e).preventDefault();
            var scrollY = g.doc.documentElement.scrollTop || g.doc.body.scrollTop,
                scrollX = g.doc.documentElement.scrollLeft || g.doc.body.scrollLeft;
            this._drag.x = e.clientX + scrollX;
            this._drag.y = e.clientY + scrollY;
            this._drag.id = e.identifier;
            !drag.length && R.mousemove(dragMove).mouseup(dragUp);
            drag.push({el: this, move_scope: move_scope, start_scope: start_scope, end_scope: end_scope});
            onstart && eve.on("raphael.drag.start." + this.id, onstart);
            onmove && eve.on("raphael.drag.move." + this.id, onmove);
            onend && eve.on("raphael.drag.end." + this.id, onend);
            eve("raphael.drag.start." + this.id, start_scope || move_scope || this, e.clientX + scrollX, e.clientY + scrollY, e);
        }
        this._drag = {};
        draggable.push({el: this, start: start});
        this.mousedown(start);
        return this;
    };
    
    elproto.onDragOver = function (f) {
        f ? eve.on("raphael.drag.over." + this.id, f) : eve.unbind("raphael.drag.over." + this.id);
    };
    
    elproto.undrag = function () {
        var i = draggable.length;
        while (i--) if (draggable[i].el == this) {
            this.unmousedown(draggable[i].start);
            draggable.splice(i, 1);
            eve.unbind("raphael.drag.*." + this.id);
        }
        !draggable.length && R.unmousemove(dragMove).unmouseup(dragUp);
    };
    
    paperproto.circle = function (x, y, r) {
        var out = R._engine.circle(this, x || 0, y || 0, r || 0);
        this.__set__ && this.__set__.push(out);
        return out;
    };
    
    paperproto.rect = function (x, y, w, h, r) {
        var out = R._engine.rect(this, x || 0, y || 0, w || 0, h || 0, r || 0);
        this.__set__ && this.__set__.push(out);
        return out;
    };
    
    paperproto.ellipse = function (x, y, rx, ry) {
        var out = R._engine.ellipse(this, x || 0, y || 0, rx || 0, ry || 0);
        this.__set__ && this.__set__.push(out);
        return out;
    };
    
    paperproto.path = function (pathString) {
        pathString && !R.is(pathString, string) && !R.is(pathString[0], array) && (pathString += E);
        var out = R._engine.path(R.format[apply](R, arguments), this);
        this.__set__ && this.__set__.push(out);
        return out;
    };
    
    paperproto.image = function (src, x, y, w, h) {
        var out = R._engine.image(this, src || "about:blank", x || 0, y || 0, w || 0, h || 0);
        this.__set__ && this.__set__.push(out);
        return out;
    };
    
    paperproto.text = function (x, y, text) {
        var out = R._engine.text(this, x || 0, y || 0, Str(text));
        this.__set__ && this.__set__.push(out);
        return out;
    };
    
    paperproto.set = function (itemsArray) {
        !R.is(itemsArray, "array") && (itemsArray = Array.prototype.splice.call(arguments, 0, arguments.length));
        var out = new Set(itemsArray);
        this.__set__ && this.__set__.push(out);
        return out;
    };
    
    paperproto.setStart = function (set) {
        this.__set__ = set || this.set();
    };
    
    paperproto.setFinish = function (set) {
        var out = this.__set__;
        delete this.__set__;
        return out;
    };
    
    paperproto.setSize = function (width, height) {
        return R._engine.setSize.call(this, width, height);
    };
    
    paperproto.setViewBox = function (x, y, w, h, fit) {
        return R._engine.setViewBox.call(this, x, y, w, h, fit);
    };
    
    
    paperproto.top = paperproto.bottom = null;
    
    paperproto.raphael = R;
    var getOffset = function (elem) {
        var box = elem.getBoundingClientRect(),
            doc = elem.ownerDocument,
            body = doc.body,
            docElem = doc.documentElement,
            clientTop = docElem.clientTop || body.clientTop || 0, clientLeft = docElem.clientLeft || body.clientLeft || 0,
            top  = box.top  + (g.win.pageYOffset || docElem.scrollTop || body.scrollTop ) - clientTop,
            left = box.left + (g.win.pageXOffset || docElem.scrollLeft || body.scrollLeft) - clientLeft;
        return {
            y: top,
            x: left
        };
    };
    
    paperproto.getElementByPoint = function (x, y) {
        var paper = this,
            svg = paper.canvas,
            target = g.doc.elementFromPoint(x, y);
        if (g.win.opera && target.tagName == "svg") {
            var so = getOffset(svg),
                sr = svg.createSVGRect();
            sr.x = x - so.x;
            sr.y = y - so.y;
            sr.width = sr.height = 1;
            var hits = svg.getIntersectionList(sr, null);
            if (hits.length) {
                target = hits[hits.length - 1];
            }
        }
        if (!target) {
            return null;
        }
        while (target.parentNode && target != svg.parentNode && !target.raphael) {
            target = target.parentNode;
        }
        target == paper.canvas.parentNode && (target = svg);
        target = target && target.raphael ? paper.getById(target.raphaelid) : null;
        return target;
    };
    
    paperproto.getById = function (id) {
        var bot = this.bottom;
        while (bot) {
            if (bot.id == id) {
                return bot;
            }
            bot = bot.next;
        }
        return null;
    };
    
    paperproto.forEach = function (callback, thisArg) {
        var bot = this.bottom;
        while (bot) {
            if (callback.call(thisArg, bot) === false) {
                return this;
            }
            bot = bot.next;
        }
        return this;
    };
    
    paperproto.getElementsByPoint = function (x, y) {
        var set = this.set();
        this.forEach(function (el) {
            if (el.isPointInside(x, y)) {
                set.push(el);
            }
        });
        return set;
    };
    function x_y() {
        return this.x + S + this.y;
    }
    function x_y_w_h() {
        return this.x + S + this.y + S + this.width + " \xd7 " + this.height;
    }
    
    elproto.isPointInside = function (x, y) {
        var rp = this.realPath = this.realPath || getPath[this.type](this);
        return R.isPointInsidePath(rp, x, y);
    };
    
    elproto.getBBox = function (isWithoutTransform) {
        if (this.removed) {
            return {};
        }
        var _ = this._;
        if (isWithoutTransform) {
            if (_.dirty || !_.bboxwt) {
                this.realPath = getPath[this.type](this);
                _.bboxwt = pathDimensions(this.realPath);
                _.bboxwt.toString = x_y_w_h;
                _.dirty = 0;
            }
            return _.bboxwt;
        }
        if (_.dirty || _.dirtyT || !_.bbox) {
            if (_.dirty || !this.realPath) {
                _.bboxwt = 0;
                this.realPath = getPath[this.type](this);
            }
            _.bbox = pathDimensions(mapPath(this.realPath, this.matrix));
            _.bbox.toString = x_y_w_h;
            _.dirty = _.dirtyT = 0;
        }
        return _.bbox;
    };
    
    elproto.clone = function () {
        if (this.removed) {
            return null;
        }
        var out = this.paper[this.type]().attr(this.attr());
        this.__set__ && this.__set__.push(out);
        return out;
    };
    
    elproto.glow = function (glow) {
        if (this.type == "text") {
            return null;
        }
        glow = glow || {};
        var s = {
            width: (glow.width || 10) + (+this.attr("stroke-width") || 1),
            fill: glow.fill || false,
            opacity: glow.opacity || .5,
            offsetx: glow.offsetx || 0,
            offsety: glow.offsety || 0,
            color: glow.color || "#000"
        },
            c = s.width / 2,
            r = this.paper,
            out = r.set(),
            path = this.realPath || getPath[this.type](this);
        path = this.matrix ? mapPath(path, this.matrix) : path;
        for (var i = 1; i < c + 1; i++) {
            out.push(r.path(path).attr({
                stroke: s.color,
                fill: s.fill ? s.color : "none",
                "stroke-linejoin": "round",
                "stroke-linecap": "round",
                "stroke-width": +(s.width / c * i).toFixed(3),
                opacity: +(s.opacity / c).toFixed(3)
            }));
        }
        return out.insertBefore(this).translate(s.offsetx, s.offsety);
    };
    var curveslengths = {},
    getPointAtSegmentLength = function (p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, length) {
        if (length == null) {
            return bezlen(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y);
        } else {
            return R.findDotsAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, getTatLen(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, length));
        }
    },
    getLengthFactory = function (istotal, subpath) {
        return function (path, length, onlystart) {
            path = path2curve(path);
            var x, y, p, l, sp = "", subpaths = {}, point,
                len = 0;
            for (var i = 0, ii = path.length; i < ii; i++) {
                p = path[i];
                if (p[0] == "M") {
                    x = +p[1];
                    y = +p[2];
                } else {
                    l = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6]);
                    if (len + l > length) {
                        if (subpath && !subpaths.start) {
                            point = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6], length - len);
                            sp += ["C" + point.start.x, point.start.y, point.m.x, point.m.y, point.x, point.y];
                            if (onlystart) {return sp;}
                            subpaths.start = sp;
                            sp = ["M" + point.x, point.y + "C" + point.n.x, point.n.y, point.end.x, point.end.y, p[5], p[6]].join();
                            len += l;
                            x = +p[5];
                            y = +p[6];
                            continue;
                        }
                        if (!istotal && !subpath) {
                            point = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6], length - len);
                            return {x: point.x, y: point.y, alpha: point.alpha};
                        }
                    }
                    len += l;
                    x = +p[5];
                    y = +p[6];
                }
                sp += p.shift() + p;
            }
            subpaths.end = sp;
            point = istotal ? len : subpath ? subpaths : R.findDotsAtSegment(x, y, p[0], p[1], p[2], p[3], p[4], p[5], 1);
            point.alpha && (point = {x: point.x, y: point.y, alpha: point.alpha});
            return point;
        };
    };
    var getTotalLength = getLengthFactory(1),
        getPointAtLength = getLengthFactory(),
        getSubpathsAtLength = getLengthFactory(0, 1);
    
    R.getTotalLength = getTotalLength;
    
    R.getPointAtLength = getPointAtLength;
    
    R.getSubpath = function (path, from, to) {
        if (this.getTotalLength(path) - to < 1e-6) {
            return getSubpathsAtLength(path, from).end;
        }
        var a = getSubpathsAtLength(path, to, 1);
        return from ? getSubpathsAtLength(a, from).end : a;
    };
    
    elproto.getTotalLength = function () {
        if (this.type != "path") {return;}
        if (this.node.getTotalLength) {
            return this.node.getTotalLength();
        }
        return getTotalLength(this.attrs.path);
    };
    
    elproto.getPointAtLength = function (length) {
        if (this.type != "path") {return;}
        return getPointAtLength(this.attrs.path, length);
    };
    
    elproto.getSubpath = function (from, to) {
        if (this.type != "path") {return;}
        return R.getSubpath(this.attrs.path, from, to);
    };
    
    var ef = R.easing_formulas = {
        linear: function (n) {
            return n;
        },
        "<": function (n) {
            return pow(n, 1.7);
        },
        ">": function (n) {
            return pow(n, .48);
        },
        "<>": function (n) {
            var q = .48 - n / 1.04,
                Q = math.sqrt(.1734 + q * q),
                x = Q - q,
                X = pow(abs(x), 1 / 3) * (x < 0 ? -1 : 1),
                y = -Q - q,
                Y = pow(abs(y), 1 / 3) * (y < 0 ? -1 : 1),
                t = X + Y + .5;
            return (1 - t) * 3 * t * t + t * t * t;
        },
        backIn: function (n) {
            var s = 1.70158;
            return n * n * ((s + 1) * n - s);
        },
        backOut: function (n) {
            n = n - 1;
            var s = 1.70158;
            return n * n * ((s + 1) * n + s) + 1;
        },
        elastic: function (n) {
            if (n == !!n) {
                return n;
            }
            return pow(2, -10 * n) * math.sin((n - .075) * (2 * PI) / .3) + 1;
        },
        bounce: function (n) {
            var s = 7.5625,
                p = 2.75,
                l;
            if (n < (1 / p)) {
                l = s * n * n;
            } else {
                if (n < (2 / p)) {
                    n -= (1.5 / p);
                    l = s * n * n + .75;
                } else {
                    if (n < (2.5 / p)) {
                        n -= (2.25 / p);
                        l = s * n * n + .9375;
                    } else {
                        n -= (2.625 / p);
                        l = s * n * n + .984375;
                    }
                }
            }
            return l;
        }
    };
    ef.easeIn = ef["ease-in"] = ef["<"];
    ef.easeOut = ef["ease-out"] = ef[">"];
    ef.easeInOut = ef["ease-in-out"] = ef["<>"];
    ef["back-in"] = ef.backIn;
    ef["back-out"] = ef.backOut;

    var animationElements = [],
        requestAnimFrame = window.requestAnimationFrame       ||
                           window.webkitRequestAnimationFrame ||
                           window.mozRequestAnimationFrame    ||
                           window.oRequestAnimationFrame      ||
                           window.msRequestAnimationFrame     ||
                           function (callback) {
                               setTimeout(callback, 16);
                           },
        animation = function () {
            var Now = +new Date,
                l = 0;
            for (; l < animationElements.length; l++) {
                var e = animationElements[l];
                if (e.el.removed || e.paused) {
                    continue;
                }
                var time = Now - e.start,
                    ms = e.ms,
                    easing = e.easing,
                    from = e.from,
                    diff = e.diff,
                    to = e.to,
                    t = e.t,
                    that = e.el,
                    set = {},
                    now,
                    init = {},
                    key;
                if (e.initstatus) {
                    time = (e.initstatus * e.anim.top - e.prev) / (e.percent - e.prev) * ms;
                    e.status = e.initstatus;
                    delete e.initstatus;
                    e.stop && animationElements.splice(l--, 1);
                } else {
                    e.status = (e.prev + (e.percent - e.prev) * (time / ms)) / e.anim.top;
                }
                if (time < 0) {
                    continue;
                }
                if (time < ms) {
                    var pos = easing(time / ms);
                    for (var attr in from) if (from[has](attr)) {
                        switch (availableAnimAttrs[attr]) {
                            case nu:
                                now = +from[attr] + pos * ms * diff[attr];
                                break;
                            case "colour":
                                now = "rgb(" + [
                                    upto255(round(from[attr].r + pos * ms * diff[attr].r)),
                                    upto255(round(from[attr].g + pos * ms * diff[attr].g)),
                                    upto255(round(from[attr].b + pos * ms * diff[attr].b))
                                ].join(",") + ")";
                                break;
                            case "path":
                                now = [];
                                for (var i = 0, ii = from[attr].length; i < ii; i++) {
                                    now[i] = [from[attr][i][0]];
                                    for (var j = 1, jj = from[attr][i].length; j < jj; j++) {
                                        now[i][j] = +from[attr][i][j] + pos * ms * diff[attr][i][j];
                                    }
                                    now[i] = now[i].join(S);
                                }
                                now = now.join(S);
                                break;
                            case "transform":
                                if (diff[attr].real) {
                                    now = [];
                                    for (i = 0, ii = from[attr].length; i < ii; i++) {
                                        now[i] = [from[attr][i][0]];
                                        for (j = 1, jj = from[attr][i].length; j < jj; j++) {
                                            now[i][j] = from[attr][i][j] + pos * ms * diff[attr][i][j];
                                        }
                                    }
                                } else {
                                    var get = function (i) {
                                        return +from[attr][i] + pos * ms * diff[attr][i];
                                    };
                                    // now = [["r", get(2), 0, 0], ["t", get(3), get(4)], ["s", get(0), get(1), 0, 0]];
                                    now = [["m", get(0), get(1), get(2), get(3), get(4), get(5)]];
                                }
                                break;
                            case "csv":
                                if (attr == "clip-rect") {
                                    now = [];
                                    i = 4;
                                    while (i--) {
                                        now[i] = +from[attr][i] + pos * ms * diff[attr][i];
                                    }
                                }
                                break;
                            default:
                                var from2 = [][concat](from[attr]);
                                now = [];
                                i = that.paper.customAttributes[attr].length;
                                while (i--) {
                                    now[i] = +from2[i] + pos * ms * diff[attr][i];
                                }
                                break;
                        }
                        set[attr] = now;
                    }
                    that.attr(set);
                    (function (id, that, anim) {
                        setTimeout(function () {
                            eve("raphael.anim.frame." + id, that, anim);
                        });
                    })(that.id, that, e.anim);
                } else {
                    (function(f, el, a) {
                        setTimeout(function() {
                            eve("raphael.anim.frame." + el.id, el, a);
                            eve("raphael.anim.finish." + el.id, el, a);
                            R.is(f, "function") && f.call(el);
                        });
                    })(e.callback, that, e.anim);
                    that.attr(to);
                    animationElements.splice(l--, 1);
                    if (e.repeat > 1 && !e.next) {
                        for (key in to) if (to[has](key)) {
                            init[key] = e.totalOrigin[key];
                        }
                        e.el.attr(init);
                        runAnimation(e.anim, e.el, e.anim.percents[0], null, e.totalOrigin, e.repeat - 1);
                    }
                    if (e.next && !e.stop) {
                        runAnimation(e.anim, e.el, e.next, null, e.totalOrigin, e.repeat);
                    }
                }
            }
            R.svg && that && that.paper && that.paper.safari();
            animationElements.length && requestAnimFrame(animation);
        },
        upto255 = function (color) {
            return color > 255 ? 255 : color < 0 ? 0 : color;
        };
    
    elproto.animateWith = function (el, anim, params, ms, easing, callback) {
        var element = this;
        if (element.removed) {
            callback && callback.call(element);
            return element;
        }
        var a = params instanceof Animation ? params : R.animation(params, ms, easing, callback),
            x, y;
        runAnimation(a, element, a.percents[0], null, element.attr());
        for (var i = 0, ii = animationElements.length; i < ii; i++) {
            if (animationElements[i].anim == anim && animationElements[i].el == el) {
                animationElements[ii - 1].start = animationElements[i].start;
                break;
            }
        }
        return element;
        // 
        // 
        // var a = params ? R.animation(params, ms, easing, callback) : anim,
        //     status = element.status(anim);
        // return this.animate(a).status(a, status * anim.ms / a.ms);
    };
    function CubicBezierAtTime(t, p1x, p1y, p2x, p2y, duration) {
        var cx = 3 * p1x,
            bx = 3 * (p2x - p1x) - cx,
            ax = 1 - cx - bx,
            cy = 3 * p1y,
            by = 3 * (p2y - p1y) - cy,
            ay = 1 - cy - by;
        function sampleCurveX(t) {
            return ((ax * t + bx) * t + cx) * t;
        }
        function solve(x, epsilon) {
            var t = solveCurveX(x, epsilon);
            return ((ay * t + by) * t + cy) * t;
        }
        function solveCurveX(x, epsilon) {
            var t0, t1, t2, x2, d2, i;
            for(t2 = x, i = 0; i < 8; i++) {
                x2 = sampleCurveX(t2) - x;
                if (abs(x2) < epsilon) {
                    return t2;
                }
                d2 = (3 * ax * t2 + 2 * bx) * t2 + cx;
                if (abs(d2) < 1e-6) {
                    break;
                }
                t2 = t2 - x2 / d2;
            }
            t0 = 0;
            t1 = 1;
            t2 = x;
            if (t2 < t0) {
                return t0;
            }
            if (t2 > t1) {
                return t1;
            }
            while (t0 < t1) {
                x2 = sampleCurveX(t2);
                if (abs(x2 - x) < epsilon) {
                    return t2;
                }
                if (x > x2) {
                    t0 = t2;
                } else {
                    t1 = t2;
                }
                t2 = (t1 - t0) / 2 + t0;
            }
            return t2;
        }
        return solve(t, 1 / (200 * duration));
    }
    elproto.onAnimation = function (f) {
        f ? eve.on("raphael.anim.frame." + this.id, f) : eve.unbind("raphael.anim.frame." + this.id);
        return this;
    };
    function Animation(anim, ms) {
        var percents = [],
            newAnim = {};
        this.ms = ms;
        this.times = 1;
        if (anim) {
            for (var attr in anim) if (anim[has](attr)) {
                newAnim[toFloat(attr)] = anim[attr];
                percents.push(toFloat(attr));
            }
            percents.sort(sortByNumber);
        }
        this.anim = newAnim;
        this.top = percents[percents.length - 1];
        this.percents = percents;
    }
    
    Animation.prototype.delay = function (delay) {
        var a = new Animation(this.anim, this.ms);
        a.times = this.times;
        a.del = +delay || 0;
        return a;
    };
    
    Animation.prototype.repeat = function (times) { 
        var a = new Animation(this.anim, this.ms);
        a.del = this.del;
        a.times = math.floor(mmax(times, 0)) || 1;
        return a;
    };
    function runAnimation(anim, element, percent, status, totalOrigin, times) {
        percent = toFloat(percent);
        var params,
            isInAnim,
            isInAnimSet,
            percents = [],
            next,
            prev,
            timestamp,
            ms = anim.ms,
            from = {},
            to = {},
            diff = {};
        if (status) {
            for (i = 0, ii = animationElements.length; i < ii; i++) {
                var e = animationElements[i];
                if (e.el.id == element.id && e.anim == anim) {
                    if (e.percent != percent) {
                        animationElements.splice(i, 1);
                        isInAnimSet = 1;
                    } else {
                        isInAnim = e;
                    }
                    element.attr(e.totalOrigin);
                    break;
                }
            }
        } else {
            status = +to; // NaN
        }
        for (var i = 0, ii = anim.percents.length; i < ii; i++) {
            if (anim.percents[i] == percent || anim.percents[i] > status * anim.top) {
                percent = anim.percents[i];
                prev = anim.percents[i - 1] || 0;
                ms = ms / anim.top * (percent - prev);
                next = anim.percents[i + 1];
                params = anim.anim[percent];
                break;
            } else if (status) {
                element.attr(anim.anim[anim.percents[i]]);
            }
        }
        if (!params) {
            return;
        }
        if (!isInAnim) {
            for (var attr in params) if (params[has](attr)) {
                if (availableAnimAttrs[has](attr) || element.paper.customAttributes[has](attr)) {
                    from[attr] = element.attr(attr);
                    (from[attr] == null) && (from[attr] = availableAttrs[attr]);
                    to[attr] = params[attr];
                    switch (availableAnimAttrs[attr]) {
                        case nu:
                            diff[attr] = (to[attr] - from[attr]) / ms;
                            break;
                        case "colour":
                            from[attr] = R.getRGB(from[attr]);
                            var toColour = R.getRGB(to[attr]);
                            diff[attr] = {
                                r: (toColour.r - from[attr].r) / ms,
                                g: (toColour.g - from[attr].g) / ms,
                                b: (toColour.b - from[attr].b) / ms
                            };
                            break;
                        case "path":
                            var pathes = path2curve(from[attr], to[attr]),
                                toPath = pathes[1];
                            from[attr] = pathes[0];
                            diff[attr] = [];
                            for (i = 0, ii = from[attr].length; i < ii; i++) {
                                diff[attr][i] = [0];
                                for (var j = 1, jj = from[attr][i].length; j < jj; j++) {
                                    diff[attr][i][j] = (toPath[i][j] - from[attr][i][j]) / ms;
                                }
                            }
                            break;
                        case "transform":
                            var _ = element._,
                                eq = equaliseTransform(_[attr], to[attr]);
                            if (eq) {
                                from[attr] = eq.from;
                                to[attr] = eq.to;
                                diff[attr] = [];
                                diff[attr].real = true;
                                for (i = 0, ii = from[attr].length; i < ii; i++) {
                                    diff[attr][i] = [from[attr][i][0]];
                                    for (j = 1, jj = from[attr][i].length; j < jj; j++) {
                                        diff[attr][i][j] = (to[attr][i][j] - from[attr][i][j]) / ms;
                                    }
                                }
                            } else {
                                var m = (element.matrix || new Matrix),
                                    to2 = {
                                        _: {transform: _.transform},
                                        getBBox: function () {
                                            return element.getBBox(1);
                                        }
                                    };
                                from[attr] = [
                                    m.a,
                                    m.b,
                                    m.c,
                                    m.d,
                                    m.e,
                                    m.f
                                ];
                                extractTransform(to2, to[attr]);
                                to[attr] = to2._.transform;
                                diff[attr] = [
                                    (to2.matrix.a - m.a) / ms,
                                    (to2.matrix.b - m.b) / ms,
                                    (to2.matrix.c - m.c) / ms,
                                    (to2.matrix.d - m.d) / ms,
                                    (to2.matrix.e - m.e) / ms,
                                    (to2.matrix.f - m.f) / ms
                                ];
                                // from[attr] = [_.sx, _.sy, _.deg, _.dx, _.dy];
                                // var to2 = {_:{}, getBBox: function () { return element.getBBox(); }};
                                // extractTransform(to2, to[attr]);
                                // diff[attr] = [
                                //     (to2._.sx - _.sx) / ms,
                                //     (to2._.sy - _.sy) / ms,
                                //     (to2._.deg - _.deg) / ms,
                                //     (to2._.dx - _.dx) / ms,
                                //     (to2._.dy - _.dy) / ms
                                // ];
                            }
                            break;
                        case "csv":
                            var values = Str(params[attr])[split](separator),
                                from2 = Str(from[attr])[split](separator);
                            if (attr == "clip-rect") {
                                from[attr] = from2;
                                diff[attr] = [];
                                i = from2.length;
                                while (i--) {
                                    diff[attr][i] = (values[i] - from[attr][i]) / ms;
                                }
                            }
                            to[attr] = values;
                            break;
                        default:
                            values = [][concat](params[attr]);
                            from2 = [][concat](from[attr]);
                            diff[attr] = [];
                            i = element.paper.customAttributes[attr].length;
                            while (i--) {
                                diff[attr][i] = ((values[i] || 0) - (from2[i] || 0)) / ms;
                            }
                            break;
                    }
                }
            }
            var easing = params.easing,
                easyeasy = R.easing_formulas[easing];
            if (!easyeasy) {
                easyeasy = Str(easing).match(bezierrg);
                if (easyeasy && easyeasy.length == 5) {
                    var curve = easyeasy;
                    easyeasy = function (t) {
                        return CubicBezierAtTime(t, +curve[1], +curve[2], +curve[3], +curve[4], ms);
                    };
                } else {
                    easyeasy = pipe;
                }
            }
            timestamp = params.start || anim.start || +new Date;
            e = {
                anim: anim,
                percent: percent,
                timestamp: timestamp,
                start: timestamp + (anim.del || 0),
                status: 0,
                initstatus: status || 0,
                stop: false,
                ms: ms,
                easing: easyeasy,
                from: from,
                diff: diff,
                to: to,
                el: element,
                callback: params.callback,
                prev: prev,
                next: next,
                repeat: times || anim.times,
                origin: element.attr(),
                totalOrigin: totalOrigin
            };
            animationElements.push(e);
            if (status && !isInAnim && !isInAnimSet) {
                e.stop = true;
                e.start = new Date - ms * status;
                if (animationElements.length == 1) {
                    return animation();
                }
            }
            if (isInAnimSet) {
                e.start = new Date - e.ms * status;
            }
            animationElements.length == 1 && requestAnimFrame(animation);
        } else {
            isInAnim.initstatus = status;
            isInAnim.start = new Date - isInAnim.ms * status;
        }
        eve("raphael.anim.start." + element.id, element, anim);
    }
    
    R.animation = function (params, ms, easing, callback) {
        if (params instanceof Animation) {
            return params;
        }
        if (R.is(easing, "function") || !easing) {
            callback = callback || easing || null;
            easing = null;
        }
        params = Object(params);
        ms = +ms || 0;
        var p = {},
            json,
            attr;
        for (attr in params) if (params[has](attr) && toFloat(attr) != attr && toFloat(attr) + "%" != attr) {
            json = true;
            p[attr] = params[attr];
        }
        if (!json) {
            return new Animation(params, ms);
        } else {
            easing && (p.easing = easing);
            callback && (p.callback = callback);
            return new Animation({100: p}, ms);
        }
    };
    
    elproto.animate = function (params, ms, easing, callback) {
        var element = this;
        if (element.removed) {
            callback && callback.call(element);
            return element;
        }
        var anim = params instanceof Animation ? params : R.animation(params, ms, easing, callback);
        runAnimation(anim, element, anim.percents[0], null, element.attr());
        return element;
    };
    
    elproto.setTime = function (anim, value) {
        if (anim && value != null) {
            this.status(anim, mmin(value, anim.ms) / anim.ms);
        }
        return this;
    };
    
    elproto.status = function (anim, value) {
        var out = [],
            i = 0,
            len,
            e;
        if (value != null) {
            runAnimation(anim, this, -1, mmin(value, 1));
            return this;
        } else {
            len = animationElements.length;
            for (; i < len; i++) {
                e = animationElements[i];
                if (e.el.id == this.id && (!anim || e.anim == anim)) {
                    if (anim) {
                        return e.status;
                    }
                    out.push({
                        anim: e.anim,
                        status: e.status
                    });
                }
            }
            if (anim) {
                return 0;
            }
            return out;
        }
    };
    
    elproto.pause = function (anim) {
        for (var i = 0; i < animationElements.length; i++) if (animationElements[i].el.id == this.id && (!anim || animationElements[i].anim == anim)) {
            if (eve("raphael.anim.pause." + this.id, this, animationElements[i].anim) !== false) {
                animationElements[i].paused = true;
            }
        }
        return this;
    };
    
    elproto.resume = function (anim) {
        for (var i = 0; i < animationElements.length; i++) if (animationElements[i].el.id == this.id && (!anim || animationElements[i].anim == anim)) {
            var e = animationElements[i];
            if (eve("raphael.anim.resume." + this.id, this, e.anim) !== false) {
                delete e.paused;
                this.status(e.anim, e.status);
            }
        }
        return this;
    };
    
    elproto.stop = function (anim) {
        for (var i = 0; i < animationElements.length; i++) if (animationElements[i].el.id == this.id && (!anim || animationElements[i].anim == anim)) {
            if (eve("raphael.anim.stop." + this.id, this, animationElements[i].anim) !== false) {
                animationElements.splice(i--, 1);
            }
        }
        return this;
    };
    function stopAnimation(paper) {
        for (var i = 0; i < animationElements.length; i++) if (animationElements[i].el.paper == paper) {
            animationElements.splice(i--, 1);
        }
    }
    eve.on("raphael.remove", stopAnimation);
    eve.on("raphael.clear", stopAnimation);
    elproto.toString = function () {
        return "Rapha\xebl\u2019s object";
    };

    // Set
    var Set = function (items) {
        this.items = [];
        this.length = 0;
        this.type = "set";
        if (items) {
            for (var i = 0, ii = items.length; i < ii; i++) {
                if (items[i] && (items[i].constructor == elproto.constructor || items[i].constructor == Set)) {
                    this[this.items.length] = this.items[this.items.length] = items[i];
                    this.length++;
                }
            }
        }
    },
    setproto = Set.prototype;
    
    setproto.push = function () {
        var item,
            len;
        for (var i = 0, ii = arguments.length; i < ii; i++) {
            item = arguments[i];
            if (item && (item.constructor == elproto.constructor || item.constructor == Set)) {
                len = this.items.length;
                this[len] = this.items[len] = item;
                this.length++;
            }
        }
        return this;
    };
    
    setproto.pop = function () {
        this.length && delete this[this.length--];
        return this.items.pop();
    };
    
    setproto.forEach = function (callback, thisArg) {
        for (var i = 0, ii = this.items.length; i < ii; i++) {
            if (callback.call(thisArg, this.items[i], i) === false) {
                return this;
            }
        }
        return this;
    };
    for (var method in elproto) if (elproto[has](method)) {
        setproto[method] = (function (methodname) {
            return function () {
                var arg = arguments;
                return this.forEach(function (el) {
                    el[methodname][apply](el, arg);
                });
            };
        })(method);
    }
    setproto.attr = function (name, value) {
        if (name && R.is(name, array) && R.is(name[0], "object")) {
            for (var j = 0, jj = name.length; j < jj; j++) {
                this.items[j].attr(name[j]);
            }
        } else {
            for (var i = 0, ii = this.items.length; i < ii; i++) {
                this.items[i].attr(name, value);
            }
        }
        return this;
    };
    
    setproto.clear = function () {
        while (this.length) {
            this.pop();
        }
    };
    
    setproto.splice = function (index, count, insertion) {
        index = index < 0 ? mmax(this.length + index, 0) : index;
        count = mmax(0, mmin(this.length - index, count));
        var tail = [],
            todel = [],
            args = [],
            i;
        for (i = 2; i < arguments.length; i++) {
            args.push(arguments[i]);
        }
        for (i = 0; i < count; i++) {
            todel.push(this[index + i]);
        }
        for (; i < this.length - index; i++) {
            tail.push(this[index + i]);
        }
        var arglen = args.length;
        for (i = 0; i < arglen + tail.length; i++) {
            this.items[index + i] = this[index + i] = i < arglen ? args[i] : tail[i - arglen];
        }
        i = this.items.length = this.length -= count - arglen;
        while (this[i]) {
            delete this[i++];
        }
        return new Set(todel);
    };
    
    setproto.exclude = function (el) {
        for (var i = 0, ii = this.length; i < ii; i++) if (this[i] == el) {
            this.splice(i, 1);
            return true;
        }
    };
    setproto.animate = function (params, ms, easing, callback) {
        (R.is(easing, "function") || !easing) && (callback = easing || null);
        var len = this.items.length,
            i = len,
            item,
            set = this,
            collector;
        if (!len) {
            return this;
        }
        callback && (collector = function () {
            !--len && callback.call(set);
        });
        easing = R.is(easing, string) ? easing : collector;
        var anim = R.animation(params, ms, easing, collector);
        item = this.items[--i].animate(anim);
        while (i--) {
            this.items[i] && !this.items[i].removed && this.items[i].animateWith(item, anim, anim);
        }
        return this;
    };
    setproto.insertAfter = function (el) {
        var i = this.items.length;
        while (i--) {
            this.items[i].insertAfter(el);
        }
        return this;
    };
    setproto.getBBox = function () {
        var x = [],
            y = [],
            x2 = [],
            y2 = [];
        for (var i = this.items.length; i--;) if (!this.items[i].removed) {
            var box = this.items[i].getBBox();
            x.push(box.x);
            y.push(box.y);
            x2.push(box.x + box.width);
            y2.push(box.y + box.height);
        }
        x = mmin[apply](0, x);
        y = mmin[apply](0, y);
        x2 = mmax[apply](0, x2);
        y2 = mmax[apply](0, y2);
        return {
            x: x,
            y: y,
            x2: x2,
            y2: y2,
            width: x2 - x,
            height: y2 - y
        };
    };
    setproto.clone = function (s) {
        s = new Set;
        for (var i = 0, ii = this.items.length; i < ii; i++) {
            s.push(this.items[i].clone());
        }
        return s;
    };
    setproto.toString = function () {
        return "Rapha\xebl\u2018s set";
    };

    
    R.registerFont = function (font) {
        if (!font.face) {
            return font;
        }
        this.fonts = this.fonts || {};
        var fontcopy = {
                w: font.w,
                face: {},
                glyphs: {}
            },
            family = font.face["font-family"];
        for (var prop in font.face) if (font.face[has](prop)) {
            fontcopy.face[prop] = font.face[prop];
        }
        if (this.fonts[family]) {
            this.fonts[family].push(fontcopy);
        } else {
            this.fonts[family] = [fontcopy];
        }
        if (!font.svg) {
            fontcopy.face["units-per-em"] = toInt(font.face["units-per-em"], 10);
            for (var glyph in font.glyphs) if (font.glyphs[has](glyph)) {
                var path = font.glyphs[glyph];
                fontcopy.glyphs[glyph] = {
                    w: path.w,
                    k: {},
                    d: path.d && "M" + path.d.replace(/[mlcxtrv]/g, function (command) {
                            return {l: "L", c: "C", x: "z", t: "m", r: "l", v: "c"}[command] || "M";
                        }) + "z"
                };
                if (path.k) {
                    for (var k in path.k) if (path[has](k)) {
                        fontcopy.glyphs[glyph].k[k] = path.k[k];
                    }
                }
            }
        }
        return font;
    };
    
    paperproto.getFont = function (family, weight, style, stretch) {
        stretch = stretch || "normal";
        style = style || "normal";
        weight = +weight || {normal: 400, bold: 700, lighter: 300, bolder: 800}[weight] || 400;
        if (!R.fonts) {
            return;
        }
        var font = R.fonts[family];
        if (!font) {
            var name = new RegExp("(^|\\s)" + family.replace(/[^\w\d\s+!~.:_-]/g, E) + "(\\s|$)", "i");
            for (var fontName in R.fonts) if (R.fonts[has](fontName)) {
                if (name.test(fontName)) {
                    font = R.fonts[fontName];
                    break;
                }
            }
        }
        var thefont;
        if (font) {
            for (var i = 0, ii = font.length; i < ii; i++) {
                thefont = font[i];
                if (thefont.face["font-weight"] == weight && (thefont.face["font-style"] == style || !thefont.face["font-style"]) && thefont.face["font-stretch"] == stretch) {
                    break;
                }
            }
        }
        return thefont;
    };
    
    paperproto.print = function (x, y, string, font, size, origin, letter_spacing) {
        origin = origin || "middle"; // baseline|middle
        letter_spacing = mmax(mmin(letter_spacing || 0, 1), -1);
        var letters = Str(string)[split](E),
            shift = 0,
            notfirst = 0,
            path = E,
            scale;
        R.is(font, string) && (font = this.getFont(font));
        if (font) {
            scale = (size || 16) / font.face["units-per-em"];
            var bb = font.face.bbox[split](separator),
                top = +bb[0],
                lineHeight = bb[3] - bb[1],
                shifty = 0,
                height = +bb[1] + (origin == "baseline" ? lineHeight + (+font.face.descent) : lineHeight / 2);
            for (var i = 0, ii = letters.length; i < ii; i++) {
                if (letters[i] == "\n") {
                    shift = 0;
                    curr = 0;
                    notfirst = 0;
                    shifty += lineHeight;
                } else {
                    var prev = notfirst && font.glyphs[letters[i - 1]] || {},
                        curr = font.glyphs[letters[i]];
                    shift += notfirst ? (prev.w || font.w) + (prev.k && prev.k[letters[i]] || 0) + (font.w * letter_spacing) : 0;
                    notfirst = 1;
                }
                if (curr && curr.d) {
                    path += R.transformPath(curr.d, ["t", shift * scale, shifty * scale, "s", scale, scale, top, height, "t", (x - top) / scale, (y - height) / scale]);
                }
            }
        }
        return this.path(path).attr({
            fill: "#000",
            stroke: "none"
        });
    };

    
    paperproto.add = function (json) {
        if (R.is(json, "array")) {
            var res = this.set(),
                i = 0,
                ii = json.length,
                j;
            for (; i < ii; i++) {
                j = json[i] || {};
                elements[has](j.type) && res.push(this[j.type]().attr(j));
            }
        }
        return res;
    };

    
    R.format = function (token, params) {
        var args = R.is(params, array) ? [0][concat](params) : arguments;
        token && R.is(token, string) && args.length - 1 && (token = token.replace(formatrg, function (str, i) {
            return args[++i] == null ? E : args[i];
        }));
        return token || E;
    };
    
    R.fullfill = (function () {
        var tokenRegex = /\{([^\}]+)\}/g,
            objNotationRegex = /(?:(?:^|\.)(.+?)(?=\[|\.|$|\()|\[('|")(.+?)\2\])(\(\))?/g, // matches .xxxxx or ["xxxxx"] to run over object properties
            replacer = function (all, key, obj) {
                var res = obj;
                key.replace(objNotationRegex, function (all, name, quote, quotedName, isFunc) {
                    name = name || quotedName;
                    if (res) {
                        if (name in res) {
                            res = res[name];
                        }
                        typeof res == "function" && isFunc && (res = res());
                    }
                });
                res = (res == null || res == obj ? all : res) + "";
                return res;
            };
        return function (str, obj) {
            return String(str).replace(tokenRegex, function (all, key) {
                return replacer(all, key, obj);
            });
        };
    })();
    
    R.ninja = function () {
        oldRaphael.was ? (g.win.Raphael = oldRaphael.is) : delete Raphael;
        return R;
    };
    
    R.st = setproto;
    // Firefox <3.6 fix: http://webreflection.blogspot.com/2009/11/195-chars-to-help-lazy-loading.html
    (function (doc, loaded, f) {
        if (doc.readyState == null && doc.addEventListener){
            doc.addEventListener(loaded, f = function () {
                doc.removeEventListener(loaded, f, false);
                doc.readyState = "complete";
            }, false);
            doc.readyState = "loading";
        }
        function isLoaded() {
            (/in/).test(doc.readyState) ? setTimeout(isLoaded, 9) : R.eve("raphael.DOMload");
        }
        isLoaded();
    })(document, "DOMContentLoaded");

    oldRaphael.was ? (g.win.Raphael = R) : (Raphael = R);
    
    eve.on("raphael.DOMload", function () {
        loaded = true;
    });
})();


// ┌─────────────────────────────────────────────────────────────────────┐ \\
// │ Raphaël - JavaScript Vector Library                                 │ \\
// ├─────────────────────────────────────────────────────────────────────┤ \\
// │ SVG Module                                                          │ \\
// ├─────────────────────────────────────────────────────────────────────┤ \\
// │ Copyright (c) 2008-2011 Dmitry Baranovskiy (http://raphaeljs.com)   │ \\
// │ Copyright (c) 2008-2011 Sencha Labs (http://sencha.com)             │ \\
// │ Licensed under the MIT (http://raphaeljs.com/license.html) license. │ \\
// └─────────────────────────────────────────────────────────────────────┘ \\
window.Raphael.svg && function (R) {
    var has = "hasOwnProperty",
        Str = String,
        toFloat = parseFloat,
        toInt = parseInt,
        math = Math,
        mmax = math.max,
        abs = math.abs,
        pow = math.pow,
        separator = /[, ]+/,
        eve = R.eve,
        E = "",
        S = " ";
    var xlink = "http://www.w3.org/1999/xlink",
        markers = {
            block: "M5,0 0,2.5 5,5z",
            classic: "M5,0 0,2.5 5,5 3.5,3 3.5,2z",
            diamond: "M2.5,0 5,2.5 2.5,5 0,2.5z",
            open: "M6,1 1,3.5 6,6",
            oval: "M2.5,0A2.5,2.5,0,0,1,2.5,5 2.5,2.5,0,0,1,2.5,0z"
        },
        markerCounter = {};
    R.toString = function () {
        return  "Your browser supports SVG.\nYou are running Rapha\xebl " + this.version;
    };
    var $ = function (el, attr) {
        if (attr) {
            if (typeof el == "string") {
                el = $(el);
            }
            for (var key in attr) if (attr[has](key)) {
                if (key.substring(0, 6) == "xlink:") {
                    el.setAttributeNS(xlink, key.substring(6), Str(attr[key]));
                } else {
                    el.setAttribute(key, Str(attr[key]));
                }
            }
        } else {
            el = R._g.doc.createElementNS("http://www.w3.org/2000/svg", el);
            el.style && (el.style.webkitTapHighlightColor = "rgba(0,0,0,0)");
        }
        return el;
    },
    addGradientFill = function (element, gradient) {
        var type = "linear",
            id = element.id + gradient,
            fx = .5, fy = .5,
            o = element.node,
            SVG = element.paper,
            s = o.style,
            el = R._g.doc.getElementById(id);
        if (!el) {
            gradient = Str(gradient).replace(R._radial_gradient, function (all, _fx, _fy) {
                type = "radial";
                if (_fx && _fy) {
                    fx = toFloat(_fx);
                    fy = toFloat(_fy);
                    var dir = ((fy > .5) * 2 - 1);
                    pow(fx - .5, 2) + pow(fy - .5, 2) > .25 &&
                        (fy = math.sqrt(.25 - pow(fx - .5, 2)) * dir + .5) &&
                        fy != .5 &&
                        (fy = fy.toFixed(5) - 1e-5 * dir);
                }
                return E;
            });
            gradient = gradient.split(/\s*\-\s*/);
            if (type == "linear") {
                var angle = gradient.shift();
                angle = -toFloat(angle);
                if (isNaN(angle)) {
                    return null;
                }
                var vector = [0, 0, math.cos(R.rad(angle)), math.sin(R.rad(angle))],
                    max = 1 / (mmax(abs(vector[2]), abs(vector[3])) || 1);
                vector[2] *= max;
                vector[3] *= max;
                if (vector[2] < 0) {
                    vector[0] = -vector[2];
                    vector[2] = 0;
                }
                if (vector[3] < 0) {
                    vector[1] = -vector[3];
                    vector[3] = 0;
                }
            }
            var dots = R._parseDots(gradient);
            if (!dots) {
                return null;
            }
            id = id.replace(/[\(\)\s,\xb0#]/g, "_");
            
            if (element.gradient && id != element.gradient.id) {
                SVG.defs.removeChild(element.gradient);
                delete element.gradient;
            }

            if (!element.gradient) {
                el = $(type + "Gradient", {id: id});
                element.gradient = el;
                $(el, type == "radial" ? {
                    fx: fx,
                    fy: fy
                } : {
                    x1: vector[0],
                    y1: vector[1],
                    x2: vector[2],
                    y2: vector[3],
                    gradientTransform: element.matrix.invert()
                });
                SVG.defs.appendChild(el);
                for (var i = 0, ii = dots.length; i < ii; i++) {
                    el.appendChild($("stop", {
                        offset: dots[i].offset ? dots[i].offset : i ? "100%" : "0%",
                        "stop-color": dots[i].color || "#fff"
                    }));
                }
            }
        }
        $(o, {
            fill: "url(#" + id + ")",
            opacity: 1,
            "fill-opacity": 1
        });
        s.fill = E;
        s.opacity = 1;
        s.fillOpacity = 1;
        return 1;
    },
    updatePosition = function (o) {
        var bbox = o.getBBox(1);
        $(o.pattern, {patternTransform: o.matrix.invert() + " translate(" + bbox.x + "," + bbox.y + ")"});
    },
    addArrow = function (o, value, isEnd) {
        if (o.type == "path") {
            var values = Str(value).toLowerCase().split("-"),
                p = o.paper,
                se = isEnd ? "end" : "start",
                node = o.node,
                attrs = o.attrs,
                stroke = attrs["stroke-width"],
                i = values.length,
                type = "classic",
                from,
                to,
                dx,
                refX,
                attr,
                w = 3,
                h = 3,
                t = 5;
            while (i--) {
                switch (values[i]) {
                    case "block":
                    case "classic":
                    case "oval":
                    case "diamond":
                    case "open":
                    case "none":
                        type = values[i];
                        break;
                    case "wide": h = 5; break;
                    case "narrow": h = 2; break;
                    case "long": w = 5; break;
                    case "short": w = 2; break;
                }
            }
            if (type == "open") {
                w += 2;
                h += 2;
                t += 2;
                dx = 1;
                refX = isEnd ? 4 : 1;
                attr = {
                    fill: "none",
                    stroke: attrs.stroke
                };
            } else {
                refX = dx = w / 2;
                attr = {
                    fill: attrs.stroke,
                    stroke: "none"
                };
            }
            if (o._.arrows) {
                if (isEnd) {
                    o._.arrows.endPath && markerCounter[o._.arrows.endPath]--;
                    o._.arrows.endMarker && markerCounter[o._.arrows.endMarker]--;
                } else {
                    o._.arrows.startPath && markerCounter[o._.arrows.startPath]--;
                    o._.arrows.startMarker && markerCounter[o._.arrows.startMarker]--;
                }
            } else {
                o._.arrows = {};
            }
            if (type != "none") {
                var pathId = "raphael-marker-" + type,
                    markerId = "raphael-marker-" + se + type + w + h;
                if (!R._g.doc.getElementById(pathId)) {
                    p.defs.appendChild($($("path"), {
                        "stroke-linecap": "round",
                        d: markers[type],
                        id: pathId
                    }));
                    markerCounter[pathId] = 1;
                } else {
                    markerCounter[pathId]++;
                }
                var marker = R._g.doc.getElementById(markerId),
                    use;
                if (!marker) {
                    marker = $($("marker"), {
                        id: markerId,
                        markerHeight: h,
                        markerWidth: w,
                        orient: "auto",
                        refX: refX,
                        refY: h / 2
                    });
                    use = $($("use"), {
                        "xlink:href": "#" + pathId,
                        transform: (isEnd ? "rotate(180 " + w / 2 + " " + h / 2 + ") " : E) + "scale(" + w / t + "," + h / t + ")",
                        "stroke-width": (1 / ((w / t + h / t) / 2)).toFixed(4)
                    });
                    marker.appendChild(use);
                    p.defs.appendChild(marker);
                    markerCounter[markerId] = 1;
                } else {
                    markerCounter[markerId]++;
                    use = marker.getElementsByTagName("use")[0];
                }
                $(use, attr);
                var delta = dx * (type != "diamond" && type != "oval");
                if (isEnd) {
                    from = o._.arrows.startdx * stroke || 0;
                    to = R.getTotalLength(attrs.path) - delta * stroke;
                } else {
                    from = delta * stroke;
                    to = R.getTotalLength(attrs.path) - (o._.arrows.enddx * stroke || 0);
                }
                attr = {};
                attr["marker-" + se] = "url(#" + markerId + ")";
                if (to || from) {
                    attr.d = Raphael.getSubpath(attrs.path, from, to);
                }
                $(node, attr);
                o._.arrows[se + "Path"] = pathId;
                o._.arrows[se + "Marker"] = markerId;
                o._.arrows[se + "dx"] = delta;
                o._.arrows[se + "Type"] = type;
                o._.arrows[se + "String"] = value;
            } else {
                if (isEnd) {
                    from = o._.arrows.startdx * stroke || 0;
                    to = R.getTotalLength(attrs.path) - from;
                } else {
                    from = 0;
                    to = R.getTotalLength(attrs.path) - (o._.arrows.enddx * stroke || 0);
                }
                o._.arrows[se + "Path"] && $(node, {d: Raphael.getSubpath(attrs.path, from, to)});
                delete o._.arrows[se + "Path"];
                delete o._.arrows[se + "Marker"];
                delete o._.arrows[se + "dx"];
                delete o._.arrows[se + "Type"];
                delete o._.arrows[se + "String"];
            }
            for (attr in markerCounter) if (markerCounter[has](attr) && !markerCounter[attr]) {
                var item = R._g.doc.getElementById(attr);
                item && item.parentNode.removeChild(item);
            }
        }
    },
    dasharray = {
        "": [0],
        "none": [0],
        "-": [3, 1],
        ".": [1, 1],
        "-.": [3, 1, 1, 1],
        "-..": [3, 1, 1, 1, 1, 1],
        ". ": [1, 3],
        "- ": [4, 3],
        "--": [8, 3],
        "- .": [4, 3, 1, 3],
        "--.": [8, 3, 1, 3],
        "--..": [8, 3, 1, 3, 1, 3]
    },
    addDashes = function (o, value, params) {
        value = dasharray[Str(value).toLowerCase()];
        if (value) {
            var width = o.attrs["stroke-width"] || "1",
                butt = {round: width, square: width, butt: 0}[o.attrs["stroke-linecap"] || params["stroke-linecap"]] || 0,
                dashes = [],
                i = value.length;
            while (i--) {
                dashes[i] = value[i] * width + ((i % 2) ? 1 : -1) * butt;
            }
            $(o.node, {"stroke-dasharray": dashes.join(",")});
        }
    },
    setFillAndStroke = function (o, params) {
        var node = o.node,
            attrs = o.attrs,
            vis = node.style.visibility;
        node.style.visibility = "hidden";
        for (var att in params) {
            if (params[has](att)) {
                if (!R._availableAttrs[has](att)) {
                    continue;
                }
                var value = params[att];
                attrs[att] = value;
                switch (att) {
                    case "blur":
                        o.blur(value);
                        break;
                    case "href":
                    case "title":
                    case "target":
                        var pn = node.parentNode;
                        if (pn.tagName.toLowerCase() != "a") {
                            var hl = $("a");
                            pn.insertBefore(hl, node);
                            hl.appendChild(node);
                            pn = hl;
                        }
                        if (att == "target") {
                            pn.setAttributeNS(xlink, "show", value == "blank" ? "new" : value);
                        } else {
                            pn.setAttributeNS(xlink, att, value);
                        }
                        break;
                    case "cursor":
                        node.style.cursor = value;
                        break;
                    case "transform":
                        o.transform(value);
                        break;
                    case "arrow-start":
                        addArrow(o, value);
                        break;
                    case "arrow-end":
                        addArrow(o, value, 1);
                        break;
                    case "clip-rect":
                        var rect = Str(value).split(separator);
                        if (rect.length == 4) {
                            o.clip && o.clip.parentNode.parentNode.removeChild(o.clip.parentNode);
                            var el = $("clipPath"),
                                rc = $("rect");
                            el.id = R.createUUID();
                            $(rc, {
                                x: rect[0],
                                y: rect[1],
                                width: rect[2],
                                height: rect[3]
                            });
                            el.appendChild(rc);
                            o.paper.defs.appendChild(el);
                            $(node, {"clip-path": "url(#" + el.id + ")"});
                            o.clip = rc;
                        }
                        if (!value) {
                            var path = node.getAttribute("clip-path");
                            if (path) {
                                var clip = R._g.doc.getElementById(path.replace(/(^url\(#|\)$)/g, E));
                                clip && clip.parentNode.removeChild(clip);
                                $(node, {"clip-path": E});
                                delete o.clip;
                            }
                        }
                    break;
                    case "path":
                        if (o.type == "path") {
                            $(node, {d: value ? attrs.path = R._pathToAbsolute(value) : "M0,0"});
                            o._.dirty = 1;
                            if (o._.arrows) {
                                "startString" in o._.arrows && addArrow(o, o._.arrows.startString);
                                "endString" in o._.arrows && addArrow(o, o._.arrows.endString, 1);
                            }
                        }
                        break;
                    case "width":
                        node.setAttribute(att, value);
                        o._.dirty = 1;
                        if (attrs.fx) {
                            att = "x";
                            value = attrs.x;
                        } else {
                            break;
                        }
                    case "x":
                        if (attrs.fx) {
                            value = -attrs.x - (attrs.width || 0);
                        }
                    case "rx":
                        if (att == "rx" && o.type == "rect") {
                            break;
                        }
                    case "cx":
                        node.setAttribute(att, value);
                        o.pattern && updatePosition(o);
                        o._.dirty = 1;
                        break;
                    case "height":
                        node.setAttribute(att, value);
                        o._.dirty = 1;
                        if (attrs.fy) {
                            att = "y";
                            value = attrs.y;
                        } else {
                            break;
                        }
                    case "y":
                        if (attrs.fy) {
                            value = -attrs.y - (attrs.height || 0);
                        }
                    case "ry":
                        if (att == "ry" && o.type == "rect") {
                            break;
                        }
                    case "cy":
                        node.setAttribute(att, value);
                        o.pattern && updatePosition(o);
                        o._.dirty = 1;
                        break;
                    case "r":
                        if (o.type == "rect") {
                            $(node, {rx: value, ry: value});
                        } else {
                            node.setAttribute(att, value);
                        }
                        o._.dirty = 1;
                        break;
                    case "src":
                        if (o.type == "image") {
                            node.setAttributeNS(xlink, "href", value);
                        }
                        break;
                    case "stroke-width":
                        if (o._.sx != 1 || o._.sy != 1) {
                            value /= mmax(abs(o._.sx), abs(o._.sy)) || 1;
                        }
                        if (o.paper._vbSize) {
                            value *= o.paper._vbSize;
                        }
                        node.setAttribute(att, value);
                        if (attrs["stroke-dasharray"]) {
                            addDashes(o, attrs["stroke-dasharray"], params);
                        }
                        if (o._.arrows) {
                            "startString" in o._.arrows && addArrow(o, o._.arrows.startString);
                            "endString" in o._.arrows && addArrow(o, o._.arrows.endString, 1);
                        }
                        break;
                    case "stroke-dasharray":
                        addDashes(o, value, params);
                        break;
                    case "fill":
                        var isURL = Str(value).match(R._ISURL);
                        if (isURL) {
                            el = $("pattern");
                            var ig = $("image");
                            el.id = R.createUUID();
                            $(el, {x: 0, y: 0, patternUnits: "userSpaceOnUse", height: 1, width: 1});
                            $(ig, {x: 0, y: 0, "xlink:href": isURL[1]});
                            el.appendChild(ig);

                            (function (el) {
                                R._preload(isURL[1], function () {
                                    var w = this.offsetWidth,
                                        h = this.offsetHeight;
                                    $(el, {width: w, height: h});
                                    $(ig, {width: w, height: h});
                                    o.paper.safari();
                                });
                            })(el);
                            o.paper.defs.appendChild(el);
                            $(node, {fill: "url(#" + el.id + ")"});
                            o.pattern = el;
                            o.pattern && updatePosition(o);
                            break;
                        }
                        var clr = R.getRGB(value);
                        if (!clr.error) {
                            delete params.gradient;
                            delete attrs.gradient;
                            !R.is(attrs.opacity, "undefined") &&
                                R.is(params.opacity, "undefined") &&
                                $(node, {opacity: attrs.opacity});
                            !R.is(attrs["fill-opacity"], "undefined") &&
                                R.is(params["fill-opacity"], "undefined") &&
                                $(node, {"fill-opacity": attrs["fill-opacity"]});
                        } else if ((o.type == "circle" || o.type == "ellipse" || Str(value).charAt() != "r") && addGradientFill(o, value)) {
                            if ("opacity" in attrs || "fill-opacity" in attrs) {
                                var gradient = R._g.doc.getElementById(node.getAttribute("fill").replace(/^url\(#|\)$/g, E));
                                if (gradient) {
                                    var stops = gradient.getElementsByTagName("stop");
                                    $(stops[stops.length - 1], {"stop-opacity": ("opacity" in attrs ? attrs.opacity : 1) * ("fill-opacity" in attrs ? attrs["fill-opacity"] : 1)});
                                }
                            }
                            attrs.gradient = value;
                            attrs.fill = "none";
                            break;
                        }
                        clr[has]("opacity") && $(node, {"fill-opacity": clr.opacity > 1 ? clr.opacity / 100 : clr.opacity});
                    case "stroke":
                        clr = R.getRGB(value);
                        node.setAttribute(att, clr.hex);
                        att == "stroke" && clr[has]("opacity") && $(node, {"stroke-opacity": clr.opacity > 1 ? clr.opacity / 100 : clr.opacity});
                        if (att == "stroke" && o._.arrows) {
                            "startString" in o._.arrows && addArrow(o, o._.arrows.startString);
                            "endString" in o._.arrows && addArrow(o, o._.arrows.endString, 1);
                        }
                        break;
                    case "gradient":
                        (o.type == "circle" || o.type == "ellipse" || Str(value).charAt() != "r") && addGradientFill(o, value);
                        break;
                    case "opacity":
                        if (attrs.gradient && !attrs[has]("stroke-opacity")) {
                            $(node, {"stroke-opacity": value > 1 ? value / 100 : value});
                        }
                        // fall
                    case "fill-opacity":
                        if (attrs.gradient) {
                            gradient = R._g.doc.getElementById(node.getAttribute("fill").replace(/^url\(#|\)$/g, E));
                            if (gradient) {
                                stops = gradient.getElementsByTagName("stop");
                                $(stops[stops.length - 1], {"stop-opacity": value});
                            }
                            break;
                        }
                    default:
                        att == "font-size" && (value = toInt(value, 10) + "px");
                        var cssrule = att.replace(/(\-.)/g, function (w) {
                            return w.substring(1).toUpperCase();
                        });
                        node.style[cssrule] = value;
                        o._.dirty = 1;
                        node.setAttribute(att, value);
                        break;
                }
            }
        }

        tuneText(o, params);
        node.style.visibility = vis;
    },
    leading = 1.2,
    tuneText = function (el, params) {
        if (el.type != "text" || !(params[has]("text") || params[has]("font") || params[has]("font-size") || params[has]("x") || params[has]("y"))) {
            return;
        }
        var a = el.attrs,
            node = el.node,
            fontSize = node.firstChild ? toInt(R._g.doc.defaultView.getComputedStyle(node.firstChild, E).getPropertyValue("font-size"), 10) : 10;

        if (params[has]("text")) {
            a.text = params.text;
            while (node.firstChild) {
                node.removeChild(node.firstChild);
            }
            var texts = Str(params.text).split("\n"),
                tspans = [],
                tspan;
            for (var i = 0, ii = texts.length; i < ii; i++) {
                tspan = $("tspan");
                i && $(tspan, {dy: fontSize * leading, x: a.x});
                tspan.appendChild(R._g.doc.createTextNode(texts[i]));
                node.appendChild(tspan);
                tspans[i] = tspan;
            }
        } else {
            tspans = node.getElementsByTagName("tspan");
            for (i = 0, ii = tspans.length; i < ii; i++) if (i) {
                $(tspans[i], {dy: fontSize * leading, x: a.x});
            } else {
                $(tspans[0], {dy: 0});
            }
        }
        $(node, {x: a.x, y: a.y});
        el._.dirty = 1;
        var bb = el._getBBox(),
            dif = a.y - (bb.y + bb.height / 2);
        dif && R.is(dif, "finite") && $(tspans[0], {dy: dif});
    },
    Element = function (node, svg) {
        var X = 0,
            Y = 0;
        
        this[0] = this.node = node;
        
        node.raphael = true;
        
        this.id = R._oid++;
        node.raphaelid = this.id;
        this.matrix = R.matrix();
        this.realPath = null;
        
        this.paper = svg;
        this.attrs = this.attrs || {};
        this._ = {
            transform: [],
            sx: 1,
            sy: 1,
            deg: 0,
            dx: 0,
            dy: 0,
            dirty: 1
        };
        !svg.bottom && (svg.bottom = this);
        
        this.prev = svg.top;
        svg.top && (svg.top.next = this);
        svg.top = this;
        
        this.next = null;
    },
    elproto = R.el;

    Element.prototype = elproto;
    elproto.constructor = Element;

    R._engine.path = function (pathString, SVG) {
        var el = $("path");
        SVG.canvas && SVG.canvas.appendChild(el);
        var p = new Element(el, SVG);
        p.type = "path";
        setFillAndStroke(p, {
            fill: "none",
            stroke: "#000",
            path: pathString
        });
        return p;
    };
    
    elproto.rotate = function (deg, cx, cy) {
        if (this.removed) {
            return this;
        }
        deg = Str(deg).split(separator);
        if (deg.length - 1) {
            cx = toFloat(deg[1]);
            cy = toFloat(deg[2]);
        }
        deg = toFloat(deg[0]);
        (cy == null) && (cx = cy);
        if (cx == null || cy == null) {
            var bbox = this.getBBox(1);
            cx = bbox.x + bbox.width / 2;
            cy = bbox.y + bbox.height / 2;
        }
        this.transform(this._.transform.concat([["r", deg, cx, cy]]));
        return this;
    };
    
    elproto.scale = function (sx, sy, cx, cy) {
        if (this.removed) {
            return this;
        }
        sx = Str(sx).split(separator);
        if (sx.length - 1) {
            sy = toFloat(sx[1]);
            cx = toFloat(sx[2]);
            cy = toFloat(sx[3]);
        }
        sx = toFloat(sx[0]);
        (sy == null) && (sy = sx);
        (cy == null) && (cx = cy);
        if (cx == null || cy == null) {
            var bbox = this.getBBox(1);
        }
        cx = cx == null ? bbox.x + bbox.width / 2 : cx;
        cy = cy == null ? bbox.y + bbox.height / 2 : cy;
        this.transform(this._.transform.concat([["s", sx, sy, cx, cy]]));
        return this;
    };
    
    elproto.translate = function (dx, dy) {
        if (this.removed) {
            return this;
        }
        dx = Str(dx).split(separator);
        if (dx.length - 1) {
            dy = toFloat(dx[1]);
        }
        dx = toFloat(dx[0]) || 0;
        dy = +dy || 0;
        this.transform(this._.transform.concat([["t", dx, dy]]));
        return this;
    };
    
    elproto.transform = function (tstr) {
        var _ = this._;
        if (tstr == null) {
            return _.transform;
        }
        R._extractTransform(this, tstr);

        this.clip && $(this.clip, {transform: this.matrix.invert()});
        this.pattern && updatePosition(this);
        this.node && $(this.node, {transform: this.matrix});
    
        if (_.sx != 1 || _.sy != 1) {
            var sw = this.attrs[has]("stroke-width") ? this.attrs["stroke-width"] : 1;
            this.attr({"stroke-width": sw});
        }

        return this;
    };
    
    elproto.hide = function () {
        !this.removed && this.paper.safari(this.node.style.display = "none");
        return this;
    };
    
    elproto.show = function () {
        !this.removed && this.paper.safari(this.node.style.display = "");
        return this;
    };
    
    elproto.remove = function () {
        if (this.removed || !this.node.parentNode) {
            return;
        }
        var paper = this.paper;
        paper.__set__ && paper.__set__.exclude(this);
        eve.unbind("raphael.*.*." + this.id);
        if (this.gradient) {
            paper.defs.removeChild(this.gradient);
        }
        R._tear(this, paper);
        if (this.node.parentNode.tagName.toLowerCase() == "a") {
            this.node.parentNode.parentNode.removeChild(this.node.parentNode);
        } else {
            this.node.parentNode.removeChild(this.node);
        }
        for (var i in this) {
            this[i] = typeof this[i] == "function" ? R._removedFactory(i) : null;
        }
        this.removed = true;
    };
    elproto._getBBox = function () {
        if (this.node.style.display == "none") {
            this.show();
            var hide = true;
        }
        var bbox = {};
        try {
            bbox = this.node.getBBox();
        } catch(e) {
            // Firefox 3.0.x plays badly here
        } finally {
            bbox = bbox || {};
        }
        hide && this.hide();
        return bbox;
    };
    
    elproto.attr = function (name, value) {
        if (this.removed) {
            return this;
        }
        if (name == null) {
            var res = {};
            for (var a in this.attrs) if (this.attrs[has](a)) {
                res[a] = this.attrs[a];
            }
            res.gradient && res.fill == "none" && (res.fill = res.gradient) && delete res.gradient;
            res.transform = this._.transform;
            return res;
        }
        if (value == null && R.is(name, "string")) {
            if (name == "fill" && this.attrs.fill == "none" && this.attrs.gradient) {
                return this.attrs.gradient;
            }
            if (name == "transform") {
                return this._.transform;
            }
            var names = name.split(separator),
                out = {};
            for (var i = 0, ii = names.length; i < ii; i++) {
                name = names[i];
                if (name in this.attrs) {
                    out[name] = this.attrs[name];
                } else if (R.is(this.paper.customAttributes[name], "function")) {
                    out[name] = this.paper.customAttributes[name].def;
                } else {
                    out[name] = R._availableAttrs[name];
                }
            }
            return ii - 1 ? out : out[names[0]];
        }
        if (value == null && R.is(name, "array")) {
            out = {};
            for (i = 0, ii = name.length; i < ii; i++) {
                out[name[i]] = this.attr(name[i]);
            }
            return out;
        }
        if (value != null) {
            var params = {};
            params[name] = value;
        } else if (name != null && R.is(name, "object")) {
            params = name;
        }
        for (var key in params) {
            eve("raphael.attr." + key + "." + this.id, this, params[key]);
        }
        for (key in this.paper.customAttributes) if (this.paper.customAttributes[has](key) && params[has](key) && R.is(this.paper.customAttributes[key], "function")) {
            var par = this.paper.customAttributes[key].apply(this, [].concat(params[key]));
            this.attrs[key] = params[key];
            for (var subkey in par) if (par[has](subkey)) {
                params[subkey] = par[subkey];
            }
        }
        setFillAndStroke(this, params);
        return this;
    };
    
    elproto.toFront = function () {
        if (this.removed) {
            return this;
        }
        if (this.node.parentNode.tagName.toLowerCase() == "a") {
            this.node.parentNode.parentNode.appendChild(this.node.parentNode);
        } else {
            this.node.parentNode.appendChild(this.node);
        }
        var svg = this.paper;
        svg.top != this && R._tofront(this, svg);
        return this;
    };
    
    elproto.toBack = function () {
        if (this.removed) {
            return this;
        }
        var parent = this.node.parentNode;
        if (parent.tagName.toLowerCase() == "a") {
            parent.parentNode.insertBefore(this.node.parentNode, this.node.parentNode.parentNode.firstChild); 
        } else if (parent.firstChild != this.node) {
            parent.insertBefore(this.node, this.node.parentNode.firstChild);
        }
        R._toback(this, this.paper);
        var svg = this.paper;
        return this;
    };
    
    elproto.insertAfter = function (element) {
        if (this.removed) {
            return this;
        }
        var node = element.node || element[element.length - 1].node;
        if (node.nextSibling) {
            node.parentNode.insertBefore(this.node, node.nextSibling);
        } else {
            node.parentNode.appendChild(this.node);
        }
        R._insertafter(this, element, this.paper);
        return this;
    };
    
    elproto.insertBefore = function (element) {
        if (this.removed) {
            return this;
        }
        var node = element.node || element[0].node;
        node.parentNode.insertBefore(this.node, node);
        R._insertbefore(this, element, this.paper);
        return this;
    };
    elproto.blur = function (size) {
        // Experimental. No Safari support. Use it on your own risk.
        var t = this;
        if (+size !== 0) {
            var fltr = $("filter"),
                blur = $("feGaussianBlur");
            t.attrs.blur = size;
            fltr.id = R.createUUID();
            $(blur, {stdDeviation: +size || 1.5});
            fltr.appendChild(blur);
            t.paper.defs.appendChild(fltr);
            t._blur = fltr;
            $(t.node, {filter: "url(#" + fltr.id + ")"});
        } else {
            if (t._blur) {
                t._blur.parentNode.removeChild(t._blur);
                delete t._blur;
                delete t.attrs.blur;
            }
            t.node.removeAttribute("filter");
        }
    };
    R._engine.circle = function (svg, x, y, r) {
        var el = $("circle");
        svg.canvas && svg.canvas.appendChild(el);
        var res = new Element(el, svg);
        res.attrs = {cx: x, cy: y, r: r, fill: "none", stroke: "#000"};
        res.type = "circle";
        $(el, res.attrs);
        return res;
    };
    R._engine.rect = function (svg, x, y, w, h, r) {
        var el = $("rect");
        svg.canvas && svg.canvas.appendChild(el);
        var res = new Element(el, svg);
        res.attrs = {x: x, y: y, width: w, height: h, r: r || 0, rx: r || 0, ry: r || 0, fill: "none", stroke: "#000"};
        res.type = "rect";
        $(el, res.attrs);
        return res;
    };
    R._engine.ellipse = function (svg, x, y, rx, ry) {
        var el = $("ellipse");
        svg.canvas && svg.canvas.appendChild(el);
        var res = new Element(el, svg);
        res.attrs = {cx: x, cy: y, rx: rx, ry: ry, fill: "none", stroke: "#000"};
        res.type = "ellipse";
        $(el, res.attrs);
        return res;
    };
    R._engine.image = function (svg, src, x, y, w, h) {
        var el = $("image");
        $(el, {x: x, y: y, width: w, height: h, preserveAspectRatio: "none"});
        el.setAttributeNS(xlink, "href", src);
        svg.canvas && svg.canvas.appendChild(el);
        var res = new Element(el, svg);
        res.attrs = {x: x, y: y, width: w, height: h, src: src};
        res.type = "image";
        return res;
    };
    R._engine.text = function (svg, x, y, text) {
        var el = $("text");
        svg.canvas && svg.canvas.appendChild(el);
        var res = new Element(el, svg);
        res.attrs = {
            x: x,
            y: y,
            "text-anchor": "middle",
            text: text,
            font: R._availableAttrs.font,
            stroke: "none",
            fill: "#000"
        };
        res.type = "text";
        setFillAndStroke(res, res.attrs);
        return res;
    };
    R._engine.setSize = function (width, height) {
        this.width = width || this.width;
        this.height = height || this.height;
        this.canvas.setAttribute("width", this.width);
        this.canvas.setAttribute("height", this.height);
        if (this._viewBox) {
            this.setViewBox.apply(this, this._viewBox);
        }
        return this;
    };
    R._engine.create = function () {
        var con = R._getContainer.apply(0, arguments),
            container = con && con.container,
            x = con.x,
            y = con.y,
            width = con.width,
            height = con.height;
        if (!container) {
            throw new Error("SVG container not found.");
        }
        var cnvs = $("svg"),
            css = "overflow:hidden;",
            isFloating;
        x = x || 0;
        y = y || 0;
        width = width || 512;
        height = height || 342;
        $(cnvs, {
            height: height,
            version: 1.1,
            width: width,
            xmlns: "http://www.w3.org/2000/svg"
        });
        if (container == 1) {
            cnvs.style.cssText = css + "position:absolute;left:" + x + "px;top:" + y + "px";
            R._g.doc.body.appendChild(cnvs);
            isFloating = 1;
        } else {
            cnvs.style.cssText = css + "position:relative";
            if (container.firstChild) {
                container.insertBefore(cnvs, container.firstChild);
            } else {
                container.appendChild(cnvs);
            }
        }
        container = new R._Paper;
        container.width = width;
        container.height = height;
        container.canvas = cnvs;
        container.clear();
        container._left = container._top = 0;
        isFloating && (container.renderfix = function () {});
        container.renderfix();
        return container;
    };
    R._engine.setViewBox = function (x, y, w, h, fit) {
        eve("raphael.setViewBox", this, this._viewBox, [x, y, w, h, fit]);
        var size = mmax(w / this.width, h / this.height),
            top = this.top,
            aspectRatio = fit ? "meet" : "xMinYMin",
            vb,
            sw;
        if (x == null) {
            if (this._vbSize) {
                size = 1;
            }
            delete this._vbSize;
            vb = "0 0 " + this.width + S + this.height;
        } else {
            this._vbSize = size;
            vb = x + S + y + S + w + S + h;
        }
        $(this.canvas, {
            viewBox: vb,
            preserveAspectRatio: aspectRatio
        });
        while (size && top) {
            sw = "stroke-width" in top.attrs ? top.attrs["stroke-width"] : 1;
            top.attr({"stroke-width": sw});
            top._.dirty = 1;
            top._.dirtyT = 1;
            top = top.prev;
        }
        this._viewBox = [x, y, w, h, !!fit];
        return this;
    };
    
    R.prototype.renderfix = function () {
        var cnvs = this.canvas,
            s = cnvs.style,
            pos;
        try {
            pos = cnvs.getScreenCTM() || cnvs.createSVGMatrix();
        } catch (e) {
            pos = cnvs.createSVGMatrix();
        }
        var left = -pos.e % 1,
            top = -pos.f % 1;
        if (left || top) {
            if (left) {
                this._left = (this._left + left) % 1;
                s.left = this._left + "px";
            }
            if (top) {
                this._top = (this._top + top) % 1;
                s.top = this._top + "px";
            }
        }
    };
    
    R.prototype.clear = function () {
        R.eve("raphael.clear", this);
        var c = this.canvas;
        while (c.firstChild) {
            c.removeChild(c.firstChild);
        }
        this.bottom = this.top = null;
        (this.desc = $("desc")).appendChild(R._g.doc.createTextNode("Created with Rapha\xebl " + R.version));
        c.appendChild(this.desc);
        c.appendChild(this.defs = $("defs"));
    };
    
    R.prototype.remove = function () {
        eve("raphael.remove", this);
        this.canvas.parentNode && this.canvas.parentNode.removeChild(this.canvas);
        for (var i in this) {
            this[i] = typeof this[i] == "function" ? R._removedFactory(i) : null;
        }
    };
    var setproto = R.st;
    for (var method in elproto) if (elproto[has](method) && !setproto[has](method)) {
        setproto[method] = (function (methodname) {
            return function () {
                var arg = arguments;
                return this.forEach(function (el) {
                    el[methodname].apply(el, arg);
                });
            };
        })(method);
    }
}(window.Raphael);

// ┌─────────────────────────────────────────────────────────────────────┐ \\
// │ Raphaël - JavaScript Vector Library                                 │ \\
// ├─────────────────────────────────────────────────────────────────────┤ \\
// │ VML Module                                                          │ \\
// ├─────────────────────────────────────────────────────────────────────┤ \\
// │ Copyright (c) 2008-2011 Dmitry Baranovskiy (http://raphaeljs.com)   │ \\
// │ Copyright (c) 2008-2011 Sencha Labs (http://sencha.com)             │ \\
// │ Licensed under the MIT (http://raphaeljs.com/license.html) license. │ \\
// └─────────────────────────────────────────────────────────────────────┘ \\
window.Raphael.vml && function (R) {
    var has = "hasOwnProperty",
        Str = String,
        toFloat = parseFloat,
        math = Math,
        round = math.round,
        mmax = math.max,
        mmin = math.min,
        abs = math.abs,
        fillString = "fill",
        separator = /[, ]+/,
        eve = R.eve,
        ms = " progid:DXImageTransform.Microsoft",
        S = " ",
        E = "",
        map = {M: "m", L: "l", C: "c", Z: "x", m: "t", l: "r", c: "v", z: "x"},
        bites = /([clmz]),?([^clmz]*)/gi,
        blurregexp = / progid:\S+Blur\([^\)]+\)/g,
        val = /-?[^,\s-]+/g,
        cssDot = "position:absolute;left:0;top:0;width:1px;height:1px",
        zoom = 21600,
        pathTypes = {path: 1, rect: 1, image: 1},
        ovalTypes = {circle: 1, ellipse: 1},
        path2vml = function (path) {
            var total =  /[ahqstv]/ig,
                command = R._pathToAbsolute;
            Str(path).match(total) && (command = R._path2curve);
            total = /[clmz]/g;
            if (command == R._pathToAbsolute && !Str(path).match(total)) {
                var res = Str(path).replace(bites, function (all, command, args) {
                    var vals = [],
                        isMove = command.toLowerCase() == "m",
                        res = map[command];
                    args.replace(val, function (value) {
                        if (isMove && vals.length == 2) {
                            res += vals + map[command == "m" ? "l" : "L"];
                            vals = [];
                        }
                        vals.push(round(value * zoom));
                    });
                    return res + vals;
                });
                return res;
            }
            var pa = command(path), p, r;
            res = [];
            for (var i = 0, ii = pa.length; i < ii; i++) {
                p = pa[i];
                r = pa[i][0].toLowerCase();
                r == "z" && (r = "x");
                for (var j = 1, jj = p.length; j < jj; j++) {
                    r += round(p[j] * zoom) + (j != jj - 1 ? "," : E);
                }
                res.push(r);
            }
            return res.join(S);
        },
        compensation = function (deg, dx, dy) {
            var m = R.matrix();
            m.rotate(-deg, .5, .5);
            return {
                dx: m.x(dx, dy),
                dy: m.y(dx, dy)
            };
        },
        setCoords = function (p, sx, sy, dx, dy, deg) {
            var _ = p._,
                m = p.matrix,
                fillpos = _.fillpos,
                o = p.node,
                s = o.style,
                y = 1,
                flip = "",
                dxdy,
                kx = zoom / sx,
                ky = zoom / sy;
            s.visibility = "hidden";
            if (!sx || !sy) {
                return;
            }
            o.coordsize = abs(kx) + S + abs(ky);
            s.rotation = deg * (sx * sy < 0 ? -1 : 1);
            if (deg) {
                var c = compensation(deg, dx, dy);
                dx = c.dx;
                dy = c.dy;
            }
            sx < 0 && (flip += "x");
            sy < 0 && (flip += " y") && (y = -1);
            s.flip = flip;
            o.coordorigin = (dx * -kx) + S + (dy * -ky);
            if (fillpos || _.fillsize) {
                var fill = o.getElementsByTagName(fillString);
                fill = fill && fill[0];
                o.removeChild(fill);
                if (fillpos) {
                    c = compensation(deg, m.x(fillpos[0], fillpos[1]), m.y(fillpos[0], fillpos[1]));
                    fill.position = c.dx * y + S + c.dy * y;
                }
                if (_.fillsize) {
                    fill.size = _.fillsize[0] * abs(sx) + S + _.fillsize[1] * abs(sy);
                }
                o.appendChild(fill);
            }
            s.visibility = "visible";
        };
    R.toString = function () {
        return  "Your browser doesn\u2019t support SVG. Falling down to VML.\nYou are running Rapha\xebl " + this.version;
    };
    var addArrow = function (o, value, isEnd) {
        var values = Str(value).toLowerCase().split("-"),
            se = isEnd ? "end" : "start",
            i = values.length,
            type = "classic",
            w = "medium",
            h = "medium";
        while (i--) {
            switch (values[i]) {
                case "block":
                case "classic":
                case "oval":
                case "diamond":
                case "open":
                case "none":
                    type = values[i];
                    break;
                case "wide":
                case "narrow": h = values[i]; break;
                case "long":
                case "short": w = values[i]; break;
            }
        }
        var stroke = o.node.getElementsByTagName("stroke")[0];
        stroke[se + "arrow"] = type;
        stroke[se + "arrowlength"] = w;
        stroke[se + "arrowwidth"] = h;
    },
    setFillAndStroke = function (o, params) {
        // o.paper.canvas.style.display = "none";
        o.attrs = o.attrs || {};
        var node = o.node,
            a = o.attrs,
            s = node.style,
            xy,
            newpath = pathTypes[o.type] && (params.x != a.x || params.y != a.y || params.width != a.width || params.height != a.height || params.cx != a.cx || params.cy != a.cy || params.rx != a.rx || params.ry != a.ry || params.r != a.r),
            isOval = ovalTypes[o.type] && (a.cx != params.cx || a.cy != params.cy || a.r != params.r || a.rx != params.rx || a.ry != params.ry),
            res = o;


        for (var par in params) if (params[has](par)) {
            a[par] = params[par];
        }
        if (newpath) {
            a.path = R._getPath[o.type](o);
            o._.dirty = 1;
        }
        params.href && (node.href = params.href);
        params.title && (node.title = params.title);
        params.target && (node.target = params.target);
        params.cursor && (s.cursor = params.cursor);
        "blur" in params && o.blur(params.blur);
        if (params.path && o.type == "path" || newpath) {
            node.path = path2vml(~Str(a.path).toLowerCase().indexOf("r") ? R._pathToAbsolute(a.path) : a.path);
            if (o.type == "image") {
                o._.fillpos = [a.x, a.y];
                o._.fillsize = [a.width, a.height];
                setCoords(o, 1, 1, 0, 0, 0);
            }
        }
        "transform" in params && o.transform(params.transform);
        if (isOval) {
            var cx = +a.cx,
                cy = +a.cy,
                rx = +a.rx || +a.r || 0,
                ry = +a.ry || +a.r || 0;
            node.path = R.format("ar{0},{1},{2},{3},{4},{1},{4},{1}x", round((cx - rx) * zoom), round((cy - ry) * zoom), round((cx + rx) * zoom), round((cy + ry) * zoom), round(cx * zoom));
        }
        if ("clip-rect" in params) {
            var rect = Str(params["clip-rect"]).split(separator);
            if (rect.length == 4) {
                rect[2] = +rect[2] + (+rect[0]);
                rect[3] = +rect[3] + (+rect[1]);
                var div = node.clipRect || R._g.doc.createElement("div"),
                    dstyle = div.style;
                dstyle.clip = R.format("rect({1}px {2}px {3}px {0}px)", rect);
                if (!node.clipRect) {
                    dstyle.position = "absolute";
                    dstyle.top = 0;
                    dstyle.left = 0;
                    dstyle.width = o.paper.width + "px";
                    dstyle.height = o.paper.height + "px";
                    node.parentNode.insertBefore(div, node);
                    div.appendChild(node);
                    node.clipRect = div;
                }
            }
            if (!params["clip-rect"]) {
                node.clipRect && (node.clipRect.style.clip = "auto");
            }
        }
        if (o.textpath) {
            var textpathStyle = o.textpath.style;
            params.font && (textpathStyle.font = params.font);
            params["font-family"] && (textpathStyle.fontFamily = '"' + params["font-family"].split(",")[0].replace(/^['"]+|['"]+$/g, E) + '"');
            params["font-size"] && (textpathStyle.fontSize = params["font-size"]);
            params["font-weight"] && (textpathStyle.fontWeight = params["font-weight"]);
            params["font-style"] && (textpathStyle.fontStyle = params["font-style"]);
        }
        if ("arrow-start" in params) {
            addArrow(res, params["arrow-start"]);
        }
        if ("arrow-end" in params) {
            addArrow(res, params["arrow-end"], 1);
        }
        if (params.opacity != null || 
            params["stroke-width"] != null ||
            params.fill != null ||
            params.src != null ||
            params.stroke != null ||
            params["stroke-width"] != null ||
            params["stroke-opacity"] != null ||
            params["fill-opacity"] != null ||
            params["stroke-dasharray"] != null ||
            params["stroke-miterlimit"] != null ||
            params["stroke-linejoin"] != null ||
            params["stroke-linecap"] != null) {
            var fill = node.getElementsByTagName(fillString),
                newfill = false;
            fill = fill && fill[0];
            !fill && (newfill = fill = createNode(fillString));
            if (o.type == "image" && params.src) {
                fill.src = params.src;
            }
            params.fill && (fill.on = true);
            if (fill.on == null || params.fill == "none" || params.fill === null) {
                fill.on = false;
            }
            if (fill.on && params.fill) {
                var isURL = Str(params.fill).match(R._ISURL);
                if (isURL) {
                    fill.parentNode == node && node.removeChild(fill);
                    fill.rotate = true;
                    fill.src = isURL[1];
                    fill.type = "tile";
                    var bbox = o.getBBox(1);
                    fill.position = bbox.x + S + bbox.y;
                    o._.fillpos = [bbox.x, bbox.y];

                    R._preload(isURL[1], function () {
                        o._.fillsize = [this.offsetWidth, this.offsetHeight];
                    });
                } else {
                    fill.color = R.getRGB(params.fill).hex;
                    fill.src = E;
                    fill.type = "solid";
                    if (R.getRGB(params.fill).error && (res.type in {circle: 1, ellipse: 1} || Str(params.fill).charAt() != "r") && addGradientFill(res, params.fill, fill)) {
                        a.fill = "none";
                        a.gradient = params.fill;
                        fill.rotate = false;
                    }
                }
            }
            if ("fill-opacity" in params || "opacity" in params) {
                var opacity = ((+a["fill-opacity"] + 1 || 2) - 1) * ((+a.opacity + 1 || 2) - 1) * ((+R.getRGB(params.fill).o + 1 || 2) - 1);
                opacity = mmin(mmax(opacity, 0), 1);
                fill.opacity = opacity;
                if (fill.src) {
                    fill.color = "none";
                }
            }
            node.appendChild(fill);
            var stroke = (node.getElementsByTagName("stroke") && node.getElementsByTagName("stroke")[0]),
            newstroke = false;
            !stroke && (newstroke = stroke = createNode("stroke"));
            if ((params.stroke && params.stroke != "none") ||
                params["stroke-width"] ||
                params["stroke-opacity"] != null ||
                params["stroke-dasharray"] ||
                params["stroke-miterlimit"] ||
                params["stroke-linejoin"] ||
                params["stroke-linecap"]) {
                stroke.on = true;
            }
            (params.stroke == "none" || params.stroke === null || stroke.on == null || params.stroke == 0 || params["stroke-width"] == 0) && (stroke.on = false);
            var strokeColor = R.getRGB(params.stroke);
            stroke.on && params.stroke && (stroke.color = strokeColor.hex);
            opacity = ((+a["stroke-opacity"] + 1 || 2) - 1) * ((+a.opacity + 1 || 2) - 1) * ((+strokeColor.o + 1 || 2) - 1);
            var width = (toFloat(params["stroke-width"]) || 1) * .75;
            opacity = mmin(mmax(opacity, 0), 1);
            params["stroke-width"] == null && (width = a["stroke-width"]);
            params["stroke-width"] && (stroke.weight = width);
            width && width < 1 && (opacity *= width) && (stroke.weight = 1);
            stroke.opacity = opacity;
        
            params["stroke-linejoin"] && (stroke.joinstyle = params["stroke-linejoin"] || "miter");
            stroke.miterlimit = params["stroke-miterlimit"] || 8;
            params["stroke-linecap"] && (stroke.endcap = params["stroke-linecap"] == "butt" ? "flat" : params["stroke-linecap"] == "square" ? "square" : "round");
            if (params["stroke-dasharray"]) {
                var dasharray = {
                    "-": "shortdash",
                    ".": "shortdot",
                    "-.": "shortdashdot",
                    "-..": "shortdashdotdot",
                    ". ": "dot",
                    "- ": "dash",
                    "--": "longdash",
                    "- .": "dashdot",
                    "--.": "longdashdot",
                    "--..": "longdashdotdot"
                };
                stroke.dashstyle = dasharray[has](params["stroke-dasharray"]) ? dasharray[params["stroke-dasharray"]] : E;
            }
            newstroke && node.appendChild(stroke);
        }
        if (res.type == "text") {
            res.paper.canvas.style.display = E;
            var span = res.paper.span,
                m = 100,
                fontSize = a.font && a.font.match(/\d+(?:\.\d*)?(?=px)/);
            s = span.style;
            a.font && (s.font = a.font);
            a["font-family"] && (s.fontFamily = a["font-family"]);
            a["font-weight"] && (s.fontWeight = a["font-weight"]);
            a["font-style"] && (s.fontStyle = a["font-style"]);
            fontSize = toFloat(a["font-size"] || fontSize && fontSize[0]) || 10;
            s.fontSize = fontSize * m + "px";
            res.textpath.string && (span.innerHTML = Str(res.textpath.string).replace(/</g, "&#60;").replace(/&/g, "&#38;").replace(/\n/g, "<br>"));
            var brect = span.getBoundingClientRect();
            res.W = a.w = (brect.right - brect.left) / m;
            res.H = a.h = (brect.bottom - brect.top) / m;
            // res.paper.canvas.style.display = "none";
            res.X = a.x;
            res.Y = a.y + res.H / 2;

            ("x" in params || "y" in params) && (res.path.v = R.format("m{0},{1}l{2},{1}", round(a.x * zoom), round(a.y * zoom), round(a.x * zoom) + 1));
            var dirtyattrs = ["x", "y", "text", "font", "font-family", "font-weight", "font-style", "font-size"];
            for (var d = 0, dd = dirtyattrs.length; d < dd; d++) if (dirtyattrs[d] in params) {
                res._.dirty = 1;
                break;
            }
        
            // text-anchor emulation
            switch (a["text-anchor"]) {
                case "start":
                    res.textpath.style["v-text-align"] = "left";
                    res.bbx = res.W / 2;
                break;
                case "end":
                    res.textpath.style["v-text-align"] = "right";
                    res.bbx = -res.W / 2;
                break;
                default:
                    res.textpath.style["v-text-align"] = "center";
                    res.bbx = 0;
                break;
            }
            res.textpath.style["v-text-kern"] = true;
        }
        // res.paper.canvas.style.display = E;
    },
    addGradientFill = function (o, gradient, fill) {
        o.attrs = o.attrs || {};
        var attrs = o.attrs,
            pow = Math.pow,
            opacity,
            oindex,
            type = "linear",
            fxfy = ".5 .5";
        o.attrs.gradient = gradient;
        gradient = Str(gradient).replace(R._radial_gradient, function (all, fx, fy) {
            type = "radial";
            if (fx && fy) {
                fx = toFloat(fx);
                fy = toFloat(fy);
                pow(fx - .5, 2) + pow(fy - .5, 2) > .25 && (fy = math.sqrt(.25 - pow(fx - .5, 2)) * ((fy > .5) * 2 - 1) + .5);
                fxfy = fx + S + fy;
            }
            return E;
        });
        gradient = gradient.split(/\s*\-\s*/);
        if (type == "linear") {
            var angle = gradient.shift();
            angle = -toFloat(angle);
            if (isNaN(angle)) {
                return null;
            }
        }
        var dots = R._parseDots(gradient);
        if (!dots) {
            return null;
        }
        o = o.shape || o.node;
        if (dots.length) {
            o.removeChild(fill);
            fill.on = true;
            fill.method = "none";
            fill.color = dots[0].color;
            fill.color2 = dots[dots.length - 1].color;
            var clrs = [];
            for (var i = 0, ii = dots.length; i < ii; i++) {
                dots[i].offset && clrs.push(dots[i].offset + S + dots[i].color);
            }
            fill.colors = clrs.length ? clrs.join() : "0% " + fill.color;
            if (type == "radial") {
                fill.type = "gradientTitle";
                fill.focus = "100%";
                fill.focussize = "0 0";
                fill.focusposition = fxfy;
                fill.angle = 0;
            } else {
                // fill.rotate= true;
                fill.type = "gradient";
                fill.angle = (270 - angle) % 360;
            }
            o.appendChild(fill);
        }
        return 1;
    },
    Element = function (node, vml) {
        this[0] = this.node = node;
        node.raphael = true;
        this.id = R._oid++;
        node.raphaelid = this.id;
        this.X = 0;
        this.Y = 0;
        this.attrs = {};
        this.paper = vml;
        this.matrix = R.matrix();
        this._ = {
            transform: [],
            sx: 1,
            sy: 1,
            dx: 0,
            dy: 0,
            deg: 0,
            dirty: 1,
            dirtyT: 1
        };
        !vml.bottom && (vml.bottom = this);
        this.prev = vml.top;
        vml.top && (vml.top.next = this);
        vml.top = this;
        this.next = null;
    };
    var elproto = R.el;

    Element.prototype = elproto;
    elproto.constructor = Element;
    elproto.transform = function (tstr) {
        if (tstr == null) {
            return this._.transform;
        }
        var vbs = this.paper._viewBoxShift,
            vbt = vbs ? "s" + [vbs.scale, vbs.scale] + "-1-1t" + [vbs.dx, vbs.dy] : E,
            oldt;
        if (vbs) {
            oldt = tstr = Str(tstr).replace(/\.{3}|\u2026/g, this._.transform || E);
        }
        R._extractTransform(this, vbt + tstr);
        var matrix = this.matrix.clone(),
            skew = this.skew,
            o = this.node,
            split,
            isGrad = ~Str(this.attrs.fill).indexOf("-"),
            isPatt = !Str(this.attrs.fill).indexOf("url(");
        matrix.translate(-.5, -.5);
        if (isPatt || isGrad || this.type == "image") {
            skew.matrix = "1 0 0 1";
            skew.offset = "0 0";
            split = matrix.split();
            if ((isGrad && split.noRotation) || !split.isSimple) {
                o.style.filter = matrix.toFilter();
                var bb = this.getBBox(),
                    bbt = this.getBBox(1),
                    dx = bb.x - bbt.x,
                    dy = bb.y - bbt.y;
                o.coordorigin = (dx * -zoom) + S + (dy * -zoom);
                setCoords(this, 1, 1, dx, dy, 0);
            } else {
                o.style.filter = E;
                setCoords(this, split.scalex, split.scaley, split.dx, split.dy, split.rotate);
            }
        } else {
            o.style.filter = E;
            skew.matrix = Str(matrix);
            skew.offset = matrix.offset();
        }
        oldt && (this._.transform = oldt);
        return this;
    };
    elproto.rotate = function (deg, cx, cy) {
        if (this.removed) {
            return this;
        }
        if (deg == null) {
            return;
        }
        deg = Str(deg).split(separator);
        if (deg.length - 1) {
            cx = toFloat(deg[1]);
            cy = toFloat(deg[2]);
        }
        deg = toFloat(deg[0]);
        (cy == null) && (cx = cy);
        if (cx == null || cy == null) {
            var bbox = this.getBBox(1);
            cx = bbox.x + bbox.width / 2;
            cy = bbox.y + bbox.height / 2;
        }
        this._.dirtyT = 1;
        this.transform(this._.transform.concat([["r", deg, cx, cy]]));
        return this;
    };
    elproto.translate = function (dx, dy) {
        if (this.removed) {
            return this;
        }
        dx = Str(dx).split(separator);
        if (dx.length - 1) {
            dy = toFloat(dx[1]);
        }
        dx = toFloat(dx[0]) || 0;
        dy = +dy || 0;
        if (this._.bbox) {
            this._.bbox.x += dx;
            this._.bbox.y += dy;
        }
        this.transform(this._.transform.concat([["t", dx, dy]]));
        return this;
    };
    elproto.scale = function (sx, sy, cx, cy) {
        if (this.removed) {
            return this;
        }
        sx = Str(sx).split(separator);
        if (sx.length - 1) {
            sy = toFloat(sx[1]);
            cx = toFloat(sx[2]);
            cy = toFloat(sx[3]);
            isNaN(cx) && (cx = null);
            isNaN(cy) && (cy = null);
        }
        sx = toFloat(sx[0]);
        (sy == null) && (sy = sx);
        (cy == null) && (cx = cy);
        if (cx == null || cy == null) {
            var bbox = this.getBBox(1);
        }
        cx = cx == null ? bbox.x + bbox.width / 2 : cx;
        cy = cy == null ? bbox.y + bbox.height / 2 : cy;
    
        this.transform(this._.transform.concat([["s", sx, sy, cx, cy]]));
        this._.dirtyT = 1;
        return this;
    };
    elproto.hide = function () {
        !this.removed && (this.node.style.display = "none");
        return this;
    };
    elproto.show = function () {
        !this.removed && (this.node.style.display = E);
        return this;
    };
    elproto._getBBox = function () {
        if (this.removed) {
            return {};
        }
        return {
            x: this.X + (this.bbx || 0) - this.W / 2,
            y: this.Y - this.H,
            width: this.W,
            height: this.H
        };
    };
    elproto.remove = function () {
        if (this.removed || !this.node.parentNode) {
            return;
        }
        this.paper.__set__ && this.paper.__set__.exclude(this);
        R.eve.unbind("raphael.*.*." + this.id);
        R._tear(this, this.paper);
        this.node.parentNode.removeChild(this.node);
        this.shape && this.shape.parentNode.removeChild(this.shape);
        for (var i in this) {
            this[i] = typeof this[i] == "function" ? R._removedFactory(i) : null;
        }
        this.removed = true;
    };
    elproto.attr = function (name, value) {
        if (this.removed) {
            return this;
        }
        if (name == null) {
            var res = {};
            for (var a in this.attrs) if (this.attrs[has](a)) {
                res[a] = this.attrs[a];
            }
            res.gradient && res.fill == "none" && (res.fill = res.gradient) && delete res.gradient;
            res.transform = this._.transform;
            return res;
        }
        if (value == null && R.is(name, "string")) {
            if (name == fillString && this.attrs.fill == "none" && this.attrs.gradient) {
                return this.attrs.gradient;
            }
            var names = name.split(separator),
                out = {};
            for (var i = 0, ii = names.length; i < ii; i++) {
                name = names[i];
                if (name in this.attrs) {
                    out[name] = this.attrs[name];
                } else if (R.is(this.paper.customAttributes[name], "function")) {
                    out[name] = this.paper.customAttributes[name].def;
                } else {
                    out[name] = R._availableAttrs[name];
                }
            }
            return ii - 1 ? out : out[names[0]];
        }
        if (this.attrs && value == null && R.is(name, "array")) {
            out = {};
            for (i = 0, ii = name.length; i < ii; i++) {
                out[name[i]] = this.attr(name[i]);
            }
            return out;
        }
        var params;
        if (value != null) {
            params = {};
            params[name] = value;
        }
        value == null && R.is(name, "object") && (params = name);
        for (var key in params) {
            eve("raphael.attr." + key + "." + this.id, this, params[key]);
        }
        if (params) {
            for (key in this.paper.customAttributes) if (this.paper.customAttributes[has](key) && params[has](key) && R.is(this.paper.customAttributes[key], "function")) {
                var par = this.paper.customAttributes[key].apply(this, [].concat(params[key]));
                this.attrs[key] = params[key];
                for (var subkey in par) if (par[has](subkey)) {
                    params[subkey] = par[subkey];
                }
            }
            // this.paper.canvas.style.display = "none";
            if (params.text && this.type == "text") {
                this.textpath.string = params.text;
            }
            setFillAndStroke(this, params);
            // this.paper.canvas.style.display = E;
        }
        return this;
    };
    elproto.toFront = function () {
        !this.removed && this.node.parentNode.appendChild(this.node);
        this.paper && this.paper.top != this && R._tofront(this, this.paper);
        return this;
    };
    elproto.toBack = function () {
        if (this.removed) {
            return this;
        }
        if (this.node.parentNode.firstChild != this.node) {
            this.node.parentNode.insertBefore(this.node, this.node.parentNode.firstChild);
            R._toback(this, this.paper);
        }
        return this;
    };
    elproto.insertAfter = function (element) {
        if (this.removed) {
            return this;
        }
        if (element.constructor == R.st.constructor) {
            element = element[element.length - 1];
        }
        if (element.node.nextSibling) {
            element.node.parentNode.insertBefore(this.node, element.node.nextSibling);
        } else {
            element.node.parentNode.appendChild(this.node);
        }
        R._insertafter(this, element, this.paper);
        return this;
    };
    elproto.insertBefore = function (element) {
        if (this.removed) {
            return this;
        }
        if (element.constructor == R.st.constructor) {
            element = element[0];
        }
        element.node.parentNode.insertBefore(this.node, element.node);
        R._insertbefore(this, element, this.paper);
        return this;
    };
    elproto.blur = function (size) {
        var s = this.node.runtimeStyle,
            f = s.filter;
        f = f.replace(blurregexp, E);
        if (+size !== 0) {
            this.attrs.blur = size;
            s.filter = f + S + ms + ".Blur(pixelradius=" + (+size || 1.5) + ")";
            s.margin = R.format("-{0}px 0 0 -{0}px", round(+size || 1.5));
        } else {
            s.filter = f;
            s.margin = 0;
            delete this.attrs.blur;
        }
    };

    R._engine.path = function (pathString, vml) {
        var el = createNode("shape");
        el.style.cssText = cssDot;
        el.coordsize = zoom + S + zoom;
        el.coordorigin = vml.coordorigin;
        var p = new Element(el, vml),
            attr = {fill: "none", stroke: "#000"};
        pathString && (attr.path = pathString);
        p.type = "path";
        p.path = [];
        p.Path = E;
        setFillAndStroke(p, attr);
        vml.canvas.appendChild(el);
        var skew = createNode("skew");
        skew.on = true;
        el.appendChild(skew);
        p.skew = skew;
        p.transform(E);
        return p;
    };
    R._engine.rect = function (vml, x, y, w, h, r) {
        var path = R._rectPath(x, y, w, h, r),
            res = vml.path(path),
            a = res.attrs;
        res.X = a.x = x;
        res.Y = a.y = y;
        res.W = a.width = w;
        res.H = a.height = h;
        a.r = r;
        a.path = path;
        res.type = "rect";
        return res;
    };
    R._engine.ellipse = function (vml, x, y, rx, ry) {
        var res = vml.path(),
            a = res.attrs;
        res.X = x - rx;
        res.Y = y - ry;
        res.W = rx * 2;
        res.H = ry * 2;
        res.type = "ellipse";
        setFillAndStroke(res, {
            cx: x,
            cy: y,
            rx: rx,
            ry: ry
        });
        return res;
    };
    R._engine.circle = function (vml, x, y, r) {
        var res = vml.path(),
            a = res.attrs;
        res.X = x - r;
        res.Y = y - r;
        res.W = res.H = r * 2;
        res.type = "circle";
        setFillAndStroke(res, {
            cx: x,
            cy: y,
            r: r
        });
        return res;
    };
    R._engine.image = function (vml, src, x, y, w, h) {
        var path = R._rectPath(x, y, w, h),
            res = vml.path(path).attr({stroke: "none"}),
            a = res.attrs,
            node = res.node,
            fill = node.getElementsByTagName(fillString)[0];
        a.src = src;
        res.X = a.x = x;
        res.Y = a.y = y;
        res.W = a.width = w;
        res.H = a.height = h;
        a.path = path;
        res.type = "image";
        fill.parentNode == node && node.removeChild(fill);
        fill.rotate = true;
        fill.src = src;
        fill.type = "tile";
        res._.fillpos = [x, y];
        res._.fillsize = [w, h];
        node.appendChild(fill);
        setCoords(res, 1, 1, 0, 0, 0);
        return res;
    };
    R._engine.text = function (vml, x, y, text) {
        var el = createNode("shape"),
            path = createNode("path"),
            o = createNode("textpath");
        x = x || 0;
        y = y || 0;
        text = text || "";
        path.v = R.format("m{0},{1}l{2},{1}", round(x * zoom), round(y * zoom), round(x * zoom) + 1);
        path.textpathok = true;
        o.string = Str(text);
        o.on = true;
        el.style.cssText = cssDot;
        el.coordsize = zoom + S + zoom;
        el.coordorigin = "0 0";
        var p = new Element(el, vml),
            attr = {
                fill: "#000",
                stroke: "none",
                font: R._availableAttrs.font,
                text: text
            };
        p.shape = el;
        p.path = path;
        p.textpath = o;
        p.type = "text";
        p.attrs.text = Str(text);
        p.attrs.x = x;
        p.attrs.y = y;
        p.attrs.w = 1;
        p.attrs.h = 1;
        setFillAndStroke(p, attr);
        el.appendChild(o);
        el.appendChild(path);
        vml.canvas.appendChild(el);
        var skew = createNode("skew");
        skew.on = true;
        el.appendChild(skew);
        p.skew = skew;
        p.transform(E);
        return p;
    };
    R._engine.setSize = function (width, height) {
        var cs = this.canvas.style;
        this.width = width;
        this.height = height;
        width == +width && (width += "px");
        height == +height && (height += "px");
        cs.width = width;
        cs.height = height;
        cs.clip = "rect(0 " + width + " " + height + " 0)";
        if (this._viewBox) {
            R._engine.setViewBox.apply(this, this._viewBox);
        }
        return this;
    };
    R._engine.setViewBox = function (x, y, w, h, fit) {
        R.eve("raphael.setViewBox", this, this._viewBox, [x, y, w, h, fit]);
        var width = this.width,
            height = this.height,
            size = 1 / mmax(w / width, h / height),
            H, W;
        if (fit) {
            H = height / h;
            W = width / w;
            if (w * H < width) {
                x -= (width - w * H) / 2 / H;
            }
            if (h * W < height) {
                y -= (height - h * W) / 2 / W;
            }
        }
        this._viewBox = [x, y, w, h, !!fit];
        this._viewBoxShift = {
            dx: -x,
            dy: -y,
            scale: size
        };
        this.forEach(function (el) {
            el.transform("...");
        });
        return this;
    };
    var createNode;
    R._engine.initWin = function (win) {
            var doc = win.document;
            doc.createStyleSheet().addRule(".rvml", "behavior:url(#default#VML)");
            try {
                !doc.namespaces.rvml && doc.namespaces.add("rvml", "urn:schemas-microsoft-com:vml");
                createNode = function (tagName) {
                    return doc.createElement('<rvml:' + tagName + ' class="rvml">');
                };
            } catch (e) {
                createNode = function (tagName) {
                    return doc.createElement('<' + tagName + ' xmlns="urn:schemas-microsoft.com:vml" class="rvml">');
                };
            }
        };
    R._engine.initWin(R._g.win);
    R._engine.create = function () {
        var con = R._getContainer.apply(0, arguments),
            container = con.container,
            height = con.height,
            s,
            width = con.width,
            x = con.x,
            y = con.y;
        if (!container) {
            throw new Error("VML container not found.");
        }
        var res = new R._Paper,
            c = res.canvas = R._g.doc.createElement("div"),
            cs = c.style;
        x = x || 0;
        y = y || 0;
        width = width || 512;
        height = height || 342;
        res.width = width;
        res.height = height;
        width == +width && (width += "px");
        height == +height && (height += "px");
        res.coordsize = zoom * 1e3 + S + zoom * 1e3;
        res.coordorigin = "0 0";
        res.span = R._g.doc.createElement("span");
        res.span.style.cssText = "position:absolute;left:-9999em;top:-9999em;padding:0;margin:0;line-height:1;";
        c.appendChild(res.span);
        cs.cssText = R.format("top:0;left:0;width:{0};height:{1};display:inline-block;position:relative;clip:rect(0 {0} {1} 0);overflow:hidden", width, height);
        if (container == 1) {
            R._g.doc.body.appendChild(c);
            cs.left = x + "px";
            cs.top = y + "px";
            cs.position = "absolute";
        } else {
            if (container.firstChild) {
                container.insertBefore(c, container.firstChild);
            } else {
                container.appendChild(c);
            }
        }
        res.renderfix = function () {};
        return res;
    };
    R.prototype.clear = function () {
        R.eve("raphael.clear", this);
        this.canvas.innerHTML = E;
        this.span = R._g.doc.createElement("span");
        this.span.style.cssText = "position:absolute;left:-9999em;top:-9999em;padding:0;margin:0;line-height:1;display:inline;";
        this.canvas.appendChild(this.span);
        this.bottom = this.top = null;
    };
    R.prototype.remove = function () {
        R.eve("raphael.remove", this);
        this.canvas.parentNode.removeChild(this.canvas);
        for (var i in this) {
            this[i] = typeof this[i] == "function" ? R._removedFactory(i) : null;
        }
        return true;
    };

    var setproto = R.st;
    for (var method in elproto) if (elproto[has](method) && !setproto[has](method)) {
        setproto[method] = (function (methodname) {
            return function () {
                var arg = arguments;
                return this.forEach(function (el) {
                    el[methodname].apply(el, arg);
                });
            };
        })(method);
    }
}(window.Raphael);;
Array.prototype.unique = function () {
    var r = [];
    o:for(var i = 0, n = this.length; i < n; i++)
    {
        for(var x = 0, y = r.length; x < y; x++)
      {
        if(r[x]===this[i])
        {
          continue o;
        }
      }
      r[r.length] = this[i];
    }
    return r;
};
;
window.require.register("application", function(exports, require, module) {
  var Application, Chaplin, Layout, config, mediator, routes, _ref,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Chaplin = require('chaplin');

  Layout = require('views/layout');

  mediator = require('mediator');

  routes = require('routes');

  config = require('config/environment-config');

  module.exports = Application = (function(_super) {
    __extends(Application, _super);

    function Application() {
      _ref = Application.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    Application.prototype.title = config.app_name;

    Application.prototype.initialize = function() {
      Application.__super__.initialize.apply(this, arguments);
      this.initDispatcher({
        controllerSuffix: '-controller'
      });
      this.initLayout();
      window.app = {};
      this.initHelpers();
      this.initMediator();
      this.initControllers();
      this.onDeviceReady();
      this.initRouter(routes, {
        pushState: false
      });
      if (!config.log) {
        console.log = function() {};
      }
      return typeof Object.freeze === "function" ? Object.freeze(this) : void 0;
    };

    Application.prototype.onDeviceReady = function() {
      console.log("on device ready");
      this.initCordovaPlugins();
      return mediator.analytics.init();
    };

    Application.prototype.initLayout = function() {
      return this.layout = new Layout({
        title: this.title
      });
    };

    Application.prototype.initControllers = function() {};

    Application.prototype.initHelpers = function() {
      var SoundHelper, i18n;

      SoundHelper = require('helpers/sound-helper');
      SoundHelper.initialize();
      i18n = require('lib/i18n');
      return i18n.init();
    };

    Application.prototype.initMediator = function() {
      mediator.analytics = require('helpers/analytics-helper');
      mediator.justLaunched = true;
      mediator.user = {};
      mediator.setJustLaunched = function(value) {
        return mediator.justLaunched = value;
      };
      mediator.setUser = function(User) {
        return mediator.user = User;
      };
      return mediator.seal();
    };

    Application.prototype.initCordovaPlugins = function() {
      if (typeof Social !== "undefined" && Social !== null) {
        Social.updateAvailableServices();
      }
      if (typeof Message !== "undefined" && Message !== null) {
        Message.checkCanSendMail();
      }
      if (typeof Message !== "undefined" && Message !== null) {
        Message.checkCanSendText();
      }
      if (typeof AdColony !== "undefined" && AdColony !== null) {
        AdColony.init(config.services.adcolony.zones);
      }
      if (typeof TapjoyConnect !== "undefined" && TapjoyConnect !== null) {
        TapjoyConnect.requestTapjoyConnect(null, null, function() {
          return TapjoyConnect.initVideoAd();
        });
      }
      if (typeof GameCenter !== "undefined" && GameCenter !== null) {
        GameCenter.authenticateLocalUser();
      }
      return typeof ChartBoost !== "undefined" && ChartBoost !== null ? ChartBoost.cacheInterstitial() : void 0;
    };

    return Application;

  })(Chaplin.Application);
  
});
window.require.register("config/bonus-config", function(exports, require, module) {
  module.exports = {
    life_packs: [
      {
        value: 5,
        price: 15
      }, {
        value: 10,
        price: 30
      }, {
        value: 50,
        price: 150
      }, {
        value: 100,
        price: 300
      }, {
        value: 150,
        price: 450
      }
    ],
    bonus_packs: [
      {
        value: 1,
        price: 50
      }, {
        value: 5,
        price: 300
      }, {
        value: 10,
        price: 1000
      }
    ]
  };
  
});
window.require.register("config/environment-config", function(exports, require, module) {
  var Parent, PreprodConfig, _ref,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Parent = require('config/prod-config');

  PreprodConfig = (function(_super) {
    __extends(PreprodConfig, _super);

    function PreprodConfig() {
      _ref = PreprodConfig.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    PreprodConfig.log = true;

    PreprodConfig.long_version_format = true;

    PreprodConfig.pay_game = false;

    PreprodConfig.services = {
      parse: {
        app_id: 'ixxjIFjdYTjOeKSZycsaPw8DHndujhvHFX2rNW10',
        js_key: 'XQMt26dlAXV32EmVVEQYwhSK2yYuvD6qDA3HaFqS',
        headers: {
          "X-Parse-Application-Id": "ixxjIFjdYTjOeKSZycsaPw8DHndujhvHFX2rNW10",
          "X-Parse-REST-API-Key": "gkhPen92iMBY4ZAkjZDtR5lRDmZZ3mM04hjHp3Bg"
        }
      },
      tapjoy: {
        currency: '2948f4c1-5a8d-4090-beb1-725c617477c8'
      },
      facebook: {
        app_id: '321070437995692',
        like_page_url: 'http://www.facebook.com/',
        createAnyway: false
      },
      adcolony: {
        zones: {
          SHOP: "vz8cfb94951aa34d79bbf0b2"
        }
      },
      allopass: {
        app_id: 297830
      }
    };

    return PreprodConfig;

  })(Parent);

  module.exports = PreprodConfig;
  
});
window.require.register("config/local-config", function(exports, require, module) {
  var LocalConfig, Parent, _ref,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Parent = require('config/preprod-config');

  LocalConfig = (function(_super) {
    __extends(LocalConfig, _super);

    function LocalConfig() {
      _ref = LocalConfig.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    LocalConfig.analytics = {
      enabled: false
    };

    LocalConfig.pay_game = false;

    LocalConfig.services = {
      parse: {
        app_id: 'ixxjIFjdYTjOeKSZycsaPw8DHndujhvHFX2rNW10',
        js_key: 'XQMt26dlAXV32EmVVEQYwhSK2yYuvD6qDA3HaFqS',
        headers: {
          "X-Parse-Application-Id": "ixxjIFjdYTjOeKSZycsaPw8DHndujhvHFX2rNW10",
          "X-Parse-REST-API-Key": "gkhPen92iMBY4ZAkjZDtR5lRDmZZ3mM04hjHp3Bg"
        }
      },
      tapjoy: {
        currency: '2948f4c1-5a8d-4090-beb1-725c617477c8'
      },
      facebook: {
        app_id: '321070437995692',
        like_page_url: 'http://www.facebook.com/'
      },
      adcolony: {
        zones: {
          SHOP: "vz8cfb94951aa34d79bbf0b2"
        }
      },
      allopass: {
        app_id: 297830
      }
    };

    return LocalConfig;

  })(Parent);

  module.exports = LocalConfig;
  
});
window.require.register("config/preprod-config", function(exports, require, module) {
  var Parent, PreprodConfig, _ref,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Parent = require('config/prod-config');

  PreprodConfig = (function(_super) {
    __extends(PreprodConfig, _super);

    function PreprodConfig() {
      _ref = PreprodConfig.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    PreprodConfig.log = true;

    PreprodConfig.long_version_format = true;

    PreprodConfig.pay_game = false;

    PreprodConfig.services = {
      parse: {
        app_id: 'ixxjIFjdYTjOeKSZycsaPw8DHndujhvHFX2rNW10',
        js_key: 'XQMt26dlAXV32EmVVEQYwhSK2yYuvD6qDA3HaFqS',
        headers: {
          "X-Parse-Application-Id": "ixxjIFjdYTjOeKSZycsaPw8DHndujhvHFX2rNW10",
          "X-Parse-REST-API-Key": "gkhPen92iMBY4ZAkjZDtR5lRDmZZ3mM04hjHp3Bg"
        }
      },
      tapjoy: {
        currency: '2948f4c1-5a8d-4090-beb1-725c617477c8'
      },
      facebook: {
        app_id: '321070437995692',
        like_page_url: 'http://www.facebook.com/'
      },
      adcolony: {
        zones: {
          SHOP: "vz8cfb94951aa34d79bbf0b2"
        }
      },
      allopass: {
        app_id: 297830
      }
    };

    return PreprodConfig;

  })(Parent);

  module.exports = PreprodConfig;
  
});
window.require.register("config/prod-config", function(exports, require, module) {
  var ProdConfig;

  ProdConfig = (function() {
    function ProdConfig() {}

    ProdConfig.app_name = 'Sport Quiz 2';

    ProdConfig.log = false;

    ProdConfig.long_version_format = false;

    ProdConfig.analytics = {
      enabled: false,
      google: ['']
    };

    ProdConfig.pay_game = true;

    ProdConfig.services = {
      parse: {
        app_id: 'ixxjIFjdYTjOeKSZycsaPw8DHndujhvHFX2rNW10',
        js_key: 'XQMt26dlAXV32EmVVEQYwhSK2yYuvD6qDA3HaFqS',
        headers: {
          "X-Parse-Application-Id": "ixxjIFjdYTjOeKSZycsaPw8DHndujhvHFX2rNW10",
          "X-Parse-REST-API-Key": "gkhPen92iMBY4ZAkjZDtR5lRDmZZ3mM04hjHp3Bg"
        }
      },
      tapjoy: {
        currency: '2948f4c1-5a8d-4090-beb1-725c617477c8'
      },
      facebook: {
        app_id: '321070437995692',
        like_page_url: 'http://www.facebook.com/'
      },
      adcolony: {
        zones: {
          SHOP: "vz8cfb94951aa34d79bbf0b2"
        }
      },
      allopass: {
        app_id: 297830
      }
    };

    ProdConfig.gamecenter = {
      leaderboard: 'total_jackpot'
    };

    return ProdConfig;

  })();

  module.exports = ProdConfig;
  
});
window.require.register("config/purchase-config", function(exports, require, module) {
  module.exports = {
    credit_packs: [
      {
        value: 200,
        product_id: "1.79SportQuiz",
        price: 1.79,
        image: "images/shop/Jetons/pack_1.png"
      }, {
        value: 500,
        product_id: "2.69SportQuiz",
        price: 2.59,
        image: "images/shop/Jetons/pack_2.png"
      }, {
        value: 1000,
        product_id: "9.99SportQuiz",
        price: 9.99,
        image: "images/shop/Jetons/pack_3.png"
      }, {
        value: 5000,
        product_id: "19.99SportQuiz",
        price: 19.99,
        image: "images/shop/Jetons/pack_4.png"
      }
    ],
    free_packs: {
      web: [
        {
          name: 'twitter',
          value: 5
        }, {
          name: 'facebook_like',
          value: 5
        }, {
          name: 'invite_friends',
          value: 5
        }
      ],
      ios: [
        {
          name: 'twitter',
          value: 5
        }, {
          name: 'facebook_like',
          value: 5
        }, {
          name: 'app_store_rating',
          value: 5
        }, {
          name: 'adcolony',
          value: 5
        }, {
          name: 'tapjoy',
          value: 5
        }, {
          name: 'invite_friends',
          value: 5
        }
      ]
    }
  };
  
});
window.require.register("config/questions/questions", function(exports, require, module) {
  module.exports = [
    {
      "id": 2,
      "text": "Ou s'est déroulé le combat Marcel Cerdan-Tony Zale le 21 septembre 1948 ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Boxe",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Roosevlet Stadium de Jersey City",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Mandalay Bay de Las Vegas",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Madison Square Garden de New York",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Palais Omnisports de Paris Bercy",
          "is_valid": false
        }
      ]
    }, {
      "id": 3,
      "text": "Quel était le surnom donné à Marcel Cerdan ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Boxe",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Le bombardier marocain",
          "is_valid": true
        }, {
          "id": 2,
          "text": "L'exécuteur",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Le Golden Boy",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Le marteleur",
          "is_valid": false
        }
      ]
    }, {
      "id": 4,
      "text": "Où se sont disputés les championnats du monde d'athlétisme en 1991 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Tokyo",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Los Angeles",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Londres",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Séoul",
          "is_valid": false
        }
      ]
    }, {
      "id": 5,
      "text": "Quelle est la nationalité de Michael Phelps ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Américaine",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Britannique",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Allemande",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Australienne",
          "is_valid": false
        }
      ]
    }, {
      "id": 6,
      "text": "Combien de médailles d'or Michael Phelps a-t-il remporté aux JO de Pékin en 2008 ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "8",
          "is_valid": true
        }, {
          "id": 2,
          "text": "6",
          "is_valid": false
        }, {
          "id": 3,
          "text": "4",
          "is_valid": false
        }, {
          "id": 4,
          "text": "10",
          "is_valid": false
        }
      ]
    }, {
      "id": 7,
      "text": "En quelle année Kelly Slater devient champion du monde de surf pour la première fois ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Surf",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "1992",
          "is_valid": true
        }, {
          "id": 2,
          "text": "1995",
          "is_valid": false
        }, {
          "id": 3,
          "text": "1989",
          "is_valid": false
        }, {
          "id": 4,
          "text": "1994",
          "is_valid": false
        }
      ]
    }, {
      "id": 8,
      "text": "Quel pays a remporté la Coupe du monde de cricket en 2007 ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Cricket",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "L'Australie",
          "is_valid": true
        }, {
          "id": 2,
          "text": "L'Inde",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Le Sri Lanka",
          "is_valid": false
        }, {
          "id": 4,
          "text": "L'Angleterre",
          "is_valid": false
        }
      ]
    }, {
      "id": 9,
      "text": "Comment s'appelle la salle du CSP Limoges ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Beaublanc",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Astroballe",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Roger Lemaire - Sportica",
          "is_valid": false
        }, {
          "id": 4,
          "text": "La Meilleraie",
          "is_valid": false
        }
      ]
    }, {
      "id": 10,
      "text": "Dans quel club français évoluait Nicolas Batum avant de rejoindre Portland et la NBA en 2008 ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Le Mans",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Gravelines",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Cholet",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Limoges",
          "is_valid": false
        }
      ]
    }, {
      "id": 11,
      "text": "Quel golfeur détient le record de victoires en Grand Chelem ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Golf",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Jack Nicklaus",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Tiger Woods",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Nick Faldo",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Walter Hagen",
          "is_valid": false
        }
      ]
    }, {
      "id": 12,
      "text": "Dans quel sport s'est illustré Emile Allais, triple champion du monde en 1937 et champion du monde en 1938 ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Ski",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Athlétisme",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Football",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Judo",
          "is_valid": false
        }
      ]
    }, {
      "id": 13,
      "text": "Combien de titre de champion NBA a remporté Michael Jordan ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "6",
          "is_valid": true
        }, {
          "id": 2,
          "text": "5",
          "is_valid": false
        }, {
          "id": 3,
          "text": "4",
          "is_valid": false
        }, {
          "id": 4,
          "text": "7",
          "is_valid": false
        }
      ]
    }, {
      "id": 14,
      "text": "Quel est l'affiche de la finale du championnat d'europe de Basketball en 2009 ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "France-Russie",
          "is_valid": true
        }, {
          "id": 2,
          "text": "France-Bulgarie",
          "is_valid": false
        }, {
          "id": 3,
          "text": "France-Canada",
          "is_valid": false
        }, {
          "id": 4,
          "text": "France-Italie",
          "is_valid": false
        }
      ]
    }, {
      "id": 15,
      "text": "Quel est le score de la finale du championnat d'europe de Basketball en 2009 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "57-53",
          "is_valid": true
        }, {
          "id": 2,
          "text": "73-56",
          "is_valid": false
        }, {
          "id": 3,
          "text": "78-93",
          "is_valid": false
        }, {
          "id": 4,
          "text": "67-63",
          "is_valid": false
        }
      ]
    }, {
      "id": 16,
      "text": "Dans quelle catégorie Marcel Cerdan devient-il champion du monde de boxe le 21 septembre 1948 ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Boxe",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Poids moyens",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Poids lourds",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Poids légers",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Poids coqs",
          "is_valid": false
        }
      ]
    }, {
      "id": 17,
      "text": "Dans quel sport s'est illustré Alain Calmat, champion du monde en 1965 ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Patinage artistique",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Tir",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Equitation",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Ski de fond",
          "is_valid": false
        }
      ]
    }, {
      "id": 18,
      "text": "En quelle année Ladji Doucouré devient champion du monde du 110 mètres haies ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "2005",
          "is_valid": true
        }, {
          "id": 2,
          "text": "2003",
          "is_valid": false
        }, {
          "id": 3,
          "text": "2007",
          "is_valid": false
        }, {
          "id": 4,
          "text": "2001",
          "is_valid": false
        }
      ]
    }, {
      "id": 19,
      "text": "Qui a remporté la Coupe de l'America en 2007 ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Voile",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Alinghi",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Team New Zealand",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Prada",
          "is_valid": false
        }, {
          "id": 4,
          "text": " BMW Oracle Racing",
          "is_valid": false
        }
      ]
    }, {
      "id": 20,
      "text": "Quel navigateur célèbre a remporté la Transat Jacques Vabre avec Yves Parlier en 1997 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Voile",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Eric Tabarly",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Marc Thiercelin",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Loick Peyron",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Marc Guillemot",
          "is_valid": false
        }
      ]
    }, {
      "id": 21,
      "text": "En quelle année Brian Joubert a remporté son premier titre de champion d'Europe ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Patinage artistique",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "2004",
          "is_valid": true
        }, {
          "id": 2,
          "text": "2006",
          "is_valid": false
        }, {
          "id": 3,
          "text": "2005",
          "is_valid": false
        }, {
          "id": 4,
          "text": "2003",
          "is_valid": false
        }
      ]
    }, {
      "id": 22,
      "text": "Combien de tournois du Grand Chelem Tiger Woods remporte-t-il en 2000 ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Golf",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "3",
          "is_valid": true
        }, {
          "id": 2,
          "text": "4",
          "is_valid": false
        }, {
          "id": 3,
          "text": "2",
          "is_valid": false
        }, {
          "id": 4,
          "text": "0",
          "is_valid": false
        }
      ]
    }, {
      "id": 23,
      "text": "Quel club a remporté le championnat de France de basket en 2010 ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Cholet",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Le Mans",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Pau-Orthez",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Gravelines",
          "is_valid": false
        }
      ]
    }, {
      "id": 24,
      "text": "Finale du 100 m nage libre des Jeux de Pékin : Quel est le chrono d'Alain Bernard ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "47\"21",
          "is_valid": true
        }, {
          "id": 2,
          "text": "48\"12",
          "is_valid": false
        }, {
          "id": 3,
          "text": "47\"56",
          "is_valid": false
        }, {
          "id": 4,
          "text": "49\"01",
          "is_valid": false
        }
      ]
    }, {
      "id": 25,
      "text": "Quel club a remporté la Ligue féminine de basket en 2010 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Tarbes",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Valenciennes",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Bourges",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Limoges",
          "is_valid": false
        }
      ]
    }, {
      "id": 26,
      "text": "Dans quelle épreuve Alain Bernard a été sacré champion d'Europe en 2008 et 2010 ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "100m nage libre",
          "is_valid": true
        }, {
          "id": 2,
          "text": "200m nage libre",
          "is_valid": false
        }, {
          "id": 3,
          "text": "4x100 nage libre",
          "is_valid": false
        }, {
          "id": 4,
          "text": "400m nage libre",
          "is_valid": false
        }
      ]
    }, {
      "id": 27,
      "text": "Quel est le premier hockeyeur français à avoir remporté la Coupe Stanley ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Hockey sur glace",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Cristobal Huet",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Eric Huet",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Stéphane Huet",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Gérald Huet",
          "is_valid": false
        }
      ]
    }, {
      "id": 28,
      "text": "Combien de titres de championne d'Europe a remporté la patineuse Surya Bonaly ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Patinage artistique",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "5",
          "is_valid": true
        }, {
          "id": 2,
          "text": "2",
          "is_valid": false
        }, {
          "id": 3,
          "text": "8",
          "is_valid": false
        }, {
          "id": 4,
          "text": "11",
          "is_valid": false
        }
      ]
    }, {
      "id": 29,
      "text": "En quelle année Brahim Asloum est-il devenu champion olympique de boxe ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Boxe",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "2000",
          "is_valid": true
        }, {
          "id": 2,
          "text": "2001",
          "is_valid": false
        }, {
          "id": 3,
          "text": "1999",
          "is_valid": false
        }, {
          "id": 4,
          "text": "1998",
          "is_valid": false
        }
      ]
    }, {
      "id": 30,
      "text": "Quelle est la nationalité de l'ancien champion olympique du 100 mètres Donovan Bailey ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Canadienne",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Américaine",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Jamaïcaine",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Anglaise",
          "is_valid": false
        }
      ]
    }, {
      "id": 31,
      "text": "Dans quelle ville africaine s'est déroulée le combat mythique entre Mohamed Ali et George Foreman le 30 octobre 1974 ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Boxe",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Kinshasa",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Alger",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Abidjan",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Durban",
          "is_valid": false
        }
      ]
    }, {
      "id": 32,
      "text": "Quel club de volley masculin a réalisé le doublé Coupe-Championnat de France en 2010 ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Volleyball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Tours",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Poitiers",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Paris",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Cannes",
          "is_valid": false
        }
      ]
    }, {
      "id": 33,
      "text": "Quel joueur a été élu meilleur basketteur français du XXe siècle ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Alain Gilles",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Richard Dacoury",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Tony Parker",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Antoine Rigaudeau",
          "is_valid": false
        }
      ]
    }, {
      "id": 34,
      "text": "Qui a remporté la Ligue Magnus en 2010 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Hockey sur glace",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Les Dragons de Rouen",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Les Ducs d'Angers",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Les bruleurs de loups de Grenoble",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Les diables rouges de Briançon",
          "is_valid": false
        }
      ]
    }, {
      "id": 35,
      "text": "Camille Lacourt, triple champion d'Europe en 2010, est spécialiste de quelle nage ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Dos",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Brasse",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Papillon",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Crawl",
          "is_valid": false
        }
      ]
    }, {
      "id": 36,
      "text": "Quelle barre a franchi le perchiste Sergueï Bubka le 31 juillet 1994 à Sestrières ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "6,14 m",
          "is_valid": true
        }, {
          "id": 2,
          "text": "5,98 m",
          "is_valid": false
        }, {
          "id": 3,
          "text": "5,90 m",
          "is_valid": false
        }, {
          "id": 4,
          "text": "6,22 m",
          "is_valid": false
        }
      ]
    }, {
      "id": 37,
      "text": "Quelle équipe de NBA joue au Madison Square Garden ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "New York Knicks",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Houston Rocket",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Chicago Bulls",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Denver Nuggets",
          "is_valid": false
        }
      ]
    }, {
      "id": 38,
      "text": "Que remet-on au vainqueur du Masters de golf d'Augusta ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Golf",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Une veste verte",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Une veste doré",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Une veste orange",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Une veste noire",
          "is_valid": false
        }
      ]
    }, {
      "id": 39,
      "text": "Quel était le surnom des handballeurs français, champions olympique en 2008, du monde en 2009 et d'Europe en 2010 ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Handball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Les Experts",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Les Barjots",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Les Cinglés",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Les Indestructibles",
          "is_valid": false
        }
      ]
    }, {
      "id": 40,
      "text": "Quel athlète britannique était surnommé le \"Goéland\" ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Jonathan Edwards ",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Linford Christie",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Tim Henman",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Steven Gerrard",
          "is_valid": false
        }
      ]
    }, {
      "id": 41,
      "text": "Dans quel sport s'est illustré Thierry Lincou, champion du monde en 2004 ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Squash",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Tennis",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Judo",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Natation",
          "is_valid": false
        }
      ]
    }, {
      "id": 42,
      "text": "Quel est le lien de parenté entre les basketteurs Alain Digbeu et Jennifer Digbeu ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Frère et sœur",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Aucun lien",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Cousin et cousinne",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Oncle et nièce",
          "is_valid": false
        }
      ]
    }, {
      "id": 43,
      "text": "Quel boxeur a été mordu à l'oreille par Mike Tyson en plein combat en 1997 ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Boxe",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Evander Holyfield",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Lennox Lewis",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Jean-Marc Mormeck",
          "is_valid": false
        }, {
          "id": 4,
          "text": "David Haye",
          "is_valid": false
        }
      ]
    }, {
      "id": 44,
      "text": "Comment s'appelle la salle du club de basket du Mans ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Antarès",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Beaublanc",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Astroballe",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Palais des Sports",
          "is_valid": false
        }
      ]
    }, {
      "id": 45,
      "text": "En quelle année la France est-elle devenue championne du monde de beach soccer ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Beach Soccer",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "2005",
          "is_valid": true
        }, {
          "id": 2,
          "text": "2008",
          "is_valid": false
        }, {
          "id": 3,
          "text": "2006",
          "is_valid": false
        }, {
          "id": 4,
          "text": "2007",
          "is_valid": false
        }
      ]
    }, {
      "id": 46,
      "text": "Quel est le plus ancien trophée encore disputé de nos jours ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "La Coupe de l'America",
          "is_valid": true
        }, {
          "id": 2,
          "text": "La Coupe du Monde",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Le Tour de France",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Les Jeux Olympiques",
          "is_valid": false
        }
      ]
    }, {
      "id": 47,
      "text": "Quelle équipe a remporté le Super Bowl en 2010 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Foot US",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "New Orleans Saints",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Indianapolis Colts",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Pittsburgh Steelers",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Arizona Cardinals",
          "is_valid": false
        }
      ]
    }, {
      "id": 48,
      "text": "Quel est le surnom d'un terrain de baseball ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Baseball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Le diamant",
          "is_valid": true
        }, {
          "id": 2,
          "text": "La zone",
          "is_valid": false
        }, {
          "id": 3,
          "text": "La raquette",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Le corner",
          "is_valid": false
        }
      ]
    }, {
      "id": 49,
      "text": "Quel athlète français est sacré champion du monde du 200 mètres en salle en 1987 ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Bruno Marie-Rose",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Stéphane Diagana",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Stéphane Caristan",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Christophe Cheval",
          "is_valid": false
        }
      ]
    }, {
      "id": 50,
      "text": "Combien de fois Tony Estanguet a-t-il été sacré champion du monde individuel de canoë ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Canoë / Kayak",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "3",
          "is_valid": true
        }, {
          "id": 2,
          "text": "5",
          "is_valid": false
        }, {
          "id": 3,
          "text": "7",
          "is_valid": false
        }, {
          "id": 4,
          "text": "1",
          "is_valid": false
        }
      ]
    }, {
      "id": 51,
      "text": "Quel club de basket français évolue à domicile dans la Halle André Vacheresse ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Roanne",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Limoges",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Pau-Orthez",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Gravelines",
          "is_valid": false
        }
      ]
    }, {
      "id": 52,
      "text": "2010. Christophe Lemaitre devient le 1er sprinter blanc à passer sous les 10 sec sur 100 mètres. Lors de quelle compétition a-t-il réalisé cet exploit ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Championnat de France",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Championnat d'Europe en salle",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Championnat d'Europe",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Championnat du monde",
          "is_valid": false
        }
      ]
    }, {
      "id": 53,
      "text": "2010. Christophe Lemaitre devient le 1er sprinter blanc à passer sous les 10 sec sur 100 mètres. Quel chrono a-t-il réalisé ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "9\"98",
          "is_valid": true
        }, {
          "id": 2,
          "text": "9\"96",
          "is_valid": false
        }, {
          "id": 3,
          "text": "9\"86",
          "is_valid": false
        }, {
          "id": 4,
          "text": "9\"89",
          "is_valid": false
        }
      ]
    }, {
      "id": 54,
      "text": "Quel cavalier français a été sacré champion d'Europe du saut d'obstacle en individuel en 2009 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Equitation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Kévin Staut",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Tom Dupeau",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Antoine Cocoynacq",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Simon Rambaud",
          "is_valid": false
        }
      ]
    }, {
      "id": 55,
      "text": "Sous quel nom le boxeur américain Muhammad Ali commença-t-il sa carrière ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Boxe",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Cassius Clay",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Curtis Cokes",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Eddie Chambers",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Jimmy Ellis",
          "is_valid": false
        }
      ]
    }, {
      "id": 56,
      "text": "Dans quel album d'Astérix se dispute un combat de boxe au sommet ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Boxe",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Le Combat des chefs",
          "is_valid": true
        }, {
          "id": 2,
          "text": "La zizanie",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Astérix en corse",
          "is_valid": false
        }, {
          "id": 4,
          "text": "La rose et le glaive",
          "is_valid": false
        }
      ]
    }, {
      "id": 57,
      "text": "Quel lien de parenté existe-t-il entre les anciens patineurs Paul et Isabelle Duchesnay ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Patinage artistique",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Frère et sœur",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Cousins",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Père/fille",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Aucun",
          "is_valid": false
        }
      ]
    }, {
      "id": 58,
      "text": "Quel sprinter canadien fut le premier champion olympique du 100 m déclassé pour dopage ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Ben Johnson",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Donovan Bailey",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Roger Bambuck",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Bruny Surin",
          "is_valid": false
        }
      ]
    }, {
      "id": 59,
      "text": "Quel boxeur français trouva la mort dans un accident d'avion aux Açores en 1949 ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Boxe",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Marcel Cerdan",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Rocky Marciano",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Thierry Sabine",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Payne Stewart",
          "is_valid": false
        }
      ]
    }, {
      "id": 60,
      "text": "Quelle grande chanteuse française consacra l'une de ses plus belles chansons au boxeur Marcel Cerdan ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Boxe",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Edith Piaf",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Isabelle Aubret",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Dalida",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Jane Berbié",
          "is_valid": false
        }
      ]
    }, {
      "id": 61,
      "text": "Quelle est la nationalité du golfeur Greg Norman ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Golf",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Australienne",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Neo-zélandaise",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Américaine",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Britannique",
          "is_valid": false
        }
      ]
    }, {
      "id": 62,
      "text": "Quelle athlète a couru pieds nus dans une publicité pour des pneus ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Marie-José Pérec",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Maryse Ewanjé-Epée",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Mary Pierce",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Marion Jones",
          "is_valid": false
        }
      ]
    }, {
      "id": 63,
      "text": "Quelle escrimeuse française est surnommée \"La Guêpe\" ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Escrime",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Laura Flessel",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Anne-Lise Touya",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Cécile Argiolas",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Valérie Barlois",
          "is_valid": false
        }
      ]
    }, {
      "id": 64,
      "text": "Quel était le surnom du perchiste Sergueï Bubka ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Le Tsar",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Le Roi",
          "is_valid": false
        }, {
          "id": 3,
          "text": "The legend",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Sbubkamax",
          "is_valid": false
        }
      ]
    }, {
      "id": 65,
      "text": "Quel athlète est surnommé \"la Statue\" ou \"la Loco de Waco\" ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Michael Johnson",
          "is_valid": true
        }, {
          "id": 2,
          "text": "C.J.Hunter",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Maurice Greenne",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Frankie Fredericks",
          "is_valid": false
        }
      ]
    }, {
      "id": 66,
      "text": "Quel film a retracé l'histoire vraie de la première équipe olympique jamaïquaine de bobsleigh ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Bobsleigh",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Rasta Rocket",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Bobsleigh Jamaica",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Jamacia Bob",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Rasto bobsleigh",
          "is_valid": false
        }
      ]
    }, {
      "id": 67,
      "text": "Dans quel sport l'acteur Chuck Norris fut-il champion du monde professionnel des moyens de 1968 à 1974 ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Karaté",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Judo",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Boxe",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Golf",
          "is_valid": false
        }
      ]
    }, {
      "id": 68,
      "text": "Que représente le \"S\" tatoué sur le bras du basketteur O'Neal ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Shaq",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Sports",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Sarah",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Shoot",
          "is_valid": false
        }
      ]
    }, {
      "id": 69,
      "text": "Quel est le surnom du boxeur Mike Tyson ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Boxe",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Iron Mike",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Miky",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Gold Mike",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Silver Mike",
          "is_valid": false
        }
      ]
    }, {
      "id": 70,
      "text": "Quel grand boxeur s'est fait tatouer un portrait de Che Guevara sur le corps ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Boxe",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Mike Tyson",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Evander Hollyfield",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Carlos Monzon",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Christophe Tiozzo",
          "is_valid": false
        }
      ]
    }, {
      "id": 71,
      "text": "Quel sport pratique régulièrement Snoopy, le chien créé par le dessinateur Charles Schulz ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Baseball",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Basket-ball",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Volley-ball",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Football américain",
          "is_valid": false
        }
      ]
    }, {
      "id": 72,
      "text": "Quel était le nom de la fabuleuse équipe américaine de basket qui s'imposa aux JO de 1992 à Barcelone ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Dream Team",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Star Team",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Moon Team",
          "is_valid": false
        }, {
          "id": 4,
          "text": "All star Team",
          "is_valid": false
        }
      ]
    }, {
      "id": 73,
      "text": "Quel champion olympique du 100 m nage libre incarna Tarzan à l'écran ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Johnny Weissmuller",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Mark Spitz",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Jim Montgomery",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Matt Biondi",
          "is_valid": false
        }
      ]
    }, {
      "id": 74,
      "text": "Quel lien de parenté existe-t-il entre le sprinter Ben Johnson et le basketteur Earvin \"Magic\" Johnson ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Aucun",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Frères",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Père/fils",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Cousins",
          "is_valid": false
        }
      ]
    }, {
      "id": 75,
      "text": "Quel sport pratiqua Lionel Jospin dans sa jeunesse ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Le basket-ball",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Volley-ball",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Escrime",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Judo",
          "is_valid": false
        }
      ]
    }, {
      "id": 76,
      "text": "Quel acteur américain incarne Muhammad Ali dans le film \"Ali\" ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Boxe",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Will Smith",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Denzel Washington",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Cuba Gooding Jr",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Morgan Freeman",
          "is_valid": false
        }
      ]
    }, {
      "id": 77,
      "text": "Quel acteur américain incarne le boxeur Rocky Balboa à l'écran ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Boxe",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Sylvester Stallone",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Mickey Rourke",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Arnold Schwarzenegger ",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Bruce Willis",
          "is_valid": false
        }
      ]
    }, {
      "id": 78,
      "text": "Quel sport pratique l'acteur américain Mickey Rourke ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Boxe",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Golf",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Aviron",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Escrime",
          "is_valid": false
        }
      ]
    }, {
      "id": 79,
      "text": "Quel sport pratiquent les \"Bronzés\" dans le second film de la série ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Du ski",
          "is_valid": true
        }, {
          "id": 2,
          "text": "De la voile",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Du Hockey-sur-glace",
          "is_valid": false
        }, {
          "id": 4,
          "text": "De la natation",
          "is_valid": false
        }
      ]
    }, {
      "id": 80,
      "text": "Quels liens de parenté existe-t-il entre Christine et Marielle Goitschel, toutes deux championnes olympiques de ski ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Ski",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Sœurs",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Cousines",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Mère/fille",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Aucun",
          "is_valid": false
        }
      ]
    }, {
      "id": 81,
      "text": "Quel sportif français fut le parrain de l'opération \"pièces jaunes\" ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "David Douillet",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Djamel Bourras",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Zinedine Zidane",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Yannick Noah",
          "is_valid": false
        }
      ]
    }, {
      "id": 82,
      "text": "Quel sport pratiqua Lino Ventura dans sa jeunesse ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Le catch",
          "is_valid": true
        }, {
          "id": 2,
          "text": "La Boxe",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Le sport auto",
          "is_valid": false
        }, {
          "id": 4,
          "text": "La gymnastique",
          "is_valid": false
        }
      ]
    }, {
      "id": 83,
      "text": "Quel fut le premier perchiste à franchir 6 mètres ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Sergueï Bubka",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Jean Galfione",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Maksim Tarasov",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Jeff Hartwig",
          "is_valid": false
        }
      ]
    }, {
      "id": 84,
      "text": "Quel fut le premier alpiniste à vaincre l'Everest ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Sir Edmund Hillary",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Edward Whymper ",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Joe Simpson",
          "is_valid": false
        }, {
          "id": 4,
          "text": "John Hunt",
          "is_valid": false
        }
      ]
    }, {
      "id": 86,
      "text": "Quel boxeur américain s'était surnommé lui-même \"The Greatest\" (le plus grand) ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Boxe",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Muhammad Ali",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Evander Hollyfield",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Mike Tyson",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Ray Sugar Leonard",
          "is_valid": false
        }
      ]
    }, {
      "id": 87,
      "text": "Quel sport pratique l'acteur Jean Rochefort ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Equitation",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Cyclisme",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Tennis de Table",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Tennis",
          "is_valid": false
        }
      ]
    }, {
      "id": 88,
      "text": "De quelle origine est Roxana Maracineanu, première Française championne du monde de natation ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Roumaine",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Bielorusse",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Ukrainienne",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Arménienne",
          "is_valid": false
        }
      ]
    }, {
      "id": 89,
      "text": "Quel magazine omnisports lança le journal \"L'Equipe\" en 1980 ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "L'Equipe Magazine",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Sports",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Sport Week",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Sportimum",
          "is_valid": false
        }
      ]
    }, {
      "id": 90,
      "text": "Quel sport pratiquait Jean Bouin, qui a donné son nom à tant de stades en France ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Athlétisme",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Boxe",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Gymnastique",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Football",
          "is_valid": false
        }
      ]
    }, {
      "id": 91,
      "text": "Quel est le sport pratiqué par le prince Albert de Monaco ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Bobsleigh",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Boxe",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Voile",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Tir à l'arc",
          "is_valid": false
        }
      ]
    }, {
      "id": 92,
      "text": "Quel est le sport pratiqué par le prince Charles d'Angleterre ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Polo",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Equitation",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Natation",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Rugby",
          "is_valid": false
        }
      ]
    }, {
      "id": 93,
      "text": "Dans quel autre sport assure le footballeur Bixente Lizarazu ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Surf",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Rugby",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Tennis de Table",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Lutte",
          "is_valid": false
        }
      ]
    }, {
      "id": 94,
      "text": "Quel fantastique sprinter et sauteur en longueur américain a chanté \"Goin' for the gold\" en 1984 ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Carl Lewis",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Mike Powell",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Ben Jonhson",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Calvin Smith",
          "is_valid": false
        }
      ]
    }, {
      "id": 95,
      "text": "Quel basketteur américain est surnommé \"His Airness\" ? ",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Michael Jordan",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Lebron James",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Chris Bosh",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Dwayne Wade",
          "is_valid": false
        }
      ]
    }, {
      "id": 96,
      "text": "Quel grand basketteur a pris sa retraite après avoir annoncé qu'il était séropositif ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Magic Johnson",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Michael Jordan",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Charles Barkley",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Richard Dacoury",
          "is_valid": false
        }
      ]
    }, {
      "id": 97,
      "text": "Quel célèbre skieur français a sa propre marque de lunettes ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Ski",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Jean Vuarnet",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Franck Picard",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Jean-Claude Killy",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Luc Alphand",
          "is_valid": false
        }
      ]
    }, {
      "id": 98,
      "text": "Quel chanteur a inventé sa propre boule de pétanque ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Pétanque",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Henri Salvador",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Johnny Halliday",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Pascal Obispo",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Jacques Brel",
          "is_valid": false
        }
      ]
    }, {
      "id": 99,
      "text": "Comment s'appelait l'école militaire où sont passées les plus grandes stars du sport français ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Le Bataillon de Joinville",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Le régiment sport",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Le régiment saint-michel",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Le bataillon de saint-sauveur",
          "is_valid": false
        }
      ]
    }, {
      "id": 100,
      "text": "Dans quel sport l'animatrice TV Nathalie Simon a-t-elle excellé ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Planche à voile",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Boxe",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Surf",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Golf",
          "is_valid": false
        }
      ]
    }, {
      "id": 101,
      "text": "Quel skieur italien fut surnommé \"La Bomba\" ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Ski",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Alberto Tomba",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Giorgio Rocca",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Bruno Alberti",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Massimiliano Blardone",
          "is_valid": false
        }
      ]
    }, {
      "id": 102,
      "text": "Quel lien de parenté existe-t-il entre Christophe et Fabrice Tiozzo, ayant tous deux détenu un titre mondial de boxe ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Boxe",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Frères",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Père / Fils",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Cousins",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Aucun",
          "is_valid": false
        }
      ]
    }, {
      "id": 103,
      "text": "Quelle firme d'équipements sportifs tire son nom d'une gazelle, appelée Reed-book en anglais ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Reebok",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Nike",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Adidas",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Puma",
          "is_valid": false
        }
      ]
    }, {
      "id": 104,
      "text": "Dans quel film Dustin Hoffman s'entraîne-t-il pour courir le marathon à New York ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "\"Marathon man\"",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Good morning Vietman",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Ms Doubtfire",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Rain Man",
          "is_valid": false
        }
      ]
    }, {
      "id": 105,
      "text": "Dans quel sport Jean-Claude Van Damme fut-il sacré champion d'Europe professionnel des moyens ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Karaté",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Judo",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Boxe",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Haikido",
          "is_valid": false
        }
      ]
    }, {
      "id": 106,
      "text": "Quelle partie du corps d’Evander Holyfield a fini dans la bouche de Mike Tyson ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Boxe",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Un bout d'oreille",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Un bout de nez",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Un bout de bras",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Un doigt",
          "is_valid": false
        }
      ]
    }, {
      "id": 107,
      "text": "Dans quelle discipline s'est convertit Éric Cantona après sa retraite ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Beach soccer",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Volley-ball",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Basket-ball",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Futsal",
          "is_valid": false
        }
      ]
    }, {
      "id": 108,
      "text": "Quel grand skieur fait maintenant parler de lui au Paris-Dakar ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Ski",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Luc Alphand",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Franck Piccard",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Antoine Deneriaz",
          "is_valid": false
        }, {
          "id": 4,
          "text": "jean-Claude Killy",
          "is_valid": false
        }
      ]
    }, {
      "id": 109,
      "text": "Quel patineur français incarna sur la glace le personnage de Lucky Luke ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Patinage artistique",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Philippe Candeloro",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Brian Joubert",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Damien Djordjevic",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Vincent Restencourt",
          "is_valid": false
        }
      ]
    }, {
      "id": 110,
      "text": "Quelle discipline pratiqua le chanteur Roch Voisine ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Le hockey sur glace",
          "is_valid": true
        }, {
          "id": 2,
          "text": "baseball",
          "is_valid": false
        }, {
          "id": 3,
          "text": "basketball",
          "is_valid": false
        }, {
          "id": 4,
          "text": "escrime",
          "is_valid": false
        }
      ]
    }, {
      "id": 111,
      "text": "Quel joueur de baseball fut marié à Marylin Monroe ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Baseball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Joe Di Maggio",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Arthur Miller",
          "is_valid": false
        }, {
          "id": 3,
          "text": "James Dougherty",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Rock Hudson",
          "is_valid": false
        }
      ]
    }, {
      "id": 112,
      "text": "Qui incarna Marcel Cerdan dans le film \"Edith et Marcel\" de Claude Lelouch ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Boxe",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Marcel Cerdan Jr",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Patrick Dewaere",
          "is_valid": false
        }, {
          "id": 3,
          "text": "jean Bouise",
          "is_valid": false
        }, {
          "id": 4,
          "text": "jacques Villeret",
          "is_valid": false
        }
      ]
    }, {
      "id": 113,
      "text": "Quel grand boxeur incarne Robert De Niro dans le légendaire \"Raging Bull\" de Martin Scorsese ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Boxe",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Jake La Motta",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Mike tyson",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Thomas hearns",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Roberto Duran",
          "is_valid": false
        }
      ]
    }, {
      "id": 114,
      "text": "Pour quelle raison le boxeur argentin Carlos Monzon passa-t-il de nombreuses années en prison ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Boxe",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Pour le meurtre de sa femme",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Traffic de drogue",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Viol",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Homicide involontaire",
          "is_valid": false
        }
      ]
    }, {
      "id": 115,
      "text": "Quel boxeur fut marié avec l'actrice américaine Robin Givens ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Boxe",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Mike Tyson",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Evander Hollyfield",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Lennox Lewis",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Joe Frazier",
          "is_valid": false
        }
      ]
    }, {
      "id": 116,
      "text": "Dans quel sport l'acteur Michel Constantin fut-il international ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Volley-ball",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Handball",
          "is_valid": false
        }, {
          "id": 3,
          "text": "basketball",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Base-ball",
          "is_valid": false
        }
      ]
    }, {
      "id": 117,
      "text": "Pour quel motif le boxeur Mike Tyson passa-t-il plusieurs années en prison ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Boxe",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Pour viol",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Meurtre",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Tentative de meurtre",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Traffic de drogue",
          "is_valid": false
        }
      ]
    }, {
      "id": 118,
      "text": "Quel ancien sprinter et sauteur en longueur américain se faisait appeler \"King Carl\" ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Carl Lewis",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Maurice Greene",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Sam Graddy",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Tim Montgomery",
          "is_valid": false
        }
      ]
    }, {
      "id": 119,
      "text": "Quel acteur américain incarne-t-il un agent de joueurs dans le film \"Jerry Maguirre\" ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Tom Cruise",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Ben Affleck",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Harvey keitel",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Christopher Walken",
          "is_valid": false
        }
      ]
    }, {
      "id": 120,
      "text": "Quel est l'autre métier du boxeur George Foreman, ancien champion du monde des poids lourds ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Boxe",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Pasteur",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Controleur de train",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Agriculteur",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Avocat",
          "is_valid": false
        }
      ]
    }, {
      "id": 121,
      "text": "Quel ancien boxeur français tourna sous la direction de Jean-Luc Godard dans \"Détective\" ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Boxe",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Stéphane Ferrara",
          "is_valid": true
        }, {
          "id": 2,
          "text": "René Jacquot",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Alain Ruocco",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Hocine Tafer",
          "is_valid": false
        }
      ]
    }, {
      "id": 122,
      "text": "Quel coureur de fond éthiopien tint son propre rôle dans le film \"Endurance\" sorti en 1998 ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Haile Gebreselassié ",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Kenenisa Bekele",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Tirunesh Dibaba",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Gebre Gebremariam",
          "is_valid": false
        }
      ]
    }, {
      "id": 123,
      "text": "Quel acteur tient le rôle de Rocco dans \"Rocco et ses frères\" réalisé en 1960 par Luchino Visconti ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Alain Delon",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Max Cartier",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Renato Salvatori",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Jacques Perrin",
          "is_valid": false
        }
      ]
    }, {
      "id": 124,
      "text": "Dans quelle série télévisée le grand nageur américain Mark Spitz a-t-il fait une apparition aux côtés de George Clooney ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "\"Urgences\"",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Friends",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Enquêtes privée",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Les sœurs Reed",
          "is_valid": false
        }
      ]
    }, {
      "id": 125,
      "text": "De quel type de marathon s'agit-il dans le film de Sydney Pollack, \"On achève bien les chevaux\" ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Marathon de danse",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Semi Marathon",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Marathon de canoë-kayak",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Char Marathon",
          "is_valid": false
        }
      ]
    }, {
      "id": 126,
      "text": "Quel est le nom du groupe interprète du titre \"We are the Champions\" ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Queen",
          "is_valid": true
        }, {
          "id": 2,
          "text": "The Who",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Pink Floyd",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Deep Purple",
          "is_valid": false
        }
      ]
    }, {
      "id": 127,
      "text": "Qu'est-ce que les \"Blancs ne savent pas…\" faire, en basket, dans le film de Ron Shelton sorti en 1992 ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Sauter",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Dunker",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Passer",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Contrer",
          "is_valid": false
        }
      ]
    }, {
      "id": 128,
      "text": "Quel sport pratiqua le basketteur Michael Jordan pendant sa première \"retraite\" ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Le baseball",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Le Golf",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Le Squash",
          "is_valid": false
        }, {
          "id": 4,
          "text": "le Volley-Ball",
          "is_valid": false
        }
      ]
    }, {
      "id": 129,
      "text": "Quel lien de parenté existe-t-il entre les basketteurs Jean-Claude et Yann Bonato, tous deux internationaux ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Père et fils",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Frères",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Cousins",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Oncle et neveu",
          "is_valid": false
        }
      ]
    }, {
      "id": 130,
      "text": "Quel golfeur australien était surnommé \"le Requin blanc\" ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Golf",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Greg Norman",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Stuart Appleby",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Adam Scott",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Nick O'Hern",
          "is_valid": false
        }
      ]
    }, {
      "id": 131,
      "text": "Quel boxeur américain, ex-champion du monde des lourds, a pris le nom de Malik Abdul-Aziz depuis sa conversion à l'islam en 1991 ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Boxe",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Mike Tyson",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Cassius Clay",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Ferdinand Lewis Alcindor",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Hakeem Olajuwon",
          "is_valid": false
        }
      ]
    }, {
      "id": 132,
      "text": "Quel acteur interprète le boxeur \"Gentleman Jim\" dans le film du même nom, tournée par Raoul Walsh en 1942 ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Boxe",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Errol Flynn",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Jack Carson",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Alan Hale",
          "is_valid": false
        }, {
          "id": 4,
          "text": "John Loder",
          "is_valid": false
        }
      ]
    }, {
      "id": 133,
      "text": "Quelle est la spécialité sportive de l’ancien mari de Marion Jones ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Lancer de poids",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Lancer de Javelot",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Lancer de disque",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Lancer de couteaux",
          "is_valid": false
        }
      ]
    }, {
      "id": 134,
      "text": "Quel est le sport pratiqué par Laila Ali, la fille du légendaire boxeur ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Boxe",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Boxe",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Danse Classique",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Sprint",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Basket-ball",
          "is_valid": false
        }
      ]
    }, {
      "id": 135,
      "text": "Quel grand nageur fait la course avec un phoque dans une piscine lors d’une pub pour un sponsor ? ",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Ian Thorpe",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Michael Phelps",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Paul Biedermann",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Alain Bernard",
          "is_valid": false
        }
      ]
    }, {
      "id": 136,
      "text": "Quelle était la chanson phare lors de la victoire au Championnat d’Europe en 2001 de l’équipe de France féminine de basket ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "\"Les Corons\" de Pierre Bachelet",
          "is_valid": true
        }, {
          "id": 2,
          "text": "\"Va y avoir du sport\" de Silmarils",
          "is_valid": false
        }, {
          "id": 3,
          "text": "\"Batling Joe\" de Yves Montand",
          "is_valid": false
        }, {
          "id": 4,
          "text": "\"Johnny Repp\" de Mickey 3D",
          "is_valid": false
        }
      ]
    }, {
      "id": 137,
      "text": "Sur le terrain de baseball, quelle est la position de Charlie Brown, le copain de Snoopy ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Baseball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Lanceur (pitcher).",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Receveur",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Premier but",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Arrêt-Court",
          "is_valid": false
        }
      ]
    }, {
      "id": 138,
      "text": "Quel Français est le précurseur de la position de l'œuf en descente à ski ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Ski",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Jean Vuarnet",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Jean-Luc Crétier",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Piero Gros",
          "is_valid": false
        }, {
          "id": 4,
          "text": "jean-Claude Killy",
          "is_valid": false
        }
      ]
    }, {
      "id": 139,
      "text": "Quel fantastique skieur autrichien est surnommé \"Herminator\" ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Ski",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Hermann Maier",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Reinfried Herbst",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Hans Hauser",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Ernst Hinterseer",
          "is_valid": false
        }
      ]
    }, {
      "id": 140,
      "text": "Quel chanteur français connut un certain succès avec un titre dédié à la course Strasbourg-Paris à la marche ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Laurent Voulzy",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Francis Cabrel",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Alain Souchon",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Axel Bauer",
          "is_valid": false
        }
      ]
    }, {
      "id": 141,
      "text": "Quel sport pratiqua dans sa jeunesse avec une certaine réussite la chanteuse Princesse Erika ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "L'athlétisme",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Le ski",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Le Hockey",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Le tir à l'arc",
          "is_valid": false
        }
      ]
    }, {
      "id": 142,
      "text": "Dans quel sport excellait le roi François 1er ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Le jeu de paume",
          "is_valid": true
        }, {
          "id": 2,
          "text": "La chasse",
          "is_valid": false
        }, {
          "id": 3,
          "text": "La pelote basque",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Le football",
          "is_valid": false
        }
      ]
    }, {
      "id": 143,
      "text": "Avec quel surfeur s'est mariée l'animatrice télé Véronika Loubry ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Surf",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Robert Teriitheau",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Malik Joyeux",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Jeremy Florès",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Mikael Picon",
          "is_valid": false
        }
      ]
    }, {
      "id": 144,
      "text": "Quel basketteur américain a enregistré un disque de rap ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Shaq O'Neal (ou Allen Iverson)",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Michael jordan",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Lebron James",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Dwight Howard",
          "is_valid": false
        }
      ]
    }, {
      "id": 145,
      "text": "Quel lien de parenté existe-t-il entre Adolf Dassler, fondateur d'Adidas, et Rudolf Dassler, fondateur de Puma ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Frères",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Aucun",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Père/fils",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Cousins",
          "is_valid": false
        }
      ]
    }, {
      "id": 146,
      "text": "De quel Président américain Florence Griffith-Joyner fut-elle conseillère pour les sports ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Bill Clinton",
          "is_valid": true
        }, {
          "id": 2,
          "text": "George H W Bush",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Jimmy Carter",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Ronald W Reagan",
          "is_valid": false
        }
      ]
    }, {
      "id": 147,
      "text": "Quel nageur a évité la mort en allant rechercher son appareil photo alors qu'il visitait les Twin Towers le 11 sept 2001 ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Ian Thorpe",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Frédérick Bousquet",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Michael Phelps",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Ryan Lochte",
          "is_valid": false
        }
      ]
    }, {
      "id": 148,
      "text": "A part Evander Holyfield, quel autre boxeur Mike Tyson s’est-il permis de croquer (à la jambe) ? ",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Boxe",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Lennox Lewis",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Danny Williams",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Kevin Mc Bride",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Jesse Fergusson",
          "is_valid": false
        }
      ]
    }, {
      "id": 149,
      "text": "Dans les bras de quelle actrice en petit maillot de bain le surfeur Kelly Slater s'est-il souvent retrouvé ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Surf",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Ceux de Pamela Anderson",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Katie Holmes",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Nicole Kidman",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Jennifer Anniston",
          "is_valid": false
        }
      ]
    }, {
      "id": 150,
      "text": "Quelle patineuse a bricolé une petite histoire d'amour avec Richard Dean Anderson (MacGyver) ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Patinage artistique",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Katarina Witt",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Surya Bonaly",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Michelle Kwan",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Lu Chen",
          "is_valid": false
        }
      ]
    }, {
      "id": 151,
      "text": "De quelle grande top-model Mike Tyson a-t-il fait brièvement battre le cœur ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Boxe",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Naomi Campbell",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Claudia Schiffer",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Kate Moss",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Linda Evangelista",
          "is_valid": false
        }
      ]
    }, {
      "id": 152,
      "text": "Quel actuel chanteur a interrompu sa carrière de footballeur au Real de Madrid à cause d'un accident de voiture ?",
      "category": "Football Internationnal",
      "difficulty": 3,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Julio Iglesias",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Joel Bats",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Roger Milla",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Franz Beckenbauer",
          "is_valid": false
        }
      ]
    }, {
      "id": 153,
      "text": "Quel acteur tient le rôle principal du fan de baseball dans le film \"The Fan\" ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Baseball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Robert De Niro",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Kevin Costner",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Wesley Snipes",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Robert Redford",
          "is_valid": false
        }
      ]
    }, {
      "id": 154,
      "text": "Avec quel basketteur américain le groupe 2Be3 a-t-il joué dans le film \"Simon Sez\" ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Dennis Rodman",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Kobe Bryant",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Shaquille O'neal",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Allen Iverson",
          "is_valid": false
        }
      ]
    }, {
      "id": 155,
      "text": "Quel sport Céline Géraud pratiquait-elle avant d'animer l'émission \"Tout le Sport\" sur France 3 ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Judo",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Karaté",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Taïkwendo",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Boxe",
          "is_valid": false
        }
      ]
    }, {
      "id": 156,
      "text": "Au mariage de quel sportif français le président Jacques Chirac était-il présent (le 14 avril 2001) ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Celui de David Douillet",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Zinédine Zidane",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Yannick Noah",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Brahim Asloum",
          "is_valid": false
        }
      ]
    }, {
      "id": 157,
      "text": "Quelle célèbre nageuse est le Petit Chaperon Rouge dans une publicité pour un grand parfum français ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Estella Warren",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Laura Manaudou",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Virginie Dedieu",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Aurore Mongel",
          "is_valid": false
        }
      ]
    }, {
      "id": 158,
      "text": "Dans quel sport s'exprima, à haut niveau, le Président sénégalais Abdou Diouf ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Basket-ball",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Football",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Lutte",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Boxe",
          "is_valid": false
        }
      ]
    }, {
      "id": 159,
      "text": "Dans quel club français de football le père de Pascal Obispo a-t-il joué ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Girondins de Bordeaux",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Toulouse FC",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Montpellier",
          "is_valid": false
        }, {
          "id": 4,
          "text": "FC Nantes",
          "is_valid": false
        }
      ]
    }, {
      "id": 160,
      "text": "Quel athlète est surnommé \"la Comète du Kansas\" ?  ",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Maurice Greene ",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Sergeï Boubka",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Carl Lewis",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Jonathan Edwards",
          "is_valid": false
        }
      ]
    }, {
      "id": 161,
      "text": "Dans le film \"Ocean's eleven\" sorti en 2002, pendant un match de quel boxeur se déroule un casse dans un casino de Las Vegas ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Boxe",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Lennox Lewis",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Tyrel Biggs",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Riddick bowe",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Evander Holyfield",
          "is_valid": false
        }
      ]
    }, {
      "id": 162,
      "text": "Avant qu'il se convertisse à l'islam en 1997, comment s'appelait le basketteur français Tariq Abdul-Wahad ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Olivier Saint-Jean",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Serge Saint-Pierre",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Jean Saint-Olivier",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Pierre Saint-Jean",
          "is_valid": false
        }
      ]
    }, {
      "id": 163,
      "text": "Quel est le seul golfeur à avoir remporté les quatre tournois du Grand Chelem la même année ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Golf",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Bobby Jones, en 1928",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Tiger Woods en 2005",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Lee Trevino en 1971",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Ben Hogan en 1953",
          "is_valid": false
        }
      ]
    }, {
      "id": 164,
      "text": "Quel champion américain inventa et donna son nom au style actuel en saut en hauteur ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Dick Fosbury",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Bruce Quande",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Kane kramer",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Peter Backflop",
          "is_valid": false
        }
      ]
    }, {
      "id": 165,
      "text": "De quelle nationalité était le patineur Ulrich Salchow qui inventa le saut qui porte son nom ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Patinage artistique",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Suédois",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Allemand",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Danois",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Néerlandais",
          "is_valid": false
        }
      ]
    }, {
      "id": 166,
      "text": "Dans quel sport le réalisateur Élie Chouraqui '\"Parole et musique\" fut-il international ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Volley-ball",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Handball",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Hockey sur gazon",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Judo",
          "is_valid": false
        }
      ]
    }, {
      "id": 167,
      "text": "Quelle grande nageuse française enregistra en 1965 le 45 tours \"Mon ami le trac\" et \"Sentimentalement\" ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Christine (ou Kiki) Caron ",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Kristy Coventry",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Laure Manaudou",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Coralie Balmy",
          "is_valid": false
        }
      ]
    }, {
      "id": 168,
      "text": "Quel basketteur américain fut la vedette du film de Spike Lee \"He got game\" en 1998 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Ray Allen",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Tony Allen",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Allen Iverson",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Kevin Garnett",
          "is_valid": false
        }
      ]
    }, {
      "id": 169,
      "text": "Quel basketteur américain incarna un personnage dans le film \"Y a-t-il un pilote dans l'avion \" ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Kareem Abdul-Jabbar",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Dennis Rodman",
          "is_valid": false
        }, {
          "id": 3,
          "text": "James Lafferty",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Michael Jordan",
          "is_valid": false
        }
      ]
    }, {
      "id": 170,
      "text": "Dans quel film Michael Jordan dispute-t-il un match de basket avec Bugs Bunny ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Space Jam",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Space Dunk",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Space Slam",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Space Hoop",
          "is_valid": false
        }
      ]
    }, {
      "id": 171,
      "text": "Quel basketteur américain se mesura en combat singulier à Bruce Lee au cinéma, dans \"Le jeu de la mort\" ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Kareem Abdul Jabbar",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Dennis Rodman",
          "is_valid": false
        }, {
          "id": 3,
          "text": "James Lafferty",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Michael Jordan",
          "is_valid": false
        }
      ]
    }, {
      "id": 172,
      "text": "De quoi fut accusé, avant d'être acquitté, l'ex-joueur de football américain O.J. Simpson ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Foot US",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "D'avoir tué sa femme (et son amant)",
          "is_valid": true
        }, {
          "id": 2,
          "text": "De dopage",
          "is_valid": false
        }, {
          "id": 3,
          "text": "D'adultère",
          "is_valid": false
        }, {
          "id": 4,
          "text": "De conduite en état d'ivresse",
          "is_valid": false
        }
      ]
    }, {
      "id": 173,
      "text": "Quel joueur de football US incarne un policier dans \"Y a-t-il un flic pour sauver la Reine\" ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Foot US",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "O.J. Simpson",
          "is_valid": true
        }, {
          "id": 2,
          "text": "John Goodman",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Matthew Fox",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Troy Aikman",
          "is_valid": false
        }
      ]
    }, {
      "id": 174,
      "text": "De quelle série télévisée Fred Perry, ex-joueur des Los Angeles Rams, fut-il le héros ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Foot US",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Rick Hunter",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Baretta",
          "is_valid": false
        }, {
          "id": 3,
          "text": "William Tell",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Sheriffs in Los Angeles",
          "is_valid": false
        }
      ]
    }, {
      "id": 175,
      "text": "Quelle actrice américaine incarne le coach des New York Knicks au cinéma dans le film \"Eddie\" ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Whoopi Goldberg",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Lisa Ann Walter",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Meg Ryan",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Sharon Stone",
          "is_valid": false
        }
      ]
    }, {
      "id": 176,
      "text": "De quel sport traite le film \"La légende de Bagger Vance\" réalisé par Robert Redford ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Le golf",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Baseball",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Natation",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Tennis",
          "is_valid": false
        }
      ]
    }, {
      "id": 177,
      "text": "Dans quel film la patineuse Katarina Witt donne-t-elle la réplique à Jean Reno et Robert De Niro ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Patinage artistique",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "\"Ronin\"",
          "is_valid": true
        }, {
          "id": 2,
          "text": "VIP",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Jerry Maguire",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Tout le monde aime Raymond",
          "is_valid": false
        }
      ]
    }, {
      "id": 178,
      "text": "Quel basketteur américain des Los Angeles Lakers est marié avec l'actrice et ex-Miss America Vanessa Williams ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Rick Fox",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Eddie Jones",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Magic Johnson",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Kareem Abdul-Jabbar",
          "is_valid": false
        }
      ]
    }, {
      "id": 179,
      "text": "Avec quelle actrice (\"Alerte à Malibu\") fut brièvement marié le basketteur US Dennis Rodman ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Carmen Electra",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Pamela Anderson",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Erika Eleniak",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Donna D'errico",
          "is_valid": false
        }
      ]
    }, {
      "id": 180,
      "text": "Quel basketteur américain apparaît dans le clip \"Remember the Time\" de Michael Jackson ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Earvin \"Magic\" Johnson",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Scottie Pippen",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Bill Cartwright",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Dennis Rodman",
          "is_valid": false
        }
      ]
    }, {
      "id": 181,
      "text": "Contre quel grand champion américain Superman disputa-t-il un match de boxe dans l'un des albums de la BD ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Boxe",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Muhammad Ali",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Mike Tyson",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Michael jordan",
          "is_valid": false
        }, {
          "id": 4,
          "text": "John McEnroe",
          "is_valid": false
        }
      ]
    }, {
      "id": 182,
      "text": "Quel film, sorti en 2001, évoque le racisme aux États-Unis dans une équipe de foot US scolaire ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Foot US",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "\"Le plus beau des combats\"",
          "is_valid": true
        }, {
          "id": 2,
          "text": "La Couleur du Baseball",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Fièvre à Columbus university",
          "is_valid": false
        }, {
          "id": 4,
          "text": "District 9",
          "is_valid": false
        }
      ]
    }, {
      "id": 183,
      "text": "Quel défenseur des Baltimore Ravens fut accusé de complicité de meurtre avant d'être élu MVP du Super Bowl 2001 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Foot US",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Ray Lewis",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Lawrence Taylor",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Walter Payton",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Terry Bradshaw",
          "is_valid": false
        }
      ]
    }, {
      "id": 184,
      "text": "Quel est le titre du superbe documentaire sur Cassius Clay et George Foreman sorti sur les écrans en 1996 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Boxe",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "\"When we were kings\"",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Ali",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Rêves et Médailles",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Invincible",
          "is_valid": false
        }
      ]
    }, {
      "id": 185,
      "text": "Quel acteur obtint en 1999 l'Ours d'argent du Festival de Berlin pour sa performance dans le film \"Hurricane Carter\" ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Boxe",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Denzel Washington",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Tom Hanks ",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Paul Newman",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Sean Penn",
          "is_valid": false
        }
      ]
    }, {
      "id": 186,
      "text": "Qui est \"Athena Nike\" qui inspira le nom de la firme d'équipements sportifs américaine à son fondateur ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Une déesse grecque (de la victoire)",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Une Sprinteuse Américaine",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Une coureuse de fond",
          "is_valid": false
        }, {
          "id": 4,
          "text": "La femme du fondateur Phil Knight",
          "is_valid": false
        }
      ]
    }, {
      "id": 187,
      "text": "Quel est le surnom de Daniel Costantini ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Handball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Aldo",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Dani",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Daco",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Tini",
          "is_valid": false
        }
      ]
    }, {
      "id": 188,
      "text": "Dans quel sport Budd Spencer (le compère de Terence Hill) fut-il médaillé d'argent aux JO d'Helsinki en 1952 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Natation",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Athlétisme",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Canöe",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Judo",
          "is_valid": false
        }
      ]
    }, {
      "id": 189,
      "text": "Dans quelle discipline le top-model Estella Warren fut-elle championne du Canada ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Natation synchronisée",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Gymnastique",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Athlétisme",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Équitation",
          "is_valid": false
        }
      ]
    }, {
      "id": 190,
      "text": "Quel grand judoka français fit une apparition dans le film \"Fallait pas !\" de Gérard Jugnot en 1996 ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Judo",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "David Douillet",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Lionel Hugonnier",
          "is_valid": false
        }, {
          "id": 3,
          "text": "David Baron",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Frédéric Bourgoin",
          "is_valid": false
        }
      ]
    }, {
      "id": 191,
      "text": "Quelle grande patineuse est-allemande fut Carmen dans le film \"Carmen on Ice\" en 1990 ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Patinage artistique",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Katarina Witt",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Katie Winkler",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Mandy Wötzel",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Marika Kilius",
          "is_valid": false
        }
      ]
    }, {
      "id": 192,
      "text": "Dans quel sport John Kelly, père de l'actrice et princesse de Monaco Grâce Kelly, a-t-il été champion olympique ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Aviron, en 1920 et 1924",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Badminton, en 1920 et 1924",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Escrime, en 1920 et 1924",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Hockey sur Gazon, en 1920 et 1924",
          "is_valid": false
        }
      ]
    }, {
      "id": 193,
      "text": "Quel lien de parenté existait-il entre les athlètes Florence Griffith-Joyner et Jackie Joyner-Kersee ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Belles-sœurs",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Sœurs",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Mère/fille",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Tante/Nièce",
          "is_valid": false
        }
      ]
    }, {
      "id": 194,
      "text": "Quel acteur français était initialement prévu pour incarner Marcel Cerdan, dans le film \"Edith et Marcel\" ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Boxe",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Patrick Dewaere",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Marcel Cerdan Jr",
          "is_valid": false
        }, {
          "id": 3,
          "text": "jean Bouise",
          "is_valid": false
        }, {
          "id": 4,
          "text": "jacques Villeret",
          "is_valid": false
        }
      ]
    }, {
      "id": 195,
      "text": "Quel lien de parenté existe-t-il entre Damien et Anne-Lise Touya, champions du monde du sabre respectivement en 1999 et 2001 ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Escrime",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Frère et sœur",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Aucun",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Cousin-cousine",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Oncle et Nièce",
          "is_valid": false
        }
      ]
    }, {
      "id": 196,
      "text": "De quel club de basket-ball Jack Nicholson est-il supporteur ? ",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Los Angeles Lakers",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Los Angeles Clippers",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Miami Heat",
          "is_valid": false
        }, {
          "id": 4,
          "text": "San Antonio Spurs",
          "is_valid": false
        }
      ]
    }, {
      "id": 197,
      "text": "Quelle sport pratiquait l'athlète Marion Jones dans sa jeunesse ? ",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Le basket",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Le football américain",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Le Golf",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Le Hockey sur Glace",
          "is_valid": false
        }
      ]
    }, {
      "id": 198,
      "text": "Quel est le hockeyeur le plus connu avec son numéro de maillot 99 ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Hockey sur glace",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Wayne Gretzky",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Bobby Orr",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Mario Lemieux",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Gordie Howe",
          "is_valid": false
        }
      ]
    }, {
      "id": 199,
      "text": "De quelle couleur étaient les chaussures de l'entraîneur Daniel Costantini lors du Mondial de handball 2001 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Handball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Jaune",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Vert",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Il n'en portait pas",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Violet",
          "is_valid": false
        }
      ]
    }, {
      "id": 200,
      "text": "Quel boxeur fait une apparition dans le film \" Crocodile Dundee in Los Angeles\" en 2001 ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Boxe",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Mike Tyson",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Evander Holyfield",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Joe Frazier",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Tony Tucker",
          "is_valid": false
        }
      ]
    }, {
      "id": 201,
      "text": "Quel est le lien entre l'ancien judoka Thierry Rey et Jacques Chirac ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Judo",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Beau-fils et beau père.",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Ils sont amis",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Aucun",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Cousins germain",
          "is_valid": false
        }
      ]
    }, {
      "id": 202,
      "text": "Quel numéro de maillot portait Michael Jordan lors de son premier retour de retraite chez les Chicago Bulls ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "45",
          "is_valid": true
        }, {
          "id": 2,
          "text": "23",
          "is_valid": false
        }, {
          "id": 3,
          "text": "12",
          "is_valid": false
        }, {
          "id": 4,
          "text": "9",
          "is_valid": false
        }
      ]
    }, {
      "id": 203,
      "text": "Quel sport pratiqua dans sa jeunesse l'acteur Thierry Frémont ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "L'athlétisme",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Le saut à la perche",
          "is_valid": false
        }, {
          "id": 3,
          "text": "La Gymnastique",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Le tennis",
          "is_valid": false
        }
      ]
    }, {
      "id": 204,
      "text": "Quel sport pratiqua l'acteur américain Tom Cruise, pendant sa jeunesse, au Canada ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Le hockey sur glace",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Baseball",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Football américain",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Ski",
          "is_valid": false
        }
      ]
    }, {
      "id": 205,
      "text": "Quel sport pratiquèrent Théophile Gautier, Georges Courteline et Ernest Hemingway ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "La savate (ou boxe française)",
          "is_valid": true
        }, {
          "id": 2,
          "text": "La boxe anglaise",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Le taekwendo",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Le karaté",
          "is_valid": false
        }
      ]
    }, {
      "id": 206,
      "text": "Quel sport pratiqua l'écrivain Eugène Sue ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "La savate (ou boxe française)",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Le water polo",
          "is_valid": false
        }, {
          "id": 3,
          "text": "le polo",
          "is_valid": false
        }, {
          "id": 4,
          "text": "l'escrime",
          "is_valid": false
        }
      ]
    }, {
      "id": 207,
      "text": "Quel sport pratiqua l'écrivain Alexandre Dumas ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "La savate (ou boxe française)",
          "is_valid": true
        }, {
          "id": 2,
          "text": "l'aviron",
          "is_valid": false
        }, {
          "id": 3,
          "text": "le volleyball",
          "is_valid": false
        }, {
          "id": 4,
          "text": "le golf",
          "is_valid": false
        }
      ]
    }, {
      "id": 208,
      "text": "Quel est le nom du créateur du journal \"L'Equipe\" en 1946 ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Jacques Goddet",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Henri Desgrange",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Victor Goddet",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Géo Lefèvre",
          "is_valid": false
        }
      ]
    }, {
      "id": 209,
      "text": "Quelle chanteuse a inspiré le nom du Stade de France ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Liane Foly",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Helene Segara",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Axelle red",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Zazie",
          "is_valid": false
        }
      ]
    }, {
      "id": 210,
      "text": "Quelle est la pointure des chaussures de Shaquille O'Neal ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "56.5",
          "is_valid": true
        }, {
          "id": 2,
          "text": "60",
          "is_valid": false
        }, {
          "id": 3,
          "text": "54",
          "is_valid": false
        }, {
          "id": 4,
          "text": "53,5",
          "is_valid": false
        }
      ]
    }, {
      "id": 211,
      "text": "Quel basketteur américain joue entre Jean-Claude Van Damme et Mickey Rourke dans le film \"Double team\" ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Dennis Rodman",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Michael jordan",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Michael Pietrus",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Tony Parker",
          "is_valid": false
        }
      ]
    }, {
      "id": 212,
      "text": "Qui est le \"compagnon\" qui a aidé Marie-José Pérec à fuir Sydney en 2000 ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Anthuan Maybank",
          "is_valid": true
        }, {
          "id": 2,
          "text": "John Smith",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Wolfgang Meier",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Sébastien Foucras",
          "is_valid": false
        }
      ]
    }, {
      "id": 213,
      "text": "Qui est \"le Meilleur\" dans le film du même nom sur le baseball ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Baseball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Robert Redford",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Robert De Niro",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Kevin Costner",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Wesley Snipes",
          "is_valid": false
        }
      ]
    }, {
      "id": 214,
      "text": "Dans quelles disciplines sportives le brésilien Joao Havelange (ancien président de la FIFA) a-t-il honoré son pays ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Water-polo et natation",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Sprint et saut en longueur",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Sprint et saut en hauteur",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Équitation et Polo",
          "is_valid": false
        }
      ]
    }, {
      "id": 215,
      "text": "Quel basketteur américain est surnommé \"The Answer\" ? ",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Allen Iverson",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Ben Wallace",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Dwayne Wade",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Shawn Marion",
          "is_valid": false
        }
      ]
    }, {
      "id": 216,
      "text": "Dans quelle discipline Frank du groupe 2Be3 fut-il champion d'Europe juniors ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Viet-vo-dao",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Taekwendo",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Ba Gua Quan",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Gouren",
          "is_valid": false
        }
      ]
    }, {
      "id": 217,
      "text": "Quelles sont respectivement les trois disciplines des anciens ministres Alain Calmat, Guy Drut et Roger Bambuck ? ",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Patinage artistique, 110 m haies, 100 m.",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Patinage de vitesse, 100m, 200m",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Natation, Water Polo, 1 500m",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Équitation, Escrime, Judo",
          "is_valid": false
        }
      ]
    }, {
      "id": 218,
      "text": "Quel \"aventurier des océans\" a inspiré une chanson à Guy Béart ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Voile",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Gérard d'Aboville",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Jean Bart",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Guillaume Le Testu",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Stéphane Peyron",
          "is_valid": false
        }
      ]
    }, {
      "id": 219,
      "text": "A quel navigateur disparu en 1978 est dédiée la chanson d'Alain Chamfort \"Manureva\" ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Voile",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Alain Colas",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Eric Tabarly",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Gerry Roufs",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Paul Vatine",
          "is_valid": false
        }
      ]
    }, {
      "id": 220,
      "text": "Quel réalisateur est à l'origine de sept pubs pour les produits du basketteur Michael Jordan ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Spike Lee",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Eric Lipmann",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Michel Gondry",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Ridley Scott",
          "is_valid": false
        }
      ]
    }, {
      "id": 221,
      "text": "Par quel autre nom est plus connu le basketteur Lew Alcindor ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Kareem Abdul-Jabbar",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Kresimir Cosic",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Antonia Diaz-Miguel",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Buddy Jeanette",
          "is_valid": false
        }
      ]
    }, {
      "id": 222,
      "text": "Quel célèbre acteur est l'un des plus grands fans de l'équipe de basket Los Angeles Clippers ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Billy Crystal",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Robert De Niro",
          "is_valid": false
        }, {
          "id": 3,
          "text": "George Clooney",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Jay-Z",
          "is_valid": false
        }
      ]
    }, {
      "id": 223,
      "text": "Quelle skieuse française trouva la mort à l'entraînement, fin 2001 ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Ski",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Régine Cavagnoud",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Patricia Chauvet",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Carole Merle",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Anne-Flore Rey",
          "is_valid": false
        }
      ]
    }, {
      "id": 224,
      "text": "Quelle nageuse offrit à la France son premier titre mondial de natation en 1998, sur 200 m dos ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Roxana Maracineanu",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Laure Manaudou",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Diane Bui Duyet",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Céline Couderc",
          "is_valid": false
        }
      ]
    }, {
      "id": 225,
      "text": "Quel grand basketteur américain est sorti de sa retraite, fin 2001, à l'âge de 38 ans ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Michael Jordan",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Scottie Pippen",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Magic Johnson",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Allen Iverson",
          "is_valid": false
        }
      ]
    }, {
      "id": 226,
      "text": "Dans quel pays s'installa Marie-José Pérec en 2000 pour préparer les Jeux Olympiques de Sydney ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Allemagne",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Au Pays-Bas",
          "is_valid": false
        }, {
          "id": 3,
          "text": "En Hongrie",
          "is_valid": false
        }, {
          "id": 4,
          "text": "En Espagne",
          "is_valid": false
        }
      ]
    }, {
      "id": 227,
      "text": "De quelle nationalité est le skieur Hermann Maier ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Ski",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Autrichien",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Allemand",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Néerlandais",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Hongrois",
          "is_valid": false
        }
      ]
    }, {
      "id": 228,
      "text": "De quelle origine est la patineuse Marina Anissina, championne olympique de danse sur glace avec Gwendal Peizerat en 2002 ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Patinage artistique",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Russe",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Ukrainienne",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Roumaine",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Belarusse",
          "is_valid": false
        }
      ]
    }, {
      "id": 229,
      "text": "Quel judoka français remporta aux Jeux de Sydney son deuxième titre olympique des lourds ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Judo",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "David Douillet",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Teddy Riner",
          "is_valid": false
        }, {
          "id": 3,
          "text": "David Baron",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Frédéric Bourgoin",
          "is_valid": false
        }
      ]
    }, {
      "id": 230,
      "text": "Quelle grande championne française s'est enfui de Sydney, avant même de disputer l'épreuve pour laquelle elle était inscrite ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Marie-José Pérec",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Félicia Ballanger",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Céline Lebrun",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Laura Flessel",
          "is_valid": false
        }
      ]
    }, {
      "id": 231,
      "text": "Dans quel sport excellait l'Australien Ian Thorpe ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Natation",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Water Polo",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Gymnastique",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Lancer de Javelot",
          "is_valid": false
        }
      ]
    }, {
      "id": 232,
      "text": "Quel sprinter américain réalisa le doublé 200 m-400 m lors des Jeux Olympiques d'Atlanta en 1996 ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Michael Johnson",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Allen Johnson",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Derrick Adkins",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Mark Crear",
          "is_valid": false
        }
      ]
    }, {
      "id": 233,
      "text": "Quel perchiste fut le premier Français à franchir les six mètres, lors des Championnats du monde indoor 1999 ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Jean Galfione",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Renaud Lavillenie",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Romain Mesnil",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Damiel Dossevi",
          "is_valid": false
        }
      ]
    }, {
      "id": 234,
      "text": "Quel est le prénom du nageur français Esposito, triple champion d'Europe du 200 m papillon ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Franck",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Marc",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Giani",
          "is_valid": false
        }, {
          "id": 4,
          "text": "David",
          "is_valid": false
        }
      ]
    }, {
      "id": 235,
      "text": "Dans quelle discipline Stéphane Diagana devint-il le premier Français champion du monde d'athlétisme ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "400 m haies",
          "is_valid": true
        }, {
          "id": 2,
          "text": "200 m haies",
          "is_valid": false
        }, {
          "id": 3,
          "text": "200 m",
          "is_valid": false
        }, {
          "id": 4,
          "text": "400 m",
          "is_valid": false
        }
      ]
    }, {
      "id": 236,
      "text": "Quel skieur français devint champion olympique de descente en 1998 à Nagano ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Ski",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Jean-Luc Crétier",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Sébastien Foucras",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Fabrice Guy",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Ludovic Roux",
          "is_valid": false
        }
      ]
    }, {
      "id": 237,
      "text": "Quel skieur autrichien fut sacré champion olympique de super-G en 1998 trois jours après une terrible chute en descente ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Ski",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Hermann Maier",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Dominik Hasek",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Stephan Eberharter",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Werner Franz",
          "is_valid": false
        }
      ]
    }, {
      "id": 238,
      "text": "Quel navigateur français disparut en 1998, en tombant de son bateau baptisé \"Pen-Duick\" en mer d'Irlande ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Voile",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Eric Tabarly",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Gerry Roufs",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Paul Vatine",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Alain Colas",
          "is_valid": false
        }
      ]
    }, {
      "id": 239,
      "text": "Quelle sprinteuse française remporta le titre européen du 100 m en 1998, en battant le record d'Europe (10\"73) ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Christine Arron",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Muriel Hurtis",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Monique Éwanjé-Épé",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Patricia Girard",
          "is_valid": false
        }
      ]
    }, {
      "id": 240,
      "text": "Quel Français remporta la Coupe du monde de ski en 1997, vingt-neuf ans après Jean-Claude Killy ? ",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Ski",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Luc Alphand",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Julien Lizeroux",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Pierrick Bourgeat",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Antoine Dénériaz",
          "is_valid": false
        }
      ]
    }, {
      "id": 241,
      "text": "Quel fut, en 1997, le premier golfeur noir a remporter le Masters ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Golf",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Tiger Woods",
          "is_valid": true
        }, {
          "id": 2,
          "text": "WESTWOOD Lee ",
          "is_valid": false
        }, {
          "id": 3,
          "text": "ELS Ernie ",
          "is_valid": false
        }, {
          "id": 4,
          "text": "GOOSEN Retief ",
          "is_valid": false
        }
      ]
    }, {
      "id": 242,
      "text": "Quel navigateur français pulvérisa en 1997 le record du Tour du monde à la voile détenu par le Néo-Zélandais Peter Blake ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Voile",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Olivier de Kersauson",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Bruno Peyron",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Steve Fossett",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Frank Cammas",
          "is_valid": false
        }
      ]
    }, {
      "id": 243,
      "text": "Pour quelle raison Mike Tyson fut-il disqualifié lors de son combat revanche contre Evander Holyfield en 1997 ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Boxe",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Il avait mordu l'oreille de son adversaire",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Il l'avait frappé après la cloche",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Il l'avait frappé sous la ceinture",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Il lui avait mis un coup de tête",
          "is_valid": false
        }
      ]
    }, {
      "id": 244,
      "text": "Combien de titres mondiaux le perchiste Sergueï Bubka remporta-t-il lors des six premiers Championnats du monde d'athlétisme ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "6",
          "is_valid": true
        }, {
          "id": 2,
          "text": "5",
          "is_valid": false
        }, {
          "id": 3,
          "text": "7",
          "is_valid": false
        }, {
          "id": 4,
          "text": "8",
          "is_valid": false
        }
      ]
    }, {
      "id": 245,
      "text": "Quelle mésaventure connut David Douillet, un an avant qu'il ne remporte son 3e titre mondial des lourds ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Judo",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Un accident de moto",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Un accident de voiture",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Une condamnation",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Un divorce",
          "is_valid": false
        }
      ]
    }, {
      "id": 246,
      "text": "Quel skieur italien parvint en 1996 à gagner enfin ses premiers titres mondiaux en slalom et géant ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Ski",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Alberto Tomba",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Matteo Belfrond",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Massimiliano Blardone",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Giuliano Razzoli",
          "is_valid": false
        }
      ]
    }, {
      "id": 247,
      "text": "Au hockey sur glace, où se retrouve un joueur exclu temporairement ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Hockey sur glace",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "En \"prison\"",
          "is_valid": true
        }, {
          "id": 2,
          "text": "En \"Garde à vue\"",
          "is_valid": false
        }, {
          "id": 3,
          "text": "En \"maison d'arrêt\"",
          "is_valid": false
        }, {
          "id": 4,
          "text": "En \"vacance\"",
          "is_valid": false
        }
      ]
    }, {
      "id": 248,
      "text": "Combien y a-t-il de trous sur un parcours de golf de compétition ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Golf",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "18",
          "is_valid": true
        }, {
          "id": 2,
          "text": "16",
          "is_valid": false
        }, {
          "id": 3,
          "text": "17",
          "is_valid": false
        }, {
          "id": 4,
          "text": "19",
          "is_valid": false
        }
      ]
    }, {
      "id": 249,
      "text": "Quel est le plus grand bateau au programme des compétitions d'aviron ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Aviron",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Le huit",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Le sept",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Le neuf",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Le dix",
          "is_valid": false
        }
      ]
    }, {
      "id": 250,
      "text": "Combien y a-t-il (sur le terrain) de joueurs dans une équipe de handball ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Handball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "7",
          "is_valid": true
        }, {
          "id": 2,
          "text": "5",
          "is_valid": false
        }, {
          "id": 3,
          "text": "6",
          "is_valid": false
        }, {
          "id": 4,
          "text": "8",
          "is_valid": false
        }
      ]
    }, {
      "id": 251,
      "text": "Citer l'un des deux mouvements constituant le \"total olympique\" en haltérophilie.",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Haltérophilie",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Arraché ou épaulé-jeté",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Tiré",
          "is_valid": false
        }, {
          "id": 3,
          "text": "poussé",
          "is_valid": false
        }, {
          "id": 4,
          "text": "blocage",
          "is_valid": false
        }
      ]
    }, {
      "id": 252,
      "text": "Citer l'une des deux seules disciplines communes aux femmes et aux hommes dans les compétitions de gymnastique.",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Gymnastique",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Sol et saut de cheval",
          "is_valid": true
        }, {
          "id": 2,
          "text": "La poutre",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Les barres parallèles",
          "is_valid": false
        }, {
          "id": 4,
          "text": "les barres asymétriques",
          "is_valid": false
        }
      ]
    }, {
      "id": 253,
      "text": "Quelles sont les deux disciplines qui composent le combiné nordique ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Combiné nordique",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Saut à ski et ski de fond",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Le biathlon et le ski de fond",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Le saut et la descente",
          "is_valid": false
        }, {
          "id": 4,
          "text": "La descente et le ski de fond",
          "is_valid": false
        }
      ]
    }, {
      "id": 254,
      "text": "Quelles sont les deux disciplines liées dans le biathlon ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Biathlon",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Ski de fond et tir",
          "is_valid": true
        }, {
          "id": 2,
          "text": "descente et tir",
          "is_valid": false
        }, {
          "id": 3,
          "text": "ski de fond et saut",
          "is_valid": false
        }, {
          "id": 4,
          "text": "descente et saut",
          "is_valid": false
        }
      ]
    }, {
      "id": 255,
      "text": "Combien y a-t-il (sur le terrain) de joueurs dans une équipe de basket-ball ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "5",
          "is_valid": true
        }, {
          "id": 2,
          "text": "4",
          "is_valid": false
        }, {
          "id": 3,
          "text": "6",
          "is_valid": false
        }, {
          "id": 4,
          "text": "7",
          "is_valid": false
        }
      ]
    }, {
      "id": 256,
      "text": "Combien y a-t-il (sur le terrain) de joueurs dans une équipe de football américain ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Foot US",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "11",
          "is_valid": true
        }, {
          "id": 2,
          "text": "12",
          "is_valid": false
        }, {
          "id": 3,
          "text": "13",
          "is_valid": false
        }, {
          "id": 4,
          "text": "14",
          "is_valid": false
        }
      ]
    }, {
      "id": 257,
      "text": "Combien y a-t-il (sur le terrain) de joueurs dans une équipe de volley-ball ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Volleyball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "6",
          "is_valid": true
        }, {
          "id": 2,
          "text": "5",
          "is_valid": false
        }, {
          "id": 3,
          "text": "7",
          "is_valid": false
        }, {
          "id": 4,
          "text": "8",
          "is_valid": false
        }
      ]
    }, {
      "id": 258,
      "text": "Avec la lutte dite \"libre\" quelle est la deuxième sorte de lutte disputée en compétition ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Lutte",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "La gréco-romaine",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Lutte Cumberland",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Le Gouren",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Le Schwingen",
          "is_valid": false
        }
      ]
    }, {
      "id": 259,
      "text": "Comment différencie-t-on les joueurs des deux équipes opposées dans un match de water-polo ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Water-polo",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "A la couleur des bonnets",
          "is_valid": true
        }, {
          "id": 2,
          "text": "A la couleur de leur maillot de bain",
          "is_valid": false
        }, {
          "id": 3,
          "text": "A un patch résistant à l'eau sur l'épaule",
          "is_valid": false
        }, {
          "id": 4,
          "text": "A un brassard",
          "is_valid": false
        }
      ]
    }, {
      "id": 260,
      "text": "Quel golfeur américain devint le premier à remporter l'USPGA, l'US Open, le British Open et le Masters dans sa carrière ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Golf",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Tiger Woods",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Tom Watson",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Ben Hogan",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Denny Shute",
          "is_valid": false
        }
      ]
    }, {
      "id": 261,
      "text": "Quelle skieuse française remporta le titre mondial de super-G 2001 ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Ski",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Régine Cavagnoud",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Patricia Chauvet",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Carole Merle",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Anne-Flore Rey",
          "is_valid": false
        }
      ]
    }, {
      "id": 262,
      "text": "Quel navigateur français remporta le Vendée Globe Challenge en 2001 ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Voile",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Michel Desjoyaux",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Roland Jourdain",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Vincent Riou",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Jean Le Cam",
          "is_valid": false
        }
      ]
    }, {
      "id": 263,
      "text": "Quel boxeur français, champion olympique des mi-mouches à Sydney, fit ses débuts professionnels en 2001 ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Boxe",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Brahim Asloum",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Jean-Baptiste Mendy",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Jean-Marc Mormeck",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Malamine Koné",
          "is_valid": false
        }
      ]
    }, {
      "id": 264,
      "text": "En combien de points se joue un set de tennis de table ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Tennis de table",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "11",
          "is_valid": true
        }, {
          "id": 2,
          "text": "13",
          "is_valid": false
        }, {
          "id": 3,
          "text": "15",
          "is_valid": false
        }, {
          "id": 4,
          "text": "21",
          "is_valid": false
        }
      ]
    }, {
      "id": 265,
      "text": "Contre quel adversaire l'équipe de France de basket féminin remporta-t-elle la finale du Championnat d'Europe 2001 ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "La Russie",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Lituanie",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Espagne",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Hongrie",
          "is_valid": false
        }
      ]
    }, {
      "id": 266,
      "text": "Quelle était la joueuse capitaine de l'équipe de France de basket féminin sacrée championne d'Europe 2001 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Yannik Souvré",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Céline Dumerc",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Audrey Sauret-Gillepsie",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Sandrine Gruda",
          "is_valid": false
        }
      ]
    }, {
      "id": 267,
      "text": "Dans quelle équipe le basketteur Michael Jordan a-t-il entamé une troisième carrière fin 2001 ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Washington Wizards",
          "is_valid": true
        }, {
          "id": 2,
          "text": "New York Knicks",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Indiana Pacers",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Philadelphia 76ers",
          "is_valid": false
        }
      ]
    }, {
      "id": 268,
      "text": "Quelle est la seule nation, en dehors des États-Unis, à avoir conservé la Coupe de l'America à la voile ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Voile",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "La Nouvelle-Zélande",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Angleterre ",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Australie",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Suisse",
          "is_valid": false
        }
      ]
    }, {
      "id": 269,
      "text": "Quel est le seul club français de basket à avoir remporté la Coupe des champions, la Coupe des Coupes, la Coupe Korac ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Le CSP Limoges",
          "is_valid": true
        }, {
          "id": 2,
          "text": "L'ASVEL",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Cholet",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Gravelines",
          "is_valid": false
        }
      ]
    }, {
      "id": 270,
      "text": "Quelle escrimeuse française obtint la médaille de bronze à l'épée en 2000, quatre ans après son sacre d'Atlanta ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Escrime",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Laura Flessel",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Valérie Barlois",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Sophie Moresse-Pichot",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Saniga Tripathi",
          "is_valid": false
        }
      ]
    }, {
      "id": 271,
      "text": "Quelle est la nationalité du sprinter Konstantinos Kenteris, champion mondial 1999 et olympique 2000 du 200 m ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Grecque",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Israelien",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Égyptien",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Bulgare",
          "is_valid": false
        }
      ]
    }, {
      "id": 272,
      "text": "Quel golfeur français disputa le barrage pour la victoire dans le British Open en 1999 ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Golf",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Jean Van de Velde",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Jean-François Remesy",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Manuel de Los Santos",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Thomas Levet",
          "is_valid": false
        }
      ]
    }, {
      "id": 273,
      "text": "Quel est le poids d'un poids dans l'épreuve d'athlétisme du lancer du poids féminin ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "5 kg",
          "is_valid": true
        }, {
          "id": 2,
          "text": "4kg",
          "is_valid": false
        }, {
          "id": 3,
          "text": "6kg",
          "is_valid": false
        }, {
          "id": 4,
          "text": "7kg",
          "is_valid": false
        }
      ]
    }, {
      "id": 274,
      "text": "De quelle nationalité est le coureur de demi-fond Wilson Kipketer, double champion du monde du 800m ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Danois",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Camerounais",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Éthiopien",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Finlandais",
          "is_valid": false
        }
      ]
    }, {
      "id": 275,
      "text": "Quelle cavalière française devint en 1999 championne d'Europe de saut d'obstacles devant tous les hommes de la discipline ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Equitation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Alexandra Ledermann",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Marine Collard",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Florence Japet",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Christine de la Roche",
          "is_valid": false
        }
      ]
    }, {
      "id": 276,
      "text": "A quelle arme le Français Damien Touya devint-il champion du monde d'escrime en 1999 ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Escrime",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Au sabre",
          "is_valid": true
        }, {
          "id": 2,
          "text": "A l'épée",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Au Fleuret",
          "is_valid": false
        }, {
          "id": 4,
          "text": "La dague",
          "is_valid": false
        }
      ]
    }, {
      "id": 277,
      "text": "A quelle arme le Français Hugues Obry fut-il sacré champion du monde d'escrime en 1998 à la Chaux-de-Fonds. ",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Escrime",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "A l'épée",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Au sabre",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Au Fleuret",
          "is_valid": false
        }, {
          "id": 4,
          "text": "A la dague",
          "is_valid": false
        }
      ]
    }, {
      "id": 278,
      "text": "A quelle place termina l'équipe américaine de basket-ball lors des Championnats du monde 1998 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "3ème ",
          "is_valid": true
        }, {
          "id": 2,
          "text": "2ème",
          "is_valid": false
        }, {
          "id": 3,
          "text": "1ère",
          "is_valid": false
        }, {
          "id": 4,
          "text": "4ème",
          "is_valid": false
        }
      ]
    }, {
      "id": 279,
      "text": "Quelle grande sprinteuse américaine est décédée en 1998 d'une crise d'épilepsie, à l'âge de 38 ans ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Florence Griffith-Joyner",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Marion Jones",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Allyson Félix",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Shelly-Ann Fraser",
          "is_valid": false
        }
      ]
    }, {
      "id": 280,
      "text": "Quelle fut la première équipe française à remporter, en 1997, la finale de l'Euroligue de basket féminin ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Bourges",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Valenciennes",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Gravelines",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Challes-les-eaux",
          "is_valid": false
        }
      ]
    }, {
      "id": 281,
      "text": "Face à quelle nation la France dut-elle s'incliner en finale mondiale de tennis de table par équipes 1997 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Tennis de table",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "La Chine",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Le Japon",
          "is_valid": false
        }, {
          "id": 3,
          "text": "La Suède",
          "is_valid": false
        }, {
          "id": 4,
          "text": "L'Allemagne",
          "is_valid": false
        }
      ]
    }, {
      "id": 282,
      "text": "A quelle arme le Français Eric Srecki devint-il champion olympique et champion du monde d'escrime ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Escrime",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "L'épée",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Le Fleuret",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Le Sabre",
          "is_valid": false
        }, {
          "id": 4,
          "text": "La dague",
          "is_valid": false
        }
      ]
    }, {
      "id": 283,
      "text": "De quel pays vient le sprinter Ato Boldon, champion du monde du 200 m en 1997 à Athènes ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Trinité-et-Tobago",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Jamaïque",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Costa Rica",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Cuba",
          "is_valid": false
        }
      ]
    }, {
      "id": 284,
      "text": "Comment appelle-t-on le fait qu'un joueur de bowling renverse les dix quilles au premier lancer ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Bowling",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Un strike",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Un Spare",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Un Shot",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Un One down",
          "is_valid": false
        }
      ]
    }, {
      "id": 285,
      "text": "En combien de rounds sont actuellement disputés les Championnats du monde de boxe professionnels ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Boxe",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "12",
          "is_valid": true
        }, {
          "id": 2,
          "text": "9",
          "is_valid": false
        }, {
          "id": 3,
          "text": "10",
          "is_valid": false
        }, {
          "id": 4,
          "text": "11",
          "is_valid": false
        }
      ]
    }, {
      "id": 286,
      "text": "Quelle est la durée d'un round en boxe professionnelle ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Boxe",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "3 min",
          "is_valid": true
        }, {
          "id": 2,
          "text": "2 min",
          "is_valid": false
        }, {
          "id": 3,
          "text": "4 min",
          "is_valid": false
        }, {
          "id": 4,
          "text": "5 min",
          "is_valid": false
        }
      ]
    }, {
      "id": 287,
      "text": "Contre quel pays la France remporta-t-elle la finale du Championnat du monde de handball, en 2001 à Bercy ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Handball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "La Suède",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Le Brésil",
          "is_valid": false
        }, {
          "id": 3,
          "text": "L'Allemagne",
          "is_valid": false
        }, {
          "id": 4,
          "text": "La Croatie",
          "is_valid": false
        }
      ]
    }, {
      "id": 288,
      "text": "Quel est le seul entraîneur français à avoir remporté deux titres mondiaux dans un sport d'équipe.",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Handball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Daniel Costantini",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Claude Onesta",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Vincent Collet",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Philippe Blain",
          "is_valid": false
        }
      ]
    }, {
      "id": 289,
      "text": "Quel biathlète français remporta en 2001 son deuxième titre mondial sur 15 km départ en ligne ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Biathlon",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Raphaël Poirée",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Alexandre Aubert",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Martin Fourcade",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Vincent Jay",
          "is_valid": false
        }
      ]
    }, {
      "id": 290,
      "text": "Quel handballeur français remporta, avec son club de Pampelune, la Ligue des champions de handball 2001 ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Handball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Jackson Richardson",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Michael Guigou",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Thierry Omeyer",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Jérôme Fernandez",
          "is_valid": false
        }
      ]
    }, {
      "id": 291,
      "text": "Quelle est la seule des cinq Coupes du monde que le skieur autrichien Hermann Maier n'a pas remportée en 2000-2001 ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Ski",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Celle du slalom",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Descente",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Géant ",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Super G",
          "is_valid": false
        }
      ]
    }, {
      "id": 292,
      "text": "Quelle skieuse française a été sacrée championne olympique de snowboard (géant) en 2002 à Salt Lake City ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Snowboard",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Isabelle Blanc",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Karine Ruby",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Julie Pomagalsky",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Emmanuelle Duboc",
          "is_valid": false
        }
      ]
    }, {
      "id": 293,
      "text": "Quel club affronta Bourges en finale de l'Euroligue de basket féminin 2001, à Messine ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Valenciennes",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Gravelines",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Challes-les-eaux",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Bourges",
          "is_valid": false
        }
      ]
    }, {
      "id": 294,
      "text": "Quel décathlonien fut le premier à franchir la barre des 9 000 points, le 27 mai 2001 à Götzis ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Roman Sebrle",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Tomas Dvorak",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Dan O'Brien",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Dailey Thompson",
          "is_valid": false
        }
      ]
    }, {
      "id": 295,
      "text": "Quel boxeur devint le premier Français champion du monde amateurs en 2001 à Belfast ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Boxe",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Jérôme Thomas",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Frédéric Serrat",
          "is_valid": false
        }, {
          "id": 3,
          "text": "John Dovi",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Willy Blain",
          "is_valid": false
        }
      ]
    }, {
      "id": 296,
      "text": "Quelle judoka devint la première Française championne du monde toutes catégories en 2001 à Munich ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Judo",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Céline Lebrun",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Dominique brun",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Brigitte Deydier",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Laetitia Meignan",
          "is_valid": false
        }
      ]
    }, {
      "id": 297,
      "text": "Quel judoka français devint champion du monde des moins de 90 kg en 2001 à Munich ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Judo",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Frédéric Demontfaucon",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Fabien Canu",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Bernard Tchoullouyan",
          "is_valid": false
        }, {
          "id": 4,
          "text": "David Douillet",
          "is_valid": false
        }
      ]
    }, {
      "id": 298,
      "text": "Quelle sprinteuse infligea une défaite à Marion Jones en finale du 100 m des Championnats du monde 2001 ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Zhanna Pintusevich",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Ekaterini Thanou",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Torri Edwards",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Chandra Sturrup",
          "is_valid": false
        }
      ]
    }, {
      "id": 299,
      "text": "Quelle est la plus grande des joueuses de l'équipe de France de basket féminin, sacrée championne d'Europe 2001 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Isabelle Fijakowski",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Sandra Dijon-Gerardin",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Nicole Antibe",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Nathalie Lesdema",
          "is_valid": false
        }
      ]
    }, {
      "id": 300,
      "text": "Quel milliardaire américain pulvérisa le record de la traversée de l'Atlantique à la voile, à bord de \"PlayStation\" en 2001 ? ",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Voile",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Steve Fossett",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Richard Branson",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Stefan Persson",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Larry Page",
          "is_valid": false
        }
      ]
    }, {
      "id": 301,
      "text": "Dans quelle salle évolue à domicile le club de basket de Gravelines ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Sportica",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Antarès",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Astroballe",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Beaublanc",
          "is_valid": false
        }
      ]
    }, {
      "id": 302,
      "text": "Quel club de basket  évolue à domicile au Colisée ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Chalon-sur-Saône",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Virtus Rome",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Sienne",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Antibes",
          "is_valid": false
        }
      ]
    }, {
      "id": 303,
      "text": "Quel club de basket joue au Palais des sports Jauréguiberry ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Hyères-Toulon",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Pau-Orthez",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Antibes",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Vichy",
          "is_valid": false
        }
      ]
    }, {
      "id": 304,
      "text": "Quel club de basket évolue à domicile à Beaublanc ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Limoges",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Villeurbanne",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Pau-Orthez",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Cholet",
          "is_valid": false
        }
      ]
    }, {
      "id": 305,
      "text": "Dans quelle salle évolue à domicile le club de basket du Havre ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Salle des Docks Océane",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Palais des Sports Jean-Weille",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Palais des Sports Pierre-Coulon",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Sportica",
          "is_valid": false
        }
      ]
    }, {
      "id": 306,
      "text": "Dans quelle salle évolue là domicile le club de basket de Pau - Orthez ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Palais des sports de Pau",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Antarès",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Astroballe",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Beaublanc",
          "is_valid": false
        }
      ]
    }, {
      "id": 307,
      "text": "Quelle club de basket évolue à domicile à l'Astroballe ? ",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Villeurbanne",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Le Mans",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Cholet",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Nancy",
          "is_valid": false
        }
      ]
    }, {
      "id": 308,
      "text": "Dans quelle salle évolue à domicile le club de basket de Nancy ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Palais des Sports Jean-Weille",
          "is_valid": true
        }, {
          "id": 2,
          "text": "La Meilleraie",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Halle André-Vacheresse",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Rhenus Sport",
          "is_valid": false
        }
      ]
    }, {
      "id": 309,
      "text": "Quel club de basket  joue à domicile dans la salle Saint-Eloi (et dispute ses matches de gala aux Arènes) ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Poitiers",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Roanne",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Nancy",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Pau-Orthez",
          "is_valid": false
        }
      ]
    }, {
      "id": 310,
      "text": "Dans quelle salle évolue à domicile le club de basket d'Orléans ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Palais des Sports d'Orléans",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Sportica",
          "is_valid": false
        }, {
          "id": 3,
          "text": "La Meilleraie",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Beaublanc",
          "is_valid": false
        }
      ]
    }, {
      "id": 311,
      "text": "Quel club de basket partage ses matches à domicile entre le Stade Pierre-de-Coubertin et le Palais des Sports Marcel Cerdan ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Paris-Levallois",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Le Mans",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Cholet",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Limoges",
          "is_valid": false
        }
      ]
    }, {
      "id": 312,
      "text": "Dans quelle salle évolue à domicile le club de basket de Vichy ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Palais des Sports Pierre-Coulon",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Antarès",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Rhenus Sport",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Les Arènes",
          "is_valid": false
        }
      ]
    }, {
      "id": 313,
      "text": "Quel club de basket évolue à domicile au Palau Blaugrana ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "FC Barcelone",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Real Madrid",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Vitoria",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Malaga",
          "is_valid": false
        }
      ]
    }, {
      "id": 314,
      "text": "Quel club de basket évolue à domicile à l'Universal Sports Hall ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "CSKA Moscou",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Zalgiris Kaunas",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Varese",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Bamberg",
          "is_valid": false
        }
      ]
    }, {
      "id": 315,
      "text": "Quel club évolue à domicile au Futurshow Station anciennement Pala MalaGuti ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Virtus Bologne",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Charleroi",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Real Madrid",
          "is_valid": false
        }, {
          "id": 4,
          "text": "FC Barcelone",
          "is_valid": false
        }
      ]
    }, {
      "id": 316,
      "text": "Quel club de basket évolue à domicile à la Fernando Buesa Arena ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Vittoria",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Real Madrid",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Malaga",
          "is_valid": false
        }, {
          "id": 4,
          "text": "FC Barcelone",
          "is_valid": false
        }
      ]
    }, {
      "id": 317,
      "text": "Quel club de basket évolue à domicile au PalaWhirlpool ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Varese",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Virtus Bologne",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Sienne",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Virtus Rome",
          "is_valid": false
        }
      ]
    }, {
      "id": 318,
      "text": "Quel club de basket évolue à domicile dans la salle Pionir ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Partizan Belgrade",
          "is_valid": true
        }, {
          "id": 2,
          "text": " Panathinaïkos",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Milan",
          "is_valid": false
        }, {
          "id": 4,
          "text": "EP Istanbul",
          "is_valid": false
        }
      ]
    }, {
      "id": 319,
      "text": "Dans quelle salle évolue à domicile le club de basket de l'Olympiakos ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Stade de la Paix et de l'Amitié",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Salle du Pirée",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Nokia Arena",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Salle Pionir",
          "is_valid": false
        }
      ]
    }, {
      "id": 320,
      "text": "Quel club de basket évolue à domicile dans la Nokia Arena ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Maccabi Tel Aviv",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Fenerbahçe",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Cibona Zagreb",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Partizan Belgrade",
          "is_valid": false
        }
      ]
    }, {
      "id": 321,
      "text": "Quel club de basket évolue à domicile au TD Garden ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Boston Celtics",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Detroit Pistons",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Houston Rockets",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Chicago Bulls",
          "is_valid": false
        }
      ]
    }, {
      "id": 322,
      "text": "Quel club de basket évolue à domicile au Prudential Center ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "New Jersey Nets",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Sacramento Kings",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Cleveland Cavaliers",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Detroit Pistons",
          "is_valid": false
        }
      ]
    }, {
      "id": 323,
      "text": "Quel club de basket évolue à domicile au Centre Air Canada ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Toronto Raptors",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Houston Rockets",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Phoenix Suns",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Cleveland Cavaliers",
          "is_valid": false
        }
      ]
    }, {
      "id": 324,
      "text": "Quel de basket évolue à domicile à la Rose Garden Arena ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Portland Trail Blazers",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Boston Celtics",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Detroit Pistons",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Phoenix Suns",
          "is_valid": false
        }
      ]
    }, {
      "id": 325,
      "text": "Quel club de basket évolue à domicile au Wells Fargo Center ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Philadelphie 76ers",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Sacramento Kings",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Chicago Bulls",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Houston Rockets",
          "is_valid": false
        }
      ]
    }, {
      "id": 326,
      "text": "Quel club de basket évolue à domicile au Ford Center ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Oklahoma City Thunder",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Boston Celtics",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Utah Jazz",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Toronto Raptors",
          "is_valid": false
        }
      ]
    }, {
      "id": 327,
      "text": "Quel club de basket évolue à domicile à l'EnergySolutions Arena, anciennement Delta Center ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Utah Jazz",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Detroit Pistons",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Cleveland Cavaliers",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Boston Celtics",
          "is_valid": false
        }
      ]
    }, {
      "id": 328,
      "text": "Quel club de basket évolue à domicile au Pepsi Center ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Denver Nuggets",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Cleveland Cavaliers",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Boston Celtics",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Sacramento Kings",
          "is_valid": false
        }
      ]
    }, {
      "id": 329,
      "text": "Quel club de basket évolue à domicile au Target Center ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Minnesota Timberwolves",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Houston Rockets",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Detroit Pistons",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Chicago Bulls",
          "is_valid": false
        }
      ]
    }, {
      "id": 330,
      "text": "Quel club de basket évolue à domicile au Conseco Fieldhouse ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Indiana Pacers",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Phoenix Suns",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Boston Celtics",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Cleveland Cavaliers",
          "is_valid": false
        }
      ]
    }, {
      "id": 331,
      "text": "Quel club de basket évolue à domicile  à la Quicken Loans Arena ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Cleveland Cavaliers",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Sacramento Kings",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Boston Celtics",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Detroit Pistons",
          "is_valid": false
        }
      ]
    }, {
      "id": 332,
      "text": "Quel club de basket évolue à domicile au Bradley Center ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Milwaukee Bucks",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Cleveland Cavaliers",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Phoenix Suns",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Toronto Raptors",
          "is_valid": false
        }
      ]
    }, {
      "id": 333,
      "text": "Quel club de basket évolue à domicile au Palace of Auburn Hills ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Detroit Pistons",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Chicago Bulls",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Cleveland Cavaliers",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Houston Rockets",
          "is_valid": false
        }
      ]
    }, {
      "id": 334,
      "text": "Quel club de basket évolue à domicile à l'Oracle Arena ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Golden State Warriors",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Phoenix Suns",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Sacramento Kings",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Houston Rockets",
          "is_valid": false
        }
      ]
    }, {
      "id": 335,
      "text": "Quel club de basket évolue à domicile à l' US Airways Center ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Phoenix Suns",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Indiana Pacers",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Detroit Pistons",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Cleveland Cavaliers",
          "is_valid": false
        }
      ]
    }, {
      "id": 336,
      "text": "Quel club de basket évolue à domicile à l'ARCO Arena ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Sacramento Kings",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Phoenix Suns",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Denver Nuggets",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Los Angeles Clippers",
          "is_valid": false
        }
      ]
    }, {
      "id": 337,
      "text": "Quel club de basket évolue à domicile à l'Amway Center ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Orlando Magic",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Sacramento Kings",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Houston Rockets",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Chicago Bulls",
          "is_valid": false
        }
      ]
    }, {
      "id": 338,
      "text": "Quel club de basket évolue à domicile à la Philips Arena ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Atlanta Hawks",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Denver Nuggets",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Cleveland Cavaliers",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Phoenix Suns",
          "is_valid": false
        }
      ]
    }, {
      "id": 339,
      "text": "Quel club de évolue à domicile au Verizon Center ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Whashington Wizards",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Chicago Bulls",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Phoenix Suns",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Sacramento Kings",
          "is_valid": false
        }
      ]
    }, {
      "id": 340,
      "text": "Quel club de basket évolue à domicile au Time Warner Cable Arena ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Charlotte Bobcats",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Houston Rockets",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Sacramento Kings",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Boston Celtics",
          "is_valid": false
        }
      ]
    }, {
      "id": 341,
      "text": "Dans quelle salle évolue à domicile le club de basket des New Orleans Hornets ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "New Orleans Arena",
          "is_valid": true
        }, {
          "id": 2,
          "text": "New Orleans Center",
          "is_valid": false
        }, {
          "id": 3,
          "text": "New Orleans Garden",
          "is_valid": false
        }, {
          "id": 4,
          "text": "New Orleans Palace",
          "is_valid": false
        }
      ]
    }, {
      "id": 342,
      "text": "Quel club de basket évolue à domicile à l'AT&T Center ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "San Antonio Spurs",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Utah Jazz",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Chicago Bulls",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Detroit Pistons",
          "is_valid": false
        }
      ]
    }, {
      "id": 343,
      "text": "Quel club de basket évolue à domicile à l'American Airlines Center ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Dallas Mavericks",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Phoenix Suns",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Houston Rockets",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Charlotte Bobcats",
          "is_valid": false
        }
      ]
    }, {
      "id": 344,
      "text": "Quel club de basket évolue au  FedExForum ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Memphis Grizzlies",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Dallas Mavericks",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Atlanta Hawks",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Orlando Magic",
          "is_valid": false
        }
      ]
    }, {
      "id": 345,
      "text": "Quel club de basket de NBA au Toyota Center ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Houston Rockets",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Chicago Bulls",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Utah Jazz",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Orlando Magic",
          "is_valid": false
        }
      ]
    }, {
      "id": 346,
      "text": "Quel club de NBA a entraîné Phil Jackson entre 1989 et 1998 ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Chicago Bulls",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Los Angeles Lakers",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Detroit Pistons",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Utah Jazz",
          "is_valid": false
        }
      ]
    }, {
      "id": 347,
      "text": "Dans quels clubs de NBA Phil Jackson a-t-il évolué en tant que joueur ? ",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "New York Knicks et New Jersey Nets",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Chicago Bulls et Los Angeles Lakers",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Boston Celtics et Houston Rockets",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Dallas Mavericks et Sacramento Kings",
          "is_valid": false
        }
      ]
    }, {
      "id": 348,
      "text": "Dans quel club de basket évoluait Nicolas Batum avant de rejoindre Portland en 2008 ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Le Mans",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Cholet",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Gravelines",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Roanne",
          "is_valid": false
        }
      ]
    }, {
      "id": 349,
      "text": "Dans quel club de NBA a évolué Mickaël Gelabale entre 2004 et 2006 ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Seattle Supersonics",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Los Angeles Lakers",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Miami Heat",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Atlanta Hawks",
          "is_valid": false
        }
      ]
    }, {
      "id": 350,
      "text": "Dans quel club espagnol de basket a joué Mickaël Gelabale entre 2006 et 2008 ? ",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Real Madrid",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Barcelone",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Malaga",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Vitoria",
          "is_valid": false
        }
      ]
    }, {
      "id": 351,
      "text": "Je suis composé de liège et de plumes et pèse environ 5 grammes. Malgré cela, je prends des coups à longueur de temps.",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Un volant de badminton",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Un balle de pelotte basque",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Une balle de squash",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Une balle de Jokari",
          "is_valid": false
        }
      ]
    }, {
      "id": 352,
      "text": "Je suis en fibre de verre, pour mieux me plier, et propulser mon propriétaire en l'air. Sergueï Bubka fut mon Tsar.",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Une perche",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Un javelot",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Un témoin",
          "is_valid": false
        }, {
          "id": 4,
          "text": "un marteau",
          "is_valid": false
        }
      ]
    }, {
      "id": 353,
      "text": "Je suis haut de 1,20 m, long de 5 m et large de 0,10 m, et de petites poupées montent sur moi. ",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Gymnastique",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "La poutre",
          "is_valid": true
        }, {
          "id": 2,
          "text": "La barre fixe",
          "is_valid": false
        }, {
          "id": 3,
          "text": "La perche",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Le cheval d'arçon",
          "is_valid": false
        }
      ]
    }, {
      "id": 354,
      "text": "Je suis l'épreuve reine du ski alpin. Oreiller, Vuarnet, Killy, Crétier et Montillet sont mes champions olympiques français. ",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Ski",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "La descente",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Slalom",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Slalom Super Géant",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Combiné",
          "is_valid": false
        }
      ]
    }, {
      "id": 355,
      "text": "Je suis un obstacle d'équitation dont la barre supérieure est accompagnée d'une autre au même niveau. Phonétiquement, je suis une ville de l'Yonne. ",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Equitation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Un Oxer",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Une Sens",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Un Chablis",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Un Crandchamp",
          "is_valid": false
        }
      ]
    }, {
      "id": 356,
      "text": "Je suis un sport de combat né en Chine au VIème siècle, je signifie \"école de la main vide\", Bruce Lee m'a popularisé à l'écran.",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Le karaté",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Le judo",
          "is_valid": false
        }, {
          "id": 3,
          "text": "le Ju-jitsu",
          "is_valid": false
        }, {
          "id": 4,
          "text": "le Taek-wondo",
          "is_valid": false
        }
      ]
    }, {
      "id": 357,
      "text": "Je suis un sport qui se déroule en pleine nature où l'important est de ne pas être déboussolé. Sinon, rien ne sert de courir.",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "La course d'orientation",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Le trail",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Le canoë Kayak",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Tle triathlon",
          "is_valid": false
        }
      ]
    }, {
      "id": 358,
      "text": "Ma première neige est l'objet d'un Critérium, je suis situé dans les Alpes, Jean-Claude Killy m'a rendu célèbre.",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Ski",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Val-d'Isère",
          "is_valid": true
        }, {
          "id": 2,
          "text": "La Clusaz",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Chamonix",
          "is_valid": false
        }, {
          "id": 4,
          "text": "L'Alpe d'Huez",
          "is_valid": false
        }
      ]
    }, {
      "id": 359,
      "text": "Natation à mon programme, puis cyclisme et course à pied. J'ai fait mon apparition aux JO à Sydney en 2000. ",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Le triathlon",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Le pentathlon",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Le décathlon",
          "is_valid": false
        }, {
          "id": 4,
          "text": "L'heptathlon",
          "is_valid": false
        }
      ]
    }, {
      "id": 360,
      "text": "Né en 1867 à Princeton (États-Unis), je suis un sport typiquement américain. Le Super Bowl consacre chaque année mon champion.",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Le foot US",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Le  base-ball",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Le basket",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Le Nascar",
          "is_valid": false
        }
      ]
    }, {
      "id": 361,
      "text": "On m'a surnommé \"Indiagana Jones\", peut-être parce que je me joue de dix obstacles, semés sur un tour de piste rose.",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Stéphane Diagana",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Ladji Doucouré",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Marc Raquil",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Naman Keita",
          "is_valid": false
        }
      ]
    }, {
      "id": 362,
      "text": "Belle à briser la glace. Deux fois championne olympique de patinage (1984 et 1988). Quatre titres mondiaux.",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Patinage artistique",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Katarina Witt",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Irina Slutskaya",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Michelle Kwan",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Tara Lipinski ",
          "is_valid": false
        }
      ]
    }, {
      "id": 363,
      "text": "D'origine roumaine. J'ai obtenu le seul titre mondial de la natation française. J'ai été aussi championne d'Europe du 200 m dos.  ",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Roxana Maracineanu",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Laure Manaudou",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Coralie Balmy",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Anne-Laure Popecau",
          "is_valid": false
        }
      ]
    }, {
      "id": 364,
      "text": "En 1994, j'ai remporté le Trophée Jules Verne ; en 1995, la Coupe de l'America... J'ai été assassiné au Brésil.",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Voile",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Peter Blake",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Dean Baker",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Russell Coutts",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Grant Dalton",
          "is_valid": false
        }
      ]
    }, {
      "id": 365,
      "text": "J'ai agité le drapeau US aux JO de 1968, j'ai perdu mon titre mondial des lourds contre Muhammad Ali, je suis redevenu champion du monde à 45 ans.",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Boxe",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "George Foreman",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Joe Frazier",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Rubin \"Hurricane\" Carter",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Sonny Liston",
          "is_valid": false
        }
      ]
    }, {
      "id": 366,
      "text": "J'ai battu deux fois Jean-Claude Bouttier, je suis argentin, je suis mort en voiture, alors que je rentrais en prison après une permission.",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Boxe",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Carlos Monzon",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Gary Broughton",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Kevin Finnegan",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Lonnie Harris",
          "is_valid": false
        }
      ]
    }, {
      "id": 367,
      "text": "J'ai boxé au Parc des Princes, j'ai été champion d'Europe des super-welters et moyens, mon frère organisait mes combats.",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Boxe",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Louis Acaries",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Fabrice Tiozzo",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Fabrice Bénichou",
          "is_valid": false
        }, {
          "id": 4,
          "text": "René Jacquot",
          "is_valid": false
        }
      ]
    }, {
      "id": 368,
      "text": "J'ai donné au demi-fond français ses lettres de noblesse. J'ai battu 9 records du monde et ai été deux fois champion d'Europe dans les années 60.",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Michel Jazy",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Alain Mimoun",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Michel Bernard",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Jean Wadoux",
          "is_valid": false
        }
      ]
    }, {
      "id": 369,
      "text": "J'ai été imaginé par Léonard de Vinci, mon premier adepte s'élança en 1797, \"précision\" ou \"voltige\" figurent à mon programme. ",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Le parachutisme",
          "is_valid": true
        }, {
          "id": 2,
          "text": "L'équitation",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Le plongeon",
          "is_valid": false
        }, {
          "id": 4,
          "text": "L'ULM",
          "is_valid": false
        }
      ]
    }, {
      "id": 370,
      "text": "J'ai été une \"victime\" blanche de la politique d'apartheid de mon pays, j'ai résolu à me faire anglaise. Je courais pieds nus.",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Zola Budd",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Mary Decker",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Daphne Hasenjager",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Magdalena Swanepoel",
          "is_valid": false
        }
      ]
    }, {
      "id": 371,
      "text": "J'ai grandi dans un cirque, mon père me manageait, j'ai été champion du monde des super-coq.",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Boxe",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Fabrice Benichou",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Fabrice Tiozzo",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Julien Lorcy",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Jérôme Thomas",
          "is_valid": false
        }
      ]
    }, {
      "id": 372,
      "text": "J'ai teint mes cheveux en bleu-blanc-rouge aux JO de Sydney, j'ai été champion olympique des mi-mouche, j'ai Jean-Luc Delarue pour conseiller.",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Boxe",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Brahim Asloum",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Jérome Thomas",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Djamel Bouras",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Daouda Sow",
          "is_valid": false
        }
      ]
    }, {
      "id": 373,
      "text": "J'ai vu naître le surf, mon champion est baptisé \"Ironman\", je suis cerné par un océan pas si pacifique.",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Surf",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Hawaii",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Tahiti",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Australie",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Fidji",
          "is_valid": false
        }
      ]
    }, {
      "id": 374,
      "text": "Je me dispute sur la neige, mes champions ont bon fond, mais mes mauvais tireurs encaissent des pénalités. ",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Le biathlon",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Le triathlon",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Le combiné nordique",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Le short-track",
          "is_valid": false
        }
      ]
    }, {
      "id": 375,
      "text": "Je représente la distance du château de Windsor au stade de White City, je porte le nom d'une ville grecque, Mimoun fut l'un de mes héros.",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Le marathon",
          "is_valid": true
        }, {
          "id": 2,
          "text": "L'athènes",
          "is_valid": false
        }, {
          "id": 3,
          "text": "La thèbes",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Le Corinthe",
          "is_valid": false
        }
      ]
    }, {
      "id": 376,
      "text": "Je signifie \"la voie de la souplesse\", j'ai été inventé par Jigoro Kano, je suis un art martial japonais.",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Le judo",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Le Karaté",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Le Ju-jitsu",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Aikido",
          "is_valid": false
        }
      ]
    }, {
      "id": 377,
      "text": "Je suis \"Fidel\" à mon pays, je sais me montrer à la hauteur, mais j'ai été suspendu pour usage de drogue.",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Javier Sotomayor",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Iván Pedroso",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Dayron Robles",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Jaime Jefferson",
          "is_valid": false
        }
      ]
    }, {
      "id": 378,
      "text": "Je suis \"la bomba\". Skieur italien. J'ai été trois fois champion olympique et ai remporté neuf fois la Coupe du monde.",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Ski",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Alberto Tomba",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Paolo De Chiesa",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Alessandro Fattori",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Simone Origone",
          "is_valid": false
        }
      ]
    }, {
      "id": 379,
      "text": "Je suis américain et j'ai été en mon temps  l'homme le plus rapide du monde avec 9,78\". J'aime rendre mes adversaires verts de rage.",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Maurice Green",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Donovan Bailey",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Carl Lewis",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Leroy Burrell",
          "is_valid": false
        }
      ]
    }, {
      "id": 380,
      "text": "Je suis Français, j'ai été champion du monde des super-moyens, mon frère l'a été en mi-lourds et lourds-légers.",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Boxe",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Christophe Tiozzo",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Jérome Thomas",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Louis Acaries",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Jean Marc Mormeck",
          "is_valid": false
        }
      ]
    }, {
      "id": 381,
      "text": "Je suis l'athlète français le plus médaillé. Quadruple champion du monde de cross. Médaille d'or du marathon aux JO (1956).",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Alain Mimoun",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Fernand Kolbeck",
          "is_valid": false
        }, {
          "id": 3,
          "text": "René Josset",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Paul Genève",
          "is_valid": false
        }
      ]
    }, {
      "id": 382,
      "text": "Je suis née en 1973 à Grenoble, je suis skieuse et suis devenue en 2002 la première française championne olympique de descente. ",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Ski",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Carole Montillet",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Régine Cavagnoud",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Ingrid Jacquemod",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Marion Rolland",
          "is_valid": false
        }
      ]
    }, {
      "id": 383,
      "text": "Je suis sport olympique depuis 1984. Ruban, massues, corde, ballon, cerceau figurent à mon programme. Exclusivement féminin.",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "La Gymnastique Rythmique",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Le Pentathlon",
          "is_valid": false
        }, {
          "id": 3,
          "text": "L'Equitation",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Le Curling",
          "is_valid": false
        }
      ]
    }, {
      "id": 384,
      "text": "Je suis un boxeur français, champion d'Europe en 1971. L'Argentin Monzon m'a battu deux fois pour le titre mondial. ",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Boxe",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Jean-Claude Bouttier",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Marcel Cerdant",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Leonard Tavarez",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Louis Acariès",
          "is_valid": false
        }
      ]
    }, {
      "id": 385,
      "text": "Je suis un golfeur espagnol, j'ai gagné le Masters en 1980 et 1983 et le British Open en 1979, 1984 et 1988. ",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Golf",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Severiano Ballesteros",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Miguel Ángel Jiménez",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Sergio García",
          "is_valid": false
        }, {
          "id": 4,
          "text": "José Maria Olazábal",
          "is_valid": false
        }
      ]
    }, {
      "id": 386,
      "text": "Je suis une épreuve de ski, géante et super à la fois. Franck Piccard fut mon premier champion olympique, en 1988.",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Ski",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Le slalom super-G",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Le Combiné",
          "is_valid": false
        }, {
          "id": 3,
          "text": "La descente",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Le freestyle",
          "is_valid": false
        }
      ]
    }, {
      "id": 387,
      "text": "Je suis une station très chic des Alpes bavaroises, et j'ai une très bonne descente. J'ai accueilli les JO en 1936.",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Ski",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Garmisch-Partenkirchen",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Berchtesgaden",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Oberstaufen",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Mittenwald",
          "is_valid": false
        }
      ]
    }, {
      "id": 388,
      "text": "Mes larmes ont ému la France, de Mexico suis-je vraiment redescendue, à Marie-Jo Pérec j'ai ouvert la voie.",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Colette Besson",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Patricia Girard",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Nicole Ramalalanirina",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Monique Ewanjé-Epée",
          "is_valid": false
        }
      ]
    }, {
      "id": 389,
      "text": "Quel est le nom de la franchise NBA basée à Boston ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Celtics",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Knicks",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Nets",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Pacers",
          "is_valid": false
        }
      ]
    }, {
      "id": 390,
      "text": "Quel est le nom de la franchise NBA basée à New York ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Knicks",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Nets",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Celtics",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Nuggets",
          "is_valid": false
        }
      ]
    }, {
      "id": 391,
      "text": "Quel est le nom de la franchise NBA basée dans le New Jersey ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Nets",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Knicks",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Jazz",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Bucks",
          "is_valid": false
        }
      ]
    }, {
      "id": 392,
      "text": "Quel est le nom de la franchise NBA basée à Toronto ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Raptors",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Timberwolves",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Clippers",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Grizzlies",
          "is_valid": false
        }
      ]
    }, {
      "id": 393,
      "text": "Quel est le nom de la franchise NBA basée à Philadelphie ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "76ers",
          "is_valid": true
        }, {
          "id": 2,
          "text": "49ers",
          "is_valid": false
        }, {
          "id": 3,
          "text": "58ers",
          "is_valid": false
        }, {
          "id": 4,
          "text": "21ers",
          "is_valid": false
        }
      ]
    }, {
      "id": 394,
      "text": "Quel est le nom de la franchise NBA basée à Oklahoma City ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Thunder",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Timberwolves",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Wizards",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Grizzlies",
          "is_valid": false
        }
      ]
    }, {
      "id": 395,
      "text": "Quel est le nom de la franchise NBA basée à Portland ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Trail Blazers",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Cavaliers",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Pistons",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Mavericks",
          "is_valid": false
        }
      ]
    }, {
      "id": 396,
      "text": "Quel est le nom de la franchise NBA basée dans l'Utah ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Jazz",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Nuggets",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Bucks",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Clippers",
          "is_valid": false
        }
      ]
    }, {
      "id": 397,
      "text": "Quel est le nom de la franchise NBA basée à Denver ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Nuggets",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Mavericks",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Wizards",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Bobcats",
          "is_valid": false
        }
      ]
    }, {
      "id": 398,
      "text": "Quel est le nom de la franchise basée à Minneapolis ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Timberwolves",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Nuggets",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Nets",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Jazz",
          "is_valid": false
        }
      ]
    }, {
      "id": 399,
      "text": "Dans quelle ville était  basée la franchise NBA des Clippers avant 1984 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "San Diego",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Los Angeles",
          "is_valid": false
        }, {
          "id": 3,
          "text": "San Francisco",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Sacramento",
          "is_valid": false
        }
      ]
    }, {
      "id": 400,
      "text": "Quel est le nom de la franchise NBA basée à Chicago ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Bulls",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Nets",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Knicks",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Pistons",
          "is_valid": false
        }
      ]
    }, {
      "id": 401,
      "text": "Quel est le nom de la franchise NBA basée dans l'Indiana ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Pacers",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Nuggets",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Cavaliers",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Bucks",
          "is_valid": false
        }
      ]
    }, {
      "id": 402,
      "text": "Quel est le nom de la franchise NBA basée à Cleveland ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Cavaliers",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Pistons",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Trail Blazers",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Rockets",
          "is_valid": false
        }
      ]
    }, {
      "id": 403,
      "text": "Quel est le nom de la franchise NBA basée à Milwaukee ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Bucks",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Kings",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Warriors",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Bobcats",
          "is_valid": false
        }
      ]
    }, {
      "id": 404,
      "text": "Quel est le nom de la franchise NBA basée à Detroit ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Pistons",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Suns",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Heat",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Magic",
          "is_valid": false
        }
      ]
    }, {
      "id": 405,
      "text": "Dans quelle ville est basée la franchise NBA des Lakers ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Los Angeles",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Sacramento",
          "is_valid": false
        }, {
          "id": 3,
          "text": "San Francisco",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Phoenix",
          "is_valid": false
        }
      ]
    }, {
      "id": 406,
      "text": "Dans quelle ville est basée la franchise NBA des Golden State Warriors ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Oakland",
          "is_valid": true
        }, {
          "id": 2,
          "text": "San Francisco",
          "is_valid": false
        }, {
          "id": 3,
          "text": "San Diego",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Las Vegas",
          "is_valid": false
        }
      ]
    }, {
      "id": 407,
      "text": "Quel est le nom de la franchise NBA basée à Phoenix ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Suns",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Heat",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Bucks",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Kings",
          "is_valid": false
        }
      ]
    }, {
      "id": 408,
      "text": "Quel est le nom de la franchise NBA basée à Sacramento ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Kings",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Suns",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Pacers",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Rockets",
          "is_valid": false
        }
      ]
    }, {
      "id": 409,
      "text": "Quel est le nom de la franchise NBA basée à Orlando ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Magic",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Heat",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Hawks",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Bobcats",
          "is_valid": false
        }
      ]
    }, {
      "id": 410,
      "text": "Quel est le nom de la franchise NBA basée à Atlanta ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Hawks",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Bucks",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Suns",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Raptors",
          "is_valid": false
        }
      ]
    }, {
      "id": 411,
      "text": "Quel est le nom de la franchise NBA basée à Miami ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Heat",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Hawks",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Rockets",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Bobcats",
          "is_valid": false
        }
      ]
    }, {
      "id": 412,
      "text": "Quel est le nom de la franchise NBA basée à Washington ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Wizards",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Cavaliers",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Mavericks",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Nets",
          "is_valid": false
        }
      ]
    }, {
      "id": 413,
      "text": "Quel est le nom de la franchise NBA basée à Charlotte ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Bobcats",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Hornets",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Raptors",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Mavericks",
          "is_valid": false
        }
      ]
    }, {
      "id": 414,
      "text": "Quel est le nom de la franchise NBA basée à la Nouvelle-Orléans ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Hornets",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Bobcats",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Pacers",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Nuggets",
          "is_valid": false
        }
      ]
    }, {
      "id": 415,
      "text": "Quel est le nom de la franchise NBA basée à San Antonio ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Spurs",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Bucks",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Suns",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Nets",
          "is_valid": false
        }
      ]
    }, {
      "id": 416,
      "text": "Quel est le nom de la franchise NBA basée à Dallas ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Mavericks",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Suns",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Pistons",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Nuggets",
          "is_valid": false
        }
      ]
    }, {
      "id": 417,
      "text": "Quel est le nom de la franchise NBA basée à Memphis ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Grizzlies",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Nuggets",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Cavaliers",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Mavericks",
          "is_valid": false
        }
      ]
    }, {
      "id": 418,
      "text": "Quel est le nom de la franchise NBA basée à Houston ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Rockets",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Hornets",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Nuggets",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Pacers",
          "is_valid": false
        }
      ]
    }, {
      "id": 419,
      "text": "Quelle est la taille de Tyrone Bogues, star de la NBA dans les années 90 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "1,59 m",
          "is_valid": true
        }, {
          "id": 2,
          "text": "1, 61 m",
          "is_valid": false
        }, {
          "id": 3,
          "text": "1,63 m",
          "is_valid": false
        }, {
          "id": 4,
          "text": "1,65 m",
          "is_valid": false
        }
      ]
    }, {
      "id": 420,
      "text": "Quelle est la taille de Gheorghe Muresan, l' ancien pivot roumain de Pau-Orthez ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "2,31 m",
          "is_valid": true
        }, {
          "id": 2,
          "text": "2,22 m",
          "is_valid": false
        }, {
          "id": 3,
          "text": "2, 18 m",
          "is_valid": false
        }, {
          "id": 4,
          "text": "2,44 m",
          "is_valid": false
        }
      ]
    }, {
      "id": 421,
      "text": "Lors de sa création en 1891, combien de joueurs composaient une équipe de basket-ball ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "9",
          "is_valid": true
        }, {
          "id": 2,
          "text": "3",
          "is_valid": false
        }, {
          "id": 3,
          "text": "5",
          "is_valid": false
        }, {
          "id": 4,
          "text": "7",
          "is_valid": false
        }
      ]
    }, {
      "id": 422,
      "text": "James Naismith est connu pour être l'inventeur du…",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Basket-ball",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Volley-ball",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Baseball",
          "is_valid": false
        }, {
          "id": 4,
          "text": "water-polo",
          "is_valid": false
        }
      ]
    }, {
      "id": 423,
      "text": "Astroking est la mascotte du club de basket de…",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Villeurbanne",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Limoges",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Pau-Orthez",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Cholet",
          "is_valid": false
        }
      ]
    }, {
      "id": 424,
      "text": "Quel ancien boxeur français a tourné dans le film de  Gérard Oury \"L'As des as\" ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Boxe",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Stéphane Ferrara",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Fabrice Bénichou",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Jean-Claude Bouttier ",
          "is_valid": false
        }, {
          "id": 4,
          "text": "René Jacquot",
          "is_valid": false
        }
      ]
    }, {
      "id": 425,
      "text": "Quel boxeur a écrit le livre \"Ma descente aux enfers \" en 2000 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Boxe",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Christophe Tiozzo",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Mike Tyson",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Fabrice Bénichou",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Muhammad Ali",
          "is_valid": false
        }
      ]
    }, {
      "id": 426,
      "text": "Quelle est la durée effective d'un match de football américain ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Foot US",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "60 minutes",
          "is_valid": true
        }, {
          "id": 2,
          "text": "40 minutes",
          "is_valid": false
        }, {
          "id": 3,
          "text": "80 minutes",
          "is_valid": false
        }, {
          "id": 4,
          "text": "90 minutes",
          "is_valid": false
        }
      ]
    }, {
      "id": 427,
      "text": "Qu'est ce qui est appelé le \"Casque de Diamant\" ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Le nom de la finale et du trophée du championnat de France de football américain",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Le trophée remis au vainqueur des 24 heures du Mans moto",
          "is_valid": false
        }, {
          "id": 3,
          "text": "La récompense remise au meilleur journaliste sportif français de l'année",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Un col de moyenne montagne du Massif Central figurant fréquemment au parcous du Tour de France",
          "is_valid": false
        }
      ]
    }, {
      "id": 428,
      "text": "En quelle année ont eu lieu les premiers championnats du monde de pétanque ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Pétanque",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "1959",
          "is_valid": true
        }, {
          "id": 2,
          "text": "1899",
          "is_valid": false
        }, {
          "id": 3,
          "text": "1925",
          "is_valid": false
        }, {
          "id": 4,
          "text": "1978",
          "is_valid": false
        }
      ]
    }, {
      "id": 429,
      "text": "Les Argonautes d'Aix-en-Provence sont une équipe de…",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Football américain",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Baseball",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Hockey-sur-glace",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Basket-ball",
          "is_valid": false
        }
      ]
    }, {
      "id": 430,
      "text": "Quelles sont les deux disciplines pratiquées dans le combiné nordique ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Ski",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Ski de fond et saut à ski",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Tir et saut à ski",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Tir et ski de fond",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Ski de fond et luge",
          "is_valid": false
        }
      ]
    }, {
      "id": 431,
      "text": "Dans quelle ville David Douillet a-ti-il été sacré champion du monde pour la deuxième et la troisième fois ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Judo",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Chiba",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Hamilton",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Paris",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Cracovie",
          "is_valid": false
        }
      ]
    }, {
      "id": 432,
      "text": "En quelle année David Douillet a-t-il été sacré champion du monde pour la première fois ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Judo",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "1993",
          "is_valid": true
        }, {
          "id": 2,
          "text": "1991",
          "is_valid": false
        }, {
          "id": 3,
          "text": "1995",
          "is_valid": false
        }, {
          "id": 4,
          "text": "1994",
          "is_valid": false
        }
      ]
    }, {
      "id": 433,
      "text": "Quel sportif a été sacré Champion des champions français en 1995 et en 2000 par le journal L'Equipe ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "David Douillet",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Tony Estanguet",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Eunice Barber",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Jackson Richardson",
          "is_valid": false
        }
      ]
    }, {
      "id": 434,
      "text": "Quel sport pratiquait Jean Bouin, qui a donné son nom à plusieurs enceintes sportives ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Athlétisme",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Natation",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Boxe",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Gymnastique",
          "is_valid": false
        }
      ]
    }, {
      "id": 435,
      "text": "Qu'est qu'un oxer ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Un obstacle d'équitation",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Une figure de patinage artistique",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Un arbitre de base-ball",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Le casque d'un footballeur américain",
          "is_valid": false
        }
      ]
    }, {
      "id": 436,
      "text": "Laquelle de ces couleurs n'est pas une couleur de ceinture au judo ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Judo",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Rose",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Marron",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Bleu",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Vert",
          "is_valid": false
        }
      ]
    }, {
      "id": 437,
      "text": "En quelle année le golf a-t-il été codifié ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Golf",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "1754",
          "is_valid": true
        }, {
          "id": 2,
          "text": "1829",
          "is_valid": false
        }, {
          "id": 3,
          "text": "1889",
          "is_valid": false
        }, {
          "id": 4,
          "text": "1906",
          "is_valid": false
        }
      ]
    }, {
      "id": 438,
      "text": "En quelle année Christian Plaziat a-t-il été sacré champion d'Euope du décathlon en plein air ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "1990",
          "is_valid": true
        }, {
          "id": 2,
          "text": "1988",
          "is_valid": false
        }, {
          "id": 3,
          "text": "1992",
          "is_valid": false
        }, {
          "id": 4,
          "text": "1994",
          "is_valid": false
        }
      ]
    }, {
      "id": 439,
      "text": "Quel athlète était surnommé \"la Comète du Kansas\" ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Maurice Greene",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Dennis Mitchell",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Leroy Burrell",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Mike Marsh",
          "is_valid": false
        }
      ]
    }, {
      "id": 440,
      "text": "En quelle année le Paris-Volley a-t-il remporté sa première coupe d'Europe ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Volleyball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "2000",
          "is_valid": true
        }, {
          "id": 2,
          "text": "1999",
          "is_valid": false
        }, {
          "id": 3,
          "text": "2001",
          "is_valid": false
        }, {
          "id": 4,
          "text": "2002",
          "is_valid": false
        }
      ]
    }, {
      "id": 441,
      "text": "Qu'est ce que la  Vasaloppet ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Une course annuelle de ski de fond disputée en Suède et d'une distance de près de 90 km",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Un deux-roues dont les courses suscitent un engouement fort au Bénin",
          "is_valid": false
        }, {
          "id": 3,
          "text": "La tenue officielle des escrimeurs ukrainiens",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Le nom d'une compétition de pétanque disputée entre les nations scandinaves",
          "is_valid": false
        }
      ]
    }, {
      "id": 442,
      "text": "Qu'est ce que la Diagonale des Fous ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Le surnom du Grand Raid, un raid nature disputé sur l'Île de la Réunion",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Une passe, au football américain, longue de plus de cinquante mètres",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Un saut en parachute à plus de trente mille mètres d'altitude",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Un coup rarissime aux échecs",
          "is_valid": false
        }
      ]
    }, {
      "id": 443,
      "text": "Dans quel sport se sont illustrées les sœurs Christine et Marielle Goitschel ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Ski",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Natation",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Surf",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Cyclisme",
          "is_valid": false
        }
      ]
    }, {
      "id": 444,
      "text": "Combien y-a-t-il de trous sur un parcours de golf ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Golf",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "18",
          "is_valid": true
        }, {
          "id": 2,
          "text": "11",
          "is_valid": false
        }, {
          "id": 3,
          "text": "21",
          "is_valid": false
        }, {
          "id": 4,
          "text": "16",
          "is_valid": false
        }
      ]
    }, {
      "id": 445,
      "text": "Quelles sont les deux disciplines pratiquées dans le biathlon ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Biathlon",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Tir et ski de fond",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Ski alpin et saut à ski",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Tir  et saut à ski",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Ski alpin et ski de fond",
          "is_valid": false
        }
      ]
    }, {
      "id": 446,
      "text": "Quel est le plus grand bateau au programme des compétitions d'aviron ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Aviron",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Le 8",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Le 4",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Le 6",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Le 10",
          "is_valid": false
        }
      ]
    }, {
      "id": 447,
      "text": "Quelles sont les deux disciplines communes aux femmes et aux hommes dans les compétitions de gymnastique ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Gymnastique",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Sol et saut de cheval",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Poutre et barre fixe",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Sol et poutre",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Saut de cheval et barre fixe",
          "is_valid": false
        }
      ]
    }, {
      "id": 448,
      "text": "Quel sport pratique l'acteur Mickey Rourke ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Boxe",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Judo",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Karaté",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Catch",
          "is_valid": false
        }
      ]
    }, {
      "id": 449,
      "text": "Dans quel sport excelle Jérémy Florès ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Surf",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Surf",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Cyclisme",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Boxe",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Escalade",
          "is_valid": false
        }
      ]
    }, {
      "id": 450,
      "text": "De quelle île est originaire Jackson Richardson ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Handball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "La Réunion",
          "is_valid": true
        }, {
          "id": 2,
          "text": "La Guadeloupe",
          "is_valid": false
        }, {
          "id": 3,
          "text": "La Martinique",
          "is_valid": false
        }, {
          "id": 4,
          "text": "L'Île-de-France",
          "is_valid": false
        }
      ]
    }, {
      "id": 451,
      "text": "Combien de sélections compte Jackson Richardson en équipe de France ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Handball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "417",
          "is_valid": true
        }, {
          "id": 2,
          "text": "297",
          "is_valid": false
        }, {
          "id": 3,
          "text": "329",
          "is_valid": false
        }, {
          "id": 4,
          "text": "379",
          "is_valid": false
        }
      ]
    }, {
      "id": 452,
      "text": "Combien de Coupes de France a remporté Jackson Richardson ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Handball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "2",
          "is_valid": true
        }, {
          "id": 2,
          "text": "0",
          "is_valid": false
        }, {
          "id": 3,
          "text": "1",
          "is_valid": false
        }, {
          "id": 4,
          "text": "3",
          "is_valid": false
        }
      ]
    }, {
      "id": 453,
      "text": "Quelle est l'arme de prédilection de Laura Flessel -Colovic ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Escrime",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "L'épée",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Le sabre",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Le fleuret",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Le pistolet",
          "is_valid": false
        }
      ]
    }, {
      "id": 454,
      "text": "En quelle année Laura Flessel a remporté son premier titre de champion du monde ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Escrime",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "1998",
          "is_valid": true
        }, {
          "id": 2,
          "text": "1994",
          "is_valid": false
        }, {
          "id": 3,
          "text": "1996",
          "is_valid": false
        }, {
          "id": 4,
          "text": "2000",
          "is_valid": false
        }
      ]
    }, {
      "id": 455,
      "text": "Avant de devenir animatrice de télévision, dans quel sport s'est illustrée Céline Géraud ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Judo",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Escrime",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Athlétisme",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Natation",
          "is_valid": false
        }
      ]
    }, {
      "id": 456,
      "text": "Avant de devenir journaliste sportif, dans quel sport s'est distingué Pierre Fulla ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Haltérophilie",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Gymnastique",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Boxe",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Lutte",
          "is_valid": false
        }
      ]
    }, {
      "id": 457,
      "text": "Dans quel sport Lino Ventura a-t-il obtenu un titre de champion d'Europe avant de se tourner vers le cinéma ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Lutte gréco-romaine",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Catch",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Moto-cross",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Pétanque",
          "is_valid": false
        }
      ]
    }, {
      "id": 458,
      "text": "Dans quel lieu prestigieux de Paris se sont déroulés les championnats du monde d'escrime en 2010 ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Escrime",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Au Grand Palais",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Sous la Tour Eiffel",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Au Louvre",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Au Parc des Princes",
          "is_valid": false
        }
      ]
    }, {
      "id": 459,
      "text": "Quelle escrimeuse est devenue en 2001  la première Française sacrée championne du monde de sabre ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Escrime",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Anne-Lise Touya",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Cécile Argiolas",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Maureen Isima",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Léonore Perrus",
          "is_valid": false
        }
      ]
    }, {
      "id": 460,
      "text": "Quel adversaire s'imposa à l'équipe de France de handball féminin en finale du Mondial 1999 ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Handball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "La Norvège",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Autriche",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Roumanie",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Hongrie",
          "is_valid": false
        }
      ]
    }, {
      "id": 461,
      "text": "A qui était associé Jean-Philippe Gatien pour devenir champion d'Europe de tennis de table en double en 2000 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Tennis de table",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Patrick Chilla",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Patrick Birocheau",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Cédric Cabestany",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Damien Éloi",
          "is_valid": false
        }
      ]
    }, {
      "id": 462,
      "text": "A quel agrès Ludivine Furnon devint-elle en 2000 la première Française championne d'Europe de gymnastique ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Gymnastique",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Au sol",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Saut de Cheval",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Barre Asymétrique",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Poutre",
          "is_valid": false
        }
      ]
    }, {
      "id": 463,
      "text": "Quelle athlète française fut sacrée championne du monde de l'heptathlon, à Séville en 1999 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Eunice Barber",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Marie Collonvillé",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Jeanne Berthod",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Julie Savogent",
          "is_valid": false
        }
      ]
    }, {
      "id": 464,
      "text": "Quel est le nom du ballon avec lequel Piccard et Jones réalisèrent le premier Tour du monde du genre, en 1999 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "\"Breitling-Orbiter 3\"",
          "is_valid": true
        }, {
          "id": 2,
          "text": "\"Space-Tour 2\"",
          "is_valid": false
        }, {
          "id": 3,
          "text": "\"Worlding-Conquerer 3\"",
          "is_valid": false
        }, {
          "id": 4,
          "text": "\"Heitling-Flight 2\"",
          "is_valid": false
        }
      ]
    }, {
      "id": 465,
      "text": "Quelle équipe succéda en 1999 aux Chicago Bulls au palmarès de la NBA ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "San Antonio",
          "is_valid": true
        }, {
          "id": 2,
          "text": "LA Lakers",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Boston Celtics",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Orlando Magic",
          "is_valid": false
        }
      ]
    }, {
      "id": 466,
      "text": "Derrière quelle équipe le 4 X 100 m féminin français prit-il la seconde place du Mondial 1999 d'athlétisme ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Les Bahamas",
          "is_valid": true
        }, {
          "id": 2,
          "text": "La Jamaïque",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Le Costa Rica",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Les Etats-Unis",
          "is_valid": false
        }
      ]
    }, {
      "id": 467,
      "text": "Quel boxeur devint le premier Britannique champion du monde unifié des poids lourds en 1999 ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Boxe",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Lennox Lewis",
          "is_valid": true
        }, {
          "id": 2,
          "text": "David Haye",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Andre Ward",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Amir Khan",
          "is_valid": false
        }
      ]
    }, {
      "id": 468,
      "text": "Quel boxeur devint en 1998 le premier français détenteur d'un titre mondial des moyens (WBC) ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Boxe",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Hacine Cherifi",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Thierry Jacob",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Fabrice Tiozzo",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Anaclet Wamba",
          "is_valid": false
        }
      ]
    }, {
      "id": 469,
      "text": "Quel handballeur français fut élu meilleur joueur du monde en 1998 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Handball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Stéphane Stoecklin",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Denis Lathoud",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Jackson Richardson",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Frédéric Volle",
          "is_valid": false
        }
      ]
    }, {
      "id": 470,
      "text": "Quelle skieuse italienne réalisa, lors des Championnats du monde 1997, le doublé géant-slalom ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Ski",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Déborah Compagnoni",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Isolde Kösner",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Lara Magoni",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Karen Putzer",
          "is_valid": false
        }
      ]
    }, {
      "id": 471,
      "text": "Quel marin français remporta le Vendée Globe Challenge en 1997 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Voile",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Christophe Auguin",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Olivier de Kersauson",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Bruno Peyron",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Franck Cammas",
          "is_valid": false
        }
      ]
    }, {
      "id": 472,
      "text": "Combien de titres mondiaux sont inscrits au palmarès de l'athlète américain Carl Lewis, retraité depuis 1997 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Huit",
          "is_valid": true
        }, {
          "id": 2,
          "text": "6",
          "is_valid": false
        }, {
          "id": 3,
          "text": "7",
          "is_valid": false
        }, {
          "id": 4,
          "text": "9",
          "is_valid": false
        }
      ]
    }, {
      "id": 473,
      "text": "Quel boxeur français devint en 1997 champion du monde des lourds-légers (WBA) après l'avoir été en mi-lourds (WBC) ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Boxe",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Fabrice Tiozzo",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Hacine Cherifi",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Thierry Jacob",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Anaclet Wamba",
          "is_valid": false
        }
      ]
    }, {
      "id": 474,
      "text": "En quelle année le journal \"L'Equipe\" célébra-t-il son Cinquantenaire ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "1996",
          "is_valid": true
        }, {
          "id": 2,
          "text": "1995",
          "is_valid": false
        }, {
          "id": 3,
          "text": "1994",
          "is_valid": false
        }, {
          "id": 4,
          "text": "1993",
          "is_valid": false
        }
      ]
    }, {
      "id": 475,
      "text": "Dans quelle catégorie le Français Jean-Baptiste Mendy décrocha-t-il à 33 ans le titre mondial WBC de boxe ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Boxe",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Les légers",
          "is_valid": true
        }, {
          "id": 2,
          "text": "mouche",
          "is_valid": false
        }, {
          "id": 3,
          "text": "lourd",
          "is_valid": false
        }, {
          "id": 4,
          "text": "mi-mouche",
          "is_valid": false
        }
      ]
    }, {
      "id": 476,
      "text": "Quel navigateur devint en 1996 le seul Français , avec Eric Tabarly, à remporter deux fois la Transat anglaise en solitaire ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Voile",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Loïck Peyron",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Michel Desjoyaux",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Roland Jourdain",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Vincent Riou",
          "is_valid": false
        }
      ]
    }, {
      "id": 477,
      "text": "A quelle distance du sol se trouve le panier de basket-ball ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "2,90 m",
          "is_valid": true
        }, {
          "id": 2,
          "text": "2,95",
          "is_valid": false
        }, {
          "id": 3,
          "text": "3",
          "is_valid": false
        }, {
          "id": 4,
          "text": "2,85",
          "is_valid": false
        }
      ]
    }, {
      "id": 478,
      "text": "Combien y a-t-il d'obstacles dans un 400 m haies, en athlétisme ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "10",
          "is_valid": true
        }, {
          "id": 2,
          "text": "9",
          "is_valid": false
        }, {
          "id": 3,
          "text": "8",
          "is_valid": false
        }, {
          "id": 4,
          "text": "11",
          "is_valid": false
        }
      ]
    }, {
      "id": 479,
      "text": "Quelle est la particularité du premier saut, dans l'épreuve d'athlétisme du triple saut ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "C'est un cloche-pied",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Il doit faire plus d'un mètre",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Il est effectuer du pied droit",
          "is_valid": false
        }, {
          "id": 4,
          "text": "On est pas obligé de le faire",
          "is_valid": false
        }
      ]
    }, {
      "id": 480,
      "text": "A quelle hauteur se situe la latte sur une haie de 110m haies ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "1,067 m",
          "is_valid": true
        }, {
          "id": 2,
          "text": "1,035",
          "is_valid": false
        }, {
          "id": 3,
          "text": "1,045",
          "is_valid": false
        }, {
          "id": 4,
          "text": "1,079",
          "is_valid": false
        }
      ]
    }, {
      "id": 481,
      "text": "Quel est le poids d'un disque dans l'épreuve d'athlétisme du lancer du disque masculin ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "2 kg",
          "is_valid": true
        }, {
          "id": 2,
          "text": "1kg",
          "is_valid": false
        }, {
          "id": 3,
          "text": "2,5kg",
          "is_valid": false
        }, {
          "id": 4,
          "text": "1,5kg",
          "is_valid": false
        }
      ]
    }, {
      "id": 482,
      "text": "Quel est le premier club français à avoir été sacré champion d'Europe de volley-ball (en 2001) ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Volleyball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Le Paris-Volley ",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Tours-Volley",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Cannes ",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Sète",
          "is_valid": false
        }
      ]
    }, {
      "id": 483,
      "text": "Quel est l'autre nom donné au palet, au hockey sur glace ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Hockey sur glace",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Le puck (ou la rondelle)",
          "is_valid": true
        }, {
          "id": 2,
          "text": "La dalle",
          "is_valid": false
        }, {
          "id": 3,
          "text": "La balle",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Le glisseur",
          "is_valid": false
        }
      ]
    }, {
      "id": 484,
      "text": "En quelle année le tennis de table a-t-il été pour la première fois inscrit au programme  olympique ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Tennis de table",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "1988",
          "is_valid": true
        }, {
          "id": 2,
          "text": "1987",
          "is_valid": false
        }, {
          "id": 3,
          "text": "1990",
          "is_valid": false
        }, {
          "id": 4,
          "text": "1991",
          "is_valid": false
        }
      ]
    }, {
      "id": 485,
      "text": "Je suis originaire de Guadeloupe, j'aime les tours et les demi-tours, j'ai remporté trois titres olympiques.",
      "category": "Tous Sports",
      "difficulty": 3,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Marie-José Pérec",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Michael Pietrus",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Guillaume Hoarau",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Teddy Riner",
          "is_valid": false
        }
      ]
    }, {
      "id": 486,
      "text": "Champion olympique de boxe en mi-lourd à 18 ans, j'ai conquis 12 titres mondiaux pros sous deux noms différents.",
      "category": "Tous Sports",
      "difficulty": 2,
      "sub_category": "Boxe",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Muhammad Ali",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Mike Tyson",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Joe Fazier",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Brahim Asloum",
          "is_valid": false
        }
      ]
    }, {
      "id": 487,
      "text": "Je ne suis pas Goliath. J'ai été deux fois champion olympique de judo. J'ai aussi remporté trois titres mondiaux des lourds de suite. ",
      "category": "Tous Sports",
      "difficulty": 1,
      "sub_category": "Judo",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "David Douillet",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Lionel Hugonnier",
          "is_valid": false
        }, {
          "id": 3,
          "text": "David Baron",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Teddy Riner",
          "is_valid": false
        }
      ]
    }, {
      "id": 488,
      "text": "Médaillé d'or aux JO de 76 sur 110m haies. Recordman du monde sur la distance. J'ai été ministre des Sports.",
      "category": "Tous Sports",
      "difficulty": 3,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Guy Drut",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Thomas Munkelt",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Roger Kingdom",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Rodney Milburn",
          "is_valid": false
        }
      ]
    }, {
      "id": 489,
      "text": "Je suis roumaine. J'ai été la première gymnaste à obtenir un 10, aux JO de 1976. J'ai remporté cinq titres olympiques.",
      "category": "Tous Sports",
      "difficulty": 3,
      "sub_category": "Gymnastique",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Nadia Comaneci",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Mariana Constantin",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Georgeta Gabor",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Anca Grigoras",
          "is_valid": false
        }
      ]
    }, {
      "id": 490,
      "text": "La neige est mon royaume. Championne olympique du géant en 64 et du slalom en 68. Ma sœur Christine skiait à mes côtés.",
      "category": "Tous Sports",
      "difficulty": 3,
      "sub_category": "Ski",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Marielle Goitschel",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Nathalie Bouvier",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Lucienne Schmith-Coutet",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Dorota Tlalka",
          "is_valid": false
        }
      ]
    }, {
      "id": 491,
      "text": "Un physique d'Apollon. Avec l'aide d'une perche, je décroche les étoiles. Celle des JO de 1996 à Atlanta était en or.",
      "category": "Tous Sports",
      "difficulty": 2,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Jean Galfione",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Renaud Lavillenie",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Romain Mesnil",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Damiel Dossevi",
          "is_valid": false
        }
      ]
    }, {
      "id": 492,
      "text": "Tarzan sur grand écran. Je suis le premier à nager un 100 m en moins d'une minute. Je fus quintuple champion olympique. ",
      "category": "Tous Sports",
      "difficulty": 2,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Johnny Weissmuller",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Ian Thorpe",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Michael Phelps",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Mark Spitz",
          "is_valid": false
        }
      ]
    }, {
      "id": 493,
      "text": "Mon n° 23 est légendaire. J'ai fait le bonheur des Bulls. Je suis considéré comme le meilleur basketteur de l'histoire.",
      "category": "Tous Sports",
      "difficulty": 2,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Michael Jordan",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Joakim Noah",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Bob love",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Scottie Pippen",
          "is_valid": false
        }
      ]
    }, {
      "id": 494,
      "text": "Skieur français. J'ai été deux fois champion du monde. J'ai conquis trois médailles d'or lors des JO de 1968. ",
      "category": "Tous Sports",
      "difficulty": 2,
      "sub_category": "Ski",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Jean-Claude Killy",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Jean Vuarnet",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Franck Picard",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Julien Lizeroux",
          "is_valid": false
        }
      ]
    }, {
      "id": 495,
      "text": "Élu athlète du siècle, j'ai remporté neuf médailles d'or sur 4 olympiades : cinq en sprint et quatre à la longueur.",
      "category": "Tous Sports",
      "difficulty": 2,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Carl Lewis",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Usain Bolt",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Michael Johnson",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Tyson Gay",
          "is_valid": false
        }
      ]
    }, {
      "id": 496,
      "text": "Je suis une succession de portes bleue et rouge, dessinées sur fond blanc. Certains me disent spécial.",
      "category": "Tous Sports",
      "difficulty": 1,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Le slalom",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Le Triathlon",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Le football américain",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Le saut à ski",
          "is_valid": false
        }
      ]
    }, {
      "id": 497,
      "text": "Je tiens, mais ne fond pas, dans la main, avec mes 60 cm (environ) de circonférence. Mon but ? Toucher le filet.",
      "category": "Tous Sports",
      "difficulty": 2,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Un ballon de handball",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Un ballon de Football",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Une balle de Hockey sur gazon",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Un palet de Hockey sur glace",
          "is_valid": false
        }
      ]
    }, {
      "id": 498,
      "text": "J'étais baptisé \"Mintonette\" à l'origine, l'un de mes joueurs est le libero, mes matches se terminent parfois au tie-break.",
      "category": "Tous Sports",
      "difficulty": 2,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Le volley-ball",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Football",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Handball",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Badminton",
          "is_valid": false
        }
      ]
    }, {
      "id": 499,
      "text": "Marseillais. Quinze ans entraîneur de l'équipe de France de hand. Champion du monde avec les Barjots et les Costauds. ",
      "category": "Tous Sports",
      "difficulty": 2,
      "sub_category": "Handball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Daniel Costantini",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Claude Onesta",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Jackson Richardson",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Thierry Omeyer",
          "is_valid": false
        }
      ]
    }, {
      "id": 500,
      "text": "Meneur de jeu de la \"Dream Team\", j'ai longtemps été le meilleur passeur de tous les temps en NBA. 5 fois champions avec les Lakers.",
      "category": "Tous Sports",
      "difficulty": 2,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Earvin \"Magic\" Johnson",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Charles Barkley",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Karl Malone",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Scottie Pippen",
          "is_valid": false
        }
      ]
    }, {
      "id": 501,
      "text": "Mon nom est un mot anglais signifiant \"crosse\", j'oppose deux équipes de onze joueurs, je suis très populaire au Pakistan.",
      "category": "Tous Sports",
      "difficulty": 3,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Le hockey sur gazon",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Cricket",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Hockey sur glace",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Baseball",
          "is_valid": false
        }
      ]
    }, {
      "id": 502,
      "text": "Mon nom me destinait à la viticulture, mes perches m'ont élevé bien haut, j'ai été recordman du monde plusieurs fois.",
      "category": "Tous Sports",
      "difficulty": 3,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Thierry Vigneron",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Jean Galfione",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Maksim Tarasov",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Jeff Hartwig",
          "is_valid": false
        }
      ]
    }, {
      "id": 503,
      "text": "Mon nom signifie \"à travers la campagne\", je suis une épreuve de fond, les Africains dominent mes Championnats du monde.",
      "category": "Tous Sports",
      "difficulty": 3,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Le cross-country",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Le trail",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Le rallye",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Le Cross",
          "is_valid": false
        }
      ]
    }, {
      "id": 504,
      "text": "Mon numéro 99 est devenu légendaire, j'était surnommé \"The Great one\", j'ai joué pour les Rangers et les Kings.",
      "category": "Tous Sports",
      "difficulty": 3,
      "sub_category": "Hockey sur glace",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Wayne Gretzky",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Bobby Orr",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Mario Lemieux",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Stan Mikita",
          "is_valid": false
        }
      ]
    }, {
      "id": 505,
      "text": "Mon premier est le saut à skis ; mon second le ski de fond ; mon tout est un combiné des deux.",
      "category": "Tous Sports",
      "difficulty": 2,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Le combiné nordique",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Descente ",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Slalom",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Géant",
          "is_valid": false
        }
      ]
    }, {
      "id": 506,
      "text": "Mon premier est un cloche-pied ; mon deuxième une foulée bondissante ; et mon troisième un saut en longueur.",
      "category": "Tous Sports",
      "difficulty": 2,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Le triple saut",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Saut en longueur",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Saut en hauteur",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Saut à la perche",
          "is_valid": false
        }
      ]
    }, {
      "id": 507,
      "text": "Nageur américain le plus performant de tous les temps. Aux JO de 1972, j'ai remporté sept médailles. Un record! ",
      "category": "Tous Sports",
      "difficulty": 3,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Mark Spitz",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Michael Phelps",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Jenny Thompson",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Matt Biondi",
          "is_valid": false
        }
      ]
    }, {
      "id": 508,
      "text": "Née en 1926, dans le sens Strasbourg-Paris, j'ai vu mon parcours s'inverser en 1980. Qu'importe : ça marche pour moi ! ",
      "category": "Tous Sports",
      "difficulty": 3,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Paris-Colmar",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Paris-Strasbourg",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Paris-Haguenau",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Paris-Mulhouse",
          "is_valid": false
        }
      ]
    }, {
      "id": 509,
      "text": "Officier tchèque. Deux fois champion olympique du 10 000m. J'ai été le premier à parcourir plus de 20 km dans l'heure.",
      "category": "Tous Sports",
      "difficulty": 4,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Emil Zatopek",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Mike MCLeod",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Miruts Yifter",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Waldemar Cierpinski",
          "is_valid": false
        }
      ]
    }, {
      "id": 510,
      "text": "On m'a surnommé le \"Petit Prince\" en 1979, mais je suis retraité depuis 2001, après avoir fait bonne figure sur les plans d'eau.",
      "category": "Tous Sports",
      "difficulty": 3,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Patrice Martin",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Sammy Duvall",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Nicolas Le Forestier",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Jean-Marie Muller",
          "is_valid": false
        }
      ]
    }, {
      "id": 511,
      "text": "On m'appelait \"la Momie\" à cause de mes blessures bandées, je ne refusais pas les obstacles, j'ai été sacré champion d'Europe du 110 m haies en 1986.",
      "category": "Tous Sports",
      "difficulty": 3,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Stéphane Caristan",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Françis Demarthon",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Daniel Sangouma",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Jean-Charles Trouabal",
          "is_valid": false
        }
      ]
    }, {
      "id": 512,
      "text": "Perchiste soviétique. J'ai été le premier à passer la barre des 6 m. J'ai battu 35 records du monde dans cette discipline. ",
      "category": "Tous Sports",
      "difficulty": 3,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Sergueï Bubka",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Jean Galfione",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Maksim Tarasov",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Jeff Hartwig",
          "is_valid": false
        }
      ]
    }, {
      "id": 513,
      "text": "Premier champion d'Europe français de boxe, je devins champion du monde des mi-lourds en 1920. Battu pour le titre des lourds.",
      "category": "Tous Sports",
      "difficulty": 3,
      "sub_category": "Boxe",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Georges Carpentier",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Marcel Thil",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Marcel Cerdan",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Brahim Asloum",
          "is_valid": false
        }
      ]
    }, {
      "id": 514,
      "text": "Quel est le premier perchiste français à avoir franchi la barre des six mètres en compétition ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Boxe",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Jean Galfione",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Romain Mesnil",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Thierry Vigneron",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Renaud Lavillenie",
          "is_valid": false
        }
      ]
    }, {
      "id": 515,
      "text": "En quelle année le boxeur Jean-Claude Bouttier a décroché son premier titre de champion d'Europe ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Boxe",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "1971",
          "is_valid": true
        }, {
          "id": 2,
          "text": "1965",
          "is_valid": false
        }, {
          "id": 3,
          "text": "1969",
          "is_valid": false
        }, {
          "id": 4,
          "text": "1974",
          "is_valid": false
        }
      ]
    }, {
      "id": 516,
      "text": "Ou s'est déroulé le combat entre Jean-Claude Bouttier et Carlos Monzon en 1973 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Boxe",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Roland-Garros",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Par des Princes",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Grand Palais",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Palais omnisports de Paris-Bercy",
          "is_valid": false
        }
      ]
    }, {
      "id": 517,
      "text": "Quel boxeur a joué dans le film de Claude Lelouch \"Les Uns et les Autres \" ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Boxe",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Jean-Claude Bouttier",
          "is_valid": true
        }, {
          "id": 2,
          "text": "René Jacquot",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Yvon Ségor",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Christophe Tiozzo",
          "is_valid": false
        }
      ]
    }, {
      "id": 518,
      "text": "Quelle était la nationalité de l'ancien champion du monde de boxe Carlos Monzon ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Boxe",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Argentine",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Espagnole",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Cubaine",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Mexicaine",
          "is_valid": false
        }
      ]
    }, {
      "id": 519,
      "text": "Combien de championnats du monde a remporté le boxeur Carlos Monzon ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Boxe",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "15",
          "is_valid": true
        }, {
          "id": 2,
          "text": "10",
          "is_valid": false
        }, {
          "id": 3,
          "text": "20",
          "is_valid": false
        }, {
          "id": 4,
          "text": "25",
          "is_valid": false
        }
      ]
    }, {
      "id": 520,
      "text": "Quelle est la plus haute barre franchie par le perchiste Thierry Vigneron ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "5,91 m",
          "is_valid": true
        }, {
          "id": 2,
          "text": "5, 86 m",
          "is_valid": false
        }, {
          "id": 3,
          "text": "5,99 m",
          "is_valid": false
        }, {
          "id": 4,
          "text": "6,01 m",
          "is_valid": false
        }
      ]
    }, {
      "id": 521,
      "text": "Combien de titres de champion d'Europe a remporté le perchiste Thierry Vigneron ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "2",
          "is_valid": true
        }, {
          "id": 2,
          "text": "0",
          "is_valid": false
        }, {
          "id": 3,
          "text": "1",
          "is_valid": false
        }, {
          "id": 4,
          "text": "3",
          "is_valid": false
        }
      ]
    }, {
      "id": 522,
      "text": "Combien de titres de championne d'Europe a remporté Marie-José Perec ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "3",
          "is_valid": true
        }, {
          "id": 2,
          "text": "2",
          "is_valid": false
        }, {
          "id": 3,
          "text": "4",
          "is_valid": false
        }, {
          "id": 4,
          "text": "6",
          "is_valid": false
        }
      ]
    }, {
      "id": 523,
      "text": "Combien de titres de championne de France a remporté l'athlète Patricia Girard ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "17",
          "is_valid": true
        }, {
          "id": 2,
          "text": "9",
          "is_valid": false
        }, {
          "id": 3,
          "text": "12",
          "is_valid": false
        }, {
          "id": 4,
          "text": "15",
          "is_valid": false
        }
      ]
    }, {
      "id": 524,
      "text": "Combien de titres de championne du monde a remporté Marie-José Perec ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "2",
          "is_valid": true
        }, {
          "id": 2,
          "text": "0",
          "is_valid": false
        }, {
          "id": 3,
          "text": "4",
          "is_valid": false
        }, {
          "id": 4,
          "text": "6",
          "is_valid": false
        }
      ]
    }, {
      "id": 525,
      "text": "Combien de titres de championne du monde en individuel a remporté l'athlète Christine Arron ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "0",
          "is_valid": true
        }, {
          "id": 2,
          "text": "1",
          "is_valid": false
        }, {
          "id": 3,
          "text": "2",
          "is_valid": false
        }, {
          "id": 4,
          "text": "3",
          "is_valid": false
        }
      ]
    }, {
      "id": 526,
      "text": "Avec quel chrono Christine Arron a battu le record d'Europe du 100 mètres en 1998 ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "10\"73",
          "is_valid": true
        }, {
          "id": 2,
          "text": "10\"69",
          "is_valid": false
        }, {
          "id": 3,
          "text": "10\"81\"",
          "is_valid": false
        }, {
          "id": 4,
          "text": "10\"85",
          "is_valid": false
        }
      ]
    }, {
      "id": 527,
      "text": "Dans quel sport s'est illustré Grégory Anquetil ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Handball",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Basket-ball",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Cyclisme",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Karaté",
          "is_valid": false
        }
      ]
    }, {
      "id": 528,
      "text": "En quelle année Roland Garros a-t-il réussi la première traversée de la Méditerranée en avion ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "1913",
          "is_valid": true
        }, {
          "id": 2,
          "text": "1899",
          "is_valid": false
        }, {
          "id": 3,
          "text": "1925",
          "is_valid": false
        }, {
          "id": 4,
          "text": "1909",
          "is_valid": false
        }
      ]
    }, {
      "id": 529,
      "text": "Dans quel sport s'est illustré Arnaud Massy au début du Xxe siècle ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Golf",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Lutte",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Athlétisme",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Boxe",
          "is_valid": false
        }
      ]
    }, {
      "id": 530,
      "text": "Le 26 juin 1904, Fernand Gonder devient détenteur du record du monde à la perche. Quelle barre franchit-il ce jour-là ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "3,69 m",
          "is_valid": true
        }, {
          "id": 2,
          "text": "2,98 m",
          "is_valid": false
        }, {
          "id": 3,
          "text": "4,56 m",
          "is_valid": false
        }, {
          "id": 4,
          "text": "5 m",
          "is_valid": false
        }
      ]
    }, {
      "id": 531,
      "text": "Dans quel sport s'est illustré Joseph Guillemot au début du Xxe siècle ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Athlétisme",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Natation",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Cyclisme",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Tir à l'arc",
          "is_valid": false
        }
      ]
    }, {
      "id": 532,
      "text": "Dans quel sport s'est illustré Eugène Criqui, champion du monde au début du Xxe siècle ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Boxe",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Natation",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Lutte",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Ski",
          "is_valid": false
        }
      ]
    }, {
      "id": 533,
      "text": "Lequel de ces sportifs du début du XXe siècle n'est pas un boxeur ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Boxe",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Géo Michel",
          "is_valid": true
        }, {
          "id": 2,
          "text": "André Routis",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Milou Pladner",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Marcel Thil",
          "is_valid": false
        }
      ]
    }, {
      "id": 534,
      "text": "Dans quelle discipline s'est illustré l'athlète Roger Rochard, champion d'Europe en 1934 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Demi-fond",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Longueur",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Lancer du poids",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Sprint",
          "is_valid": false
        }
      ]
    }, {
      "id": 535,
      "text": "Dans quel sport s'est illustré Marcel Dallemagne, vainqueur de l'Open de France en 1936 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Golf",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Badminton",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Jeu de paume",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Equitation",
          "is_valid": false
        }
      ]
    }, {
      "id": 536,
      "text": "Dans quel sport s'est illustré Louis Hostin,  détenteur de dix-huit records du monde dans les années trente ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Haltérophilie",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Athlétisme",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Voile",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Natation",
          "is_valid": false
        }
      ]
    }, {
      "id": 537,
      "text": "Dans quel sport s'est illustré James Couttet, champion du monde en 1938 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Ski",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Natation",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Gymnastique",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Pétanque",
          "is_valid": false
        }
      ]
    }, {
      "id": 538,
      "text": "Dans quel sport s'est illustré Alex Jany, détenteur de sept records du monde dans les années quarante ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Natation",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Athlétisme",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Haltérophilie",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Cyclisme",
          "is_valid": false
        }
      ]
    }, {
      "id": 539,
      "text": "Dans quel sport s'est illustrée Renée Garilhe, championne du monde en 1950 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Escrime",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Gymnastique",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Voile",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Aviron",
          "is_valid": false
        }
      ]
    }, {
      "id": 540,
      "text": "Dans quel sport s'est illustré Jean Levavasseur, champion du monde en 1950 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Escrime",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Equitation",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Pétanque",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Tir à l'arc",
          "is_valid": false
        }
      ]
    }, {
      "id": 541,
      "text": "Dans quel sport s'est illustré Robert Boutigny, champion du monde en 1950 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Canoë-Kayak",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Voile",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Natation",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Aviron",
          "is_valid": false
        }
      ]
    }, {
      "id": 542,
      "text": "Dans quel sport s'est illustré Jacqueline du Bief, championne du monde en 1952 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Patinage artistique",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Ski ",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Gymnastique",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Athlétisme",
          "is_valid": false
        }
      ]
    }, {
      "id": 543,
      "text": "Lequel de ces sportifs du milieu du XXe siècle n'est pas un nageur ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Jean Prat",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Jean Boiteux",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Gilbert Bozon",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Maurice Lusien",
          "is_valid": false
        }
      ]
    }, {
      "id": 544,
      "text": "Dans quel sport s'est illustrée Lucienne Schmit, championne du monde en 1954 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Ski",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Voile",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Aviron",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Golf",
          "is_valid": false
        }
      ]
    }, {
      "id": 545,
      "text": "Dans quel sport s'est illustré Robert Cohen, champion du monde en 1954 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Boxe",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Badminton",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Natation",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Aviron",
          "is_valid": false
        }
      ]
    }, {
      "id": 546,
      "text": "Dans quel sport s'est illustré Alphonse Halimi, champion du monde en 1957 ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Boxe",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Natation",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Golf",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Canoë-Kayak",
          "is_valid": false
        }
      ]
    }, {
      "id": 547,
      "text": "Dans quel sport s'est illustré Guy Périllat, double champion du monde dans les années 60 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Ski",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Boxe",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Natation",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Escrime",
          "is_valid": false
        }
      ]
    }, {
      "id": 548,
      "text": "Dans quel sport s'est illustré Charles Bozon, champion du monde en 1962 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Ski",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Gymnastique",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Athlétisme",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Aviron",
          "is_valid": false
        }
      ]
    }, {
      "id": 549,
      "text": "Dans quel sport s'est illustré Jean-Claude Magnan, champion du monde en 1963 et en 1965 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Escrime",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Lutte",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Athlétisme",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Haltérophilie",
          "is_valid": false
        }
      ]
    }, {
      "id": 550,
      "text": "Dans quel sport s'est illustré Claude Piquemal, champion d'Europe en 1962 et en 1966 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Athlétisme",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Ski",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Equitation",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Boxe",
          "is_valid": false
        }
      ]
    }, {
      "id": 551,
      "text": "Dans quel sport s'est illustré Alain Gottvallès, champion d'Europe en 1962 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Natation",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Ski",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Tir à la carabine",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Patinage de vitesse",
          "is_valid": false
        }
      ]
    }, {
      "id": 552,
      "text": "En quelle année Alain Calmat a-t-il été sacré champion du monde de patinage artistique ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Patinage artistique",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "1965",
          "is_valid": true
        }, {
          "id": 2,
          "text": "1961",
          "is_valid": false
        }, {
          "id": 3,
          "text": "1963",
          "is_valid": false
        }, {
          "id": 4,
          "text": "1967",
          "is_valid": false
        }
      ]
    }, {
      "id": 553,
      "text": "Combien de titres de champion de France a remporté le patineur Alain Calmat ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Patinage artistique",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "5",
          "is_valid": true
        }, {
          "id": 2,
          "text": "0",
          "is_valid": false
        }, {
          "id": 3,
          "text": "1",
          "is_valid": false
        }, {
          "id": 4,
          "text": "3",
          "is_valid": false
        }
      ]
    }, {
      "id": 554,
      "text": "Dans quel sport s'est illustré l'ancien secrétaire d'Etat de la jeunesse et des sports Roger Bambuck ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Athlétisme",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Natation",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Escrime",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Judo",
          "is_valid": false
        }
      ]
    }, {
      "id": 555,
      "text": "Combien de titres de champion d'Europe a remporté Roger Bambuck ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "2",
          "is_valid": true
        }, {
          "id": 2,
          "text": "0",
          "is_valid": false
        }, {
          "id": 3,
          "text": "1",
          "is_valid": false
        }, {
          "id": 4,
          "text": "3",
          "is_valid": false
        }
      ]
    }, {
      "id": 556,
      "text": "Combien de titres de champion de France a remporté Roger Bambuck ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "8",
          "is_valid": true
        }, {
          "id": 2,
          "text": "2",
          "is_valid": false
        }, {
          "id": 3,
          "text": "4",
          "is_valid": false
        }, {
          "id": 4,
          "text": "6",
          "is_valid": false
        }
      ]
    }, {
      "id": 557,
      "text": "Dans quel sport s'est illustrée Annie Famose, championne du monde en 1966 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Ski",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Golf",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Voile",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Patinage artistique",
          "is_valid": false
        }
      ]
    }, {
      "id": 558,
      "text": "Dans quel sport s'est illustrée Catherine Lacoste, fille du célèbre \"Mousquetaire\" ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Golf",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Tennis",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Basket-ball",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Ski",
          "is_valid": false
        }
      ]
    }, {
      "id": 559,
      "text": "Dans quel sport s'est distingué Alain Mosconi, détenteur de plusieurs records du monde et d'Europe dans les années 60 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Natation",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Ski",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Aviron",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Voile",
          "is_valid": false
        }
      ]
    }, {
      "id": 560,
      "text": "Dans quel sport s'est illustrée Dany Duflot, championne du monde en 1967 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Ski nautique",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Haltérophilie",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Aviron",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Patinage de vitesse",
          "is_valid": false
        }
      ]
    }, {
      "id": 561,
      "text": "Où est né l'ancien skieur Jean-Claude Killy ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Saint-Cloud",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Lourdes",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Tignes",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Chambéry",
          "is_valid": false
        }
      ]
    }, {
      "id": 562,
      "text": "Qui a été désigné champion du siècle de ski à Vienne en 1999 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Ski",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Jean-Claude Killy",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Alberto Tomba",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Hermann Maier",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Ingemar Stenmark",
          "is_valid": false
        }
      ]
    }, {
      "id": 563,
      "text": "Dans quelle équipe européenne a signé l'ancienne star de la NBA Allen Iverson ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Besiktas",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Partizan Belgrade",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Sienne",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Olympiakos",
          "is_valid": false
        }
      ]
    }, {
      "id": 564,
      "text": "Dans quel sport s'est illustré Lionel Pioline, deux fois champion du monde en individuel, et cousin de Cédric Pioline ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Trampoline",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Tennis de table",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Badminton",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Squash",
          "is_valid": false
        }
      ]
    }, {
      "id": 565,
      "text": "Quel club a remporté la Semaine des As en 2003 à Pau ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Pau - Orthez",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Le Havre",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Nancy",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Cholet",
          "is_valid": false
        }
      ]
    }, {
      "id": 566,
      "text": "Quel club a remporté la Semaine des As en 2004 à Mulhouse ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Dijon",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Le Mans",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Gravelines - Dunkerque",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Nancy",
          "is_valid": false
        }
      ]
    }, {
      "id": 567,
      "text": "Quel club a remporté la Semaine des As en 2005 à Clermont-Ferrand ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Nancy",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Gravelines - Dunkerque",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Cholet",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Le Havre",
          "is_valid": false
        }
      ]
    }, {
      "id": 568,
      "text": "Quel club a remporté la Semaine des As en 2006 à Dijon ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Le Mans",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Bourg-en-Bresse",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Dijon",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Villeurbanne",
          "is_valid": false
        }
      ]
    }, {
      "id": 569,
      "text": "Quel club a remporté la Semaine des As en 2007 à Nancy ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Roanne",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Nancy",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Le Mans",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Dijon",
          "is_valid": false
        }
      ]
    }, {
      "id": 570,
      "text": "Quel club a remporté la Semaine des As en 2008 à Toulon ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Cholet",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Toulon",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Vichy",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Le Mans",
          "is_valid": false
        }
      ]
    }, {
      "id": 571,
      "text": "Quel club a remporté la Semaine des As en 2009 au Havre ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Le Mans",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Orléans",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Le Havre",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Vichy",
          "is_valid": false
        }
      ]
    }, {
      "id": 572,
      "text": "Quel club a remporté la Semaine des As en 2010 à Villeurbanne ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Villeurbanne",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Le Mans",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Cholet",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Orléans",
          "is_valid": false
        }
      ]
    }, {
      "id": 573,
      "text": "Quelle athlète française a été sacré championne d'Europe du 400 mètres à Athènes en 1969 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Nicole Duclos",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Colette Besson",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Sylviane Telliez",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Maryvonne Dupureur",
          "is_valid": false
        }
      ]
    }, {
      "id": 574,
      "text": "Dans quel sport s'est mis en valeur Marie-France Baulez, championne du monde en 1970 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Parachutisme",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Voile",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Equitation",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Ski nautique",
          "is_valid": false
        }
      ]
    }, {
      "id": 575,
      "text": "Laquelle de ces sportives, qui se sont distinguées en 1970, ne pratiquait pas le ski au haut niveau ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Ski",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Janou Lefevre",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Michèle Jacquot",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Ingrid Lafforgue",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Isabelle Mir",
          "is_valid": false
        }
      ]
    }, {
      "id": 576,
      "text": "Dans quel sport s'est distinguée Janou Lefèvre, championne du monde en 1970 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Equitation",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Escrime",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Aviron",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Judo",
          "is_valid": false
        }
      ]
    }, {
      "id": 577,
      "text": "Quel navigateur français a remporté la Transatlantique en solitaire Plymouth - Newport en 1972 ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Voile",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Alain Colas",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Eric Tabarly",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Marc Pajot",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Daniel Gilard",
          "is_valid": false
        }
      ]
    }, {
      "id": 578,
      "text": "Dans quel sport s'est illustré Christian Noël, champion du monde en 1973 ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Escrime",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Ski",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Luge",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Course de traîneaux",
          "is_valid": false
        }
      ]
    }, {
      "id": 579,
      "text": "Dans quel sport s'est illustré Fabienne Serrat, championne du monde en 1974 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Ski",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Patinage artistique",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Ski nautique",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Luge",
          "is_valid": false
        }
      ]
    }, {
      "id": 580,
      "text": "Dans quel sport s'est illustré Jean-Luc Rougé, champion du monde en 1975 ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Judo",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Escrime",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Athlétisme",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Natation",
          "is_valid": false
        }
      ]
    }, {
      "id": 581,
      "text": "Dans quel sport s'est illustré Richard Tison, champion du monde en 1974 et en 1976 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Trampoline",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Gymnastique",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Judo",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Karaté",
          "is_valid": false
        }
      ]
    }, {
      "id": 582,
      "text": "Dans quel sport s'est illustré Jacques Secrétin, champion d'Europe en 1976 ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Tennis de table",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Badminton",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Squash",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Escrime",
          "is_valid": false
        }
      ]
    }, {
      "id": 583,
      "text": "Qui a été désigné meilleur pongiste français du Xxe siècle  ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Jacques Secrétin",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Patrick Chila",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Jean-Philippe Gatien",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Damien Eloi",
          "is_valid": false
        }
      ]
    }, {
      "id": 584,
      "text": "Quelle était l'arme de Didier Flament, lors de son titre de champion du monde en 1978 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Tennis de table",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Fleuret",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Epée",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Sabre",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Pistolet",
          "is_valid": false
        }
      ]
    }, {
      "id": 585,
      "text": "Combien de titres de champion du monde de ski nautique a remporté Patrice Martin ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Escrime",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "12",
          "is_valid": true
        }, {
          "id": 2,
          "text": "18",
          "is_valid": false
        }, {
          "id": 3,
          "text": "23",
          "is_valid": false
        }, {
          "id": 4,
          "text": "25",
          "is_valid": false
        }
      ]
    }, {
      "id": 586,
      "text": "Dans quel sport se sont illustrés Marc Pajot et Philippe Jeantot ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Voile",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Lutte",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Escrime",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Aviron",
          "is_valid": false
        }
      ]
    }, {
      "id": 587,
      "text": "Quel était le surnom de Patrice Martin, plusieurs fois champion du monde et d'Europe de ski nautique ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Ski nautique",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Le Petit Prince",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Super Pat",
          "is_valid": false
        }, {
          "id": 3,
          "text": "L'Invincible",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Superman",
          "is_valid": false
        }
      ]
    }, {
      "id": 588,
      "text": "En quelle année Jocelyne Triadou est devenue la première Française championne du monde de judo ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Judo",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "1980",
          "is_valid": true
        }, {
          "id": 2,
          "text": "1971",
          "is_valid": false
        }, {
          "id": 3,
          "text": "1991",
          "is_valid": false
        }, {
          "id": 4,
          "text": "1983",
          "is_valid": false
        }
      ]
    }, {
      "id": 589,
      "text": "Dans quel sport s'est distinguée Perrine Pelen, championne du monde en 1985 ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Ski",
          "is_valid": true
        }, {
          "id": 2,
          "text": " Natation",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Gymnastique",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Escrime",
          "is_valid": false
        }
      ]
    }, {
      "id": 590,
      "text": "De quel sport Joël Bouzou a-t-il été sacré champion du monde en 1987 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Pentathlon moderne",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Lutte",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Squash",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Badminton",
          "is_valid": false
        }
      ]
    }, {
      "id": 591,
      "text": "Dans quel sport a brillé Brigitte Deydier, triple championne du monde dans les années 80 ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Judo",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Gymnastique",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Escrime",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Pelote basque",
          "is_valid": false
        }
      ]
    }, {
      "id": 592,
      "text": "En quelle année l'escrimeur Jean-François Lamour a-t-il obtenu son unique titre de champion du monde ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Escrime",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "1987",
          "is_valid": true
        }, {
          "id": 2,
          "text": "1981",
          "is_valid": false
        }, {
          "id": 3,
          "text": "1985",
          "is_valid": false
        }, {
          "id": 4,
          "text": "1988",
          "is_valid": false
        }
      ]
    }, {
      "id": 593,
      "text": "De quel sport Patrice Mourier a-t-il été sacré champion du monde en 1987 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Lutte gréco-romaine",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Judo",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Karaté",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Boxe",
          "is_valid": false
        }
      ]
    }, {
      "id": 594,
      "text": "Quel record du monde avait établi l'équipe du 4x100 mètres français masculin en finale des championnats d'Europe en 1990 ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "37\"79",
          "is_valid": true
        }, {
          "id": 2,
          "text": "37\"69",
          "is_valid": false
        }, {
          "id": 3,
          "text": "37\"71",
          "is_valid": false
        }, {
          "id": 4,
          "text": "37\"83",
          "is_valid": false
        }
      ]
    }, {
      "id": 595,
      "text": "Lequel de ces athlètes français n'a pas couru la finale du 4x100 mètres des championnats d'Europe à Split en 1990 ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Gilles Quénéhervé",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Max Morinière",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Jean-Charles Trouabal",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Daniel Sangouma",
          "is_valid": false
        }
      ]
    }, {
      "id": 596,
      "text": "Quel escrimeur français est sacré champion du monde de fleuret en 1990 ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Escrime",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Philippe Omnès",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Eric Srecki",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Jean-François Lamour",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Brice Guyart",
          "is_valid": false
        }
      ]
    }, {
      "id": 597,
      "text": "En quelle année Christophe Tiozzo est-il devenu champion du monde (WBA) des super moyens ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Boxe",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "1990",
          "is_valid": true
        }, {
          "id": 2,
          "text": "1986",
          "is_valid": false
        }, {
          "id": 3,
          "text": "1988",
          "is_valid": false
        }, {
          "id": 4,
          "text": "1992",
          "is_valid": false
        }
      ]
    }, {
      "id": 598,
      "text": "Dans quel sport a brillé Eric Navet, champion du monde en 1990 ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Equitation",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Boxe",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Escrime",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Judo",
          "is_valid": false
        }
      ]
    }, {
      "id": 599,
      "text": "En quelle année Isabelle et Paul Duchesnay ont-ils été sacrés champions du monde de danse sur glace ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Patinage artistique",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "1991",
          "is_valid": true
        }, {
          "id": 2,
          "text": "1989",
          "is_valid": false
        }, {
          "id": 3,
          "text": "1993",
          "is_valid": false
        }, {
          "id": 4,
          "text": "1995",
          "is_valid": false
        }
      ]
    }, {
      "id": 600,
      "text": "Quelle ancienne athlète française a publié en 2008 le livre \"Rien ne sert de courir \" ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Marie-José Perec",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Christine Arron",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Patricia Girard",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Maryse Ewanjé-Epée",
          "is_valid": false
        }
      ]
    }, {
      "id": 601,
      "text": "Quelle ancienne sportive française a publié en 2010 le livre \"Négriers du foot\" ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Maryse Ewanjé-Epée",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Marinette Pichon",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Carole Merle",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Nathalie Tauziat",
          "is_valid": false
        }
      ]
    }, {
      "id": 602,
      "text": "Quel skieur français a remporté le globe de cristal du slalom en 1996 ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Ski",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Sébastien Amiez",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Jean-Luc Crétier",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Jean-Pierre Vidal",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Luc Alphand",
          "is_valid": false
        }
      ]
    }, {
      "id": 603,
      "text": "Quel boxeur français est devenu champion du monde WBA des super welters en 1996 ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Boxe",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Laurent Boudouani",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Jean-Marc Mormeck",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Brahim Asloum",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Jérôme Thomas",
          "is_valid": false
        }
      ]
    }, {
      "id": 604,
      "text": "Quel navigateur a bouclé en 1997 le tour du monde en 71 jours et 14 heures ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Voile",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Olivier de Kersauson",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Bruno Peyron",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Loïck Peyron",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Stéphane Peyron",
          "is_valid": false
        }
      ]
    }, {
      "id": 605,
      "text": "De quel sport Sébastien Deleigne est-il devenu champion du monde en 1997 ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Pentathlon moderne",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Ski",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Aviron",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Squash",
          "is_valid": false
        }
      ]
    }, {
      "id": 606,
      "text": "Qui a remporté le Vendée Globe en 1997 ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Voile",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Christophe Auguin",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Florence Arthaud",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Laurent Bourgnon",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Michel Desjoyeaux",
          "is_valid": false
        }
      ]
    }, {
      "id": 607,
      "text": "Quel navigateur a publié en 2009 le livre \"Coureur des océans\" ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Voile",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Michel Desjoyeaux",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Franck Cammas",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Philippe Monnet",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Loïck Peyron",
          "is_valid": false
        }
      ]
    }, {
      "id": 608,
      "text": "Dans quel sport s'est distingué Khalid Rahilou, devenu champion du monde en 1997 ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Boxe",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Judo",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Karaté",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Taekwondo",
          "is_valid": false
        }
      ]
    }, {
      "id": 609,
      "text": "Quelle nageuse française a été sacrée championne du monde du 200 mètres dos en 1998 ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Roxana Maracineanu",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Laure Manaudou",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Virginie Dedieu",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Catherine Plewinski",
          "is_valid": false
        }
      ]
    }, {
      "id": 610,
      "text": "Avant de se lancer dans une carrière politique, dans quel sport a brillé Marie-Claire Restoux ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Judo",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Natation",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Escrime",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Aviron",
          "is_valid": false
        }
      ]
    }, {
      "id": 611,
      "text": "Où est né l'ancien champion du monde de boxe Jean-Baptiste Mendy ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Boxe",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Dakar",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Marseille",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Cayenne",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Fort-de-France",
          "is_valid": false
        }
      ]
    }, {
      "id": 612,
      "text": "La Coupe Liliana - Ronchetti était une compétition de…",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Basket-ball",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Pétanque",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Handball",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Natation",
          "is_valid": false
        }
      ]
    }, {
      "id": 613,
      "text": "Quelle athlète française a été sacrée championne d'Europe du 100 mètres à Budapest en 1998 ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Christine Arron",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Patricia Girard",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Sylviane Felix",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Delphine Combe",
          "is_valid": false
        }
      ]
    }, {
      "id": 614,
      "text": "Qui a remporté la Route du Rhum en 1998 ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Voile",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Laurent Bourgnon",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Franck Cammas",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Christophe Auguin",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Alain Gautier",
          "is_valid": false
        }
      ]
    }, {
      "id": 615,
      "text": "Quel escrimeur français a été sacré champion du monde d'épée en 1998 ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Escrime",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Hugues Obry",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Eric Srecki",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Fabrice Jeannet",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Jérôme Jeannet",
          "is_valid": false
        }
      ]
    }, {
      "id": 616,
      "text": "Dans quel sport s'est illustré Emmanuel Brugvin, champion du monde en 1999 ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Canoë-Kayak",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Aviron",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Planche à voile",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Voile",
          "is_valid": false
        }
      ]
    }, {
      "id": 617,
      "text": "En quelle année Alexandra Ledermann est devenue la première femme championne d'Europe du saut d'obstacles ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Escrime",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "1999",
          "is_valid": true
        }, {
          "id": 2,
          "text": "1995",
          "is_valid": false
        }, {
          "id": 3,
          "text": "2001",
          "is_valid": false
        }, {
          "id": 4,
          "text": "2004",
          "is_valid": false
        }
      ]
    }, {
      "id": 618,
      "text": "Quelle course à la voile était anciennement nommée \"Course de l'Aurore\" ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Voile",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Solitaire du Figaro",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Route du Rhum",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Route du Café",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Vendée Globe",
          "is_valid": false
        }
      ]
    }, {
      "id": 619,
      "text": "Qui a remporté la Solitaire du Figaro en 2010 ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Voile",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Armel Le Cléac'h",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Michel Desjoyeaux",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Franck Cammmas",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Nicolas Lunven",
          "is_valid": false
        }
      ]
    }, {
      "id": 620,
      "text": "Qui a remporté la Solitaire du Figaro en 2009 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Voile",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Nicolas Lunvel",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Nicolas Troussel",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Armel Le Cléac'h",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Michel Desjoyeaux",
          "is_valid": false
        }
      ]
    }, {
      "id": 621,
      "text": "Qui a remporté la Solitaire du Figaro en 2008 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Voile",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Nicolas Troussel",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Nicolas Lunvel",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Armel Le Cléac'h",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Michel Desjoyeaux",
          "is_valid": false
        }
      ]
    }, {
      "id": 622,
      "text": "Qui a remporté la Solitaire du Figaro en 2007?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Voile",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Michel Desjoyeaux",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Nicolas Troussel",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Nicolas Lunvel",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Armel Le Cléac'h",
          "is_valid": false
        }
      ]
    }, {
      "id": 623,
      "text": "Quel est le surnom du navigateur Jean Le Cam ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Voile",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Le Roi Jean",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Le Caméléon",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Capitaine Jean",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Jeannot des Mers",
          "is_valid": false
        }
      ]
    }, {
      "id": 624,
      "text": "Quelle est la nationalité de Linford Christie, champion olympique du 100 mètres en 1992 ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Britannique",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Jamaicaine",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Cubaine",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Canadienne",
          "is_valid": false
        }
      ]
    }, {
      "id": 625,
      "text": "Combien de titres de champion de France de handball a remporté Jackson Richardson ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Handball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "2",
          "is_valid": true
        }, {
          "id": 2,
          "text": "0",
          "is_valid": false
        }, {
          "id": 3,
          "text": "5",
          "is_valid": false
        }, {
          "id": 4,
          "text": "3",
          "is_valid": false
        }
      ]
    }, {
      "id": 626,
      "text": "Dans quelle capitale s'est déroulé le final four de l'Euroligue de basket en 2010 ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Paris",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Barcelone",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Athènes",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Milan",
          "is_valid": false
        }
      ]
    }, {
      "id": 627,
      "text": "Seul nageur français champion olympique. J'avais gagné le 400 m nage libre. Ce jour là, mon père plongea dans la piscine.",
      "category": "Tous Sports",
      "difficulty": 3,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Jean Boiteux",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Yannick Agnel",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Alain Bernard",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Frédérick Bousquet",
          "is_valid": false
        }
      ]
    }, {
      "id": 628,
      "text": "Un maillet et une balle de bois me sont nécessaires, deux équipes de quatre cavaliers aussi. Et des buts, parce que c'est le but.",
      "category": "Tous Sports",
      "difficulty": 1,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Polo",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Jumping",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Hockey",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Course à cheval",
          "is_valid": false
        }
      ]
    }, {
      "id": 629,
      "text": "Volkswagen a donné mon nom a l'un de ses modèles, j'aime monter sur mes grands chevaux, le prince Charles me pratique. ",
      "category": "Tous Sports",
      "difficulty": 2,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Polo",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Golf",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Passat",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Touran",
          "is_valid": false
        }
      ]
    }, {
      "id": 630,
      "text": "Pivot des Lakers, je suis l'inventeur du bras roulé. J'ai été six fois champion et meilleur joueur de la NBA. ",
      "category": "Tous Sports",
      "difficulty": 3,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Kareem Abdul-Jabbar",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Magic Johnson",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Gail Goodrich",
          "is_valid": false
        }, {
          "id": 4,
          "text": "James Worthy",
          "is_valid": false
        }
      ]
    }, {
      "id": 631,
      "text": "Haltérophile de légende, j'ai gagné deux médailles d'or chez les supers-lourds. Je fus le premier à soulever 600kg au total olympique.",
      "category": "Tous Sports",
      "difficulty": 4,
      "sub_category": "Haltérophilie",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Vassili Alexeïev",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Halil Mutlu",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Georgi Markov",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Andrei Rybakou",
          "is_valid": false
        }
      ]
    }, {
      "id": 632,
      "text": "Basketteur de tous les records. Auteur de 100 points dans un match. 7 fois meilleur marqueur NBA.",
      "category": "Tous Sports",
      "difficulty": 2,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Wilt Chamberlain",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Magic Johnson",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Mickael Jordan",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Scottie Pippen",
          "is_valid": false
        }
      ]
    }, {
      "id": 633,
      "text": "Plongeur américain. Je suis champion olympique de haut vol  et au tremplin. Cinq fois champion du monde.",
      "category": "Tous Sports",
      "difficulty": 3,
      "sub_category": "Plongeon",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Greg Louganis",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Leo Goodwin",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Arvid Spangberg",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Tom Woodgate",
          "is_valid": false
        }
      ]
    }, {
      "id": 634,
      "text": "Je fus le \"Bombardier noir\". J'ai disputé 25 Championnat du monde sans connaître la défaite. 65 victoires pour 69 combats.",
      "category": "Tous Sports",
      "difficulty": 3,
      "sub_category": "Boxe",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Joe Louis",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Max Schmeling",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Jesse Owens",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Ezzard Charles",
          "is_valid": false
        }
      ]
    }, {
      "id": 635,
      "text": "Surnommé le \"Casseur de Manassa\". J'ai remporté 49 combats par KO. Je fus champion du monde des poids lourds.",
      "category": "Tous Sports",
      "difficulty": 3,
      "sub_category": "Boxe",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Jack Dempsey",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Jesse Willard",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Gene Tunney",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Alberto Firpo",
          "is_valid": false
        }
      ]
    }, {
      "id": 636,
      "text": "Symbole du sport est-allemand, championne olympique du 400 m, j'ai été triple championne du monde en 1983.",
      "category": "Tous Sports",
      "difficulty": 3,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Marita Koch",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Anke Behmer",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Gabriele Reinsch",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Beate Koch",
          "is_valid": false
        }
      ]
    }, {
      "id": 637,
      "text": "\"Flo-Jo\" était mon surnom. Sprinteuse triple championne olympique en 1988, je suis morte d'une crise d'épilepsie en 1998.",
      "category": "Tous Sports",
      "difficulty": 2,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Florence Griffith-Joyner",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Inge Helten",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Marlies Göhr",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Evelyn Ashford",
          "is_valid": false
        }
      ]
    }, {
      "id": 638,
      "text": "Patineuse norvégienne, championne du monde pour la première fois à 14 ans, j'ai remporté trois titres olympiques.  ",
      "category": "Tous Sports",
      "difficulty": 3,
      "sub_category": "Patinage artistique",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Sonja Henie",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Michelle Kwan",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Surya Bonaly",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Oksana Baiul",
          "is_valid": false
        }
      ]
    }, {
      "id": 639,
      "text": "Première nageuse à descendre sous la minute sur 100 m nage libre, j'ai participé à trois olympiades. Huit fois médaillée.",
      "category": "Tous Sports",
      "difficulty": 3,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Dawn Fraser",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Shane Gould",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Laure Manaudou",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Christine Caron",
          "is_valid": false
        }
      ]
    }, {
      "id": 640,
      "text": "Je suis le cavalier français le plus titré. Deux fois champion olympique (1952 et 1964). Champion du monde en 1966.",
      "category": "Tous Sports",
      "difficulty": 3,
      "sub_category": "Equitation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Pierre Jonquères d'Oriola",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Arnaud Boiteau",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Bernard de Fombelle",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Jean-Jacques Guyon",
          "is_valid": false
        }
      ]
    }, {
      "id": 641,
      "text": "Fleurettiste français. Quatre médailles d'or aux JO (deux en individuel). Je suis sacré huit fois champion du monde.",
      "category": "Tous Sports",
      "difficulty": 3,
      "sub_category": "Escrime",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Christian d'Oriola",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Brice Guyart",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Philippe Omnès",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Alexandre Romankov",
          "is_valid": false
        }
      ]
    }, {
      "id": 642,
      "text": "Je suis un légendaire skieur autrichien. Je réalise le triplé olympique en 1956. Triple champion du monde en 1958.",
      "category": "Tous Sports",
      "difficulty": 4,
      "sub_category": "Ski",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Tony Sailer",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Hermann Maier",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Reinfried Herbst",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Hans Hauser",
          "is_valid": false
        }
      ]
    }, {
      "id": 643,
      "text": "Championne olympique du disque et du poids en 1948. J'ai gagné le bronze à la hauteur. Devenue une pianiste renommée.",
      "category": "Tous Sports",
      "difficulty": 4,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Micheline Ostermeyer",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Faila Melnyk",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Evelin Jahl",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Liesel Westermann",
          "is_valid": false
        }
      ]
    }, {
      "id": 644,
      "text": "Rameur anglais légendaire, j'ai remporté cinq médailles d'or aux JO et neuf titres mondiaux.",
      "category": "Tous Sports",
      "difficulty": 3,
      "sub_category": "Aviron",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Steve Redgrave",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Stave Williams",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Andy Triggs-Hodge",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Peter Reed",
          "is_valid": false
        }
      ]
    }, {
      "id": 645,
      "text": "D'origine indienne. Champion du monde du décathlon et du pentathlon aux JO de 1912. Professionnel de baseball.",
      "category": "Tous Sports",
      "difficulty": 3,
      "sub_category": "Baseball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Jim Thorpe",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Bryan Clay",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Tom Pappas",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Erki Nool",
          "is_valid": false
        }
      ]
    }, {
      "id": 646,
      "text": "Je suis le golfeur du siècle. J'ai cent victoires à mon palmarès. J'ai remporté mon sixième Master à l'âge de 46 ans.",
      "category": "Tous Sports",
      "difficulty": 2,
      "sub_category": "Golf",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Jack Nicklaus",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Tiger Woods",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Ben Hogan",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Gary Player",
          "is_valid": false
        }
      ]
    }, {
      "id": 647,
      "text": "Haltérophile turc. 22 fois champion du monde dans trois catégories différentes. J'ai remporté deux médailles d'or aux JO.",
      "category": "Tous Sports",
      "difficulty": 3,
      "sub_category": "Haltérophilie",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Naïm Suleymanoglu",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Halil Mutlu",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Georgi Markov",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Andrei Rybakou",
          "is_valid": false
        }
      ]
    }, {
      "id": 648,
      "text": "Américain, je fus champion olympique en 1976. Seul boxeur à avoir détenu un titre mondial dans cinq catégories différentes.",
      "category": "Tous Sports",
      "difficulty": 2,
      "sub_category": "Boxe",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Ray Sugar Leonard",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Mohammed Ali",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Mike Tyson ",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Joe Frazier",
          "is_valid": false
        }
      ]
    }, {
      "id": 649,
      "text": "Je suis venue de Sierra Leone, je n'ai pas eu trop de sept travaux pour revenir cousue d'or des Mondiaux de Séville.",
      "category": "Tous Sports",
      "difficulty": 3,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Eunice Barber",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Marie Collonvillé",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Jeanne Berthod",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Julie Savogent",
          "is_valid": false
        }
      ]
    }, {
      "id": 650,
      "text": "Je suis venu d'Afrique en précurseur, j'ai gagné le marathon olympique pour la France en 1928, j'ai fait du cirque en Amérique.",
      "category": "Tous Sports",
      "difficulty": 3,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Boughera el-Ouafi",
          "is_valid": true
        }, {
          "id": 2,
          "text": "James Kibocha Theuri",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Samir Baala",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Dris El himer",
          "is_valid": false
        }
      ]
    }, {
      "id": 651,
      "text": "La Jamaïque m'a donné ma couleur de peau et l'Angleterre un maillot. A Barcelone, j'ai vaincu la suprématie américaine sur 100 m.",
      "category": "Tous Sports",
      "difficulty": 3,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Linford Christie",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Roger Black",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Darren Campbell",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Peter Elliott",
          "is_valid": false
        }
      ]
    }, {
      "id": 652,
      "text": "J'ai dépossédé Bambuck, j'ai brisé la barrière la plus mythique de l'athlé, j'ai joué au foot américain après l'or de Mexico.",
      "category": "Tous Sports",
      "difficulty": 3,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Jim Hines",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Tommie Smith",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Robert Hayes",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Henry Carr",
          "is_valid": false
        }
      ]
    }, {
      "id": 653,
      "text": "J'ai commencé dans des courses de quartier à Jacksonville, j'ai révolutionné le sprint, j'ai fini au foot américain.",
      "category": "Tous Sports",
      "difficulty": 3,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Bob Hayes",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Jim Hines",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Tommie Smith",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Henry Carr",
          "is_valid": false
        }
      ]
    }, {
      "id": 655,
      "text": "Au moment du mondial de hand 2011, dans club évoluait Thierry Omeyer ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Handball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Kiel",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Toulouse",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Ciudad Real",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Montpellier",
          "is_valid": false
        }
      ]
    }, {
      "id": 656,
      "text": "Au moment du mondial de hand 2011, dans quel club évoluait Daouda Karaboué ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Handball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Toulouse",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Montpellier",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Chambéry",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Dunkerque",
          "is_valid": false
        }
      ]
    }, {
      "id": 657,
      "text": "Au moment du mondial de hand 2011, dans quel club évoluait Jérôme Fernandez ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Handball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Kiel",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Ciudad Real",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Barcelone",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Hambourg",
          "is_valid": false
        }
      ]
    }, {
      "id": 658,
      "text": "Au moment du mondial de hand 2011, dans quel club évoluait William Accambray ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Handball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Montpellier",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Chambéry",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Nîmes",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Dunkerque",
          "is_valid": false
        }
      ]
    }, {
      "id": 659,
      "text": "Au moment du mondial de hand 2011, dans quel club évoluait Bertrand Roiné ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Handball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Chambéry",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Montpellier",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Nîmes",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Dunkerque",
          "is_valid": false
        }
      ]
    }, {
      "id": 660,
      "text": "Au moment du mondial de hand 2011, dans quel club évoluait Franck Junillon ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Handball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Nîmes",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Chambéry",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Toulouse",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Tremblay",
          "is_valid": false
        }
      ]
    }, {
      "id": 661,
      "text": "Au moment du mondial de hand 2011, dans quel club évoluait Xavier Barachet ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Handball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Chambéry",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Montpellier",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Nîmes",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Dunkerque",
          "is_valid": false
        }
      ]
    }, {
      "id": 662,
      "text": "Au moment du mondial de hand 2011, dans quel club évoluait Sébastien Bosquet ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Handball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Dunkerque",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Chambéry",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Montpellier",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Toulouse",
          "is_valid": false
        }
      ]
    }, {
      "id": 663,
      "text": "Au moment du mondial de hand 2011, dans quel club évoluait Nikola Karabatic ? ",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Handball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Montpellier",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Kiel",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Barcelone",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Ciudad Real",
          "is_valid": false
        }
      ]
    }, {
      "id": 664,
      "text": "Au moment du mondial de hand 2011, dans quel club évoluait Didier Dinart ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Handball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Ciudad Real",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Hambourg",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Kiel",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Barcelone",
          "is_valid": false
        }
      ]
    }, {
      "id": 665,
      "text": "Au moment du mondial de hand 2011, dans quel club évoluait Bertrand Gille ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Handball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Hambourg",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Kiel",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Chambéry",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Montpellier",
          "is_valid": false
        }
      ]
    }, {
      "id": 666,
      "text": "Au moment du mondial de hand 2011, dans quel club évoluait Cédric Sorhaindo ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Handball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Barcelone",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Ciudad Real",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Valladolid",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Pampelune",
          "is_valid": false
        }
      ]
    }, {
      "id": 667,
      "text": "Au moment du mondial de hand 2011, dans quel club évoluait Michaël Guigou ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Handball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Montpellier",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Tremblay",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Chambéry",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Toulouse",
          "is_valid": false
        }
      ]
    }, {
      "id": 668,
      "text": "Au moment du mondial de hand 2011, dans quel club évoluait Samuel Honrubia ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Handball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Montpellier",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Tremblay",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Nîmes",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Dunkerque",
          "is_valid": false
        }
      ]
    }, {
      "id": 669,
      "text": "Au moment du mondial de hand 2011, dans quel club évoluait Arnaud Bingo ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Handball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Tremblay",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Montpellier",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Dunkerque",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Toulouse",
          "is_valid": false
        }
      ]
    }, {
      "id": 670,
      "text": "Au moment du mondial de hand 2011, dans quel club évoluait Luc Abalo ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Handball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Ciudad Real",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Kiel",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Barcelone",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Montpellier",
          "is_valid": false
        }
      ]
    }, {
      "id": 671,
      "text": "Au moment du mondial de hand 2011, dans quel club évoluait Guillaume Joli ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Handball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Valladolid",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Pampelune",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Ciudad Real",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Barcelone",
          "is_valid": false
        }
      ]
    }, {
      "id": 672,
      "text": "Dans quelle ville s'est disputée la finale du mondial de hand masculin en 2011 ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Handball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Malmö",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Stockholm",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Lund",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Göteborg",
          "is_valid": false
        }
      ]
    }, {
      "id": 673,
      "text": "Dans quel pays s'est disputé le mondial masculin de hand en 2011 ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Handball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Suède",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Danemark",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Finlande",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Norvège",
          "is_valid": false
        }
      ]
    }, {
      "id": 674,
      "text": "Qui était le capitaine de l'équipe de France de handball championne du monde en 2011 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Handball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Jérôme Fernandez",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Nikola Karabatic",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Luc Abalo",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Thierry Omeyer",
          "is_valid": false
        }
      ]
    }, {
      "id": 675,
      "text": "Dans quelle division NBA évoluent les Denver Nuggets ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Nord-Ouest",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Pacifique",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Sud-Ouest",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Centrale",
          "is_valid": false
        }
      ]
    }, {
      "id": 676,
      "text": "Dans quelle division NBA évoluent les Minnesota Timberwolves ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Nord-Ouest",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Atlantique",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Pacifique",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Sud-Est",
          "is_valid": false
        }
      ]
    }, {
      "id": 677,
      "text": "Dans quelle division NBA évoluent les Oklahoma City Thunder ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Nord-Ouest",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Pacifique",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Sud-Ouest",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Centrale",
          "is_valid": false
        }
      ]
    }, {
      "id": 678,
      "text": "Dans quelle division NBA évoluent les Portland Trail Blazers ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Nord-Ouest",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Centrale",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Atlantique",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Pacifique",
          "is_valid": false
        }
      ]
    }, {
      "id": 679,
      "text": "Dans quelle division NBA évoluent les Utah Jazz ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Nord-Ouest",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Pacifique",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Sud-Ouest",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Atlantique",
          "is_valid": false
        }
      ]
    }, {
      "id": 680,
      "text": "Dans quelle division NBA évoluent les Golden State Warriors ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Pacifique",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Atlantique",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Sud-Ouest",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Sud-Est",
          "is_valid": false
        }
      ]
    }, {
      "id": 681,
      "text": "Dans quelle division NBA évoluent les Los Angeles Clippers ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Pacifique",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Atlantique",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Sud-Ouest",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Nord-Ouest",
          "is_valid": false
        }
      ]
    }, {
      "id": 682,
      "text": "Dans quelle division NBA évoluent les Los Angeles Lakers ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Pacifique",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Atlantique",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Centrale",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Sud-Ouest",
          "is_valid": false
        }
      ]
    }, {
      "id": 683,
      "text": "Dans quelle division NBA évoluent les Phoenix Suns ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Pacifique",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Atlantique",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Sud-Ouest",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Nord-Ouest",
          "is_valid": false
        }
      ]
    }, {
      "id": 684,
      "text": "Dans quelle division NBA évoluent les Sacramento Kings ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Pacifique",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Atlantique",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Centrale",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Sud-Est",
          "is_valid": false
        }
      ]
    }, {
      "id": 685,
      "text": "Dans quelle division NBA évoluent les Dallas Mavericks ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Sud-Ouest",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Pacifique",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Nord-Ouest",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Centrale",
          "is_valid": false
        }
      ]
    }, {
      "id": 686,
      "text": "Dans quelle division NBA évoluent les Houston Rockets ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Sud-Ouest",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Pacifique",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Nord-Ouest",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Centrale",
          "is_valid": false
        }
      ]
    }, {
      "id": 687,
      "text": "Dans quelle division NBA évoluent les Memphis Grizzlies ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Sud-Ouest",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Pacifique",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Nord-Ouest",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Centrale",
          "is_valid": false
        }
      ]
    }, {
      "id": 688,
      "text": "Dans quelle division NBA évoluent les New Orleans Hornets ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Sud-Ouest",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Pacifique",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Nord-Ouest",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Centrale",
          "is_valid": false
        }
      ]
    }, {
      "id": 689,
      "text": "Dans quelle division NBA évoluent les San Antonio Spurs ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Sud-Ouest",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Pacifique",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Nord-Ouest",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Centrale",
          "is_valid": false
        }
      ]
    }, {
      "id": 690,
      "text": "Dans quelle division NBA évoluent les Boston Celtics ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Atlantique",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Pacifique",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Sud-Ouest",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Sud-Est",
          "is_valid": false
        }
      ]
    }, {
      "id": 691,
      "text": "Dans quelle division NBA évoluent les New Jersey Nets ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Atlantique",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Pacifique",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Centrale",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Sud-Est",
          "is_valid": false
        }
      ]
    }, {
      "id": 692,
      "text": "Dans quelle division NBA évoluent les New York Knicks ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Atlantique",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Pacifique",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Nord-Ouest",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Sud-Est",
          "is_valid": false
        }
      ]
    }, {
      "id": 693,
      "text": "Dans quelle division NBA évoluent les Philadelphie 76ers ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Atlantique",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Pacifique",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Centrale",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Nord-Ouest",
          "is_valid": false
        }
      ]
    }, {
      "id": 694,
      "text": "Dans quelle division NBA évoluent les Toronto Raptors ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Atlantique",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Nord-Ouest",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Pacifique",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Centrale",
          "is_valid": false
        }
      ]
    }, {
      "id": 695,
      "text": "Dans quelle division NBA évoluent les Chicago Bulls ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Centrale",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Nord-Ouest",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Atlantique",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Pacifique",
          "is_valid": false
        }
      ]
    }, {
      "id": 696,
      "text": "Dans quelle division NBA évoluent les Cleveland Cavaliers ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Centrale",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Nord-Ouest",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Atlantique",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Pacifique",
          "is_valid": false
        }
      ]
    }, {
      "id": 697,
      "text": "Dans quelle division NBA évoluent les Detroit Pistons ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Centrale",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Nord-Ouest",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Atlantique",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Pacifique",
          "is_valid": false
        }
      ]
    }, {
      "id": 698,
      "text": "Dans quelle division NBA évoluent les Indiana Pacers ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Centrale",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Nord-Ouest",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Atlantique",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Pacifique",
          "is_valid": false
        }
      ]
    }, {
      "id": 699,
      "text": "Dans quelle division NBA évoluent les Milwaukee Bucks ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Centrale",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Nord-Ouest",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Atlantique",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Pacifique",
          "is_valid": false
        }
      ]
    }, {
      "id": 700,
      "text": "Dans quelle division NBA évoluent les Atlanta Hawks ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Sud-Est",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Atlantique",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Pacifique",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Sud-Ouest",
          "is_valid": false
        }
      ]
    }, {
      "id": 701,
      "text": "Dans quelle division NBA évoluent les Charlotte Bobcats ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Sud-Est",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Atlantique",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Pacifique",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Sud-Ouest",
          "is_valid": false
        }
      ]
    }, {
      "id": 702,
      "text": "Dans quelle division NBA évoluent les Miami Heat ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Sud-Est",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Atlantique",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Pacifique",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Sud-Ouest",
          "is_valid": false
        }
      ]
    }, {
      "id": 703,
      "text": "Dans quelle division NBA évoluent les Orlando Magic ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Sud-Est",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Atlantique",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Pacifique",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Sud-Ouest",
          "is_valid": false
        }
      ]
    }, {
      "id": 704,
      "text": "Dans quelle division NBA évoluent les Washington Wizards ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Sud-Est",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Atlantique",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Pacifique",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Sud-Ouest",
          "is_valid": false
        }
      ]
    }, {
      "id": 705,
      "text": "Dans quel club de NBA évoluait Chris Bosh avant de rejoindre les Miami  Heat en 2010 ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Toronto Raptors",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Chicago Bulls",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Los Angeles Lakers",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Utah Jazz",
          "is_valid": false
        }
      ]
    }, {
      "id": 706,
      "text": "Dans quel club de NBA évoluait Shaquille O'Neal avant de rejoindre les Boston Celtics en 2010 ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Cleveland Cavaliers",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Orlando Magic",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Los Angeles Lakers",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Miami Heat",
          "is_valid": false
        }
      ]
    }, {
      "id": 707,
      "text": "Dans quel club Shaquille O'Neal a-t-il effectué ses débuts en NBA ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Orlando Magic",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Atlanta Hawks",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Miami Heat",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Utah Jazz",
          "is_valid": false
        }
      ]
    }, {
      "id": 708,
      "text": "Quel club a remporté le championnat de France de baseball en 2010 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Les Huskies de Rouen",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Les Lions de Savigny-sur-Orge",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Les Templiers de Sénart",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Les Tigers de Toulouse",
          "is_valid": false
        }
      ]
    }, {
      "id": 709,
      "text": "Quel est le nom de l'équipe de baseball de Rouen ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Baseball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Les Huskies",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Les Dobermanns",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Les Caniches",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Les Loups",
          "is_valid": false
        }
      ]
    }, {
      "id": 710,
      "text": "Quel est le nom de l'équipe de baseball de Montpellier ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Baseball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Les Barracudas",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Les Requins",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Les Dauphins",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Les Piranhas",
          "is_valid": false
        }
      ]
    }, {
      "id": 711,
      "text": "Quel est le nom de l'équipe de baseball de Montigny ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Baseball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Les Cougars",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Les Jaguars",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Les Guépards",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Les Léopards",
          "is_valid": false
        }
      ]
    }, {
      "id": 712,
      "text": "Quel est le nom de l'équipe de baseball de Pessac ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Baseball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Les Panthères ",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Les Tigres",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Les Jaguars",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Les Lions",
          "is_valid": false
        }
      ]
    }, {
      "id": 713,
      "text": "Quel est le nom de l'équipe de baseball de Savigny-sur-Orge ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Baseball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Les Lions",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Les Cougars",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Les Panthères",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Les Hyènes",
          "is_valid": false
        }
      ]
    }, {
      "id": 714,
      "text": "Quel est le nom de l'équipe de baseball de Toulouse ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Baseball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Les Tigers",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Les Jaguars",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Les Lynx",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Les Lions",
          "is_valid": false
        }
      ]
    }, {
      "id": 715,
      "text": "Quel est le nom de l'équipe de baseball de Savigny-le-Temple ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Baseball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Les Templiers de Sénart",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Les Lions de Sénart",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Les Guerriers de Sénart",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Les Pirates de Sénart",
          "is_valid": false
        }
      ]
    }, {
      "id": 716,
      "text": "Qui a remporté le Super Bowl en 2011 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Foot US",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Green Bay Packers",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Pittsburgh Steelers ",
          "is_valid": false
        }, {
          "id": 3,
          "text": "New Orleans Saints",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Indianapolis Colts",
          "is_valid": false
        }
      ]
    }, {
      "id": 717,
      "text": "Qui a remporté le Super Bowl en 2010 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Foot US",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "New Orleans Saints",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Baltimore Ravens",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Dallas Cowboys",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Denver Broncos",
          "is_valid": false
        }
      ]
    }, {
      "id": 718,
      "text": "Qui a remporté le Super Bowl en 2009 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Foot US",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Pittsburgh Steelers ",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Washington Redskins",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Denver Broncos",
          "is_valid": false
        }, {
          "id": 4,
          "text": "New York Giants ",
          "is_valid": false
        }
      ]
    }, {
      "id": 719,
      "text": "Qui a remporté le Super Bowl en 2008 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Foot US",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "New York Giants",
          "is_valid": true
        }, {
          "id": 2,
          "text": "New England Patriots",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Chicago Bears ",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Baltimore Ravens",
          "is_valid": false
        }
      ]
    }, {
      "id": 720,
      "text": "Quel club a remporté le championnat de France de football américain en 2010 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Foot US",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Les Spartiates d'Amiens",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Les Flash de La Courneuve",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Les Black Panthers de Thonon",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Les  Argonautes d'Aix-en-Provence",
          "is_valid": false
        }
      ]
    }, {
      "id": 721,
      "text": "Quel club a remporté le championnat de France de football américain en 2009?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Foot US",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Les Flash de La Courneuve",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Les Black Panthers de Thonon",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Les Spartiates d'Amiens",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Les  Argonautes d'Aix-en-Provence",
          "is_valid": false
        }
      ]
    }, {
      "id": 722,
      "text": "Quel club a remporté le championnat de France de football américain en 2008 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Foot US",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Les Flash de La Courneuve",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Les  Argonautes d'Aix-en-Provence",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Les Black Panthers de Thonon",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Les Spartiates d'Amiens",
          "is_valid": false
        }
      ]
    }, {
      "id": 723,
      "text": "Quel numéro portait Michael Jordan chez les Bulls lors de son retour sur les parquets en mars 1995 après sa première retraite ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "45",
          "is_valid": true
        }, {
          "id": 2,
          "text": "23",
          "is_valid": false
        }, {
          "id": 3,
          "text": "9",
          "is_valid": false
        }, {
          "id": 4,
          "text": "12",
          "is_valid": false
        }
      ]
    }, {
      "id": 724,
      "text": "Quelle équipe de baseball a remporté les World Series en 2010 ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Baseball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Les San Francisco Giants ",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Les New York Yankees",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Les Boston Red Sox",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Les Saint-Louis Cardinals",
          "is_valid": false
        }
      ]
    }, {
      "id": 725,
      "text": "Quelle chanteuse a été huée à la mit-temps du Super Bowl  en 2011 pour s'être trompée dans les paroles en interprétant l'hymne américain ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Foot US",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Christina Aguilera",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Shakira",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Britney Spears",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Beyonce",
          "is_valid": false
        }
      ]
    }, {
      "id": 726,
      "text": "Où se déroule la compétition de judo \"le Tournoi de Paris\" ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Judo",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Au Palais omni-sports de Paris-Bercy",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Au Grand Palais",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Au Stade de France",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Au Stade Pierre-de-Coubertin",
          "is_valid": false
        }
      ]
    }, {
      "id": 727,
      "text": "Dans quel pays est né le handballeur Nikola Karabatic ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Handball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Serbie",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Croatie",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Bosnie",
          "is_valid": false
        }, {
          "id": 4,
          "text": "France",
          "is_valid": false
        }
      ]
    }, {
      "id": 728,
      "text": "Dans quel club étranger a évolué le handballeur Nikola Karabatic entre 2005 et 2009 ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Handball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Kiel",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Pampelune",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Hambourg",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Barcelone",
          "is_valid": false
        }
      ]
    }, {
      "id": 729,
      "text": "Dans quel club français a évolué le handballeur Nikola Karabatic entre 2000 et 2005 ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Handball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Montpellier",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Chambéry",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Ivry",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Toulouse",
          "is_valid": false
        }
      ]
    }, {
      "id": 730,
      "text": "En quelle année est né le handballeur Nikola Karabatic ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Handball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "1984",
          "is_valid": true
        }, {
          "id": 2,
          "text": "1978",
          "is_valid": false
        }, {
          "id": 3,
          "text": "1980",
          "is_valid": false
        }, {
          "id": 4,
          "text": "1982",
          "is_valid": false
        }
      ]
    }, {
      "id": 731,
      "text": "Dans quel sport brille David Poisson ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Ski alpin",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Cyclisme",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Natation",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Pentathlon",
          "is_valid": false
        }
      ]
    }, {
      "id": 732,
      "text": "Quels clubs de basket ont été relégués en Pro B à l'issue du championnat de Pro A 2009-2010 ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Rouen & Dijon",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Rouen & Vichy",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Dijon & Vichy",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Vichy & Paris-Levallois",
          "is_valid": false
        }
      ]
    }, {
      "id": 733,
      "text": "Quels clubs de basket ont été relégués en Pro B à l'issue du championnat de Pro A 2008-2009 ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Pau-Orthez & Besançon",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Besançon & Rouen",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Vichy & Pau-Orthez",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Rouen & Vichy",
          "is_valid": false
        }
      ]
    }, {
      "id": 734,
      "text": "Quels clubs de basket ont été relégués en Pro B à l'issue du championnat de Pro A 2007-2008 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Paris-Levallois & Clermont-Ferrand",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Pau-Orthez & Besançon",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Rouen & Dijon",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Orléans & Strasbourg",
          "is_valid": false
        }
      ]
    }, {
      "id": 735,
      "text": "Quelle est la nationalité du basketteur Dirk Nowitzki?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Allemande",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Polonaise",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Canadienne",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Américaine",
          "is_valid": false
        }
      ]
    }, {
      "id": 736,
      "text": "Dans quel club Dirk Nowitzki a-t-il entamé sa carrière en NBA ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Dallas Mavericks",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Denver Nuggets",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Houston Rockets",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Utah Jazz",
          "is_valid": false
        }
      ]
    }, {
      "id": 737,
      "text": "Par quel club de NBA Dirk Nowitzki a-t-il été drafté en 1998 ? ",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Milwaukee Bucks",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Dallas Mavericks",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Denver Nuggets",
          "is_valid": false
        }, {
          "id": 4,
          "text": "San Antonio Spurs",
          "is_valid": false
        }
      ]
    }, {
      "id": 738,
      "text": "Quel est la nationalité du basketteur Steve Nash ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Canadienne",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Américaine",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Britannique",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Sud-africaine",
          "is_valid": false
        }
      ]
    }, {
      "id": 739,
      "text": "Dans quel pays est né le basketteur Steve Nash ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Afrique du sud",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Royaume-Uni",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Etats-Unis",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Canada",
          "is_valid": false
        }
      ]
    }, {
      "id": 740,
      "text": "Dans quel club le basketteur Steve Nash a-t-il évolué entre 1998 et 2004 ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Dallas Mavericks",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Phoenix Suns",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Utah Jazz",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Boston Celtics",
          "is_valid": false
        }
      ]
    }, {
      "id": 741,
      "text": "Quel club français a rejoint en janvier 2011 Ricky Davis, ancienne gloire de la NBA ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Roanne",
          "is_valid": true
        }, {
          "id": 2,
          "text": "ASVEL",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Limoges",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Strasbourg",
          "is_valid": false
        }
      ]
    }, {
      "id": 742,
      "text": "Quel basketteur a été sacré meilleur passeur de NBA huit fois d'affilée dans les années 50 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Bob Cousy",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Andy Phillip",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Oscar Robertson",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Bob Davies",
          "is_valid": false
        }
      ]
    }, {
      "id": 743,
      "text": "Qui fut le meilleur passeur  de NBA lors la saison 2009-2010 ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Steve Nash",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Chris Paul",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Jason Kidd",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Rajon Rondo",
          "is_valid": false
        }
      ]
    }, {
      "id": 744,
      "text": "Quelle est la nationalité de la skieuse Julia Mancuso ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Américaine",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Espagnole",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Italienne",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Allemande",
          "is_valid": false
        }
      ]
    }, {
      "id": 745,
      "text": "En quelle année est né le basketteur Shaquille O'Neal ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "1972",
          "is_valid": true
        }, {
          "id": 2,
          "text": "1973",
          "is_valid": false
        }, {
          "id": 3,
          "text": "1974",
          "is_valid": false
        }, {
          "id": 4,
          "text": "1975",
          "is_valid": false
        }
      ]
    }, {
      "id": 746,
      "text": "A quelle place a terminé l'Allemagne au Mondial de hand masculin en 2011 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "11e",
          "is_valid": true
        }, {
          "id": 2,
          "text": "5e",
          "is_valid": false
        }, {
          "id": 3,
          "text": "7e",
          "is_valid": false
        }, {
          "id": 4,
          "text": "9e",
          "is_valid": false
        }
      ]
    }, {
      "id": 747,
      "text": "Quel est le poste du basketteur Shaquille O'Neal ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Pivot",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Meneur",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Arrière",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Intérieur",
          "is_valid": false
        }
      ]
    }, {
      "id": 748,
      "text": "A quel poste jouait le basketteur \"Magic\" Johnson ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Meneur",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Pivot",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Intérieur",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Arrière",
          "is_valid": false
        }
      ]
    }, {
      "id": 749,
      "text": "Quel était le numéro de maillot de \"Magic\" Johnson ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "32",
          "is_valid": true
        }, {
          "id": 2,
          "text": "23",
          "is_valid": false
        }, {
          "id": 3,
          "text": "18",
          "is_valid": false
        }, {
          "id": 4,
          "text": "44",
          "is_valid": false
        }
      ]
    }, {
      "id": 750,
      "text": "Dans quel club Isiah Thomas, ancienne gloire de la NBA, a-t-il passé toute sa carrière ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Detroit Pistons",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Los Angeles Lakers",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Chicago Bulls",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Boston Celtics",
          "is_valid": false
        }
      ]
    }, {
      "id": 751,
      "text": "Quel joueur de NBA a été désigné MVP de la saison régulière en 2009-2010 ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "LeBron James",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Kobe Bryant",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Tony Parker",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Pau Gasol",
          "is_valid": false
        }
      ]
    }, {
      "id": 752,
      "text": "Quel joueur de NBA a été désigné MVP de la saison régulière en 2008-2009 ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "LeBron James",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Dirk Nowitzki",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Kevin Garnett",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Dwyane Wade",
          "is_valid": false
        }
      ]
    }, {
      "id": 753,
      "text": "Quel joueur de NBA a été désigné MVP de la saison régulière en 2007-2008 ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Kobe Bryant",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Dirk Nowitzki",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Chris Bosh",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Tony Parker",
          "is_valid": false
        }
      ]
    }, {
      "id": 754,
      "text": "Quel joueur de NBA a été désigné MVP de la saison régulière en 2006-2007 ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Dirk Nowitzki",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Steve Nash",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Shaquille O'Neal",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Tim Duncan",
          "is_valid": false
        }
      ]
    }, {
      "id": 755,
      "text": "Quelle est la nationalité de la skieuse Maria Riesch ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Ski",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Allemande",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Suisse",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Autrichienne",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Polonaise",
          "is_valid": false
        }
      ]
    }, {
      "id": 756,
      "text": "Quelle est la nationalité de la skieuse Elisabeth Goergl ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Ski",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Autrichienne",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Allemande",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Suisse",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Danoise",
          "is_valid": false
        }
      ]
    }, {
      "id": 757,
      "text": "Quelle est la nationalité de la skieuse Marlies Schild ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Ski",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Autrichienne",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Allemande",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Suédoise",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Danoise",
          "is_valid": false
        }
      ]
    }, {
      "id": 758,
      "text": "Quelle est la nationalité de la skieuse Tina Maze ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Ski",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Slovène",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Slovaque",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Américaine",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Allemande",
          "is_valid": false
        }
      ]
    }, {
      "id": 759,
      "text": "Quelle est la nationalité de la skieuse Maria Pietilae-Holmner ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Ski",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Suédoise",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Américaine",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Autrichienne",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Italienne",
          "is_valid": false
        }
      ]
    }, {
      "id": 760,
      "text": "Quelle est la nationalité du skieur Ivica Kostelic ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Ski",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Croate",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Suédoise",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Slovène",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Serbe",
          "is_valid": false
        }
      ]
    }, {
      "id": 761,
      "text": "Quelle est la nationalité du skieur Didier Cuche ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Ski",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Suisse",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Canadienne",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Française",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Luxembourgeoise",
          "is_valid": false
        }
      ]
    }, {
      "id": 762,
      "text": "Quelle est la nationalité du skieur Silvan Zurbriggen ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Ski",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Suisse",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Autrichienne",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Tchèque",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Allemande",
          "is_valid": false
        }
      ]
    }, {
      "id": 763,
      "text": "Quelle est la nationalité du skieur Carlo Janka ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Ski",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Suisse",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Croate",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Serbe",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Autrichienne",
          "is_valid": false
        }
      ]
    }, {
      "id": 764,
      "text": "Quelle est la nationalité du skieur Benjamin Raich ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Ski",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Autrichienne",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Suisse",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Française",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Luxembourgeoise",
          "is_valid": false
        }
      ]
    }, {
      "id": 765,
      "text": "Quelle est la nationalité de la skieuse Nicole Hosp ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Ski",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Autrichienne",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Française",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Luxembourgeoise",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Allemande",
          "is_valid": false
        }
      ]
    }, {
      "id": 766,
      "text": "Quelle est la nationalité de la skieuse Lara Gut ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Ski",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Suisse",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Italienne",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Croate",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Slovaque",
          "is_valid": false
        }
      ]
    }, {
      "id": 767,
      "text": "Quelle est la nationalité de la skieuse Dominique Gisin ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Ski",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Suisse",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Française",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Belge",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Luxembourgeoise",
          "is_valid": false
        }
      ]
    }, {
      "id": 768,
      "text": "Quelle est la nationalité de la skieuse Nastasia Noens ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Ski",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Française",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Russe",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Suisse",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Autrichienne",
          "is_valid": false
        }
      ]
    }, {
      "id": 769,
      "text": "Quelle est la nationalité de la skieuse Johanna Schnarf ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Ski",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Italienne",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Autrichienne",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Allemande",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Suisse",
          "is_valid": false
        }
      ]
    }, {
      "id": 770,
      "text": "Quelle est la nationalité de la skieuse Manuela Moelgg ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Ski",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Italienne",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Suisse",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Autrichienne",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Slovène",
          "is_valid": false
        }
      ]
    }, {
      "id": 771,
      "text": "Quelle est la nationalité de la skieuse Marie-Michèle Gagnon ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Ski",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Canadienne",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Française",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Suisse",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Luxembourgeoise",
          "is_valid": false
        }
      ]
    }, {
      "id": 772,
      "text": "Quelle est la nationalité de la skieuse Nicole Gius ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Ski",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Italienne",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Française",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Allemande",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Suisse",
          "is_valid": false
        }
      ]
    }, {
      "id": 773,
      "text": "Quelle est la nationalité de la skieuse Jessica Lindell-Vikarby ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Ski",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Suédoise",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Américaine",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Danoise",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Allemande",
          "is_valid": false
        }
      ]
    }, {
      "id": 774,
      "text": "Quelle est la nationalité de la skieuse Taina Barioz ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Ski",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Française",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Italienne",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Hongroise",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Polonaise",
          "is_valid": false
        }
      ]
    }, {
      "id": 775,
      "text": "Quelle est la nationalité du skieur Ted Ligety ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Ski",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Américaine",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Italienne",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Suisse",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Autrichienne",
          "is_valid": false
        }
      ]
    }, {
      "id": 776,
      "text": "Quelle est la nationalité du skieur Christof Innerhofer ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Ski",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Italienne",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Allemande",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Autrichienne",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Suédois",
          "is_valid": false
        }
      ]
    }, {
      "id": 777,
      "text": "Quelle est la nationalité du skieur Peter Fill ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Ski",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Italienne",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Américaine",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Autrichienne",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Britannique",
          "is_valid": false
        }
      ]
    }, {
      "id": 778,
      "text": "Quelle est la nationalité du skieur Werner Heel ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Ski",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Italienne",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Américaine",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Suédoise",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Allemande",
          "is_valid": false
        }
      ]
    }, {
      "id": 779,
      "text": "Quelle est la nationalité du skieur Steve Missillier ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Ski",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Française",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Américaine",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Suisse",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Suédois",
          "is_valid": false
        }
      ]
    }, {
      "id": 780,
      "text": "Quelle est la nationalité du skieur Dominik Paris ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Ski",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Italienne",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Française",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Polonaise",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Slovaque",
          "is_valid": false
        }
      ]
    }, {
      "id": 781,
      "text": "Quelle est la nationalité du skieur Thomas Fanara ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Ski",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Française",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Italienne",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Canadienne",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Autrichienne",
          "is_valid": false
        }
      ]
    }, {
      "id": 782,
      "text": "Quelle est la nationalité du skieur Erik Guay ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Ski",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Canadienne",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Allemande",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Suisse",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Américaine",
          "is_valid": false
        }
      ]
    }, {
      "id": 783,
      "text": "Quelle est la nationalité du skieur Jan Hudec ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Ski",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Canadienne",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Tchèque",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Polonaise",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Hongroise",
          "is_valid": false
        }
      ]
    }, {
      "id": 784,
      "text": "Dans quel club n'a jamais joué le basketteur Delaney Rudd ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Chicago Bulls",
          "is_valid": true
        }, {
          "id": 2,
          "text": "ASVEL",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Utah Jazz",
          "is_valid": false
        }, {
          "id": 4,
          "text": "PSG - Racing",
          "is_valid": false
        }
      ]
    }, {
      "id": 785,
      "text": "Dans quel club n'a jamais joué le basketteur Stéphane Ostrowski ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "ASVEL",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Antibes",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Cholet",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Limoges",
          "is_valid": false
        }
      ]
    }, {
      "id": 786,
      "text": "Dans quel club n'a jamais joué le basketteur Hervé Dubuisson ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Pau-Orthez",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Antibes",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Nancy",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Gravelines",
          "is_valid": false
        }
      ]
    }, {
      "id": 787,
      "text": "Dans quel club n'a jamais joué le basketteur Yann Bonato ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Gravelines",
          "is_valid": true
        }, {
          "id": 2,
          "text": "ASVEL",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Limoges",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Antibes",
          "is_valid": false
        }
      ]
    }, {
      "id": 788,
      "text": "Dans quel club n'a jamais joué le basketteur Antoine Rigaudeau ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Los Angeles Clippers",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Cholet",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Pau-Orthez",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Dallas Mavericks",
          "is_valid": false
        }
      ]
    }, {
      "id": 789,
      "text": "Quel était le surnom du basketteur Antoine Rigaudeau ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Le Roi",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Le Maître",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Le Patron",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Le Génie",
          "is_valid": false
        }
      ]
    }, {
      "id": 790,
      "text": "Dans quel club Antoine Rigaudeau a-t-il achevé sa carrière de joueur ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Pamesa Valencia",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Pau-Orthez",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Dallas Mavericks",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Virtus Bologne",
          "is_valid": false
        }
      ]
    }, {
      "id": 791,
      "text": "A quel poste jouait le basketteur  Cyril Julian ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Pivot",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Arrière",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Meneur",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Ailier",
          "is_valid": false
        }
      ]
    }, {
      "id": 792,
      "text": "Dans quel club n'a jamais joué le basketteur Cyril Julian ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Limoges",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Nancy",
          "is_valid": false
        }, {
          "id": 3,
          "text": "PSG-Racing",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Pau-Orthez",
          "is_valid": false
        }
      ]
    }, {
      "id": 793,
      "text": "Dans quel club n'a jamais joué le basketteur Jim Bilba ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Pau-Orthez",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Limoges",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Cholet",
          "is_valid": false
        }, {
          "id": 4,
          "text": "ASVEL",
          "is_valid": false
        }
      ]
    }, {
      "id": 794,
      "text": "Dans quel club n'a jamais joué l'ancien basketteur Laurent Foirest ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "PSG-Racing",
          "is_valid": true
        }, {
          "id": 2,
          "text": "ASVEL",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Antibes",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Pau-Orthez",
          "is_valid": false
        }
      ]
    }, {
      "id": 795,
      "text": "Quelle équipe a remporté la Semaine des As en 2011 ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Gravelines-Dunkerque",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Pau-Lacq-Orthez",
          "is_valid": false
        }, {
          "id": 3,
          "text": "ASVEL",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Chalon-sur-Saône",
          "is_valid": false
        }
      ]
    }, {
      "id": 796,
      "text": "Quelle équipe s'est inclinée en finale de la Semaine des As en 2011 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Chalon-sur-Saône",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Gravelines - Dunkerque",
          "is_valid": false
        }, {
          "id": 3,
          "text": "ASVEL",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Pau-Lacq-Orthez",
          "is_valid": false
        }
      ]
    }, {
      "id": 797,
      "text": "Quel joueur a été désigné MVP de la Semaine des As 2011 ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Yannick Bokolo",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Mickaël Gelabale",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Michel Jean-Baptiste Aldolphe",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Cyril Akpomedah",
          "is_valid": false
        }
      ]
    }, {
      "id": 798,
      "text": "En quelle année a été fondé le club de basket de Gravelines ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "1984",
          "is_valid": true
        }, {
          "id": 2,
          "text": "1970",
          "is_valid": false
        }, {
          "id": 3,
          "text": "1988",
          "is_valid": false
        }, {
          "id": 4,
          "text": "1978",
          "is_valid": false
        }
      ]
    }, {
      "id": 799,
      "text": "Christian Devos est le président du club de basket de…",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Gravelines",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Roanne",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Dijon",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Le Mans",
          "is_valid": false
        }
      ]
    }, {
      "id": 800,
      "text": "Quelle est la spécialité de l'athlète Teddy Tamgho ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Triple saut",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Sprint",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Demi-fond",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Lancer du poids",
          "is_valid": false
        }
      ]
    }, {
      "id": 801,
      "text": "Quelle est la spécialité de l'athlète Dimitri Bascou ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "110 mètres haies",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Lancer du javelot",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Marathon",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Saut à la perche",
          "is_valid": false
        }
      ]
    }, {
      "id": 802,
      "text": "Quelle est la spécialité de l'athlète Martial Mbanjdock ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Sprint",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Saut à la perche",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Marathon",
          "is_valid": false
        }, {
          "id": 4,
          "text": "400 mètres haies",
          "is_valid": false
        }
      ]
    }, {
      "id": 803,
      "text": "Quelle est la spécialité de l'athlète Mahiedine Mekhissi-Benabbad ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "3000 mètres steeple",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Sprint",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Triple saut",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Lancer du poids",
          "is_valid": false
        }
      ]
    }, {
      "id": 804,
      "text": "Quelle est la spécialité de l'athlète Bouabdellah Tahri ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "3000 mètres steeple",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Triple saut et décathlon",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Sprint et saut en longueur",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Lancer du disque",
          "is_valid": false
        }
      ]
    }, {
      "id": 805,
      "text": "Quelle est la spécialité de l'athlète Garfield Darien ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "110 mètres haies",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Décathlon",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Lancer du poids",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Marathon",
          "is_valid": false
        }
      ]
    }, {
      "id": 806,
      "text": "Quelle est la spécialité de l'athlète Yohann Diniz ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Marche",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Sprint",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Décathlon",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Lancer du javelot",
          "is_valid": false
        }
      ]
    }, {
      "id": 807,
      "text": "Quelle est la spécialité de l'athlète Romain Mesnil ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Saut à la perche",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Saut en hauteur",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Saut en longueur",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Triple saut",
          "is_valid": false
        }
      ]
    }, {
      "id": 808,
      "text": "Quelle est la spécialité de l'athlète Renaud Lavillenie ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Saut à la perche",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Saut en hauteur",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Saut en longueur",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Triple saut",
          "is_valid": false
        }
      ]
    }, {
      "id": 809,
      "text": "Quelle est la spécialité de l'athlète Jimmy Vicaut ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Sprint",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Marathon",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Marche",
          "is_valid": false
        }, {
          "id": 4,
          "text": "3000 mètres steeple",
          "is_valid": false
        }
      ]
    }, {
      "id": 810,
      "text": "Quelle est la spécialité de l'athlète Pierre-Alexis Pessonneaux ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Sprint",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Marathon",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Marche",
          "is_valid": false
        }, {
          "id": 4,
          "text": "3000 mètres steeple",
          "is_valid": false
        }
      ]
    }, {
      "id": 811,
      "text": "Quelle est la spécialité de l'athlète Kafétien Gomis ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Saut en longueur",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Lancer du disque",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Sprint",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Saut à la perche",
          "is_valid": false
        }
      ]
    }, {
      "id": 812,
      "text": "Quelle est la spécialité de l'athlète Romain Barras ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Décathlon",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Marche",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Saut à la perche",
          "is_valid": false
        }, {
          "id": 4,
          "text": "3000 mètres steeple",
          "is_valid": false
        }
      ]
    }, {
      "id": 813,
      "text": "Quelle est la profession de l'athlète Romain Barras ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Professeur d'EPS",
          "is_valid": true
        }, {
          "id": 2,
          "text": "kinésithérapeute",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Educateur sportif",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Journaliste",
          "is_valid": false
        }
      ]
    }, {
      "id": 814,
      "text": "Quelle est la spécialité de l'athlète Véronique Mang ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Sprint",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Demi-fond",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Heptathlon",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Lancer du poids",
          "is_valid": false
        }
      ]
    }, {
      "id": 815,
      "text": "Quelle est la spécialité de l'athlète Myriam Soumaré ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Sprint",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Marathon",
          "is_valid": false
        }, {
          "id": 3,
          "text": "3000 mètres steeple",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Marche",
          "is_valid": false
        }
      ]
    }, {
      "id": 816,
      "text": "Quelle est la spécialité de l'athlète Hind Dehiba ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Demi-fond",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Sprint",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Saut à la perche",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Lancer du marteau",
          "is_valid": false
        }
      ]
    }, {
      "id": 817,
      "text": "Quelle est la spécialité de l'athlète Lina Jacques-Sébastien ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Sprint",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Demi-fond",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Triple saut",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Lancer du poids",
          "is_valid": false
        }
      ]
    }, {
      "id": 818,
      "text": "Dans quelle ville se sont déroulés les championnats d'Europe d'athlétisme en 2006 ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Göteborg",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Milan",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Paris",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Barcelone",
          "is_valid": false
        }
      ]
    }, {
      "id": 819,
      "text": "Dans quelle ville se sont déroulés les championnats d'Europe d'athlétisme en 2002 ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Munich",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Helsinki",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Göteborg",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Budapest",
          "is_valid": false
        }
      ]
    }, {
      "id": 820,
      "text": "Dans quelle ville se sont déroulés les championnats d'Europe d'athlétisme en 1998 ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Budapest",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Vienne",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Sofia",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Bucarest",
          "is_valid": false
        }
      ]
    }, {
      "id": 821,
      "text": "Dans quelle ville se sont déroulés les championnats d'Europe d'athlétisme en 1994 ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Helsinki",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Copenhague",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Oslo",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Stockholm",
          "is_valid": false
        }
      ]
    }, {
      "id": 822,
      "text": "Dans quelle ville se sont déroulés les championnats d'Europe d'athlétisme en 1990 ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Split",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Belgrade",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Zagreb",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Sofia",
          "is_valid": false
        }
      ]
    }, {
      "id": 823,
      "text": "Dans quelle ville se sont déroulés les championnats d'Europe d'athlétisme en 1986 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Stuttgart",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Berlin",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Dortmund",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Munich",
          "is_valid": false
        }
      ]
    }, {
      "id": 824,
      "text": "Dans quelle ville se sont déroulés les championnats d'Europe d'athlétisme en 1982 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Athènes",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Barcelone",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Paris",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Londres",
          "is_valid": false
        }
      ]
    }, {
      "id": 825,
      "text": "Dans quelle ville se sont déroulés les championnats d'Europe d'athlétisme en 1978 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Prague",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Budapest",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Bratislava",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Kiev",
          "is_valid": false
        }
      ]
    }, {
      "id": 826,
      "text": "Dans quelle ville se sont déroulés les championnats d'Europe d'athlétisme en 1974 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Rome",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Lisbonne",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Madrid",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Athènes",
          "is_valid": false
        }
      ]
    }, {
      "id": 827,
      "text": "Dans quelle ville se sont déroulés les championnats d'Europe d'athlétisme en 1971 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Helsinki",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Athènes",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Budapest",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Split",
          "is_valid": false
        }
      ]
    }, {
      "id": 828,
      "text": "Qui a été nommé ministre des Sports en France en novembre 2010 ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Chantal Jouanno",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Nathalie Kosciusko-Morizet",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Rama Yade",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Roselyne Bachelot",
          "is_valid": false
        }
      ]
    }, {
      "id": 829,
      "text": "Qui était l'entraîneur du club de basket de Chalon-sur-Saône au début de la saison de Pro A 2010-2011 ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Gregor Beugnot",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Erman Kunter",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Jean-Denys Choulet",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Philippe Hervé",
          "is_valid": false
        }
      ]
    }, {
      "id": 830,
      "text": "Qui était l'entraîneur du club de basket de Cholet au début de la saison de Pro A 2010-2011 ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Erman Kunter",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Jean-Denys Choulet",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Alain Weisz",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Vincent Collet",
          "is_valid": false
        }
      ]
    }, {
      "id": 831,
      "text": "Qui était l'entraîneur du club de basket de Gravelines-Dunkerque au début de la saison de Pro A 2010-2011 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Christian Monschau",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Alain Weisz",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Jean-Luc Monschau",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Frédéric Sarre",
          "is_valid": false
        }
      ]
    }, {
      "id": 832,
      "text": "Qui était l'entraîneur du club de basket de Hyères-Toulon au début de la saison de Pro A 2010-2011 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Alain Weisz",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Christian Monschau",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Jean-Denys Choulet",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Jean-Philippe Besson",
          "is_valid": false
        }
      ]
    }, {
      "id": 833,
      "text": "Qui était l'entraîneur du club de basket du Havre au début de la saison de Pro A 2010-2011 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Jean-Manuel Sousa",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Jean-Philippe Besson",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Christian Monschau",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Didier Dobbels",
          "is_valid": false
        }
      ]
    }, {
      "id": 834,
      "text": "Qui était l'entraîneur du club de basket du Mans au début de la saison de Pro A 2010-2011 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "John David Jackson",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Alain Weisz",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Christian Monschau",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Jean-Denys Choulet",
          "is_valid": false
        }
      ]
    }, {
      "id": 835,
      "text": "Qui était l'entraîneur du club de basket de Limoges au début de la saison de Pro A 2010-2011 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Eric Girard",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Vincent Collet",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Jean-Manuel Sousa",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Didier Dobbels",
          "is_valid": false
        }
      ]
    }, {
      "id": 836,
      "text": "Qui était l'entraîneur de l'ASVEL au début de la saison de Pro A 2010-2011 ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Vincent Collet",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Philippe Hervé",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Gregor Beugnot",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Jean-Denys Choulet",
          "is_valid": false
        }
      ]
    }, {
      "id": 837,
      "text": "Qui était l'entraîneur du club de basket de Nancy au début de la saison de Pro A 2010-2011 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Jean-Luc Monschau",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Christian Monschau",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Jean-Manuel Sousa",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Didier Dobbels",
          "is_valid": false
        }
      ]
    }, {
      "id": 838,
      "text": "Qui était l'entraîneur du club de basket d'Orléans au début de la saison de Pro A 2010-2011 ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Philippe Hervé",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Jean-Manuel Sousa",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Vincent Collet",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Gregor Beugnot",
          "is_valid": false
        }
      ]
    }, {
      "id": 839,
      "text": "Qui était l'entraîneur du club de basket de Paris-Levallois au début de la saison de Pro A 2010-2011 ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Jean-Marc Dupraz",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Jean-Manuel Sousa",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Jean-Philippe Besson",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Didier Dobbels",
          "is_valid": false
        }
      ]
    }, {
      "id": 840,
      "text": "Qui était l'entraîneur du club de basket de Pau-Lacq-Orthez au début de la saison de Pro A 2010-2011 ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Didier Dobbels",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Vincent Collet",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Alain Weisz",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Jean-Denys Choulet",
          "is_valid": false
        }
      ]
    }, {
      "id": 841,
      "text": "Qui était l'entraîneur du club de basket de Poitiers au début de la saison de Pro A 2010-2011 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Ruddy Nelhomme",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Jean-Philippe Besson",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Jean-Manuel Sousa",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Christian Monschau",
          "is_valid": false
        }
      ]
    }, {
      "id": 842,
      "text": "Qui était l'entraîneur du club de basket de Roanne au début de la saison de Pro A 2010-2011 ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Jean-Denys Choulet",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Alain Weisz",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Christian Monschau",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Philippe Hervé",
          "is_valid": false
        }
      ]
    }, {
      "id": 843,
      "text": "Qui était l'entraîneur du club de basket de Strasbourg au début de la saison de Pro A 2010-2011 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Frédéric Sarre",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Ruddy Nelhomme",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Jean-Philippe Besson",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Jean-Manuel Sousa",
          "is_valid": false
        }
      ]
    }, {
      "id": 844,
      "text": "Qui était l'entraîneur du club de basket de Vichy au début de la saison de Pro A 2010-2011 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Jean-Philippe Besson",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Jean-Manuel Sousa",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Frédéric Sarre",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Jean-Denys Choulet",
          "is_valid": false
        }
      ]
    }, {
      "id": 845,
      "text": "Dans laquelle de ces disciplines Michael Von Grünigen a-t-il été sacré champion du monde de ski alpin ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Ski",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Géant",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Descente",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Slalom",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Super-G",
          "is_valid": false
        }
      ]
    }, {
      "id": 846,
      "text": "Quelle était la nationalité du skieur Michael Von Grünigen",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Ski",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Suisse",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Autrichienne",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Allemande",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Luxembourgeoise",
          "is_valid": false
        }
      ]
    }, {
      "id": 847,
      "text": "Dans laquelle de ces disciplines Carole Merle a-t-elle été sacrée championne du monde de ski alpin ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Ski",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Géant",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Descente",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Super-G",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Combiné",
          "is_valid": false
        }
      ]
    }, {
      "id": 848,
      "text": "En quelle année Carole Merle a-t-elle été sacrée championne du monde de ski alpin ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Ski",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "1993",
          "is_valid": true
        }, {
          "id": 2,
          "text": "1967",
          "is_valid": false
        }, {
          "id": 3,
          "text": "1978",
          "is_valid": false
        }, {
          "id": 4,
          "text": "2001",
          "is_valid": false
        }
      ]
    }, {
      "id": 849,
      "text": "Dans laquelle de ces disciplines Perrine Pelen a-t-elle été sacrée championne du monde de ski alpin ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Ski",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Slalom",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Combiné",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Descente",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Géant",
          "is_valid": false
        }
      ]
    }, {
      "id": 850,
      "text": "En quelle année Perrine Pelen a-t-elle été sacrée championne du monde de ski alpin ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Ski",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "1985",
          "is_valid": true
        }, {
          "id": 2,
          "text": "1958",
          "is_valid": false
        }, {
          "id": 3,
          "text": "1979",
          "is_valid": false
        }, {
          "id": 4,
          "text": "1993",
          "is_valid": false
        }
      ]
    }, {
      "id": 851,
      "text": "Dans quelle station Perrine Pelen a-t-elle été sacrée championne du monde de ski alpin ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Ski",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Bormio",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Lake Placid",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Chamonix",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Crans-Montana",
          "is_valid": false
        }
      ]
    }, {
      "id": 852,
      "text": "Quel est le nom de la mythique piste de descente de Kitzbühel ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Ski",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "La Streif",
          "is_valid": true
        }, {
          "id": 2,
          "text": "La Kandahar",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Le Lauberhorn",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Le Birds of Prey",
          "is_valid": false
        }
      ]
    }, {
      "id": 853,
      "text": "Quel exploit a réalisé Luc Alphand sur la piste de Kitzbühel ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Ski",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Il a gagné deux courses le même jour",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Il a gagné la descente sur un ski",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Il a battu le record de la piste",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Il a gagné la descente en ski et en snowboard",
          "is_valid": false
        }
      ]
    }, {
      "id": 854,
      "text": "En quelle année Luc Alphand a-t-il remporté à deux reprises dans la même journée la descente de Kitzbühel ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Ski",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "1995",
          "is_valid": true
        }, {
          "id": 2,
          "text": "1988",
          "is_valid": false
        }, {
          "id": 3,
          "text": "1997",
          "is_valid": false
        }, {
          "id": 4,
          "text": "1992",
          "is_valid": false
        }
      ]
    }, {
      "id": 855,
      "text": "Quelle est la station dont Luc Alphand est originaire ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Ski",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Serre-Chevalier",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Courchevel",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Les Saisies",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Chamrousse",
          "is_valid": false
        }
      ]
    }, {
      "id": 856,
      "text": "Quel skieur a remporté 86 victoires en Coupe du monde de ski alpin sur l'ensemble de sa carrière ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Ski",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Ingemar Stenmark",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Alberto Tomba",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Kjetil André Aamodt",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Jean-Claude Killy",
          "is_valid": false
        }
      ]
    }, {
      "id": 857,
      "text": "Combien de fois Alberto Tomba a-t-il remporté le classement général de la Coupe du monde de ski alpin ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Ski",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Une fois",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Deux fois",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Trois fois",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Quatre fois",
          "is_valid": false
        }
      ]
    }, {
      "id": 858,
      "text": "Lequel de ces skieurs a remporté à cinq reprises le classement général de la Coupe du monde de ski alpin ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Ski",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Marc Girardelli",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Pirmin Zürbriggen",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Hermann Maier",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Ingemar Stenmark",
          "is_valid": false
        }
      ]
    }, {
      "id": 859,
      "text": "Quel skieur autrichien a remporté 25 descentes de Coupe du monde et 5 petits globes de la spécialité ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Ski",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Franz Klammer",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Toni Sailer",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Karl Schranz",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Günther Mader",
          "is_valid": false
        }
      ]
    }, {
      "id": 860,
      "text": "Quelle skieuse a réalisé le doublé slalom-géant aux Championnats du monde en 1997 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Ski",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Deborah Compagnoni",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Karin Roten Maier",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Katjia Seizinger",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Vreni Schneider",
          "is_valid": false
        }
      ]
    }, {
      "id": 861,
      "text": "Quelle est la nationalité de Vreni Schneider ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Ski",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Suisse",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Autrichienne",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Allemande",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Liechtensteinoise",
          "is_valid": false
        }
      ]
    }, {
      "id": 862,
      "text": "Quel est le nom de jeune fille de Lindsey Vonn ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Ski",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Kildow",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Mancuso",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Renshaw",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Scarborough",
          "is_valid": false
        }
      ]
    }, {
      "id": 863,
      "text": "Lequel de ces skieurs a remporté au moins une victoire en Coupe du monde dans chacune des cinq disciplines du ski alpin ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Ski",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Kjetill-André Aamodt",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Alberto Tomba",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Ingemar Stenmark",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Franz Klammer",
          "is_valid": false
        }
      ]
    }, {
      "id": 864,
      "text": "Quelle est la nationalité de Marc Girardelli ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Ski",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Luxembourgeois",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Suisse",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Italien",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Autrichien",
          "is_valid": false
        }
      ]
    }, {
      "id": 865,
      "text": "En 1999, quel skieur a remporté cinq médailles aux Championnats du monde de ski alpin ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Ski",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Lasse Kjus",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Kjetill-André Aamodt",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Hermann Maier",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Daron Rahlves",
          "is_valid": false
        }
      ]
    }, {
      "id": 866,
      "text": "Laquelle de ces skieuses a remporté trois médailles d'or aux Championnats du monde en 2005 ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Ski",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Janica Kostelic",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Anja Paerson",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Tanja Poutiainen",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Renate Götschl",
          "is_valid": false
        }
      ]
    }, {
      "id": 867,
      "text": "Frère et sœur, ils ont remporté une médaille d'or chacun lors des mêmes Championnats du monde. Qui était-ce ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Ski",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Ivica et Janica Kostelic",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Pirmin et Heidi Zürbriggen",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Manfred et Manuela Mölgg",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Jean-Claude et Marielle Killy",
          "is_valid": false
        }
      ]
    }, {
      "id": 868,
      "text": "Quelle skieuse française a remporté le titre mondial de super-G en 2001 ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Ski",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Régine Cavagnoud",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Carole Montillet",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Mélanie Suchet",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Carole Merle",
          "is_valid": false
        }
      ]
    }, {
      "id": 869,
      "text": "Quelle skieuse a réalisé le double super-G-géant aux Championnats du monde de ski alpin en 1999 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Ski",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Alexandra Meissnitzer",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Renate Götschl",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Michaela Dorfmeister",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Anita Wachter",
          "is_valid": false
        }
      ]
    }, {
      "id": 870,
      "text": "Quel skieur a réalisé le doublé combiné-géant aux Championnats du monde de ski alpin en 2003 ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Ski",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Bode Miller",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Daron Rhalves",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Laase Kjus",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Benjamin Raich",
          "is_valid": false
        }
      ]
    }, {
      "id": 871,
      "text": "Quel skieur a réalisé le doublé descente-super-G aux Championnats du monde de ski alpin en 2005 ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Ski",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Bode Miller",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Hermann Maier",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Michael Walchhofer",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Stefan Eberharter",
          "is_valid": false
        }
      ]
    }, {
      "id": 872,
      "text": "Quel skieur français a remporté deux médailles aux Championnats du monde de ski alpin en 2009 ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Ski",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Julien Lizeroux",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Jean-Baptiste Grange",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Thomas Fanara",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Adrien Théaux",
          "is_valid": false
        }
      ]
    }, {
      "id": 873,
      "text": "Dans quelle station française ont eu lieu les Championnats du monde de ski alpin en 2009 ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Ski",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Val d'Isère",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Chamonix",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Tignes",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Méribel",
          "is_valid": false
        }
      ]
    }, {
      "id": 874,
      "text": "Qui étaient surnommés les Crazy Cannucks ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Ski",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Les descendeurs canadiens des années 70-80",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Les skieurs Français des JO de Grenoble",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Les slalomeurs scandinaves des années 90",
          "is_valid": false
        }, {
          "id": 4,
          "text": "La délégation autrichienne aux Mondiaux 2009",
          "is_valid": false
        }
      ]
    }, {
      "id": 875,
      "text": "Quel skieur était surnommé Herminator ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Ski",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Hermann Maier",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Markus Herrmann",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Stefan Eberharter",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Erik Guay",
          "is_valid": false
        }
      ]
    }, {
      "id": 876,
      "text": "En quelle année Fabrice Guy a-t-il remporté la Coupe du monde de combiné nordique ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Combiné Nordique",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "1992",
          "is_valid": true
        }, {
          "id": 2,
          "text": "1990",
          "is_valid": false
        }, {
          "id": 3,
          "text": "1994",
          "is_valid": false
        }, {
          "id": 4,
          "text": "1996",
          "is_valid": false
        }
      ]
    }, {
      "id": 877,
      "text": "Avant Fabrice Guy, combien de Français avaient remporté la Coupe du monde de combiné nordique ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Combiné Nordique",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "0",
          "is_valid": true
        }, {
          "id": 2,
          "text": "1",
          "is_valid": false
        }, {
          "id": 3,
          "text": "2",
          "is_valid": false
        }, {
          "id": 4,
          "text": "3",
          "is_valid": false
        }
      ]
    }, {
      "id": 878,
      "text": "Après Fabrice Guy, quel Français a inscrit son nom au palmarès de la Coupe du monde de combiné nordique ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Combiné Nordique",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Jason Lamy-Chappuis",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Sylvain Guillaume",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Nicolas Bal",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Vincent Vittoz",
          "is_valid": false
        }
      ]
    }, {
      "id": 879,
      "text": "Qui a remporté quatre fois de suite la Coupe du monde de combiné nordique entre 2004 et 2007 ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Combiné Nordique",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Hannu Manninen",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Felix Gottwald",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Ronny Ackermann",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Magnus Moan",
          "is_valid": false
        }
      ]
    }, {
      "id": 880,
      "text": "Quand a lieu la Tournée des quatre tremplins ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Saut à ski",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Première semaine de janvier",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Dernier semaine de novembre",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Troisième semaine de mars",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Deuxième semaine de juin",
          "is_valid": false
        }
      ]
    }, {
      "id": 881,
      "text": "Lequel de ces sites ne figure pas dans la Tournée des quatre tremplins ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Saut à ski",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Salzbourg",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Innsbrück",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Garmisch-Partenkirchen",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Bischofshofen",
          "is_valid": false
        }
      ]
    }, {
      "id": 882,
      "text": "Lequel de ces sites figure dans la Tournée des quatre tremplins ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Saut à ski",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Obersdorf",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Lahti",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Planica",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Oslo",
          "is_valid": false
        }
      ]
    }, {
      "id": 883,
      "text": "Quel est le premier sauteur à ski à avoir remporté coup sur coup les quatre épreuves de la Tournée des quatre tremplins ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Saut à ski",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Sven Hannawald",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Matti Nykänen",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Adam Malysz",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Simon Ammann",
          "is_valid": false
        }
      ]
    }, {
      "id": 884,
      "text": "Lequel de ces sauteurs à ski n'est pas finlandais ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Saut à ski",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Espen Bredesen",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Toni Nieminen",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Matti Nykänen",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Janne Ahonen",
          "is_valid": false
        }
      ]
    }, {
      "id": 885,
      "text": "Quel est le premier sauteur à ski à avoir remporté à quatre reprises le classement général de la Coupe du monde ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Saut à ski",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Matti Nykänen",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Martin Schmitt",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Andreas Goldberger",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Armin Kogler",
          "is_valid": false
        }
      ]
    }, {
      "id": 886,
      "text": "Lequel de ces sauteurs à ski est surnommé le Finlandais volant ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Saut à ski",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Matti Nykänen",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Harri Olli",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Ansu Koivuranta",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Matti Hautamäki",
          "is_valid": false
        }
      ]
    }, {
      "id": 887,
      "text": "Quel skieur a réalisé le doublé petit et grand tremplins aux Championnats du monde de saut à skis en 2003 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Saut à ski",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Adam Malysz",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Sven Hannavald",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Simon Amann",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Matti Hautamäki",
          "is_valid": false
        }
      ]
    }, {
      "id": 888,
      "text": "Quelle technique de saut à skis a révolutionné la discipline au début des années 90 ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Saut à ski",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "la technique en V",
          "is_valid": true
        }, {
          "id": 2,
          "text": "la technique en U",
          "is_valid": false
        }, {
          "id": 3,
          "text": "la technique en X",
          "is_valid": false
        }, {
          "id": 4,
          "text": "La technique en T",
          "is_valid": false
        }
      ]
    }, {
      "id": 889,
      "text": "Quel sauteur à skis a fait succès en développant la technique du saut en V ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Saut à ski",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Espen Bredesen",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Adam Malysz",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Matti Nykänen",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Martin Schmitt",
          "is_valid": false
        }
      ]
    }, {
      "id": 890,
      "text": "Qui a remporté six fois le classement général de la Coupe du monde de ski de fond entre 1992 et 1999 ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Ski de fond",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Björn Daehlie",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Vegard Ulvang",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Thomas Alsgaard",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Gunde Svan",
          "is_valid": false
        }
      ]
    }, {
      "id": 891,
      "text": "Lequel de ces skieurs de fond n'est pas norvégien ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Ski de fond",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Gunde Svan",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Björn Daehlie",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Vegard Ulvang",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Petter Northug",
          "is_valid": false
        }
      ]
    }, {
      "id": 892,
      "text": "Quelle est la nationalité de Johann Mühlegg lorsqu'il remporte le classement général de la Coupe du monde en 2000 ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Ski de fond",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Espagnole",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Allemande",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Autrichienne",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Norvégienne",
          "is_valid": false
        }
      ]
    }, {
      "id": 893,
      "text": "Qui a remporté trois médailles d'or aux Championnats du monde de ski de fond à Lahti en 1989 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Ski de fond",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Gunde Svan",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Björn Daehlie",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Harri Kirvesniemi",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Vladimir Smirnov",
          "is_valid": false
        }
      ]
    }, {
      "id": 894,
      "text": "Quel est le premier Français sacré champion du monde de ski de fond ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Ski de fond",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Hervé Balland",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Vincent Vittoz",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Jean-Paul Pierrat",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Fabrice Guy",
          "is_valid": false
        }
      ]
    }, {
      "id": 895,
      "text": "Quel skieur de fond français est surnommé \"l'Ordinateur\" ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Ski de fond",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Vincent Vittoz",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Maurice Manificat",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Jean-Marc Gaillard",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Emmanuel Jonnier",
          "is_valid": false
        }
      ]
    }, {
      "id": 896,
      "text": "Dans quelle discipline Vincent Vittoz a-t-il été sacré champion du monde de ski de fond en 2005 ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Ski de fond",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Poursuite",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Sprint ",
          "is_valid": false
        }, {
          "id": 3,
          "text": "50 km libre",
          "is_valid": false
        }, {
          "id": 4,
          "text": "30 km classique",
          "is_valid": false
        }
      ]
    }, {
      "id": 897,
      "text": "Quelle Italienne a remporté treize médailles aux Championnats du monde de ski de fond entre 1991 et 2001 ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Ski de fond",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Stefania Belmondo",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Stefania Mastroianni",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Stefania Piccoli",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Stefania Arditi",
          "is_valid": false
        }
      ]
    }, {
      "id": 898,
      "text": "Quelle skieuse de fond était surnommé la \"Dame de fer\" ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Ski de fond",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Larissa Lazutina",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Elena Välbe",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Sophie Villeneuve",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Barbara Petzold",
          "is_valid": false
        }
      ]
    }, {
      "id": 899,
      "text": "En quelle année le handballeur Bertrand Gille a-t-il honoré sa première sélection en équipe de France ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Handball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "1997",
          "is_valid": true
        }, {
          "id": 2,
          "text": "1993",
          "is_valid": false
        }, {
          "id": 3,
          "text": "2001",
          "is_valid": false
        }, {
          "id": 4,
          "text": "2005",
          "is_valid": false
        }
      ]
    }, {
      "id": 900,
      "text": "Qui a été désigné meilleur pivot du mondial de handall masculin en 2001 ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Handball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Bertrand Gille",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Cédric Sorhaindo",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Philippe Gardent",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Guéric Kervadec",
          "is_valid": false
        }
      ]
    }, {
      "id": 901,
      "text": "En quelle année le handballeur Bertrand Gille a-t-il rejoint le club de Hambourg ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Handball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "2002",
          "is_valid": true
        }, {
          "id": 2,
          "text": "2000",
          "is_valid": false
        }, {
          "id": 3,
          "text": "2004",
          "is_valid": false
        }, {
          "id": 4,
          "text": "2006",
          "is_valid": false
        }
      ]
    }, {
      "id": 902,
      "text": "Quel handballeur a été désigné meilleur joueur mondial de l'année 2002 ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Handball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Bertrand Gille",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Nikola Karabatic",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Jackson Richardson",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Thierry Omeyer",
          "is_valid": false
        }
      ]
    }, {
      "id": 903,
      "text": "Qui a été désigné meilleur pivot du mondial de handball masculin en 2011 ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Handball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Bertrand Gille",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Nikola Karabatic",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Cédric Sorhaindo",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Didier Dinart",
          "is_valid": false
        }
      ]
    }, {
      "id": 904,
      "text": "Dans quel sport brille Victor Sintès ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Escrime",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Judo",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Aviron",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Equitation",
          "is_valid": false
        }
      ]
    }, {
      "id": 905,
      "text": "Combien de record du monde a établi le perchiste Thierry Vigneron en plein air ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "4",
          "is_valid": true
        }, {
          "id": 2,
          "text": "0",
          "is_valid": false
        }, {
          "id": 3,
          "text": "2",
          "is_valid": false
        }, {
          "id": 4,
          "text": "6",
          "is_valid": false
        }
      ]
    }, {
      "id": 906,
      "text": "Où le perchiste Sergueï Bubka a-t-il franchi pour la première fois la barre des six mètres ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Au stade Jean-Bouin à Paris",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Au Stade Louis II à Monaco",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Au Stade Olympique de Rome",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Au Stade Monjuich à Barcelone",
          "is_valid": false
        }
      ]
    }, {
      "id": 907,
      "text": "Quel est le deuxième perchiste à avoir franchi la barre des six mètres ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Rodion Gatauline",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Okkerts Brits",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Jean Galfione",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Igor Trandenkov",
          "is_valid": false
        }
      ]
    }, {
      "id": 908,
      "text": "Combien de fois Sergueï Bubka a-t-il été sacré champion du monde de la perche en plein air ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Six fois",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Quatre fois",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Cinq fois",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Sept fois",
          "is_valid": false
        }
      ]
    }, {
      "id": 909,
      "text": "Qui a été sacré champion du monde de saut à la perche en 2009 ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Steeve Hooker",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Okkerts Brits",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Romain Mesnil",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Renaud Lavillenie",
          "is_valid": false
        }
      ]
    }, {
      "id": 910,
      "text": "Combien de barres a franchi Steeve Hooker en finale pour remporter le titre de champion du monde de saut à la perche en 2009 ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "1",
          "is_valid": true
        }, {
          "id": 2,
          "text": "2",
          "is_valid": false
        }, {
          "id": 3,
          "text": "3",
          "is_valid": false
        }, {
          "id": 4,
          "text": "4",
          "is_valid": false
        }
      ]
    }, {
      "id": 911,
      "text": "Quelle est la spécialité du skieur Phil Lau ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Télémark",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Snowboard",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Ski acrobatique",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Ski de fond",
          "is_valid": false
        }
      ]
    }, {
      "id": 912,
      "text": "Dans quelle discipline a brillé l'Autrichien Christian Auer ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Skeleton",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Télémark",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Bobsleigh",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Curling",
          "is_valid": false
        }
      ]
    }, {
      "id": 913,
      "text": "Dans quelle discipline la Suissesse Maya Pedersen-Bieri s'est-elle forgée un palmarès international ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Skeleton",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Télémark",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Bobsleigh",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Curling",
          "is_valid": false
        }
      ]
    }, {
      "id": 914,
      "text": "Les championnats du monde de curling se déroulent…",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Curling",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "tous les ans",
          "is_valid": true
        }, {
          "id": 2,
          "text": "tous les deux ans",
          "is_valid": false
        }, {
          "id": 3,
          "text": "tous les trois ans",
          "is_valid": false
        }, {
          "id": 4,
          "text": "tous les quatre ans",
          "is_valid": false
        }
      ]
    }, {
      "id": 915,
      "text": "Quel numéro de maillot portait Michael Jordan le 14 février 1990 avec les Chicago Bulls à Orlando le 14 février 1990 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "12",
          "is_valid": true
        }, {
          "id": 2,
          "text": "23",
          "is_valid": false
        }, {
          "id": 3,
          "text": "45",
          "is_valid": false
        }, {
          "id": 4,
          "text": "9",
          "is_valid": false
        }
      ]
    }, {
      "id": 916,
      "text": "Pour quelle raison Michael Jordan portait le numéro 12 le 14 février 1990 lors du match des Bulls à Orlando ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Son célèbre numéro 23 avait été dérobé",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Il avait décidé de changer pour honorer  Alain Giresse, qui portait ce numéro au Mondial de fooball 1986",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Son fils venait de naître deux jours avant, soit le 12 février",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Lors du match précédent, il avait porté le record de tirs à trois points réussis dans un seul match à douze.",
          "is_valid": false
        }
      ]
    }, {
      "id": 917,
      "text": "Quel numéro de maillot portait le joueur de base-ball Babe Ruth aux New York Yankees entre 1920 et 1934 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Baseball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "3",
          "is_valid": true
        }, {
          "id": 2,
          "text": "24",
          "is_valid": false
        }, {
          "id": 3,
          "text": "10",
          "is_valid": false
        }, {
          "id": 4,
          "text": "99",
          "is_valid": false
        }
      ]
    }, {
      "id": 918,
      "text": "Quel sportif américain était surnommé \"The Bambino\" ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Babe Ruth",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Wilt Chamberlain",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Wayne Gretsky",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Magic Johnson",
          "is_valid": false
        }
      ]
    }, {
      "id": 919,
      "text": "Pour quelle raison les World Series de baseball 1989 entre Oakland Athletics et les San Francisco Giants ont-elles été interrompues pendant une dizaine de jours ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Baseball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Un séisme s'est produit à San Francisco juste avant le troisième match",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Une tempête de neige s'est abattue sur San Francisco juste avant le troisième match",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Le président de la franchise d'Oakland est décédé durant la série",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Des émeutes ont éclaté à San Francisco durant la série",
          "is_valid": false
        }
      ]
    }, {
      "id": 920,
      "text": "Quel numéro de maillot portait le hockeyeur Wayne Gretzky  durant sa carrière en NHL ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Hockey sur glace",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "99",
          "is_valid": true
        }, {
          "id": 2,
          "text": "23",
          "is_valid": false
        }, {
          "id": 3,
          "text": "0",
          "is_valid": false
        }, {
          "id": 4,
          "text": "55",
          "is_valid": false
        }
      ]
    }, {
      "id": 921,
      "text": "Quel était le surnom de Wayne Gretzky, l'ancien hockeyeur canadien ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Hockey sur glace",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "The Great One",
          "is_valid": true
        }, {
          "id": 2,
          "text": "The Bambino",
          "is_valid": false
        }, {
          "id": 3,
          "text": "The Greatest",
          "is_valid": false
        }, {
          "id": 4,
          "text": "The Glide",
          "is_valid": false
        }
      ]
    }, {
      "id": 922,
      "text": "Quel sportif nord-américain est  surnommé \"Mr Hockey\" ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Hockey sur glace",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Gordie Howe",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Mario Lemieux",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Wayne Gretsky",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Sidney Crosby",
          "is_valid": false
        }
      ]
    }, {
      "id": 923,
      "text": "Dans quelle franchise de NHL Mario Lemieux a évolué tout au long de sa carrière ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Hockey sur glace",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Les Penguins de Pittsburgh",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Les Canadiens de Montréal",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Les New York Rangers",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Les New York Islanders",
          "is_valid": false
        }
      ]
    }, {
      "id": 924,
      "text": "Qui était le \"lieutenant de Michael Jordan\" aux Chicago Bulls de 1987 à 1993 et de 1995 à 1998 ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Scottie Pippen",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Horace Grant",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Steve Kerr",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Dennis Rodman",
          "is_valid": false
        }
      ]
    }, {
      "id": 925,
      "text": "Quel basketteur a été désigné joueur européen de l'année 2011 ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Milos Teodosic",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Pau Gasol",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Ricky Rubio",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Dirk Nowitzki",
          "is_valid": false
        }
      ]
    }, {
      "id": 926,
      "text": "Quel numéro de maillot portait le basketteur Dennis Rodman aux Chicago Bulls entre 1995 et 1998 ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "91",
          "is_valid": true
        }, {
          "id": 2,
          "text": "10",
          "is_valid": false
        }, {
          "id": 3,
          "text": "73",
          "is_valid": false
        }, {
          "id": 4,
          "text": "00",
          "is_valid": false
        }
      ]
    }, {
      "id": 927,
      "text": "Dans quelle université Michael Jordan a-t-il fait ses études ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "North Carolina",
          "is_valid": true
        }, {
          "id": 2,
          "text": "UCLA",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Princeton",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Georgetown",
          "is_valid": false
        }
      ]
    }, {
      "id": 928,
      "text": "Combien de titres de MVP de la saison a comptabilisé Michael Jordan au cours de sa carrière ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "5",
          "is_valid": true
        }, {
          "id": 2,
          "text": "10",
          "is_valid": false
        }, {
          "id": 3,
          "text": "6",
          "is_valid": false
        }, {
          "id": 4,
          "text": "8",
          "is_valid": false
        }
      ]
    }, {
      "id": 929,
      "text": "Pour quelle raison l'équipe de NBA des Miami Heat a-t-elle \"retiré\" le numéro 23 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "En hommage à Michael Jordan, bien qu'il n'ait jamais évolué au club",
          "is_valid": true
        }, {
          "id": 2,
          "text": "En hommage à Pat Riley qui portait ce numéro au cours de sa carrière",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Pour récompenser Glen Rice, MVP du All Star Game 1997, passé par Miami",
          "is_valid": false
        }, {
          "id": 4,
          "text": "En hommage au numéro de LeBron James à Cleveland, qui s'est engagé avec Miami à l'été 2010",
          "is_valid": false
        }
      ]
    }, {
      "id": 930,
      "text": "Dans quelle ville évoluait l'équipe de basket des Lakers avant de s'installer à Los Angeles en 1960 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Minneapolis",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Salt Lake City",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Kansas City",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Chicago",
          "is_valid": false
        }
      ]
    }, {
      "id": 931,
      "text": "Quand la franchise de basket des Miami Heat a-t-elle disputé sa première saison en NBA ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "En 1988-1989",
          "is_valid": true
        }, {
          "id": 2,
          "text": "En 2000-2001",
          "is_valid": false
        }, {
          "id": 3,
          "text": "En 1983-84",
          "is_valid": false
        }, {
          "id": 4,
          "text": "En 1976-1977",
          "is_valid": false
        }
      ]
    }, {
      "id": 932,
      "text": "Deux nouvelles franchises ont disputé leur première saison de NBA en 1988-1989, les Miami Heat et…",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Les Charlotte Hornets",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Les Orlando Magic",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Les Minnesota Timberwolves",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Les Vancouver Grizzlies",
          "is_valid": false
        }
      ]
    }, {
      "id": 933,
      "text": "Deux nouvelles franchises ont disputé leur première saison de NBA en 1988-1989, les Charlotte Hornets et…",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Les Miami Heat",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Les Orlando Magic",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Les Minnesota Timberwolves",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Les Vancouver Grizzlies",
          "is_valid": false
        }
      ]
    }, {
      "id": 934,
      "text": "Deux nouvelles franchises ont disputé leur première saison de NBA en 1989-1990, les Orlando Magic et…",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Les Minnesota Timberwolves",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Les Miami Heat",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Les Toronto Raptors",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Les Vancouver Grizzlies",
          "is_valid": false
        }
      ]
    }, {
      "id": 935,
      "text": "Deux nouvelles franchises ont disputé leur première saison de NBA en 1989-1990, les Minnesota Timberwolves et…",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Les Orlando Magic",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Les Toronto Raptors",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Les Charlotte Hornets",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Les New York Knicks",
          "is_valid": false
        }
      ]
    }, {
      "id": 936,
      "text": "Quelle est la particularité du basketteur Luc Longley lors de son arrivée en NBA  en 1991 ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Il est le premier Australien à évoluer dans la Ligue nord-américaine",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Il n'avait jamais joué au basket de haut niveau avant son arrivée",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Il portait le numéro 00 à son arrivée à Minnesota",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Pour sa première saison, il n'a disputé qu'un seul match en raison de blessures multiples",
          "is_valid": false
        }
      ]
    }, {
      "id": 937,
      "text": "Combien de points a inscrit Michael Jordan lors de son retour sur les parquets, après sa première retraite, le 19 mars 1995 contre Indiana ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "19",
          "is_valid": true
        }, {
          "id": 2,
          "text": "45",
          "is_valid": false
        }, {
          "id": 3,
          "text": "12",
          "is_valid": false
        }, {
          "id": 4,
          "text": "17",
          "is_valid": false
        }
      ]
    }, {
      "id": 938,
      "text": "Comment s'appelait la franchise de basket de Washington juste avant de devenir les Wizards ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Les Bullets",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Les Packers",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Les Zephyrs",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Les Knickerbockers",
          "is_valid": false
        }
      ]
    }, {
      "id": 939,
      "text": "Avant de se convertir à l'islam, quel était le nom du basketteur Mahmoud Abdul-Rauf ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Chris Jackson",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Michael Johnson",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Chris Browne",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Sean Combs",
          "is_valid": false
        }
      ]
    }, {
      "id": 940,
      "text": "Avant de se convertir à l'islam, quel était le nom du basketteur Tariq Abdul-Wahad ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Olivier Saint-Jean",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Arsène Ade-Mensah",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Alain Digbeu",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Hervé Dubuisson",
          "is_valid": false
        }
      ]
    }, {
      "id": 941,
      "text": "Avant de se convertir à l'islam, quel était le nom du basketteur Kareem Abdul-Jabbar ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Lewis Alcindor",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Bob Cousy",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Bob Lanier",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Alvin Gentry",
          "is_valid": false
        }
      ]
    }, {
      "id": 942,
      "text": "Pour quelle raison Gheorghe Muresan portait le numéro 77 lors de ses saisons NBA ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "En référence à sa taille (7 pieds et 7 pouces, soit 2,31 m)",
          "is_valid": true
        }, {
          "id": 2,
          "text": "C'est son année de naissance",
          "is_valid": false
        }, {
          "id": 3,
          "text": "En hommage à l'entraîneur de son premier club en Roumanie",
          "is_valid": false
        }, {
          "id": 4,
          "text": "C'est l'année de création de son premier club en Roumanie, l'Université de Cluj",
          "is_valid": false
        }
      ]
    }, {
      "id": 943,
      "text": "A combien de reprises le basketteur roumain Gheorghe Muresan a évolué à Pau-Orthez ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "3",
          "is_valid": true
        }, {
          "id": 2,
          "text": "1",
          "is_valid": false
        }, {
          "id": 3,
          "text": "2",
          "is_valid": false
        }, {
          "id": 4,
          "text": "4",
          "is_valid": false
        }
      ]
    }, {
      "id": 944,
      "text": "Dans quel club français a évolué le basketteur roumain Gheorghe Muresan ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Pau - Orthez",
          "is_valid": true
        }, {
          "id": 2,
          "text": "ASVEL",
          "is_valid": false
        }, {
          "id": 3,
          "text": "PSG Racing",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Antibes",
          "is_valid": false
        }
      ]
    }, {
      "id": 945,
      "text": "Dans quel club le basketteur français Richard Dacoury a-t-il teminé sa carrière ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "PSG Racing",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Limoges",
          "is_valid": false
        }, {
          "id": 3,
          "text": "ASVEL",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Dallas Mavericks",
          "is_valid": false
        }
      ]
    }, {
      "id": 946,
      "text": "Dans quel club le basketteur français Antoine Rigaudeau n'a-t-il pas joué ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Fortitudo Bologne",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Virtus Bologne",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Dallas Mavericks",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Cholet",
          "is_valid": false
        }
      ]
    }, {
      "id": 947,
      "text": "Quel était le surnom donné par les Italiens au basketteur français Antoine Rigaudeau ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Le Roi",
          "is_valid": true
        }, {
          "id": 2,
          "text": "L'Elégant",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Le Maestro",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Le Cerveau",
          "is_valid": false
        }
      ]
    }, {
      "id": 948,
      "text": "Combien de sélections compte Antoine Rigaudeau en équipe de France de basket ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "127",
          "is_valid": true
        }, {
          "id": 2,
          "text": "145",
          "is_valid": false
        }, {
          "id": 3,
          "text": "102",
          "is_valid": false
        }, {
          "id": 4,
          "text": "163",
          "is_valid": false
        }
      ]
    }, {
      "id": 949,
      "text": "En quelle année a été fondée la Major League Baseball ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Baseball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "1876",
          "is_valid": true
        }, {
          "id": 2,
          "text": "1939",
          "is_valid": false
        }, {
          "id": 3,
          "text": "1945",
          "is_valid": false
        }, {
          "id": 4,
          "text": "1855",
          "is_valid": false
        }
      ]
    }, {
      "id": 950,
      "text": "Dans quel quartier de New York évoluait la franchise de baseball des Dodgers avant d'emménager à Los Angeles en 1958 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Baseball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "A Brooklyn",
          "is_valid": true
        }, {
          "id": 2,
          "text": "A Manhattan",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Dans le Bronx",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Dans le Queens",
          "is_valid": false
        }
      ]
    }, {
      "id": 951,
      "text": "Qui détient le record du nombre de home runs sur une saison en Major League Baseball ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Baseball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Barry Bonds",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Mark McGwire",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Roger Maris",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Sammy Sosa",
          "is_valid": false
        }
      ]
    }, {
      "id": 952,
      "text": "Quelle franchise de baseball a remporté les World Series en 2009 ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Baseball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "New York Yankees",
          "is_valid": true
        }, {
          "id": 2,
          "text": "New York Mets",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Philadelphie Phillies",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Boston Red Sox",
          "is_valid": false
        }
      ]
    }, {
      "id": 953,
      "text": "Avant de remporter les World Series en 2007, en quelle année les Boston Red Sox avaient-ils glané leur précédent titre ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Baseball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "2004",
          "is_valid": true
        }, {
          "id": 2,
          "text": "1918",
          "is_valid": false
        }, {
          "id": 3,
          "text": "1975",
          "is_valid": false
        }, {
          "id": 4,
          "text": "1994",
          "is_valid": false
        }
      ]
    }, {
      "id": 954,
      "text": "Avant de remporter les World Series en 2004, en quelle année les Boston Red Sox avaient-ils glané leur précédent titre ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Baseball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "1918",
          "is_valid": true
        }, {
          "id": 2,
          "text": "2003",
          "is_valid": false
        }, {
          "id": 3,
          "text": "1952",
          "is_valid": false
        }, {
          "id": 4,
          "text": "1982",
          "is_valid": false
        }
      ]
    }, {
      "id": 955,
      "text": "Pour quelle raison le numéro 42 est retiré par l'ensemble des franchises de la Major League Baseball ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Baseball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Pour rendre hommage à Jacky Robinson, premier joueur noir à évoluer dans la Ligue",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Parce que c'est un numéro porte malheur aux Etats-Unis",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Parce que la saison 1941-1942 a été marquée par de nombreuses affaires de corruption",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Parce que Ted Williams, l'ancien joueur des Boston Red Sox, a mis entre parenthèse sa carrière en 1942 pour s'engager dans l'armée",
          "is_valid": false
        }
      ]
    }, {
      "id": 956,
      "text": "Quel est le numéro de maillot de Kobe Bryant aux Los Angeles Lakers depuis 2006 ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "24",
          "is_valid": true
        }, {
          "id": 2,
          "text": "8",
          "is_valid": false
        }, {
          "id": 3,
          "text": "5",
          "is_valid": false
        }, {
          "id": 4,
          "text": "23",
          "is_valid": false
        }
      ]
    }, {
      "id": 957,
      "text": "Quel était le numéro de maillot de Kobe Bryant aux Los Angeles Lakers entre 1996 à 2006 ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "8",
          "is_valid": true
        }, {
          "id": 2,
          "text": "24",
          "is_valid": false
        }, {
          "id": 3,
          "text": "2",
          "is_valid": false
        }, {
          "id": 4,
          "text": "23",
          "is_valid": false
        }
      ]
    }, {
      "id": 958,
      "text": "Quel était le numéro de maillot de Shaquille O'Neal aux Orlando Magic entre 1992 et 1996 ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "32",
          "is_valid": true
        }, {
          "id": 2,
          "text": "33",
          "is_valid": false
        }, {
          "id": 3,
          "text": "34",
          "is_valid": false
        }, {
          "id": 4,
          "text": "36",
          "is_valid": false
        }
      ]
    }, {
      "id": 959,
      "text": "Quel était le numéro de maillot de Shaquille O'Neal aux Orlando Magic entre 1996 et 2004 ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "34",
          "is_valid": true
        }, {
          "id": 2,
          "text": "32",
          "is_valid": false
        }, {
          "id": 3,
          "text": "33",
          "is_valid": false
        }, {
          "id": 4,
          "text": "36",
          "is_valid": false
        }
      ]
    }, {
      "id": 960,
      "text": "Quel était le numéro de maillot de Shaquille O'Neal aux Miami Heat entre 2004 et 2008 ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "32",
          "is_valid": true
        }, {
          "id": 2,
          "text": "33",
          "is_valid": false
        }, {
          "id": 3,
          "text": "34",
          "is_valid": false
        }, {
          "id": 4,
          "text": "35",
          "is_valid": false
        }
      ]
    }, {
      "id": 961,
      "text": "Quel était le numéro de maillot de Shaquille O'Neal aux Phoenix Suns entre 2008 et 2009 ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "32",
          "is_valid": true
        }, {
          "id": 2,
          "text": "33",
          "is_valid": false
        }, {
          "id": 3,
          "text": "34",
          "is_valid": false
        }, {
          "id": 4,
          "text": "36",
          "is_valid": false
        }
      ]
    }, {
      "id": 962,
      "text": "Quel était le numéro de maillot de Shaquille O'Neal aux Cleveland Cavaliers entre 2009 et 2010 ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "33",
          "is_valid": true
        }, {
          "id": 2,
          "text": "32",
          "is_valid": false
        }, {
          "id": 3,
          "text": "00",
          "is_valid": false
        }, {
          "id": 4,
          "text": "25",
          "is_valid": false
        }
      ]
    }, {
      "id": 963,
      "text": "Quel était le numéro de maillot de Shaquille O'Neal aux Boston Celtics en 2010-2011 ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "36",
          "is_valid": true
        }, {
          "id": 2,
          "text": "32",
          "is_valid": false
        }, {
          "id": 3,
          "text": "33",
          "is_valid": false
        }, {
          "id": 4,
          "text": "34",
          "is_valid": false
        }
      ]
    }, {
      "id": 964,
      "text": "Quel joueur de NBA a joué dans le film de Spike Lee \"He Got Game ?\"",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Ray Allen",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Kobe Bryant",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Michael Jordan",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Patrick Ewing",
          "is_valid": false
        }
      ]
    }, {
      "id": 965,
      "text": "Quel est le basketteur qui a battu en février 2011 le record du nombre de paniers à trois points réussis en NBA ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Ray Allen",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Reggie Miller",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Kobe Bryant",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Steve Kerr",
          "is_valid": false
        }
      ]
    }, {
      "id": 966,
      "text": "Combien de joueurs composent une équipe de cricket ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Cricket",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "11",
          "is_valid": true
        }, {
          "id": 2,
          "text": "5",
          "is_valid": false
        }, {
          "id": 3,
          "text": "7",
          "is_valid": false
        }, {
          "id": 4,
          "text": "9",
          "is_valid": false
        }
      ]
    }, {
      "id": 967,
      "text": "Combien de joueurs titulaires composent une équipe de water-polo ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Water-Polo",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "7",
          "is_valid": true
        }, {
          "id": 2,
          "text": "5",
          "is_valid": false
        }, {
          "id": 3,
          "text": "6",
          "is_valid": false
        }, {
          "id": 4,
          "text": "8",
          "is_valid": false
        }
      ]
    }, {
      "id": 968,
      "text": "Combien y-a-t-il au maximum de remplaçants dans une équipe de water-polo ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Water-Polo",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "6",
          "is_valid": true
        }, {
          "id": 2,
          "text": "3",
          "is_valid": false
        }, {
          "id": 3,
          "text": "4",
          "is_valid": false
        }, {
          "id": 4,
          "text": "5",
          "is_valid": false
        }
      ]
    }, {
      "id": 969,
      "text": "Quelle est la longueur d'une piste de curling ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Curling",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "42,07 m",
          "is_valid": true
        }, {
          "id": 2,
          "text": "25,12 m",
          "is_valid": false
        }, {
          "id": 3,
          "text": "36,53 m",
          "is_valid": false
        }, {
          "id": 4,
          "text": "50,11 m",
          "is_valid": false
        }
      ]
    }, {
      "id": 970,
      "text": "Quel est le poids maximum d'une pierre de curling ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Curling",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "19,96 kg",
          "is_valid": true
        }, {
          "id": 2,
          "text": "5,23 kg",
          "is_valid": false
        }, {
          "id": 3,
          "text": "11,22 kg",
          "is_valid": false
        }, {
          "id": 4,
          "text": "14,58 kg",
          "is_valid": false
        }
      ]
    }, {
      "id": 971,
      "text": "Combien y-a-t-il de joueurs dans une équipe de curling ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Curling",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "4",
          "is_valid": true
        }, {
          "id": 2,
          "text": "2",
          "is_valid": false
        }, {
          "id": 3,
          "text": "3",
          "is_valid": false
        }, {
          "id": 4,
          "text": "5",
          "is_valid": false
        }
      ]
    }, {
      "id": 972,
      "text": "Danq quel pays ont été instaurées, au début du XIXème siècle, les règles du curling ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Curling",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Canada",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Etats-Unis",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Allemagne",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Irlande",
          "is_valid": false
        }
      ]
    }, {
      "id": 973,
      "text": "En quelle année a été fondée la fédération internationale de curling (WCF) ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Curling",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "1966",
          "is_valid": true
        }, {
          "id": 2,
          "text": "1906",
          "is_valid": false
        }, {
          "id": 3,
          "text": "1926",
          "is_valid": false
        }, {
          "id": 4,
          "text": "1946",
          "is_valid": false
        }
      ]
    }, {
      "id": 974,
      "text": "Quel sport de raquettes est pratiqué par plus de 100 millions de personnes dans le monde ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Le badminton",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Le tennis de table",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Le squash",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Le racquet-ball",
          "is_valid": false
        }
      ]
    }, {
      "id": 975,
      "text": "Dans quel sport s'est illustré Arnold Palmer, surnommé \"The King\" ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Golf",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Voile",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Ski",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Boxe",
          "is_valid": false
        }
      ]
    }, {
      "id": 976,
      "text": "Quel est le sport national du Japon ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Sumo",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Baseball",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Judo",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Football",
          "is_valid": false
        }
      ]
    }, {
      "id": 977,
      "text": "Combien de joueurs titulaires composent une équipe masculine de crosse ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "La crosse",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "10",
          "is_valid": true
        }, {
          "id": 2,
          "text": "8",
          "is_valid": false
        }, {
          "id": 3,
          "text": "9",
          "is_valid": false
        }, {
          "id": 4,
          "text": "11",
          "is_valid": false
        }
      ]
    }, {
      "id": 978,
      "text": "En 61 combats, combien de défaites a concédées Mohamed Ali ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Boxe",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "5",
          "is_valid": true
        }, {
          "id": 2,
          "text": "0",
          "is_valid": false
        }, {
          "id": 3,
          "text": "1",
          "is_valid": false
        }, {
          "id": 4,
          "text": "10",
          "is_valid": false
        }
      ]
    }, {
      "id": 979,
      "text": "En combien de points se joue un set de tennis de table ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Tennis de table",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "11",
          "is_valid": true
        }, {
          "id": 2,
          "text": "21",
          "is_valid": false
        }, {
          "id": 3,
          "text": "7",
          "is_valid": false
        }, {
          "id": 4,
          "text": "15",
          "is_valid": false
        }
      ]
    }, {
      "id": 980,
      "text": "En gymnastique, quel nom porte le tapis posé sur le sol ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Gymnastique",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Le praticable",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Le tatami",
          "is_valid": false
        }, {
          "id": 3,
          "text": "La mousse",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Le court",
          "is_valid": false
        }
      ]
    }, {
      "id": 981,
      "text": "Dans quel sport a brillé le Canadien Mark Tewksbury ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Natation",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Voile",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Hockey-sur-glace",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Baseball",
          "is_valid": false
        }
      ]
    }, {
      "id": 982,
      "text": "Quel ancien nageur a annoncé publiquement son homosexualité en 1998 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Mark Tewksbury",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Mark Spitz",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Stéphan Caron",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Alexander Popov",
          "is_valid": false
        }
      ]
    }, {
      "id": 983,
      "text": "Dans quel sport l'Américain Andy Irons est-il devenu champion du monde à plusieurs reprises dans les années 2000 ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Surf",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Curling",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Voile",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Bobsleigh",
          "is_valid": false
        }
      ]
    }, {
      "id": 984,
      "text": "Quel sport a dominé Alexandre Kareline dans les années 90 ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Lutte gréco-romaine",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Haltérophilie",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Gymnastique",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Tir au pistolet",
          "is_valid": false
        }
      ]
    }, {
      "id": 985,
      "text": "Quelle est la nationalité du surfeur Mick Fanning ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Surf",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Australienne",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Américaine",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Canadienne",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Danoise",
          "is_valid": false
        }
      ]
    }, {
      "id": 986,
      "text": "Dans quel sport a brillé le Russe Pavel Bure ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Hockey-sur-glace",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Boxe",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Basket-ball",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Football américain",
          "is_valid": false
        }
      ]
    }, {
      "id": 987,
      "text": "Quel était le surnom du joueur de hockey-sur-glace Mario Lemieux ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Hockey sur glace",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Le Magnifique",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Le Meilleur",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Le Fou",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Le Divin",
          "is_valid": false
        }
      ]
    }, {
      "id": 988,
      "text": "Quel était le surnom du joueur de hockey-sur-glace Wayne Gretzky ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Hockey sur glace",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "La Merveille",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Le Magnifique",
          "is_valid": false
        }, {
          "id": 3,
          "text": "La Pépite",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Le Trésor",
          "is_valid": false
        }
      ]
    }, {
      "id": 989,
      "text": "Dans quel sport Maurice Richard a-t-il fait une carrière professionnelle ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Hockey-sur-glace",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Baseball",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Basket-ball",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Football américain",
          "is_valid": false
        }
      ]
    }, {
      "id": 990,
      "text": "Dans quel sport Guy Lafleur a-t-il fait une carrière professionnelle ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Hockey-sur-glace",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Baseball",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Basket-ball",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Football américain",
          "is_valid": false
        }
      ]
    }, {
      "id": 991,
      "text": "De quel pays est originaire l'athlète Kim Collins, champion du monde du 100 mètres en 2003 ? ",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Saint-Kitts-et-Nevis",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Trinidad-et-Tobago",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Jamaïque",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Panama",
          "is_valid": false
        }
      ]
    }, {
      "id": 992,
      "text": "En quelle année ont eu lieu les premiers championnats du monde de ski alpin?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Ski",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "1931",
          "is_valid": true
        }, {
          "id": 2,
          "text": "1950",
          "is_valid": false
        }, {
          "id": 3,
          "text": "1966",
          "is_valid": false
        }, {
          "id": 4,
          "text": "1972",
          "is_valid": false
        }
      ]
    }, {
      "id": 993,
      "text": "Où se sont disputés les les tous premiers championnats du monde de ski alpin ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Ski",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Mürren",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Innsbrück",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Saint-Moritz",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Chambéry",
          "is_valid": false
        }
      ]
    }, {
      "id": 994,
      "text": "Quelle est la nationalité de l'ancien skieur Gustav Thöni ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Ski",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Italienne",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Suédoise",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Norvégienne",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Danoise",
          "is_valid": false
        }
      ]
    }, {
      "id": 995,
      "text": "Qu'est-ce que la Perpinyane ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Une course à pied qui se dispute aux alentours de Perpignan",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Une régate qui a lieu annuellement entre Canet-en-Roussillon et Saint-Cyprien",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Une ânnesse qui fait office de mascotte du club de rugby de l'USAP",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Une danse sportive catalane",
          "is_valid": false
        }
      ]
    }, {
      "id": 996,
      "text": "En quelle année Matthew Webb a-t-il effectué la toute première traversée de la Manche à la nage ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Boxe",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "1875",
          "is_valid": true
        }, {
          "id": 2,
          "text": "1895",
          "is_valid": false
        }, {
          "id": 3,
          "text": "1905",
          "is_valid": false
        }, {
          "id": 4,
          "text": "1985",
          "is_valid": false
        }
      ]
    }, {
      "id": 997,
      "text": "Pourquoi Mohamed Ali a-t-il été destitué de son titre et interdit de boxer en 1975 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Boxe",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Pour avoir refusé d'effectuer son service militaire",
          "is_valid": true
        }, {
          "id": 2,
          "text": "En raison de sa condamnation pour excès de vitesse en état d'alcoolémie",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Parce qu'il avait été compromis dans une affaire de paris",
          "is_valid": false
        }, {
          "id": 4,
          "text": "En raison de sa conversion à l'Islam",
          "is_valid": false
        }
      ]
    }, {
      "id": 998,
      "text": "Qu'a inventé le docteur Gigoro Kano au Japon en 1882 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Le judo",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Le karaté",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Le kendo",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Le aïkido",
          "is_valid": false
        }
      ]
    }, {
      "id": 999,
      "text": "Quel athlète a détenu le record du monde du 100 mètres entre 1968 et 1983 ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Jim Hines",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Calvin Smith",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Tommy Smith",
          "is_valid": false
        }, {
          "id": 4,
          "text": "John Carlos",
          "is_valid": false
        }
      ]
    }, {
      "id": 1000,
      "text": "Quel athlète a détenu le record du monde du 100 mètres entre 1983 et 1987 ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Calvin Smith",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Carl Lewis",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Sam Graddy",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Ben Johnson",
          "is_valid": false
        }
      ]
    }, {
      "id": 1001,
      "text": "Quel athlète a détenu le record du monde du 100 mètres entre 1987 et 1991 ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Carl Lewis",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Lindford Christie",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Ben Johnson",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Bruno Marie-Rose",
          "is_valid": false
        }
      ]
    }, {
      "id": 1002,
      "text": "Quel athlète a battu le record du monde du 100 mètres le 14 juin 1991 à New York ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Leroy Burrell",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Lindford Christie",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Dennis Mitchell",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Francky Fredericks",
          "is_valid": false
        }
      ]
    }, {
      "id": 1003,
      "text": "Quel athlète a détenu le record du monde du 100 mètres entre 1996 et 1999 ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Donovan Bailey",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Ato Boldon",
          "is_valid": false
        }, {
          "id": 3,
          "text": "André Carson",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Francky Fredericks",
          "is_valid": false
        }
      ]
    }, {
      "id": 1004,
      "text": "Quel athlète a détenu le record du monde du 100 mètres entre 1999 et 2005 ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Maurice Greene",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Ato Boldon",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Donovan Bailey",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Asafa Powell",
          "is_valid": false
        }
      ]
    }, {
      "id": 1005,
      "text": "Quel athlète a détenu le record du monde du 100 mètres entre 2005 et 2008 ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Asafa Powell",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Maurice Greene",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Kim Collins",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Usain Bolt",
          "is_valid": false
        }
      ]
    }, {
      "id": 1006,
      "text": "Dans quelle ville Usain Bolt a-t-il battu pour la première fois le record du monde du 100 mètres ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "New York",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Berlin",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Pékin",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Saint-Denis",
          "is_valid": false
        }
      ]
    }, {
      "id": 1007,
      "text": "Quelle athlète a détenu le record du monde du 100 mètres entre 1968 et 1972 ? ",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Wyomia Tyus",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Barbara Ferrell",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Renate Stecher",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Inge Helten",
          "is_valid": false
        }
      ]
    }, {
      "id": 1008,
      "text": "Quelle athlète a détenu le record du monde du 100 mètres entre 1972 et 1976 ? ",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Renate Stecher",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Wyomia Tyus",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Barbara Ferrell",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Inge Helten",
          "is_valid": false
        }
      ]
    }, {
      "id": 1009,
      "text": "Quelle athlète a détenu le record du monde du 100 mètres entre 1977 et 1982 ? ",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Marlies Oelsner",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Marlies Göhr",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Evelyn Ashford",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Annegret Richter",
          "is_valid": false
        }
      ]
    }, {
      "id": 1010,
      "text": "Quelle athlète a détenu le record du monde du 100 mètres entre 1983 et 1988 ? ",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Evelyn Ashford",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Marita Koch",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Florence Griffith-Joyner",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Marlies Göhr",
          "is_valid": false
        }
      ]
    }, {
      "id": 1011,
      "text": "Où Florence Griffith-Joyner a-t-elle battu le record du monde du 100 mètres le 16 juillet 1988 ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Indianapolis",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Berlin",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Rome",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Séoul",
          "is_valid": false
        }
      ]
    }, {
      "id": 1012,
      "text": "Pour quel club de NBA Matt Walsh a-t-il disputé deux rencontres de saison régulière en  2005-2006 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Miami Heat",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Boston Celtics",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Los Angeles Lakers",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Portland Blazers",
          "is_valid": false
        }
      ]
    }, {
      "id": 1013,
      "text": "Quelle est la nationalité du basketteur Pops Mensah-Bonsu ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Britannique",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Américaine",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Canadienne",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Allemande",
          "is_valid": false
        }
      ]
    }, {
      "id": 1014,
      "text": "Originaire du Soudan, pour quelle équipe nationale joue le basketteur Luol Deng ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Britannique",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Chinoise",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Américaine",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Japonaise",
          "is_valid": false
        }
      ]
    }, {
      "id": 1015,
      "text": "Dans quel championnat évoluait le basketteur Ricky Davis avant de rejoindre Roanne en janvier 2011 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Chinois",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Français",
          "is_valid": false
        }, {
          "id": 3,
          "text": "NBA",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Mexicain",
          "is_valid": false
        }
      ]
    }, {
      "id": 1016,
      "text": "En NBA est appliquée la règle des... ",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "3 secondes défensives",
          "is_valid": true
        }, {
          "id": 2,
          "text": "2 secondes défensives",
          "is_valid": false
        }, {
          "id": 3,
          "text": "4 secondes défensives",
          "is_valid": false
        }, {
          "id": 4,
          "text": "5 secondes défensives",
          "is_valid": false
        }
      ]
    }, {
      "id": 1017,
      "text": "Quel record du monde du triple saut a établi Teddy Tamgho aux championnat d'Europe en salle en 2011 ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "17, 92 mètres",
          "is_valid": true
        }, {
          "id": 2,
          "text": "17, 88 mètres",
          "is_valid": false
        }, {
          "id": 3,
          "text": "17, 95 mètres",
          "is_valid": false
        }, {
          "id": 4,
          "text": "17, 98 mètres",
          "is_valid": false
        }
      ]
    }, {
      "id": 1018,
      "text": "Combien de marches de NBA avait disputé dans sa carrière Ricky Davis avant de signer à Roanne en 2011 ? ",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "736",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Aucun",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Un",
          "is_valid": false
        }, {
          "id": 4,
          "text": "68",
          "is_valid": false
        }
      ]
    }, {
      "id": 1019,
      "text": "Quelle barre a franchi le perchiste Renaud Lavillenie lors des championnats d'Europe en salle en 2011 ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "6,03 mètres",
          "is_valid": true
        }, {
          "id": 2,
          "text": "6,04 mètres",
          "is_valid": false
        }, {
          "id": 3,
          "text": "6,05 mètres",
          "is_valid": false
        }, {
          "id": 4,
          "text": "6,06 mètres",
          "is_valid": false
        }
      ]
    }, {
      "id": 1020,
      "text": "Quel boxeur a remporté les Gants d'Or 1987 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Boxe",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Freddy Skouma ",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Christophe Tiozzo",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Tusikoleta Nkalankete",
          "is_valid": false
        }, {
          "id": 4,
          "text": "René Jacquot",
          "is_valid": false
        }
      ]
    }, {
      "id": 1021,
      "text": "Quel boxeur a remporté les Gants d'Or 1988 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Boxe",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Tusikoleta Nkalankete",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Christophe Tiozzo",
          "is_valid": false
        }, {
          "id": 3,
          "text": "René Jacquot",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Gilbert Delé",
          "is_valid": false
        }
      ]
    }, {
      "id": 1022,
      "text": "Quel boxeur a remporté les Gants d'Or 1989 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Boxe",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "René Jacquot",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Christophe Tiozzo",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Anaclet Wamba",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Gilbert Delé",
          "is_valid": false
        }
      ]
    }, {
      "id": 1023,
      "text": "Quel boxeur a remporté les Gants d'Or 1990 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Boxe",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Christophe Tiozzo",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Fabrice Tiozzo",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Anaclet Wamba",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Gilbert Delé",
          "is_valid": false
        }
      ]
    }, {
      "id": 1024,
      "text": "Quel boxeur a remporté les Gants d'Or 1991 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Boxe",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Gilbert Delé",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Christophe Tiozzo",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Anaclet Wamba",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Laurent Boudouani ",
          "is_valid": false
        }
      ]
    }, {
      "id": 1025,
      "text": "Quel boxeur a remporté les Gants d'Or 1992 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Boxe",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Anaclet Wamba",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Christophe Tiozzo",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Fabrice Tiozzo",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Laurent Boudouani ",
          "is_valid": false
        }
      ]
    }, {
      "id": 1026,
      "text": "Quel boxeur a remporté les Gants d'Or 1993 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Boxe",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Laurent Boudouani",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Fabrice Tiozzo",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Khalid Rahilou",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Anaclet Wamba",
          "is_valid": false
        }
      ]
    }, {
      "id": 1027,
      "text": "Quel boxeur a remporté les Gants d'Or 1994 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Boxe",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Fabrice Tiozzo",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Khalid Rahilou",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Anaclet Wamba",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Laurent Boudouani ",
          "is_valid": false
        }
      ]
    }, {
      "id": 1028,
      "text": "Quel boxeur a remporté les Gants d'Or 1995 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Boxe",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Fabrice Tiozzo",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Khalid Rahilou",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Christophe Tiozzo",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Laurent Boudouani ",
          "is_valid": false
        }
      ]
    }, {
      "id": 1029,
      "text": "Quel boxeur a remporté les Gants d'Or 1996 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Boxe",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Laurent Boudouani ",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Mamadou Thiam",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Bruno Girard ",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Fabrice Tiozzo",
          "is_valid": false
        }
      ]
    }, {
      "id": 1030,
      "text": "Quel boxeur a remporté les Gants d'Or 1997 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Boxe",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Khalid Rahilou",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Mamadou Thiam",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Bruno Girard ",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Fabrice Tiozzo",
          "is_valid": false
        }
      ]
    }, {
      "id": 1031,
      "text": "Quel boxeur a remporté les Gants d'Or 1998 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Boxe",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Fabrice Tiozzo ",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Mamadou Thiam",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Bruno Girard ",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Julien Lorcy",
          "is_valid": false
        }
      ]
    }, {
      "id": 1032,
      "text": "Quel boxeur a remporté les Gants d'Or 1999 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Boxe",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Mamadou Thiam",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Mahyar Monshipour",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Bruno Girard ",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Julien Lorcy",
          "is_valid": false
        }
      ]
    }, {
      "id": 1033,
      "text": "Quel boxeur a remporté les Gants d'Or 2000 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Boxe",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Bruno Girard ",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Jean-Marc Mormeck",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Mahyar Monshipour",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Julien Lorcy",
          "is_valid": false
        }
      ]
    }, {
      "id": 1034,
      "text": "Quel boxeur a remporté les Gants d'Or 2001 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Boxe",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Julien Lorcy",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Jean-Marc Mormeck",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Mahyar Monshipour",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Bruno Girard ",
          "is_valid": false
        }
      ]
    }, {
      "id": 1035,
      "text": "Quel boxeur a remporté les Gants d'Or 2002 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Boxe",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Jean-Marc Mormeck",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Brahim Asloum",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Mahyar Monshipour",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Frédéric Klose",
          "is_valid": false
        }
      ]
    }, {
      "id": 1036,
      "text": "Quel boxeur a remporté les Gants d'Or 2003 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Boxe",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Mahyar Monshipour",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Jean-Marc Mormeck",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Brahim Asloum",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Frédéric Klose",
          "is_valid": false
        }
      ]
    }, {
      "id": 1037,
      "text": "Quel boxeur a remporté les Gants d'Or 2004 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Boxe",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Mahyar Monshipour",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Jean-Marc Mormeck",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Frédéric Klose",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Julien Lorcy",
          "is_valid": false
        }
      ]
    }, {
      "id": 1038,
      "text": "Quel boxeur a remporté les Gants d'Or 2005 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Boxe",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Jean-Marc Mormeck",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Frédéric Klose",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Brahim Asloum",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Mahyar Monshipour",
          "is_valid": false
        }
      ]
    }, {
      "id": 1039,
      "text": "Quel boxeur a remporté les Gants d'Or 2006 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Boxe",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Frédéric Klose",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Jean-Marc Mormeck",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Brahim Asloum",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Anthony Mezaache",
          "is_valid": false
        }
      ]
    }, {
      "id": 1040,
      "text": "Quel boxeur a remporté les Gants d'Or 2007 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Boxe",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Jean-Marc Mormeck",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Brahim Asloum",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Anthony Mezaache",
          "is_valid": false
        }, {
          "id": 4,
          "text": " Sofiane Takoucht",
          "is_valid": false
        }
      ]
    }, {
      "id": 1041,
      "text": "Quel boxeur a remporté les Gants d'Or 2008 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Boxe",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Brahim Asloum",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Anthony Mezaache",
          "is_valid": false
        }, {
          "id": 3,
          "text": " Sofiane Takoucht",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Jean-Marc Mormeck",
          "is_valid": false
        }
      ]
    }, {
      "id": 1042,
      "text": "Quel boxeur a remporté les Gants d'Or 2009 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Boxe",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Anthony Mezaache",
          "is_valid": true
        }, {
          "id": 2,
          "text": " Sofiane Takoucht",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Brahim Asloum",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Jean-Marc Mormeck",
          "is_valid": false
        }
      ]
    }, {
      "id": 1043,
      "text": "Quel boxeur a remporté les Gants d'Or 2010 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Boxe",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": " Sofiane Takoucht",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Jean-Marc Mormeck",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Anthony Mezaache",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Brahim Asloum",
          "is_valid": false
        }
      ]
    }, {
      "id": 1044,
      "text": "Où se sont disputés les championnats d'Europe d'athlétisme en salle en 2011 ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Athlétisme",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Paris",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Rome",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Budapest",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Barcelone",
          "is_valid": false
        }
      ]
    }, {
      "id": 1046,
      "text": "En 2005, quel skieur est sacré champion du monde de descente ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Ski",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Bode Miller",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Michael Walchhofer",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Hermann Maier",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Daron Rahlves",
          "is_valid": false
        }
      ]
    }, {
      "id": 1047,
      "text": "Lequel de ces skieurs n'a jamais été sacré champion du monde de descente ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Ski",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Luc Alphand",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Bode Miller",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Aksel Lund Svindal",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Pirmin Zürbriggen",
          "is_valid": false
        }
      ]
    }, {
      "id": 1048,
      "text": "Dans laquelle de ces épreuves Pirmin Zürbriggen n'a-t-il jamais été sacré champion du monde ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Ski",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Slalom",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Descente",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Super-G",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Géant",
          "is_valid": false
        }
      ]
    }, {
      "id": 1049,
      "text": "Lequel de ces Français n'a jamais été champion du monde de slalom ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Ski",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Julien Lizeroux",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Emile Allais",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Jean-Noël Augert",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Jean-Baptiste Grange",
          "is_valid": false
        }
      ]
    }, {
      "id": 1050,
      "text": "Où ont eu lieu les Championnats du monde de ski alpin en 2011 ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Ski",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Garmisch-Partenkirchen",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Val d'Isère",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Kitzbühel",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Oslo",
          "is_valid": false
        }
      ]
    }, {
      "id": 1051,
      "text": "Quelle skieuse française a remporté trois médailles d'or aux Championnats du monde en 1966 ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Ski",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Marielle Goitschel",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Christine Goitschel",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Annie Famose",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Fabienne Serrat",
          "is_valid": false
        }
      ]
    }, {
      "id": 1052,
      "text": "Quelle skieuse suisse a décroché 100 podiums en Coupe du monde et 6 médailles aux Championnats du monde au cours de sa carrière ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Ski",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Vreni Schneider",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Maria Walliser",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Erika Hess",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Sonja Nef",
          "is_valid": false
        }
      ]
    }, {
      "id": 1053,
      "text": "Quel est le nom de la mythique piste de descente de Wengen ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Ski",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "le Lauberhorn",
          "is_valid": true
        }, {
          "id": 2,
          "text": "la Streif",
          "is_valid": false
        }, {
          "id": 3,
          "text": "le Stelvio",
          "is_valid": false
        }, {
          "id": 4,
          "text": "la Saslong",
          "is_valid": false
        }
      ]
    }, {
      "id": 1054,
      "text": "Quel skieur a remporté le gros Globe de cristal de la Coupe du monde en 2010 ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Ski",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Carlo Janka",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Didier Cuche",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Bode Miller",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Benjamin Raich",
          "is_valid": false
        }
      ]
    }, {
      "id": 1055,
      "text": "En quelle année Alberto Tomba a-t-il remporté le gros Globe de cristal de la Coupe du monde ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Ski",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "1995",
          "is_valid": true
        }, {
          "id": 2,
          "text": "1987",
          "is_valid": false
        }, {
          "id": 3,
          "text": "1998",
          "is_valid": false
        }, {
          "id": 4,
          "text": "1991",
          "is_valid": false
        }
      ]
    }, {
      "id": 1056,
      "text": "Entre 1990 et 1992, quelle skieuse remporte trois fois d'affilée le gros Globe de cristal de la Coupe du monde ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Ski",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Petra Kronberger",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Vreni Schneider",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Katja Seizinger",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Anita Wachter",
          "is_valid": false
        }
      ]
    }, {
      "id": 1057,
      "text": "Près de quelle commune française se situe la piste de descente appelée \"Verte des Houches\" ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Ski",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Chamonix",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Morzine",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Courchevel",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Tignes",
          "is_valid": false
        }
      ]
    }, {
      "id": 1058,
      "text": "Avant Lindsey Vonn en 2008, quelle skieuse américaine avait remporté le gros Globe de cristal de la Coupe du monde ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Ski",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Tamara McKinney",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Picabo Street",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Julia Mancuso",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Christin Cooper",
          "is_valid": false
        }
      ]
    }, {
      "id": 1059,
      "text": "Laquelle de ces skieuses s'est imposée en Coupe du monde dans les cinq épreuves ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Ski",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Anja Paerson",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Vreni Schneider",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Renate Götschl",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Katja Seizinger",
          "is_valid": false
        }
      ]
    }, {
      "id": 1060,
      "text": "Dans quelle station s'ouvre tradionnellement la saison de ski alpin ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Ski",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Sölden",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Val d'Isère",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Kitzbühel",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Lake Louise",
          "is_valid": false
        }
      ]
    }, {
      "id": 1061,
      "text": "Dans quelle ville a eu lieu, en 2011, un slalom parallèle comptant pour la Coupe du monde de ski alpin ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Ski",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Munich",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Vienne",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Zurich",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Dubaï",
          "is_valid": false
        }
      ]
    }, {
      "id": 1062,
      "text": "En quelle année ont eu lieu les premiers Championnats du monde de biathlon ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Biathlon",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "1958",
          "is_valid": true
        }, {
          "id": 2,
          "text": "1930",
          "is_valid": false
        }, {
          "id": 3,
          "text": "1982",
          "is_valid": false
        }, {
          "id": 4,
          "text": "1970",
          "is_valid": false
        }
      ]
    }, {
      "id": 1063,
      "text": "Quelle est la distance maximale utilisée pour les épreuves de biathlon ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Biathlon",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "20 km",
          "is_valid": true
        }, {
          "id": 2,
          "text": "42,180 km",
          "is_valid": false
        }, {
          "id": 3,
          "text": "10 km",
          "is_valid": false
        }, {
          "id": 4,
          "text": "12,5 km",
          "is_valid": false
        }
      ]
    }, {
      "id": 1064,
      "text": "Quelle arme est utilisée pour les épreuves de biathlon ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Biathlon",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "une carabine 22 long rifle",
          "is_valid": true
        }, {
          "id": 2,
          "text": "un pistolet à air comprimé",
          "is_valid": false
        }, {
          "id": 3,
          "text": "un fusil à percussion",
          "is_valid": false
        }, {
          "id": 4,
          "text": "une arbalète",
          "is_valid": false
        }
      ]
    }, {
      "id": 1065,
      "text": "En biathlon, quelle est la longueur d'un anneau de pénalité ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Biathlon",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "150 m",
          "is_valid": true
        }, {
          "id": 2,
          "text": "1 km",
          "is_valid": false
        }, {
          "id": 3,
          "text": "500 m",
          "is_valid": false
        }, {
          "id": 4,
          "text": "50 m",
          "is_valid": false
        }
      ]
    }, {
      "id": 1066,
      "text": "En biathlon, à quelle distance sont disposées les cibles ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Biathlon",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "50 m",
          "is_valid": true
        }, {
          "id": 2,
          "text": "25 m",
          "is_valid": false
        }, {
          "id": 3,
          "text": "75 m",
          "is_valid": false
        }, {
          "id": 4,
          "text": "100 m",
          "is_valid": false
        }
      ]
    }, {
      "id": 1067,
      "text": "En biathlon, quel est le diamètre de la cible pour les tirs couchés ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Biathlon",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "45 mm",
          "is_valid": true
        }, {
          "id": 2,
          "text": "1 cm",
          "is_valid": false
        }, {
          "id": 3,
          "text": "2 cm",
          "is_valid": false
        }, {
          "id": 4,
          "text": "15 mm",
          "is_valid": false
        }
      ]
    }, {
      "id": 1068,
      "text": "En biathlon, quel est le diamètre de la cible pour les tirs debout ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Biathlon",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "115 mm",
          "is_valid": true
        }, {
          "id": 2,
          "text": "1 cm",
          "is_valid": false
        }, {
          "id": 3,
          "text": "2 cm",
          "is_valid": false
        }, {
          "id": 4,
          "text": "50 mm",
          "is_valid": false
        }
      ]
    }, {
      "id": 1069,
      "text": "En quelle matière est constituée le Globe destiné au vainqueur de la Coupe du monde de biathlon ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Biathlon",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Cristal",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Or",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Plomb",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Diamant",
          "is_valid": false
        }
      ]
    }, {
      "id": 1070,
      "text": "Quel biathlète français a remporté le gros Globe de la Coupe du monde en 1994 ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Biathlon",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Patrice Bailly-Salins",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Raphaël Poirée",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Simon Fourcade",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Jean-Pierre Amat",
          "is_valid": false
        }
      ]
    }, {
      "id": 1071,
      "text": "Quel biathlète français a remporté quatre fois le gros Globe de la Coupe du monde entre 2000 et 2004 ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Biathlon",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Raphaël Poirée",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Vincent Defrasne",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Martin Fourcade",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Vincent Jay",
          "is_valid": false
        }
      ]
    }, {
      "id": 1072,
      "text": "Quel biathlète est surnommé le cannibale ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Biathlon",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Ole-Einar Björndalen",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Raphaël Poirée",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Sven Fischer",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Sergej Tsjepikov",
          "is_valid": false
        }
      ]
    }, {
      "id": 1073,
      "text": "Quelle est la nationalité du biathlète Ole-Einar Björndalen ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Biathlon",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Norvégienne",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Finlandaise",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Suédoise",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Danoise",
          "is_valid": false
        }
      ]
    }, {
      "id": 1074,
      "text": "En 2009, laquelle des épreuves individuelles a échappé à Ole-Einar Björndalen lors des Championnats du monde de biathlon ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Biathlon",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Mass-Start",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Sprint ",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Poursuite",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Individuelle",
          "is_valid": false
        }
      ]
    }, {
      "id": 1075,
      "text": "En quelle année Ole-Einar Björndalen a-t-il remporté sa première médaille d'or aux Championnats du monde de biathlon ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Biathlon",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "1998",
          "is_valid": true
        }, {
          "id": 2,
          "text": "1996",
          "is_valid": false
        }, {
          "id": 3,
          "text": "2002",
          "is_valid": false
        }, {
          "id": 4,
          "text": "2000",
          "is_valid": false
        }
      ]
    }, {
      "id": 1076,
      "text": "Combien de petits Globes de cristal le biathlète Raphaël Poirée a-t-il remporté au cours de sa carrière ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Biathlon",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "10",
          "is_valid": true
        }, {
          "id": 2,
          "text": "5",
          "is_valid": false
        }, {
          "id": 3,
          "text": "15",
          "is_valid": false
        }, {
          "id": 4,
          "text": "20",
          "is_valid": false
        }
      ]
    }, {
      "id": 1077,
      "text": "Dans quelle épreuve Raphaël Poirée a-t-il décroché quatre médailles d'or aux Championnats du monde de biathlon ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Biathlon",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Mass-Start",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Poursuite",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Relais",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Sprint",
          "is_valid": false
        }
      ]
    }, {
      "id": 1078,
      "text": "En 2004, quel exploit a réalisé Raphaël Poirée lors des Championnats de biathlon ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Biathlon",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Il a remporté cinq médailles en cinq courses",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Il a réalisé un sans-faute au tir dans toutes les épreuves",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Il a pris un tour à Ole-Einar Björndalen dans l'épreuve de mass-start",
          "is_valid": false
        }, {
          "id": 4,
          "text": "En sprint, il a relégué le 2e à plus de cinq minutes",
          "is_valid": false
        }
      ]
    }, {
      "id": 1079,
      "text": "Combien de titres de champion du monde Raphaël Poirée a-t-il remporté au cours de sa carrière ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Biathlon",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "8",
          "is_valid": true
        }, {
          "id": 2,
          "text": "5",
          "is_valid": false
        }, {
          "id": 3,
          "text": "2",
          "is_valid": false
        }, {
          "id": 4,
          "text": "11",
          "is_valid": false
        }
      ]
    }, {
      "id": 1080,
      "text": "Quelle biathlète norvégienne a épousé Raphaël Poirée ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Biathlon",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Liv Grete Skjelbreid",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Gro Istad-Kristiansen",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Linda Tjorhöm",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Gunn Margit Andreassen",
          "is_valid": false
        }
      ]
    }, {
      "id": 1081,
      "text": "Combien de médailles olympiques le biathlète Raphaël Poirée a-t-il décroché au cours de sa carrière ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Biathlon",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "3",
          "is_valid": true
        }, {
          "id": 2,
          "text": "2",
          "is_valid": false
        }, {
          "id": 3,
          "text": "0",
          "is_valid": false
        }, {
          "id": 4,
          "text": "6",
          "is_valid": false
        }
      ]
    }, {
      "id": 1082,
      "text": "Combien de titres olympiques le biathlète Raphaël Poirée a-t-il décroché au cours de sa carrière ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Biathlon",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "0",
          "is_valid": true
        }, {
          "id": 2,
          "text": "1",
          "is_valid": false
        }, {
          "id": 3,
          "text": "2",
          "is_valid": false
        }, {
          "id": 4,
          "text": "3",
          "is_valid": false
        }
      ]
    }, {
      "id": 1083,
      "text": "En quelle année Raphaël Poirée a-t-il pris sa retraite comme biathlète de haut niveau ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Biathlon",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "2007",
          "is_valid": true
        }, {
          "id": 2,
          "text": "1997",
          "is_valid": false
        }, {
          "id": 3,
          "text": "1987",
          "is_valid": false
        }, {
          "id": 4,
          "text": "1977",
          "is_valid": false
        }
      ]
    }, {
      "id": 1084,
      "text": "Aux Championnats du monde 2001, lequel de ces biathlètes ne faisaient pas partie du relais français médaillé d'or ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Biathlon",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Simon Fourcade",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Julien Robert",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Vincent Defrasne",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Raphaël Poirée",
          "is_valid": false
        }
      ]
    }, {
      "id": 1085,
      "text": "Quelle biathlète française a remporté le gros Globe de cristal de la Coupe du monde en 2005 ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Biathlon",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Sandrine Bailly",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Corinne Niogret",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Anne Briand",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Marie-Laure Brunet",
          "is_valid": false
        }
      ]
    }, {
      "id": 1086,
      "text": "Quelle commune italienne accueille traditionnellement la Coupe du monde de biathlon ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Biathlon",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Anterselva",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Val Gardena",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Cortina di Ampezo",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Alta Badia",
          "is_valid": false
        }
      ]
    }, {
      "id": 1087,
      "text": "Dans quelle région du monde se trouve Kanty-Mansiysk, haut lieu du biathlon mondial ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Biathlon",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Sibérie",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Qatar",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Tyrol",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Rocheuses",
          "is_valid": false
        }
      ]
    }, {
      "id": 1088,
      "text": "Quelle biathlète française a remporté à deux reprises la médaille d'or aux Championnats du monde sur 15 km ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Biathlon",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Corinne Niogret",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Emmanuelle Claret",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Sandrine Bailly",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Florence Baverel",
          "is_valid": false
        }
      ]
    }, {
      "id": 1089,
      "text": "Aux Championnats du monde 2003 de biathlon, quel événement singulier a eu lieu dans l'épreuve de poursuite féminine ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Biathlon",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Deux médailles d'or ont été décernées",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Les cibles ont été rapprochées du pas de tir",
          "is_valid": false
        }, {
          "id": 3,
          "text": "La gagnante était enceinte",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Seules quatre biathlètes ont fini l'épreuve",
          "is_valid": false
        }
      ]
    }, {
      "id": 1090,
      "text": "En quelle année l'épreuve du relais mixte a-t-elle intégré le programme des Championnats du monde de biathlon ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Biathlon",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "2005",
          "is_valid": true
        }, {
          "id": 2,
          "text": "1958",
          "is_valid": false
        }, {
          "id": 3,
          "text": "1988",
          "is_valid": false
        }, {
          "id": 4,
          "text": "1995",
          "is_valid": false
        }
      ]
    }, {
      "id": 1091,
      "text": "Aux Championnats du monde de biathlon, quel pays a remporté le relais féminin par huit fois d'affilée entre 1984 et 1991 ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Biathlon",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "L'Union soviétique",
          "is_valid": true
        }, {
          "id": 2,
          "text": "La République démocratique allemande",
          "is_valid": false
        }, {
          "id": 3,
          "text": "La Norvège",
          "is_valid": false
        }, {
          "id": 4,
          "text": "La France",
          "is_valid": false
        }
      ]
    }, {
      "id": 1092,
      "text": "Quelle biathlète française a remporté trois médailles d'argent aux Championnats du monde en 2007 ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Biathlon",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Florence Baverel",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Sandrine Bailly",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Sylvie Becaert",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Marie-Laure Brunet",
          "is_valid": false
        }
      ]
    }, {
      "id": 1093,
      "text": "Quelle biathlète allemande a remporté huit médailles d'or aux Championnats du monde entre 1992 et 2005 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Biathlon",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Uschi Disl",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Kati Wilhelm",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Katrin Appel",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Magdalena Neuner",
          "is_valid": false
        }
      ]
    }, {
      "id": 1094,
      "text": "Laquelle de ces figures n'est pas autorisée dans les épreuves de patinage artistique ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Patinage artistique",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Le saut périlleux",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Le Salchow",
          "is_valid": false
        }, {
          "id": 3,
          "text": "L'Axel",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Le saut de valse",
          "is_valid": false
        }
      ]
    }, {
      "id": 1095,
      "text": "En quelle année ont eu lieu les premiers Championnats du monde de patinage artistique ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Patinage artistique",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "1896",
          "is_valid": true
        }, {
          "id": 2,
          "text": "1920",
          "is_valid": false
        }, {
          "id": 3,
          "text": "1850",
          "is_valid": false
        }, {
          "id": 4,
          "text": "1902",
          "is_valid": false
        }
      ]
    }, {
      "id": 1096,
      "text": "En patinage artistique, quel est le seul saut exécuté en partant de l'avant ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Patinage artistique",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "L'Axel",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Le Lutz",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Le Rittberger",
          "is_valid": false
        }, {
          "id": 4,
          "text": "le Flip",
          "is_valid": false
        }
      ]
    }, {
      "id": 1097,
      "text": "Quel est le premier patineur à avoir exécuté un quadruple saut  en compétition ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Patinage artistique",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Kurt Browning",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Philippe Candeloro",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Axel Paulsen",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Elvis Stojko",
          "is_valid": false
        }
      ]
    }, {
      "id": 1098,
      "text": "Quel patineur a remporté 10 titres de champion du monde et 9 titres de champion d'Europe dans l'épreuve individuelle ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Patinage artistique",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Ulrich Salchow",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Alain Calmat",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Alexei Yagudin",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Robin Cousins",
          "is_valid": false
        }
      ]
    }, {
      "id": 1099,
      "text": "Quel patineur fut champion du monde dans l'épreuve individuelle en 2005 et 2006 ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Patinage artistique",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Stéphane Lambiel",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Alexei Yagudin",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Evgeni Plushenko",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Brian Joubert",
          "is_valid": false
        }
      ]
    }, {
      "id": 1100,
      "text": "Qui fut le premier patineur français à remporter le titre mondial dans l'épreuve individuelle masculine de patinage artistique ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Patinage artistique",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Alain Giletti",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Alain Calmat",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Philippe Candeloro",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Brian Joubert",
          "is_valid": false
        }
      ]
    }, {
      "id": 1101,
      "text": "Quel était le lien familial entre Isabelle et Paul Duchesnay ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Patinage artistique",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "frère et sœur",
          "is_valid": true
        }, {
          "id": 2,
          "text": "cousin et cousine",
          "is_valid": false
        }, {
          "id": 3,
          "text": "mari et femme",
          "is_valid": false
        }, {
          "id": 4,
          "text": "beau-frère et belle-sœur",
          "is_valid": false
        }
      ]
    }, {
      "id": 1102,
      "text": "Quel patineur fut champion du monde dans l'épreuve individuelle en 1986 et 1988 ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Patinage artistique",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Brian Boitano",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Brian Orser",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Brian Joubert",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Brian Hamilton",
          "is_valid": false
        }
      ]
    }, {
      "id": 1103,
      "text": "Lequel de ces programmes n'a jamais été interprété par Philippe Candeloro ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Patinage artistique",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Don Juan",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Lucky Luke",
          "is_valid": false
        }, {
          "id": 3,
          "text": "D'Artagnan",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Le Parrain",
          "is_valid": false
        }
      ]
    }, {
      "id": 1104,
      "text": "Quel patineur russe a décroché trois titres mondiaux d'affilée dans l'épreuve individuelle entre 1998 et 2000 ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Patinage artistique",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Alexei Yagudin",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Evgeni Plushenko",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Viktor Petrenko",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Maxim Marinin",
          "is_valid": false
        }
      ]
    }, {
      "id": 1105,
      "text": "Quel patineuse a remporté 10 titres mondiaux dans l'épreuve individuelle ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Patinage artistique",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Sonja Henie",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Katarina Witt",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Michelle Kwan",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Herma Szabo",
          "is_valid": false
        }
      ]
    }, {
      "id": 1106,
      "text": "Quelle était la nationalité de la patineuse Sonja Henie ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Patinage artistique",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Norvégienne",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Américaine",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Allemande",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Hongroise",
          "is_valid": false
        }
      ]
    }, {
      "id": 1107,
      "text": "Quelle était la nationalité de la patineuse Michelle Kwan ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Patinage artistique",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Américaine",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Japonaise",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Sud-Coréenne",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Britannique",
          "is_valid": false
        }
      ]
    }, {
      "id": 1108,
      "text": "En quelle année ont été créés les Championnats du monde de natation en grand bassin ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "1973",
          "is_valid": true
        }, {
          "id": 2,
          "text": "1953",
          "is_valid": false
        }, {
          "id": 3,
          "text": "1993",
          "is_valid": false
        }, {
          "id": 4,
          "text": "1933",
          "is_valid": false
        }
      ]
    }, {
      "id": 1109,
      "text": "Laquelle de ces nages n'est pas pratiquée aux Championnats du monde ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "la nage indienne",
          "is_valid": true
        }, {
          "id": 2,
          "text": "le dos crawlé",
          "is_valid": false
        }, {
          "id": 3,
          "text": "la brasse",
          "is_valid": false
        }, {
          "id": 4,
          "text": "le papillon",
          "is_valid": false
        }
      ]
    }, {
      "id": 1110,
      "text": "Quel est la longueur d'un grand bassin de natation ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "50 mètres",
          "is_valid": true
        }, {
          "id": 2,
          "text": "40 mètres",
          "is_valid": false
        }, {
          "id": 3,
          "text": "30 mètres ",
          "is_valid": false
        }, {
          "id": 4,
          "text": "60 mètres",
          "is_valid": false
        }
      ]
    }, {
      "id": 1111,
      "text": "Quel est la longueur d'un petit bassin de natation ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "25 mètres",
          "is_valid": true
        }, {
          "id": 2,
          "text": "15 mètres",
          "is_valid": false
        }, {
          "id": 3,
          "text": "35 mètres",
          "is_valid": false
        }, {
          "id": 4,
          "text": "45 mètres",
          "is_valid": false
        }
      ]
    }, {
      "id": 1112,
      "text": "Dans quelle ville ont eu lieu les Championnats du monde de natation en grand bassin en 2009 ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Rome",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Doha",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Barcelone",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Budapest",
          "is_valid": false
        }
      ]
    }, {
      "id": 1113,
      "text": "Dans quelle ville ont eu lieu les Championnats du monde de natation en grand bassin en 2007 ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Melbourne",
          "is_valid": true
        }, {
          "id": 2,
          "text": "New York",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Londres",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Tokyo",
          "is_valid": false
        }
      ]
    }, {
      "id": 1114,
      "text": "Dans quelle ville ont eu lieu les Championnats du monde de natation en grand bassin en 2005 ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Montréal",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Paris",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Pékin",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Moscou",
          "is_valid": false
        }
      ]
    }, {
      "id": 1115,
      "text": "Dans quelle ville ont eu lieu les Championnats du monde de natation en grand bassin en 2003 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Barcelone",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Stokholm",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Le Cap",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Buenos Aires",
          "is_valid": false
        }
      ]
    }, {
      "id": 1116,
      "text": "Dans quelle ville ont eu lieu les Championnats du monde de natation en grand bassin en 2001 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Fukuoka",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Madrid",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Sydney",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Saint-Pétersbourg",
          "is_valid": false
        }
      ]
    }, {
      "id": 1117,
      "text": "Dans quelle ville ont eu lieu les Championnats du monde de natation en grand bassin en 1998 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Perth",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Lyon",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Séville",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Edimbourg",
          "is_valid": false
        }
      ]
    }, {
      "id": 1118,
      "text": "Combien de médailles mondiales le nageur Alexander Popov a-t-il décroché au cours de sa carrière ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "11",
          "is_valid": true
        }, {
          "id": 2,
          "text": "3",
          "is_valid": false
        }, {
          "id": 3,
          "text": "7",
          "is_valid": false
        }, {
          "id": 4,
          "text": "19",
          "is_valid": false
        }
      ]
    }, {
      "id": 1119,
      "text": "Combien de médailles mondiales le nageur Matt Biondi a-t-il décroché au cours de sa carrière ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "11",
          "is_valid": true
        }, {
          "id": 2,
          "text": "8",
          "is_valid": false
        }, {
          "id": 3,
          "text": "22",
          "is_valid": false
        }, {
          "id": 4,
          "text": "2",
          "is_valid": false
        }
      ]
    }, {
      "id": 1120,
      "text": "Quelle était la nationalité du nageur Matt Biondi ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Américaine",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Italienne",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Canadienne",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Suisse",
          "is_valid": false
        }
      ]
    }, {
      "id": 1121,
      "text": "Quel était le surnom du nageur Matt Biondi ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "La Torpille de Moraga",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Le Requin de Palo Alto",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Le Glouton de Californie",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Le Sous-Marin du Pacifique",
          "is_valid": false
        }
      ]
    }, {
      "id": 1122,
      "text": "Quel était le surnom du nageur Alexander Popov ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Le Tsar",
          "is_valid": true
        }, {
          "id": 2,
          "text": "La locomotive russe",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Le Raspoutine du crawl",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Le Soviet Suprême",
          "is_valid": false
        }
      ]
    }, {
      "id": 1123,
      "text": "Quel était la spécialité du nageur Alexander Popov ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Le crawl",
          "is_valid": true
        }, {
          "id": 2,
          "text": "la brasse",
          "is_valid": false
        }, {
          "id": 3,
          "text": "le papillon",
          "is_valid": false
        }, {
          "id": 4,
          "text": "la nage indienne",
          "is_valid": false
        }
      ]
    }, {
      "id": 1124,
      "text": "Quel est le premier homme à avoir nagé le 100 m nage libre (grand bassin) en moins d'une minute ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Johnny Weissmuller",
          "is_valid": true
        }, {
          "id": 2,
          "text": "John Devitt",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Alain Bernard",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Alex Jany",
          "is_valid": false
        }
      ]
    }, {
      "id": 1125,
      "text": "Quel est le premier homme à avoir nagé le 100 m nage libre (grand bassin) en moins de 50 secondes ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Jim Montgomery",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Mark Spitz",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Frédérik Bousquet",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Matt Biondi",
          "is_valid": false
        }
      ]
    }, {
      "id": 1126,
      "text": "Quel est le premier homme à avoir nagé le 100 m nage libre (grand bassin) en moins de 48 secondes ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Pieter van den Hoogenband",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Alexander Popov",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Yannick Agnel",
          "is_valid": false
        }, {
          "id": 4,
          "text": "César Cielo",
          "is_valid": false
        }
      ]
    }, {
      "id": 1127,
      "text": "Quel est le premier homme à avoir nagé le 50 m nage libre (grand bassin) en moins de 22 secondes ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Tom Jager",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Matt Biondi",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Amaury Leveaux",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Alexander Popov",
          "is_valid": false
        }
      ]
    }, {
      "id": 1128,
      "text": "Quel est le premier homme à avoir nagé le 50 m nage libre (grand bassin) en moins de 21 secondes ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Frédérik Bousquet",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Alain Bernard",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Fabien Gilot",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Amaury Leveaux",
          "is_valid": false
        }
      ]
    }, {
      "id": 1129,
      "text": "Quelle est la première femme à avoir nagé le 100 m nage libre (grand bassin) en moins d'une minute ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Dawn Fraser",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Christine Caron",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Kristin Otto",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Helene Madison",
          "is_valid": false
        }
      ]
    }, {
      "id": 1130,
      "text": "Quelle est la première femme à avoir nagé le 100 m nage libre (grand bassin) en moins de 55 secondes ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Barbara Krause",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Inge de Bruijn",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Shane Gould",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Kornelia Ender",
          "is_valid": false
        }
      ]
    }, {
      "id": 1131,
      "text": "Dans quelle épreuve Michel Rousseau a-t-il décroché une médaille d'argent aux Championnats du monde de natation (grand bassin) en 1973 ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "100 m nage libre",
          "is_valid": true
        }, {
          "id": 2,
          "text": "200 m brasse",
          "is_valid": false
        }, {
          "id": 3,
          "text": "400 m 4 nages",
          "is_valid": false
        }, {
          "id": 4,
          "text": "1500 m nage libre",
          "is_valid": false
        }
      ]
    }, {
      "id": 1132,
      "text": "Dans quelle épreuve Stéphan Caron a-t-il décroché une médaille d'argent aux Championnats du monde de natation (grand bassin) en 1986 ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "100 m nage libre",
          "is_valid": true
        }, {
          "id": 2,
          "text": "50 m nage libre",
          "is_valid": false
        }, {
          "id": 3,
          "text": "200 m nage libre",
          "is_valid": false
        }, {
          "id": 4,
          "text": "400 m nage libre",
          "is_valid": false
        }
      ]
    }, {
      "id": 1133,
      "text": "A l'occasion de quels Championnats du monde Pieter van den Hoogenband a-t-il décroché sa première médaille en grand bassin ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "1998",
          "is_valid": true
        }, {
          "id": 2,
          "text": "1994",
          "is_valid": false
        }, {
          "id": 3,
          "text": "2001",
          "is_valid": false
        }, {
          "id": 4,
          "text": "2003",
          "is_valid": false
        }
      ]
    }, {
      "id": 1134,
      "text": "A l'occasion de quels Championnats du monde Michael Phelps a-t-il décroché sa première médaille en grand bassin ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "2001",
          "is_valid": true
        }, {
          "id": 2,
          "text": "1998",
          "is_valid": false
        }, {
          "id": 3,
          "text": "2003",
          "is_valid": false
        }, {
          "id": 4,
          "text": "2005",
          "is_valid": false
        }
      ]
    }, {
      "id": 1135,
      "text": "De quelle nationalité était le nageur Michael Gross ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Allemand",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Autrichien",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Américain",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Canadien",
          "is_valid": false
        }
      ]
    }, {
      "id": 1136,
      "text": "Quel était le surnom du nageur  Michael Gross ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "l'Albatros",
          "is_valid": true
        }, {
          "id": 2,
          "text": "le Goéland",
          "is_valid": false
        }, {
          "id": 3,
          "text": "l'Aigle",
          "is_valid": false
        }, {
          "id": 4,
          "text": "l'Epervier",
          "is_valid": false
        }
      ]
    }, {
      "id": 1137,
      "text": "Quel Français décrocha la médaille d'argent sur 200 m papillon aux Championnats du monde de natation en 1998 ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Franck Esposito",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Stéphan Caron",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Hugues Duboscq",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Romain Barnier",
          "is_valid": false
        }
      ]
    }, {
      "id": 1138,
      "text": "Dans quel club le nageur Franck Esposito a-t-il fait l'essentiel de sa carrière ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "CN Antibes",
          "is_valid": true
        }, {
          "id": 2,
          "text": "CN Marseille",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Racing Club de France",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Dauphins du TOEC",
          "is_valid": false
        }
      ]
    }, {
      "id": 1139,
      "text": "Combien de médailles le nageur Franck Esposito a-t-il décroché au cours de sa carrière lors des Championnats d'Europe en grand bassin ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "9",
          "is_valid": true
        }, {
          "id": 2,
          "text": "7",
          "is_valid": false
        }, {
          "id": 3,
          "text": "5",
          "is_valid": false
        }, {
          "id": 4,
          "text": "3",
          "is_valid": false
        }
      ]
    }, {
      "id": 1140,
      "text": "Dans quelle nage Xavier Marchand a-t-il décroché une médaille d'argent aux Championnats du monde de natation (grand bassin) en 1998 ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "200 m 4 nages",
          "is_valid": true
        }, {
          "id": 2,
          "text": "200 m brasse",
          "is_valid": false
        }, {
          "id": 3,
          "text": "200 m brasse",
          "is_valid": false
        }, {
          "id": 4,
          "text": "200 m dos",
          "is_valid": false
        }
      ]
    }, {
      "id": 1141,
      "text": "Sur 200 m 4 nages ou sur 400 m 4 nages, par quelle nage débute la course ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "papillon",
          "is_valid": true
        }, {
          "id": 2,
          "text": "dos",
          "is_valid": false
        }, {
          "id": 3,
          "text": "nage libre",
          "is_valid": false
        }, {
          "id": 4,
          "text": "brasse",
          "is_valid": false
        }
      ]
    }, {
      "id": 1142,
      "text": "Sur 200 m 4 nages ou sur 400 m 4 nages, par quelle nage finit la course ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "nage libre",
          "is_valid": true
        }, {
          "id": 2,
          "text": "papillon",
          "is_valid": false
        }, {
          "id": 3,
          "text": "dos",
          "is_valid": false
        }, {
          "id": 4,
          "text": "brasse",
          "is_valid": false
        }
      ]
    }, {
      "id": 1143,
      "text": "Sur le relais 4x100 m 4 nages, par quelle nage débute la course ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "dos",
          "is_valid": true
        }, {
          "id": 2,
          "text": "papillon",
          "is_valid": false
        }, {
          "id": 3,
          "text": "nage libre",
          "is_valid": false
        }, {
          "id": 4,
          "text": "dos",
          "is_valid": false
        }
      ]
    }, {
      "id": 1144,
      "text": "Dans quelle épreuve Simon Dufour a-t-il décroché une médaille de bronze aux Championnats du monde de natation (grand bassin) en 2003 ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "200 m dos",
          "is_valid": true
        }, {
          "id": 2,
          "text": "800 m nage libre",
          "is_valid": false
        }, {
          "id": 3,
          "text": "400 m 4 nages",
          "is_valid": false
        }, {
          "id": 4,
          "text": "50 m brasse",
          "is_valid": false
        }
      ]
    }, {
      "id": 1145,
      "text": "Dans quelle nage s'est illustré l'Américain Ian Crocker ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "papillon",
          "is_valid": true
        }, {
          "id": 2,
          "text": "dos",
          "is_valid": false
        }, {
          "id": 3,
          "text": "brasse",
          "is_valid": false
        }, {
          "id": 4,
          "text": "crawl",
          "is_valid": false
        }
      ]
    }, {
      "id": 1146,
      "text": "Quelle était la nationalité du nageur Norbert Rosza ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Hongrois",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Tchèque",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Belge",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Néerlandais",
          "is_valid": false
        }
      ]
    }, {
      "id": 1147,
      "text": "Dans quelle nage s'est illustré l'Américain Lenny Krayzelburg ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "dos",
          "is_valid": true
        }, {
          "id": 2,
          "text": "papillon",
          "is_valid": false
        }, {
          "id": 3,
          "text": "crawl",
          "is_valid": false
        }, {
          "id": 4,
          "text": "brasse",
          "is_valid": false
        }
      ]
    }, {
      "id": 1148,
      "text": "Dans quelle nage s'est illustré l'Américain Mike Barrowman ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "brasse",
          "is_valid": true
        }, {
          "id": 2,
          "text": "dos",
          "is_valid": false
        }, {
          "id": 3,
          "text": "papillon",
          "is_valid": false
        }, {
          "id": 4,
          "text": "crawl",
          "is_valid": false
        }
      ]
    }, {
      "id": 1149,
      "text": "Quelle est la nationalité de la nageuse Inge de Bruijn ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Néerlandaise",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Sud-Africaine",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Belge",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Américaine",
          "is_valid": false
        }
      ]
    }, {
      "id": 1150,
      "text": "Quelle est la nationalité de la nageuse Jana Klotchkova ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Ukrainienne",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Biélorusse",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Russe",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Lettone",
          "is_valid": false
        }
      ]
    }, {
      "id": 1151,
      "text": "A l'occasion de quels Championnats du monde (grand bassin), la nageuse Catherine Plewinski a-t-elle décroché trois médailles ? ",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "1991",
          "is_valid": true
        }, {
          "id": 2,
          "text": "1994",
          "is_valid": false
        }, {
          "id": 3,
          "text": "1998",
          "is_valid": false
        }, {
          "id": 4,
          "text": "1986",
          "is_valid": false
        }
      ]
    }, {
      "id": 1152,
      "text": "Dans quel club la nageuse Solenne Figuès a-t-elle fait l'essentiel de sa carrière ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Dauphins du TOEC",
          "is_valid": true
        }, {
          "id": 2,
          "text": "CN Marseille",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Mulhouse ON",
          "is_valid": false
        }, {
          "id": 4,
          "text": "CS Clichy",
          "is_valid": false
        }
      ]
    }, {
      "id": 1153,
      "text": "En quelle année Solenne Figuès a-t-elle été sacrée championne du monde de natation (grand bassin) ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "2005",
          "is_valid": true
        }, {
          "id": 2,
          "text": "2003",
          "is_valid": false
        }, {
          "id": 3,
          "text": "2001",
          "is_valid": false
        }, {
          "id": 4,
          "text": "2007",
          "is_valid": false
        }
      ]
    }, {
      "id": 1154,
      "text": "Dans quelle épreuve Solenne Figuès a-t-elle été sacrée championne du monde de natation (grand bassin) ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "200 m nage libre",
          "is_valid": true
        }, {
          "id": 2,
          "text": "200 m 4 nages",
          "is_valid": false
        }, {
          "id": 3,
          "text": "200 m brasse",
          "is_valid": false
        }, {
          "id": 4,
          "text": "200 m papillon",
          "is_valid": false
        }
      ]
    }, {
      "id": 1155,
      "text": "Avant de devenir Française, quelle était la nationalité de la nageuse Alena Popchanka ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Biélorusse",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Lituanienne",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Tchèque",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Bulgare",
          "is_valid": false
        }
      ]
    }, {
      "id": 1156,
      "text": "Dans quelle épreuve Alena Popchanka a-t-elle été sacrée championne du monde de natation (grand bassin) ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "200 m nage libre",
          "is_valid": true
        }, {
          "id": 2,
          "text": "400 m 4 nages",
          "is_valid": false
        }, {
          "id": 3,
          "text": "100 m dos",
          "is_valid": false
        }, {
          "id": 4,
          "text": "50 m paillon",
          "is_valid": false
        }
      ]
    }, {
      "id": 1157,
      "text": "En quelle année Alena Popchanka a-t-elle été sacrée championne du monde de natation (grand bassin) ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "2003",
          "is_valid": true
        }, {
          "id": 2,
          "text": "2001",
          "is_valid": false
        }, {
          "id": 3,
          "text": "2005",
          "is_valid": false
        }, {
          "id": 4,
          "text": "2007",
          "is_valid": false
        }
      ]
    }, {
      "id": 1158,
      "text": "Avec quel entraîneur les Chicago Bulls ont-ils remporté leur titre de champion NBA en 1991 ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Phil Jackson",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Lenny Wilkens",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Jerry Sloan",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Red Auerbach",
          "is_valid": false
        }
      ]
    }, {
      "id": 1159,
      "text": "Avec quel entraîneur les Los Angeles Lakers ont-ils remporté le titre de champion NBA en 2010 ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Phil Jackson",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Doc Rivers",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Jerry Sloan",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Pat Riley",
          "is_valid": false
        }
      ]
    }, {
      "id": 1160,
      "text": "Avec quel entraîneur les Boston Celtics ont-ils remporté le titre de champion en 2008 ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Doc Rivers",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Red Auerbach",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Nate McMillan",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Bill Russell",
          "is_valid": false
        }
      ]
    }, {
      "id": 1161,
      "text": "Dans quelle franchise de MLB Hank Aaron a-t-il évolué le plus longtemps au cours de sa carrière ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Baseball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Atlanta Braves",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Milwaukee Brewers",
          "is_valid": false
        }, {
          "id": 3,
          "text": "San Francisco Giants",
          "is_valid": false
        }, {
          "id": 4,
          "text": "New York Yankees",
          "is_valid": false
        }
      ]
    }, {
      "id": 1162,
      "text": "Dans quelle franchise de MLB Babe Ruth a-t-il évolué entre 1920 et 1934 ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Baseball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "New York Yankees",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Boston Red Sox",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Boston Braves",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Brooklyn Dodgers",
          "is_valid": false
        }
      ]
    }, {
      "id": 1163,
      "text": "Pour quelle raison Pete Rose a-t-il été banni à vie de la Major League Baseball ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Baseball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Pour avoir parié sur des rencontres de son équipe",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Pour avoir révélé s'être dopé au cours de sa carrière",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Pour avoir provoqué de multiples rixes au cours de sa carrière",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Pour avoir organisé un trafic de combats de chiens",
          "is_valid": false
        }
      ]
    }, {
      "id": 1164,
      "text": "Quelle franchise détient le record de titres dans les sports américains (NBA, NHL, NFL et MLB) ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Sports US",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "New York Yankees",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Los Angeles Lakers",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Canadiens de Montreal",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Boston Celtics",
          "is_valid": false
        }
      ]
    }, {
      "id": 1165,
      "text": "A combien s'est porté le nombre de titres des New York Yankees lors de leur succès en 2009 ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Baseball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "27",
          "is_valid": true
        }, {
          "id": 2,
          "text": "29",
          "is_valid": false
        }, {
          "id": 3,
          "text": "25",
          "is_valid": false
        }, {
          "id": 4,
          "text": "17",
          "is_valid": false
        }
      ]
    }, {
      "id": 1166,
      "text": "En 2006, Ryan Howard a remporté le titre de meilleur joueur de la National League en Major League Baseball. Avec quelle équipe ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Baseball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Philadelphie Phillies",
          "is_valid": true
        }, {
          "id": 2,
          "text": "New York Mets",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Los Angeles Dodgers",
          "is_valid": false
        }, {
          "id": 4,
          "text": "San Francisco Giants",
          "is_valid": false
        }
      ]
    }, {
      "id": 1167,
      "text": "Le logo de la NBA utilise la silhouette de quel ancien joueur de basket ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Jerry West",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Michael Jordan",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Pete Maravic",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Elgin Baylor",
          "is_valid": false
        }
      ]
    }, {
      "id": 1168,
      "text": "Quel est le prénom de Magic Johnson ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Earvin",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Kévin",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Michael",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Eddie",
          "is_valid": false
        }
      ]
    }, {
      "id": 1169,
      "text": "Qui était le premier commissionner (président) de la NBA en 1946 ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Maurice Podoloff",
          "is_valid": true
        }, {
          "id": 2,
          "text": "David Stern",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Walter Kennedy",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Larry O'Brien",
          "is_valid": false
        }
      ]
    }, {
      "id": 1170,
      "text": "Qui est le commissionner (président) de la NBA depuis 1984 ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "David Stern",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Maurice Podoloff",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Walter Kennedy",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Larry O'Brien",
          "is_valid": false
        }
      ]
    }, {
      "id": 1171,
      "text": "A qui a succédé David Stern au poste de commissionner (président) de la NBA ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Larry O'Brien",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Maurice Podoloff",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Walter Kennedy",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Roger Goodell",
          "is_valid": false
        }
      ]
    }, {
      "id": 1172,
      "text": "Quel nom porte le trophée de MVP (meilleur joueur) de la NBA ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Trophée Maurice Podoloff",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Trophée Larry O'Brien",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Trophée Oscar Robertson",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Trophée Lew Alcindor",
          "is_valid": false
        }
      ]
    }, {
      "id": 1173,
      "text": "Combien de titres de MVP de la saison (meilleur joueur) a comptabilisé Kareem Abdul Jabbar au cours de sa carrière ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "6",
          "is_valid": true
        }, {
          "id": 2,
          "text": "5",
          "is_valid": false
        }, {
          "id": 3,
          "text": "4",
          "is_valid": false
        }, {
          "id": 4,
          "text": "8",
          "is_valid": false
        }
      ]
    }, {
      "id": 1174,
      "text": "Quel joueur de NBA n'a jamais remporté le titre de MVP (meilleur joueur) de la saison régulière ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "John Stockton",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Karl Malone",
          "is_valid": false
        }, {
          "id": 3,
          "text": "David Robinson",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Charles Barkley",
          "is_valid": false
        }
      ]
    }, {
      "id": 1175,
      "text": "Lequel de ces joueurs faisait partie de la Dream Team de basket aux Jeux Olympiques de 1992 ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Christian Laettner",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Grant Hill",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Shaquille O'Neal",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Anfernee Hardaway",
          "is_valid": false
        }
      ]
    }, {
      "id": 1176,
      "text": "Lequel de ces joueurs ne faisait pas partie de la Dream Team de basket aux Jeux Olympiques de 1992 ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Dominique Wilkins",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Christian Laettner",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Chris Mullin",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Clyde Drexler",
          "is_valid": false
        }
      ]
    }, {
      "id": 1177,
      "text": "Qui était l'entraîneur en chef de la Dream Team de basket aux Jeux Olympiques de 1992 ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Chuck Daly",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Rudy Tomjanovich",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Phil Jackson",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Pat Riley",
          "is_valid": false
        }
      ]
    }, {
      "id": 1178,
      "text": "Avec quel grand meneur de jeu Karl Malone formait-il un duo aux Jazz d'Utah ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "John Stockton",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Gary Payton",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Isiah Thomas",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Magic Johnson",
          "is_valid": false
        }
      ]
    }, {
      "id": 1179,
      "text": "Combien de titres olympiques Chris Mullin compte-t-il à son palmarès ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "2",
          "is_valid": true
        }, {
          "id": 2,
          "text": "0",
          "is_valid": false
        }, {
          "id": 3,
          "text": "1",
          "is_valid": false
        }, {
          "id": 4,
          "text": "3",
          "is_valid": false
        }
      ]
    }, {
      "id": 1180,
      "text": "Quelle équipe la Dream Team de basket bat-elle en finale des Jeux Olympiques de Barcelone ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "La Croatie",
          "is_valid": true
        }, {
          "id": 2,
          "text": "La CEI",
          "is_valid": false
        }, {
          "id": 3,
          "text": "La France",
          "is_valid": false
        }, {
          "id": 4,
          "text": "La Lituanie",
          "is_valid": false
        }
      ]
    }, {
      "id": 1181,
      "text": "Quel est le surnom du basketteur Patrick Ewing ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "The Beast",
          "is_valid": true
        }, {
          "id": 2,
          "text": "The Giant",
          "is_valid": false
        }, {
          "id": 3,
          "text": "The  Admiral",
          "is_valid": false
        }, {
          "id": 4,
          "text": "The Monster",
          "is_valid": false
        }
      ]
    }, {
      "id": 1182,
      "text": "Dans quelle ville évoluait l'équipe de basket du Thunder avant de s'installer à Oklahoma City en 2008 ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Seattle",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Kansas City",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Buffalo",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Los Angeles",
          "is_valid": false
        }
      ]
    }, {
      "id": 1183,
      "text": "Qui a racheté la franchise de NBA des Trail Blazers de Portland dans les années 1990 ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Paul Allen",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Steve Jobs",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Bill Gates",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Warren Buffet",
          "is_valid": false
        }
      ]
    }, {
      "id": 1184,
      "text": "Quel nom porte le trophée qui sacre le champion NBA ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Trophée Larry O'Brien",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Trophée Maurice Podoloff",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Trophée Oscar Robertson",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Trophée David Stern",
          "is_valid": false
        }
      ]
    }, {
      "id": 1185,
      "text": "Quel nom porte depuis 2008 le trophée de MVP (meilleur joueur) des finales de la NBA ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Trophée Bill Russell",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Trophée Kareem Abdul Jabbar",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Trophée Michael Jordan",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Trophée Wilt Chamberlain",
          "is_valid": false
        }
      ]
    }, {
      "id": 1186,
      "text": "Combien de points a inscrit Wilt Chamberlain le 2 mars 1962 lors du match entre les Philadelphie Warriors et les New York Knicks ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "100",
          "is_valid": true
        }, {
          "id": 2,
          "text": "150",
          "is_valid": false
        }, {
          "id": 3,
          "text": "110",
          "is_valid": false
        }, {
          "id": 4,
          "text": "130",
          "is_valid": false
        }
      ]
    }, {
      "id": 1187,
      "text": "En quelle année Michael Jordan a-t-il été intronisé au Hall of Fame du basket (le temple de la renommée) ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "2009",
          "is_valid": true
        }, {
          "id": 2,
          "text": "2003",
          "is_valid": false
        }, {
          "id": 3,
          "text": "2000",
          "is_valid": false
        }, {
          "id": 4,
          "text": "1999",
          "is_valid": false
        }
      ]
    }, {
      "id": 1188,
      "text": "Dans quelle ville est né Michael Jordan en 1963 ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "New York",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Chicago",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Charlotte",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Miami",
          "is_valid": false
        }
      ]
    }, {
      "id": 1189,
      "text": "Dans quelle université Lebron James a-t-il fait ses études ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Il n'est pas passé par l'Université",
          "is_valid": true
        }, {
          "id": 2,
          "text": "North Carolina",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Georgetown",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Duke",
          "is_valid": false
        }
      ]
    }, {
      "id": 1190,
      "text": "Dans quelle université Grant Hill a-t-il fait ses études ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Duke",
          "is_valid": true
        }, {
          "id": 2,
          "text": "North Carolina",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Georgetown",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Gonzaga",
          "is_valid": false
        }
      ]
    }, {
      "id": 1191,
      "text": "Dans quelle université américaine Ronny Turiaf a-t-il fait ses études ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Gonzaga",
          "is_valid": true
        }, {
          "id": 2,
          "text": "UCLA",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Stanford",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Florida State",
          "is_valid": false
        }
      ]
    }, {
      "id": 1192,
      "text": "Quel duo de basketteurs fait des ravages avec le Heat de Miami en 2010-2011 ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Dwyane Wade et Lebron James",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Kobe Bryant et Pau Gasol",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Kevin Garnett et Paul Pierce",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Tim Hardaway et Alonzo Mourning",
          "is_valid": false
        }
      ]
    }, {
      "id": 1193,
      "text": "Comment s'appelle la franchise de baseball évoluant à Seattle en 2011 ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Baseball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Les Mariners",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Les Patriots",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Les Seahawks",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Les Supersonics",
          "is_valid": false
        }
      ]
    }, {
      "id": 1194,
      "text": "A qui a succédé Phil Jackson au poste d'entraîneur des Chicago Bulls en 1989 ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Doug Collins",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Tex Winter",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Pat Riley",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Dan Issel",
          "is_valid": false
        }
      ]
    }, {
      "id": 1195,
      "text": "Quelle récompense individuelle a obtenu Boris Diaw lors de la saison 2005-2006 de NBA ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Le trophée de joueur ayant le plus progressé",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Le trophée de meilleur joueur du All Star Game",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Le trophée de meilleur sixième homme",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Le trophée de meilleur défenseur",
          "is_valid": false
        }
      ]
    }, {
      "id": 1196,
      "text": "Quelle récompense individuelle a obtenu Tony Parker lors de la saison 2006-2007 ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Le trophée de MVP (meilleur joueur) de la finale",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Le trophée de MVP (meileur joueur) de la saison régulière",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Le trophée de meilleur sixième homme",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Le trophée de meilleur défenseur",
          "is_valid": false
        }
      ]
    }, {
      "id": 1197,
      "text": "A quelle vedette a été marié Tony Parker entre 2007 et 2010 ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Eva Longoria",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Eva Mendes",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Catherine Zeta-Jones",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Shakira",
          "is_valid": false
        }
      ]
    }, {
      "id": 1198,
      "text": "Dans quelle ville est né Tony Parker en 1982 ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Bruges",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Bruxelles",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Rouen",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Paris",
          "is_valid": false
        }
      ]
    }, {
      "id": 1199,
      "text": "Dans quelle ville est né Joakin Noah en 1985 ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "New York",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Paris",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Sedan",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Yaoundé",
          "is_valid": false
        }
      ]
    }, {
      "id": 1200,
      "text": "Dans quelle université américaine Joakim Noah a-t-il fait ses études ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Florida",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Florida State",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Louisville",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Michigan State",
          "is_valid": false
        }
      ]
    }, {
      "id": 1201,
      "text": "Avant la saison 2010-2011 seuls deux joueurs ont marqué au moins 50 points et délivré au moins 10 passes décisives en un match, Michael Jordan et …",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Tony Parker",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Kobe Bryant",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Lebron James",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Dwyane Wade",
          "is_valid": false
        }
      ]
    }, {
      "id": 1202,
      "text": "Quel est le numéro de maillot de Tony Parker aux San Antonio Spurs ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "9",
          "is_valid": true
        }, {
          "id": 2,
          "text": "12",
          "is_valid": false
        }, {
          "id": 3,
          "text": "0",
          "is_valid": false
        }, {
          "id": 4,
          "text": "1",
          "is_valid": false
        }
      ]
    }, {
      "id": 1203,
      "text": "Quel est le numéro de maillot de Lebron James au Heat de Miami depuis 2010 ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "6",
          "is_valid": true
        }, {
          "id": 2,
          "text": "23",
          "is_valid": false
        }, {
          "id": 3,
          "text": "8",
          "is_valid": false
        }, {
          "id": 4,
          "text": "3",
          "is_valid": false
        }
      ]
    }, {
      "id": 1204,
      "text": "Quel était le numéro de maillot de Lebron James aux Cleveland Cavaliers entre 2003 et 2010 ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "23",
          "is_valid": true
        }, {
          "id": 2,
          "text": "6",
          "is_valid": false
        }, {
          "id": 3,
          "text": "60",
          "is_valid": false
        }, {
          "id": 4,
          "text": "12",
          "is_valid": false
        }
      ]
    }, {
      "id": 1205,
      "text": "Combien de franchises ont débuté la saison 2010-2011 de NBA ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "30",
          "is_valid": true
        }, {
          "id": 2,
          "text": "27",
          "is_valid": false
        }, {
          "id": 3,
          "text": "29",
          "is_valid": false
        }, {
          "id": 4,
          "text": "32",
          "is_valid": false
        }
      ]
    }, {
      "id": 1206,
      "text": "Combien de franchises ont débuté la saison 2011 de MLB ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "30",
          "is_valid": true
        }, {
          "id": 2,
          "text": "31",
          "is_valid": false
        }, {
          "id": 3,
          "text": "29",
          "is_valid": false
        }, {
          "id": 4,
          "text": "28",
          "is_valid": false
        }
      ]
    }, {
      "id": 1207,
      "text": "Dans quelle capitale internationale est né l'ancien basketteur américain Dominique Wilkins ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Paris",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Londres",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Tokyo",
          "is_valid": false
        }, {
          "id": 4,
          "text": "La Havane",
          "is_valid": false
        }
      ]
    }, {
      "id": 1208,
      "text": "Quel record se partagent les baseballeurs Willie Mays, Stan Musial et Hank Aaron ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Baseball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Ils ont tous les trois participé à 24 All Star Game de MLB",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Ils ont tous les trois frappé 60 home runs dans une saison",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Ils sont les seuls à avoir joué plus de 3000 matches en MLB",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Ils ont tous les trois été exclus suite à la même affaire de paris truqués",
          "is_valid": false
        }
      ]
    }, {
      "id": 1209,
      "text": "Dans quelle capitale est né l'ancien basketteur américain Steve Kerr ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Beyrouth",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Téhéran",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Le Caire",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Tripoli",
          "is_valid": false
        }
      ]
    }, {
      "id": 1210,
      "text": "Dans quelle franchise de NBA n'a pas évolué Scottie Pippen au cours de sa carrière de joueur ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "LA Lakers",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Chicago Bulls",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Houston Rockets",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Portland Trail Blazers",
          "is_valid": false
        }
      ]
    }, {
      "id": 1211,
      "text": "Avant de remporter les World Series de baseball en 2005, en quelle année les Chicago White Sox avaient-ils glané leur précédent titre ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Baseball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "1917",
          "is_valid": true
        }, {
          "id": 2,
          "text": "1985",
          "is_valid": false
        }, {
          "id": 3,
          "text": "2004",
          "is_valid": false
        }, {
          "id": 4,
          "text": "1946",
          "is_valid": false
        }
      ]
    }, {
      "id": 1212,
      "text": "Quel joueur japonais a remporté le titre de MVP des World Series (meilleur joueur des finales) de baseball en 2009 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Baseball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Hideki Matsui",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Hideo Nomo",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Ichiro Suzuki",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Daisuke Matsuzaka",
          "is_valid": false
        }
      ]
    }, {
      "id": 1213,
      "text": "En quelle année a été fondée la National Basketball Association ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "En 1946",
          "is_valid": true
        }, {
          "id": 2,
          "text": "En 1950",
          "is_valid": false
        }, {
          "id": 3,
          "text": "En 1963",
          "is_valid": false
        }, {
          "id": 4,
          "text": "En 1931",
          "is_valid": false
        }
      ]
    }, {
      "id": 1214,
      "text": "Bo Jackson s'est illustré à haut niveau dans deux sports. Lesquels ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Football américain et baseball",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Basket et hockey sur glace",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Football et Lacrosse",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Athlétisme et tennis",
          "is_valid": false
        }
      ]
    }, {
      "id": 1215,
      "text": "Deion Sanders s'est illustré à haut niveau dans deux sports. Lesquels ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Football américain et baseball",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Basket et hockey sur glace",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Football et Lacrosse",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Athlétisme et tennis",
          "is_valid": false
        }
      ]
    }, {
      "id": 1216,
      "text": "Quel numéro de maillot a porté tout au long de sa carrière le footballeur américain Brett Favre ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Foot US",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "4",
          "is_valid": true
        }, {
          "id": 2,
          "text": "12",
          "is_valid": false
        }, {
          "id": 3,
          "text": "10",
          "is_valid": false
        }, {
          "id": 4,
          "text": "21",
          "is_valid": false
        }
      ]
    }, {
      "id": 1217,
      "text": "Combien de franchises ont débuté la saison 2009-2010 de NFL ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Foot US",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "32",
          "is_valid": true
        }, {
          "id": 2,
          "text": "30",
          "is_valid": false
        }, {
          "id": 3,
          "text": "31",
          "is_valid": false
        }, {
          "id": 4,
          "text": "27",
          "is_valid": false
        }
      ]
    }, {
      "id": 1218,
      "text": "En quelle année a eu lieu la première édition du Super Bowl de football américain ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Foot US",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "1966",
          "is_valid": true
        }, {
          "id": 2,
          "text": "1946",
          "is_valid": false
        }, {
          "id": 3,
          "text": "1956",
          "is_valid": false
        }, {
          "id": 4,
          "text": "1976",
          "is_valid": false
        }
      ]
    }, {
      "id": 1219,
      "text": "Quel est le nom du trophée remporté par le vainqueur du Super Bowl de football américain ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Foot US",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Le trophée Vince Lombardi",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Le trophée Joe Montana",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Le trophée Joe Namath",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Le Trophée Jim Thorpe",
          "is_valid": false
        }
      ]
    }, {
      "id": 1220,
      "text": "En quelle année a été fondée la National Football League ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Foot US",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "1966",
          "is_valid": true
        }, {
          "id": 2,
          "text": "1920",
          "is_valid": false
        }, {
          "id": 3,
          "text": "1869",
          "is_valid": false
        }, {
          "id": 4,
          "text": "1946",
          "is_valid": false
        }
      ]
    }, {
      "id": 1221,
      "text": "De quelle franchise professionnelle de baseball George W Bush a-t-il été propriétaire entre 1989 et 1994 ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Baseball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Texas Rangers",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Houston Astros",
          "is_valid": false
        }, {
          "id": 3,
          "text": "New York Yankees",
          "is_valid": false
        }, {
          "id": 4,
          "text": "New York Mets",
          "is_valid": false
        }
      ]
    }, {
      "id": 1222,
      "text": "Comment s'appelle le trophée récompensant le meilleur entraîneur de la saison régulière en NBA ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Le trophée Red Auerbach",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Le trophée John Wooden",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Le trophée Bil Russell",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Le trophée Phil Jackson",
          "is_valid": false
        }
      ]
    }, {
      "id": 1223,
      "text": "Qui était John Wooden ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Le célèbre entraîneur de basket de l'Université d'UCLA",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Le fondateur du basket",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Le premier joueur à avoir remporté le trophée de MVP (meilleur joueur) en NBA en 1956",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Le fondateur de la NBA",
          "is_valid": false
        }
      ]
    }, {
      "id": 1224,
      "text": "Qui était Vince Lombardi ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Tous sports",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Le premier entraîneur de football américain  vainqueur du Super Bowl",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Le fondateur de la NFL (Ligue professionnelle de football américain) en 1920",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Le fondateur de la NHL (Ligue nord-américaine de hockey sur glace)",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Le premier entraîneur vainqueur de la Stanley Cup (titre de champion en NHL)",
          "is_valid": false
        }
      ]
    }, {
      "id": 1225,
      "text": "Qui est le premier Européen à avoir obtenu la distinction de MVP (meilleur joueur) de la NBA lors de la saison 2006-2007 ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Dirk Nowitzki",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Tony Parker",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Hedo Turkoglu",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Pau Gasol",
          "is_valid": false
        }
      ]
    }, {
      "id": 1226,
      "text": "Quel fut le premier joueur français drafté en NBA ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Jean-Claude Lefebvre",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Tony Parker",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Tariq Abdul Wahad",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Hervé Dubuisson",
          "is_valid": false
        }
      ]
    }, {
      "id": 1227,
      "text": "En quelle année a été drafté Tony Parker en NBA ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "1997",
          "is_valid": true
        }, {
          "id": 2,
          "text": "2001",
          "is_valid": false
        }, {
          "id": 3,
          "text": "2003",
          "is_valid": false
        }, {
          "id": 4,
          "text": "2002",
          "is_valid": false
        }
      ]
    }, {
      "id": 1228,
      "text": "Par quel club de NBA a été drafté Alain Digbeu ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Atlanta Hawks",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Boston Celtics",
          "is_valid": false
        }, {
          "id": 3,
          "text": "New York Knicks",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Sacramento Kings",
          "is_valid": false
        }
      ]
    }, {
      "id": 1229,
      "text": "En quelle année a été drafté Alain Digbeu en NBA ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "1997",
          "is_valid": true
        }, {
          "id": 2,
          "text": "1995",
          "is_valid": false
        }, {
          "id": 3,
          "text": "1999",
          "is_valid": false
        }, {
          "id": 4,
          "text": "2001",
          "is_valid": false
        }
      ]
    }, {
      "id": 1230,
      "text": "Dans quelle franchise NBA a évolué Antoine Rigaudeau ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Dallas Mavericks",
          "is_valid": true
        }, {
          "id": 2,
          "text": "San Antonio Spurs",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Orlando Magic",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Phoenix Suns",
          "is_valid": false
        }
      ]
    }, {
      "id": 1231,
      "text": "Dans quel club n'a pas évolué Yann Bonato au cours de sa carrière ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Pau-Orthez",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Limoges",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Antibes",
          "is_valid": false
        }, {
          "id": 4,
          "text": "ASVEL",
          "is_valid": false
        }
      ]
    }, {
      "id": 1232,
      "text": "Quel joueur ne faisait pas partie de l'équipe de France de basket, vice-championne olympique en 2000 ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Tony Parker",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Makan Dioumassi",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Yann Bonato",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Laurent Foirest",
          "is_valid": false
        }
      ]
    }, {
      "id": 1233,
      "text": "Comment s'appelait l'entraîneur de Michael Jordan à l'Université de North Carolina ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Dean Smith",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Bobby Knight",
          "is_valid": false
        }, {
          "id": 3,
          "text": "John Wooden",
          "is_valid": false
        }, {
          "id": 4,
          "text": "John Thompson",
          "is_valid": false
        }
      ]
    }, {
      "id": 1234,
      "text": "Comment s'appelait l'entraîneur de l'Université de Georgetown qui a formé Patrick Ewing, Dikembe Mutombo, Alonzo Mourning ou Allen Iverson ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "John Thompson",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Bobby Knight",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Dean Smith",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Steve Smith",
          "is_valid": false
        }
      ]
    }, {
      "id": 1235,
      "text": "Quel basketteur américain était surnommé le Silent Assassin ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "James Worthy",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Reggie Miller",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Gary Payton",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Derek Fisher",
          "is_valid": false
        }
      ]
    }, {
      "id": 1236,
      "text": "Quel basketteur américain est surnommé le Black Mamba ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Kobe Bryant",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Lebron James",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Dwight Howard",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Jason Kidd",
          "is_valid": false
        }
      ]
    }, {
      "id": 1237,
      "text": "Où se trouve le Hall of Fame (temple de la renommée) du hockey sur glace ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Hockey sur glace",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Toronto",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Montréal",
          "is_valid": false
        }, {
          "id": 3,
          "text": " Anaheim",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Springfield",
          "is_valid": false
        }
      ]
    }, {
      "id": 1238,
      "text": "Où se trouve le Hall of Fame (temple de la renommée) du basket ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Springfield",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Cleveland",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Paris",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Boston",
          "is_valid": false
        }
      ]
    }, {
      "id": 1239,
      "text": "Où se trouve le Hall of Fame (temple de la renommée) du football américain ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Foot US",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Canton",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Springfield",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Exeter",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Louisville",
          "is_valid": false
        }
      ]
    }, {
      "id": 1240,
      "text": "Où se trouve le Hall of Fame (temple de la renommée) du baseball ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Baseball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Cooperstown",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Canton",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Springfield",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Cleveland",
          "is_valid": false
        }
      ]
    }, {
      "id": 1241,
      "text": "Quel basketteur américain est surnommé \"The Answer\" ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Allen Iverson",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Steve Nash",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Jason Kidd",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Chauncey Billups",
          "is_valid": false
        }
      ]
    }, {
      "id": 1242,
      "text": "Quel est le surnom du basketteur Allen Iverson ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "The Answer",
          "is_valid": true
        }, {
          "id": 2,
          "text": "The Human Highlight Film",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Mister Basket",
          "is_valid": false
        }, {
          "id": 4,
          "text": "His Airness",
          "is_valid": false
        }
      ]
    }, {
      "id": 1243,
      "text": "Quel basketteur est surnommé l'Agent zéro ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Gilbert Arenas",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Russel Westbrook",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Aaron Brooks",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Robert Parish",
          "is_valid": false
        }
      ]
    }, {
      "id": 1244,
      "text": "Quel numéro de maillot portait le basketteur Dennis Rodman aux San Antonio Spurs entre 1993 et 1995 ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "10",
          "is_valid": true
        }, {
          "id": 2,
          "text": "91",
          "is_valid": false
        }, {
          "id": 3,
          "text": "73",
          "is_valid": false
        }, {
          "id": 4,
          "text": "00",
          "is_valid": false
        }
      ]
    }, {
      "id": 1245,
      "text": "Quel numéro de maillot portait le basketteur Dennis Rodman aux Los Angeles Lakers en 1999 ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "73",
          "is_valid": true
        }, {
          "id": 2,
          "text": "91",
          "is_valid": false
        }, {
          "id": 3,
          "text": "10",
          "is_valid": false
        }, {
          "id": 4,
          "text": "00",
          "is_valid": false
        }
      ]
    }, {
      "id": 1246,
      "text": "Quel numéro de maillot portait le basketteur Dennis Rodman aux Dallas Mavericks en 2000 ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "70",
          "is_valid": true
        }, {
          "id": 2,
          "text": "91",
          "is_valid": false
        }, {
          "id": 3,
          "text": "10",
          "is_valid": false
        }, {
          "id": 4,
          "text": "73",
          "is_valid": false
        }
      ]
    }, {
      "id": 1247,
      "text": "Quel numéro de maillot portait le basketteur Dennis Rodman aux Detroit Pistons entre 1986 et 1992 ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "10",
          "is_valid": true
        }, {
          "id": 2,
          "text": "91",
          "is_valid": false
        }, {
          "id": 3,
          "text": "70",
          "is_valid": false
        }, {
          "id": 4,
          "text": "73",
          "is_valid": false
        }
      ]
    }, {
      "id": 1248,
      "text": "Combien de titres olympiques Patrick Ewing compte-t-il à son palmarès ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "2",
          "is_valid": true
        }, {
          "id": 2,
          "text": "1",
          "is_valid": false
        }, {
          "id": 3,
          "text": "0",
          "is_valid": false
        }, {
          "id": 4,
          "text": "3",
          "is_valid": false
        }
      ]
    }, {
      "id": 1249,
      "text": "Combien de titres olympiques Michael Jordan compte-t-il à son palmarès ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "2",
          "is_valid": true
        }, {
          "id": 2,
          "text": "0",
          "is_valid": false
        }, {
          "id": 3,
          "text": "3",
          "is_valid": false
        }, {
          "id": 4,
          "text": "1",
          "is_valid": false
        }
      ]
    }, {
      "id": 1250,
      "text": "Quel basketteur n'a jamais porté le numéro 23 en NBA ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Kobe Bryant",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Michael Jordan",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Lebron James",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Jason Richardson",
          "is_valid": false
        }
      ]
    }, {
      "id": 1251,
      "text": "Par quel club est passé Paul Gasol avant d'évoluer en NBA ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "FC Barcelone",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Real Madrid",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Panathinaikos",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Valence",
          "is_valid": false
        }
      ]
    }, {
      "id": 1252,
      "text": "Dans quelle franchise Toni Kukoc a-t-il débuté sa carrière en NBA ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Chicago Bulls",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Milwaukee Bucks",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Philadelphie Sixers",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Atlanta Hawks",
          "is_valid": false
        }
      ]
    }, {
      "id": 1253,
      "text": "Dans quelle franchise Toni Kukoc a-t-il terminé sa carrière NBA ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Milwaukee Bucks",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Chicago Bulls",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Philadelphie Sixers",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Atlanta Hawks",
          "is_valid": false
        }
      ]
    }, {
      "id": 1254,
      "text": "Quelle récompense individuelle n'a pas obtenu Michael Jordan au cours de sa carrière ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Most Improved Player (joueur ayant le plus progressé)",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Meilleur défenseur de la saison",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Rookie (débutant) de la saison",
          "is_valid": false
        }, {
          "id": 4,
          "text": "MVP (meilleur joueur) de la saison",
          "is_valid": false
        }
      ]
    }, {
      "id": 1255,
      "text": "De quel film Michael Jordan tient-il la vedette ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Space Jam",
          "is_valid": true
        }, {
          "id": 2,
          "text": "L'Enfer du dimanche",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Y-a-t-il un pilote dans l'avion ? ",
          "is_valid": false
        }, {
          "id": 4,
          "text": "He Got Game",
          "is_valid": false
        }
      ]
    }, {
      "id": 1256,
      "text": "Quel est le surnom de l'équipe universitaire de North Carolina ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Sports US",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Les Tar Heels",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Les Blue Devils",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Les Huskies",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Les Boilermakers",
          "is_valid": false
        }
      ]
    }, {
      "id": 1257,
      "text": "Quel est le surnom de l'équipe universitaire d'Indiana ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Sports US",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Les Hoosiers",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Les Spartans",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Les Wolverines",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Les Boilermakers",
          "is_valid": false
        }
      ]
    }, {
      "id": 1258,
      "text": "Quel est le surnom de l'équipe universitaire de Michigan State ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Sports US",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Les Spartans",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Les Wolverines",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Les Huskies",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Les Tar Heels",
          "is_valid": false
        }
      ]
    }, {
      "id": 1259,
      "text": "Quel est le surnom de l'équipe universitaire de Duke ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Sports US",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Les Blue Devils",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Les Huskies",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Les Tar Heels",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Les Wolverines",
          "is_valid": false
        }
      ]
    }, {
      "id": 1260,
      "text": "Quel est le surnom de l'équipe universitaire de Georgetown ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Sports US",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Les Hoyas",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Les Wildcats",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Les Rebels",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Les Razorbacks",
          "is_valid": false
        }
      ]
    }, {
      "id": 1261,
      "text": "Quel est le surnom de l'équipe universitaire de Florida, où a notamment évolué le Français Joakim Noah ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Sports US",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Les  Gators",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Les Huskies",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Les Tar Heels",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Les Wolverines",
          "is_valid": false
        }
      ]
    }, {
      "id": 1262,
      "text": "Quel est le surnom de l'équipe universitaire de Michigan ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Sports US",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Les Wolverines",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Les Spartans",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Le Rebels",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Les Boilermakers",
          "is_valid": false
        }
      ]
    }, {
      "id": 1263,
      "text": "Quel était le numéro de maillot fétiche de Kareem Abdul-Jabbar tout au long de sa carrière ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "33",
          "is_valid": true
        }, {
          "id": 2,
          "text": "13",
          "is_valid": false
        }, {
          "id": 3,
          "text": "00",
          "is_valid": false
        }, {
          "id": 4,
          "text": "32",
          "is_valid": false
        }
      ]
    }, {
      "id": 1264,
      "text": "Qu'est ce que la Phi Slamma Jamma ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Le surnom des joueurs de basket de l'Université de Houston, finaliste de la NCAA en 1983 et 1984",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Le surnom des joueurs de basket de l'Université de Michigan, finaliste de la NCAA en 1992 et 1993",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Le surnom des joueurs de basket de l'Université de Duke, vainqueurs de la NCAA en 1991 et 1992 ",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Le surnom des joueurs de basket de l'Université de Florida, vainqueurs de la NCAA en 2006 et 2007",
          "is_valid": false
        }
      ]
    }, {
      "id": 1265,
      "text": "Dans quelle Université américaine évoluaient les basketteurs du Fab Five, finalistes NCAA en 1992 et 1993 ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Michigan",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Michigan State",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Connecticut",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Houston",
          "is_valid": false
        }
      ]
    }, {
      "id": 1266,
      "text": "Dans quelle Université Kareem Abdul-Jabbar a-t-il fait ses études ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "UCLA",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Stanford",
          "is_valid": false
        }, {
          "id": 3,
          "text": "UNLV",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Georgetown",
          "is_valid": false
        }
      ]
    }, {
      "id": 1267,
      "text": "Dans quelle Université Charles Barkley a-t-il fait ses études ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Auburn",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Houston",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Georgetown",
          "is_valid": false
        }, {
          "id": 4,
          "text": "North Carolina",
          "is_valid": false
        }
      ]
    }, {
      "id": 1268,
      "text": "Dans quelle Université Hakeem Olajuwon a-t-il fait ses études ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Houston",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Michigan State",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Columbia",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Georgetown",
          "is_valid": false
        }
      ]
    }, {
      "id": 1269,
      "text": "A combien de reprises le baseballeur Barry Bonds a-t-il remporté le titre de MVP (meilleur joueur) de la National League au cours de sa carrière ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Baseball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "7",
          "is_valid": true
        }, {
          "id": 2,
          "text": "3",
          "is_valid": false
        }, {
          "id": 3,
          "text": "0",
          "is_valid": false
        }, {
          "id": 4,
          "text": "2",
          "is_valid": false
        }
      ]
    }, {
      "id": 1270,
      "text": "Combien d'équipes étaient basées à Los Angeles au début de la saison 2010-2011 de NFL ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Foot US",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "0",
          "is_valid": true
        }, {
          "id": 2,
          "text": "2",
          "is_valid": false
        }, {
          "id": 3,
          "text": "3",
          "is_valid": false
        }, {
          "id": 4,
          "text": "1",
          "is_valid": false
        }
      ]
    }, {
      "id": 1271,
      "text": "Qui détient le record du nombre de sélections au All Star Game de basket ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Kareem Abdul-Jabbar",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Shaquille O'Neal",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Michael Jordan",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Wilt Chamberlain",
          "is_valid": false
        }
      ]
    }, {
      "id": 1272,
      "text": "Combien de sélections au All Star Game compte Kareem Adbul-Jabbar ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "19",
          "is_valid": true
        }, {
          "id": 2,
          "text": "20",
          "is_valid": false
        }, {
          "id": 3,
          "text": "22",
          "is_valid": false
        }, {
          "id": 4,
          "text": "16",
          "is_valid": false
        }
      ]
    }, {
      "id": 1273,
      "text": "Combien de sélections au All Star Game compte Michael Jordan ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "14",
          "is_valid": true
        }, {
          "id": 2,
          "text": "15",
          "is_valid": false
        }, {
          "id": 3,
          "text": "10",
          "is_valid": false
        }, {
          "id": 4,
          "text": "12",
          "is_valid": false
        }
      ]
    }, {
      "id": 1274,
      "text": "Combien de sélections au All Star Game compte Shaquille O'Neal ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "15",
          "is_valid": true
        }, {
          "id": 2,
          "text": "13",
          "is_valid": false
        }, {
          "id": 3,
          "text": "12",
          "is_valid": false
        }, {
          "id": 4,
          "text": "18",
          "is_valid": false
        }
      ]
    }, {
      "id": 1276,
      "text": "Quel ancien basketteur était affublé du surnom de \"Penny\" ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Anfernee Hardaway",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Tim Hardaway",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Isaiah Rider",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Harold Miner",
          "is_valid": false
        }
      ]
    }, {
      "id": 1277,
      "text": "Par quelle franchise NBA Scottie Pippen a-t-il été drafté en 1987 ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Seattle Supersonics",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Chicago Bulls",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Milwaukee Bucks",
          "is_valid": false
        }, {
          "id": 4,
          "text": "New York Knicks",
          "is_valid": false
        }
      ]
    }, {
      "id": 1278,
      "text": "Qui est le vainqueur du premier concours de smashes organisé par la NBA en 1984 ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Larry Nance",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Dominique Wilkins",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Julius Erving",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Alex English",
          "is_valid": false
        }
      ]
    }, {
      "id": 1279,
      "text": "A combien de reprises Dominique Wilkins a-t-il remporté le concours de smashes organisé par la NBA ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "2",
          "is_valid": true
        }, {
          "id": 2,
          "text": "0",
          "is_valid": false
        }, {
          "id": 3,
          "text": "3",
          "is_valid": false
        }, {
          "id": 4,
          "text": "1",
          "is_valid": false
        }
      ]
    }, {
      "id": 1280,
      "text": "Qui détient le record du nombre de victoires lors du concours de smashes organisé par la NBA ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Nate Robinson",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Lebron James",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Harold Miner",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Michael Jordan",
          "is_valid": false
        }
      ]
    }, {
      "id": 1281,
      "text": "A combien de reprises Lebron James a-t-il remporté le concours de smashes organisé par la NBA ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "0",
          "is_valid": true
        }, {
          "id": 2,
          "text": "3",
          "is_valid": false
        }, {
          "id": 3,
          "text": "2",
          "is_valid": false
        }, {
          "id": 4,
          "text": "1",
          "is_valid": false
        }
      ]
    }, {
      "id": 1282,
      "text": "A combien de reprises Larry Bird a-t-il remporté le concours de tirs à trois points organisé par la NBA ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "3",
          "is_valid": true
        }, {
          "id": 2,
          "text": "2",
          "is_valid": false
        }, {
          "id": 3,
          "text": "4",
          "is_valid": false
        }, {
          "id": 4,
          "text": "0",
          "is_valid": false
        }
      ]
    }, {
      "id": 1283,
      "text": "A combien de reprises Craig Hodges a-t-il remporté le concours de tirs à trois points organisé par la NBA ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "3",
          "is_valid": true
        }, {
          "id": 2,
          "text": "2",
          "is_valid": false
        }, {
          "id": 3,
          "text": "4",
          "is_valid": false
        }, {
          "id": 4,
          "text": "0",
          "is_valid": false
        }
      ]
    }, {
      "id": 1284,
      "text": "Qui détient le plus petit nombre de points lors du concours de tirs à trois points organisé par la NBA ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Michael Jordan",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Ray Allen",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Reggie Miller",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Steve Kerr",
          "is_valid": false
        }
      ]
    }, {
      "id": 1285,
      "text": "Dans toutes les nages en compétition (sauf en brasse), à quelle distance la coulée est-elle limitée ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "15 M",
          "is_valid": true
        }, {
          "id": 2,
          "text": "10 M",
          "is_valid": false
        }, {
          "id": 3,
          "text": "8 M",
          "is_valid": false
        }, {
          "id": 4,
          "text": "5 M",
          "is_valid": false
        }
      ]
    }, {
      "id": 1286,
      "text": "En nage libre, quelle est la distance la plus longue pratiquée en compétition ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "1500 M",
          "is_valid": true
        }, {
          "id": 2,
          "text": "1000 M",
          "is_valid": false
        }, {
          "id": 3,
          "text": "800 M",
          "is_valid": false
        }, {
          "id": 4,
          "text": "400 M",
          "is_valid": false
        }
      ]
    }, {
      "id": 1287,
      "text": "En dos, quelle est la distance la plus longue pratiquée en compétition ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "200 M",
          "is_valid": true
        }, {
          "id": 2,
          "text": "400 M",
          "is_valid": false
        }, {
          "id": 3,
          "text": "800 M",
          "is_valid": false
        }, {
          "id": 4,
          "text": "1500 M",
          "is_valid": false
        }
      ]
    }, {
      "id": 1288,
      "text": "En brasse, quelle est la distance la plus longue pratiquée en compétition ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "200 M",
          "is_valid": true
        }, {
          "id": 2,
          "text": "400 M",
          "is_valid": false
        }, {
          "id": 3,
          "text": "800 M",
          "is_valid": false
        }, {
          "id": 4,
          "text": "1500 M",
          "is_valid": false
        }
      ]
    }, {
      "id": 1289,
      "text": "En papillon, quelle est la distance la plus longue pratiquée en compétition ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "200 M",
          "is_valid": true
        }, {
          "id": 2,
          "text": "400 M",
          "is_valid": false
        }, {
          "id": 3,
          "text": "800 M",
          "is_valid": false
        }, {
          "id": 4,
          "text": "1500 M",
          "is_valid": false
        }
      ]
    }, {
      "id": 1290,
      "text": "Par quelle nage débute les relais de 4 x100 4 nages, chez les hommes comme chez les femmes ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Dos",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Papillon",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Brasse",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Nage libre",
          "is_valid": false
        }
      ]
    }, {
      "id": 1291,
      "text": "Par quelle nage se termine les relais de 4 x100 4 nages, chez les hommes comme chez les femmes ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "nage libre",
          "is_valid": true
        }, {
          "id": 2,
          "text": "dos",
          "is_valid": false
        }, {
          "id": 3,
          "text": "papillon",
          "is_valid": false
        }, {
          "id": 4,
          "text": "brasse",
          "is_valid": false
        }
      ]
    }, {
      "id": 1292,
      "text": "Dans une épreuve de relais en 4 nages, quelle est la nage qui est pratiquée en deuxième ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "brasse",
          "is_valid": true
        }, {
          "id": 2,
          "text": "dos",
          "is_valid": false
        }, {
          "id": 3,
          "text": "papillon",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Nage libre",
          "is_valid": false
        }
      ]
    }, {
      "id": 1293,
      "text": "Dans une épreuve de relais en 4 nages, quelle est la nage qui est pratiquée en troisième ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "papillon",
          "is_valid": true
        }, {
          "id": 2,
          "text": "brasse",
          "is_valid": false
        }, {
          "id": 3,
          "text": "dos",
          "is_valid": false
        }, {
          "id": 4,
          "text": "nage libre",
          "is_valid": false
        }
      ]
    }, {
      "id": 1294,
      "text": "Dans les épreuves de 200 m 4 nages et de 400 m 4 nages, quelle est la nage qui est pratiquée en deuxième ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "dos",
          "is_valid": true
        }, {
          "id": 2,
          "text": "papillon",
          "is_valid": false
        }, {
          "id": 3,
          "text": "brasse",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Nage libre",
          "is_valid": false
        }
      ]
    }, {
      "id": 1295,
      "text": "Dans les épreuves de 200 m 4 nages et de 400 m 4 nages, quelle est la nage qui est pratiquée en troisième ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "brasse",
          "is_valid": true
        }, {
          "id": 2,
          "text": "papillon",
          "is_valid": false
        }, {
          "id": 3,
          "text": "dos",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Nage libre",
          "is_valid": false
        }
      ]
    }, {
      "id": 1296,
      "text": "En grand bassin, quelle est la distance minimale pour les épreuves de 4 nages individuelles ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "200 M",
          "is_valid": true
        }, {
          "id": 2,
          "text": "100 M",
          "is_valid": false
        }, {
          "id": 3,
          "text": "400 M",
          "is_valid": false
        }, {
          "id": 4,
          "text": "800 M",
          "is_valid": false
        }
      ]
    }, {
      "id": 1297,
      "text": "En petit bassin, quelle est la distance minimale pour les épreuves de 4 nages individuelles ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "100 M",
          "is_valid": true
        }, {
          "id": 2,
          "text": "200 M",
          "is_valid": false
        }, {
          "id": 3,
          "text": "400 M",
          "is_valid": false
        }, {
          "id": 4,
          "text": "800 M",
          "is_valid": false
        }
      ]
    }, {
      "id": 1298,
      "text": "À quelle date les premiers records du monde de natation prennent effet ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "1908",
          "is_valid": true
        }, {
          "id": 2,
          "text": "1920",
          "is_valid": false
        }, {
          "id": 3,
          "text": "1936",
          "is_valid": false
        }, {
          "id": 4,
          "text": "1952",
          "is_valid": false
        }
      ]
    }, {
      "id": 1299,
      "text": "À quelle date les centièmes de seconde sont ajoutés aux temps des records de natation ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "1972",
          "is_valid": true
        }, {
          "id": 2,
          "text": "1968",
          "is_valid": false
        }, {
          "id": 3,
          "text": "1960",
          "is_valid": false
        }, {
          "id": 4,
          "text": "1952",
          "is_valid": false
        }
      ]
    }, {
      "id": 1300,
      "text": "À quelle date sont homologués les records en bassin de 25 mètres ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "1991",
          "is_valid": true
        }, {
          "id": 2,
          "text": "1980",
          "is_valid": false
        }, {
          "id": 3,
          "text": "1972",
          "is_valid": false
        }, {
          "id": 4,
          "text": "1988",
          "is_valid": false
        }
      ]
    }, {
      "id": 1301,
      "text": "Quel est la nationalité du nageur Michael Phelps ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Américaine",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Australienne",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Canadienne",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Anglaise",
          "is_valid": false
        }
      ]
    }, {
      "id": 1302,
      "text": "Quel est la nationalité du nageur Pieter van den Hoogenband ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Néerlandaise",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Américaine",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Canadienne",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Allemande",
          "is_valid": false
        }
      ]
    }, {
      "id": 1303,
      "text": "Quel est la nationalité du nageur Ian Thorpe ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Australienne",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Américaine",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Canadienne",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Anglaise",
          "is_valid": false
        }
      ]
    }, {
      "id": 1304,
      "text": "Quel est la nationalité du nageur Marc Spitz ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Américaine",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Australienne",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Canadienne",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Anglaise",
          "is_valid": false
        }
      ]
    }, {
      "id": 1305,
      "text": "Quel est la nationalité du nageur Roland Schoeman ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Sud-africaine",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Américaine",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Australienne",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Canadienne",
          "is_valid": false
        }
      ]
    }, {
      "id": 1306,
      "text": "Quel est la nationalité du nageur Eamon Sullivan ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Australienne",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Américaine",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Canadienne",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Anglaise",
          "is_valid": false
        }
      ]
    }, {
      "id": 1307,
      "text": "Quel est la nationalité du nageur Grant Hackett ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Australienne",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Américaine",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Canadienne",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Anglaise",
          "is_valid": false
        }
      ]
    }, {
      "id": 1308,
      "text": "Quel est la nationalité du nageur Ian Crocker ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Américaine",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Australienne",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Canadienne",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Anglaise",
          "is_valid": false
        }
      ]
    }, {
      "id": 1309,
      "text": "Quel est la nationalité du nageur Jim Montgomery ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Américaine",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Australienne",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Canadienne",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Anglaise",
          "is_valid": false
        }
      ]
    }, {
      "id": 1310,
      "text": "Quel est la nationalité d'origine du nageur Johnny Weissmuller avant qu'il soit naturalisé américain ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "austro-hongroise",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Autrichienne",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Allemande",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Hongroise",
          "is_valid": false
        }
      ]
    }, {
      "id": 1311,
      "text": "Quel est la nationalité du nageur Ryan Lochte ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Américaine",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Allemande",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Australienne",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Canadienne",
          "is_valid": false
        }
      ]
    }, {
      "id": 1312,
      "text": "Quel est la nationalité du nageur Jozsef Szabo ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Hongroise",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Tchèque",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Croate",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Bulgare",
          "is_valid": false
        }
      ]
    }, {
      "id": 1313,
      "text": "Quel est la nationalité du nageur Kosuke Kitajima ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Japonaise",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Chinoise",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Hongkongaise",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Sud-coréenne",
          "is_valid": false
        }
      ]
    }, {
      "id": 1314,
      "text": "Quel est la nationalité du nageur Stefan Nystrand ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Suédoise",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Norvégienne",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Danoise",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Finlandaise",
          "is_valid": false
        }
      ]
    }, {
      "id": 1315,
      "text": "Quel est la nationalité de la nageuse Kirsty Coventry ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Zimbabwéenne",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Américaine",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Canadienne",
          "is_valid": false
        }, {
          "id": 4,
          "text": "néo-zélandaise",
          "is_valid": false
        }
      ]
    }, {
      "id": 1316,
      "text": "Quel est la nationalité de la nageuse Camélia Potec ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Roumaine",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Bulgare",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Hongroise",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Croate",
          "is_valid": false
        }
      ]
    }, {
      "id": 1317,
      "text": "Quel est la nationalité de la nageuse Marleen Veldhuis ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Néerlandaise",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Allemande",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Belge",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Danoise",
          "is_valid": false
        }
      ]
    }, {
      "id": 1318,
      "text": "Quel est la nationalité de la nageuse Inge Dekker ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Néerlandaise",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Allemande",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Belge",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Danoise",
          "is_valid": false
        }
      ]
    }, {
      "id": 1319,
      "text": "Quel est la nationalité de la nageuse Ai Shibata ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Japonaise",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Coréenne",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Hongkongaise",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Chinoise",
          "is_valid": false
        }
      ]
    }, {
      "id": 1320,
      "text": "Quel est la nationalité de la nageuse Janet Evans ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Américaine",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Australienne",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Canadienne",
          "is_valid": false
        }, {
          "id": 4,
          "text": "néo-zélandaise",
          "is_valid": false
        }
      ]
    }, {
      "id": 1321,
      "text": "Quel est la nationalité de la nageuse Nathalie Coughlin ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Américaine",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Australienne",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Canadienne",
          "is_valid": false
        }, {
          "id": 4,
          "text": "néo-zélandaise",
          "is_valid": false
        }
      ]
    }, {
      "id": 1322,
      "text": "Quel est la nationalité de la nageuse Katie Hoff ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Américaine",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Australienne",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Canadienne",
          "is_valid": false
        }, {
          "id": 4,
          "text": "néo-zélandaise",
          "is_valid": false
        }
      ]
    }, {
      "id": 1323,
      "text": "Quel est la nationalité de la nageuse Leisel Jones ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Australienne",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Américaine",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Néo-zélandaise",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Anglaise",
          "is_valid": false
        }
      ]
    }, {
      "id": 1324,
      "text": "Quel est la nationalité de la nageuse Stéphanie Rice ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Australienne",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Américaine",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Néo-zélandaise",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Canadienne",
          "is_valid": false
        }
      ]
    }, {
      "id": 1325,
      "text": "Quel est le surnom du nageur australien Ian Thorpe ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Thorpedo",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Bullet",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Target",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Tomahawk",
          "is_valid": false
        }
      ]
    }, {
      "id": 1326,
      "text": "Dans quelle spécialité s'est illustrée le nageur australien Grant Hackett ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "nage libre",
          "is_valid": true
        }, {
          "id": 2,
          "text": "papillon",
          "is_valid": false
        }, {
          "id": 3,
          "text": "dos",
          "is_valid": false
        }, {
          "id": 4,
          "text": "brasse",
          "is_valid": false
        }
      ]
    }, {
      "id": 1327,
      "text": "Quel est la spécialité du nageur Eamon Sullivan ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "nage libre",
          "is_valid": true
        }, {
          "id": 2,
          "text": "papillon",
          "is_valid": false
        }, {
          "id": 3,
          "text": "dos",
          "is_valid": false
        }, {
          "id": 4,
          "text": "brasse",
          "is_valid": false
        }
      ]
    }, {
      "id": 1328,
      "text": "Dans quelle spécialité (Grand et petit bassins) le nageur australien Ian Thorpe a récolté le plus de médailles mondiales au cours de sa première carrière ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "400 M nage libre",
          "is_valid": true
        }, {
          "id": 2,
          "text": "200 M nage libre",
          "is_valid": false
        }, {
          "id": 3,
          "text": "100 M nage libre",
          "is_valid": false
        }, {
          "id": 4,
          "text": "800 M nage libre",
          "is_valid": false
        }
      ]
    }, {
      "id": 1329,
      "text": "Combien de médailles d'Or le nageur américain Jim Montgomery a-t-il récolté lors des premiers Championnats du Monde 1973 à Belgrade ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "5",
          "is_valid": true
        }, {
          "id": 2,
          "text": "2",
          "is_valid": false
        }, {
          "id": 3,
          "text": "3",
          "is_valid": false
        }, {
          "id": 4,
          "text": "4",
          "is_valid": false
        }
      ]
    }, {
      "id": 1330,
      "text": "Combien de titres mondiaux a remporté le nageur américain Jim Montgomery au cours de sa carrière ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "6",
          "is_valid": true
        }, {
          "id": 2,
          "text": "5",
          "is_valid": false
        }, {
          "id": 3,
          "text": "4",
          "is_valid": false
        }, {
          "id": 4,
          "text": "3",
          "is_valid": false
        }
      ]
    }, {
      "id": 1331,
      "text": "Combien de titres mondiaux a remporté le nageur australien Ian Thorpe au cours de sa première carrière, tous bassins confondus ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "13",
          "is_valid": true
        }, {
          "id": 2,
          "text": "12",
          "is_valid": false
        }, {
          "id": 3,
          "text": "11",
          "is_valid": false
        }, {
          "id": 4,
          "text": "10",
          "is_valid": false
        }
      ]
    }, {
      "id": 1332,
      "text": "Combien de titres mondiaux a remporté le nageur australien Ian Thorpe au cours de sa première carrière en grand bassin ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "11",
          "is_valid": true
        }, {
          "id": 2,
          "text": "10",
          "is_valid": false
        }, {
          "id": 3,
          "text": "9",
          "is_valid": false
        }, {
          "id": 4,
          "text": "8",
          "is_valid": false
        }
      ]
    }, {
      "id": 1333,
      "text": "Combien de titres mondiaux a remporté le nageur australien Ian Thorpe au cours de sa carrière en petit bassin ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "2",
          "is_valid": true
        }, {
          "id": 2,
          "text": "1",
          "is_valid": false
        }, {
          "id": 3,
          "text": "3",
          "is_valid": false
        }, {
          "id": 4,
          "text": "4",
          "is_valid": false
        }
      ]
    }, {
      "id": 1334,
      "text": "Combien de records mondiaux individuels le nageur australien Ian Thorpe a-t-il battu, tous bassins confondus, au cours de sa première carrière ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "17",
          "is_valid": true
        }, {
          "id": 2,
          "text": "16",
          "is_valid": false
        }, {
          "id": 3,
          "text": "15",
          "is_valid": false
        }, {
          "id": 4,
          "text": "14",
          "is_valid": false
        }
      ]
    }, {
      "id": 1335,
      "text": "Combien de records mondiaux individuels le nageur australien Ian Thorpe a-t-il battu en grand bassin au cours de sa carrière ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "13",
          "is_valid": true
        }, {
          "id": 2,
          "text": "12",
          "is_valid": false
        }, {
          "id": 3,
          "text": "11",
          "is_valid": false
        }, {
          "id": 4,
          "text": "10",
          "is_valid": false
        }
      ]
    }, {
      "id": 1336,
      "text": "Combien de records mondiaux individuels le nageur australien Ian Thorpe a-t-il battu en petit bassin au cours de sa première carrière ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "4",
          "is_valid": true
        }, {
          "id": 2,
          "text": "5",
          "is_valid": false
        }, {
          "id": 3,
          "text": "6",
          "is_valid": false
        }, {
          "id": 4,
          "text": "7",
          "is_valid": false
        }
      ]
    }, {
      "id": 1337,
      "text": "Combien de titres mondiaux le nageur américain Mark Spitz a-t-il remporté au cours de carrière ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "0",
          "is_valid": true
        }, {
          "id": 2,
          "text": "1",
          "is_valid": false
        }, {
          "id": 3,
          "text": "4",
          "is_valid": false
        }, {
          "id": 4,
          "text": "5",
          "is_valid": false
        }
      ]
    }, {
      "id": 1338,
      "text": "Pourquoi le nageur américain Mark Spitz n'a-t-il jamais participé à des Championnats du monde de natation ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Sa carrière s'est arrêtée en 1972 alors que la première édition a eu lieu en 1973",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Il a toujours été blessé au cours des éditions auxquelles il aurait pu participer",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Il ne s'intéressait qu'aux Jeux Olympiques, plus prestigieux à son goût",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Il a toujours été en désaccord avec la fédération internationale de natation",
          "is_valid": false
        }
      ]
    }, {
      "id": 1339,
      "text": "Après avoir stoppé sa carrière en 1972 à 22 ans, à quel âge le nageur américain Mark Spitz a-t-il tenté un retour à la compétition, sans succès ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "42 ans",
          "is_valid": true
        }, {
          "id": 2,
          "text": "41 ans",
          "is_valid": false
        }, {
          "id": 3,
          "text": "40 ans",
          "is_valid": false
        }, {
          "id": 4,
          "text": "39 ans",
          "is_valid": false
        }
      ]
    }, {
      "id": 1340,
      "text": "Combien de titres mondiaux a remporté le nageur australien Grant Hackett au cours de sa carrière, tous bassins confondus ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "17",
          "is_valid": true
        }, {
          "id": 2,
          "text": "16",
          "is_valid": false
        }, {
          "id": 3,
          "text": "15",
          "is_valid": false
        }, {
          "id": 4,
          "text": "14",
          "is_valid": false
        }
      ]
    }, {
      "id": 1341,
      "text": "Combien de titres mondiaux a remporté le nageur australien Grant Hackett au cours de sa carrière en grand bassin ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "10",
          "is_valid": true
        }, {
          "id": 2,
          "text": "11",
          "is_valid": false
        }, {
          "id": 3,
          "text": "9",
          "is_valid": false
        }, {
          "id": 4,
          "text": "8",
          "is_valid": false
        }
      ]
    }, {
      "id": 1342,
      "text": "Combien de titres mondiaux a remporté le nageur australien Grant Hackett au cours de sa carrière en petit bassin ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "7",
          "is_valid": true
        }, {
          "id": 2,
          "text": "8",
          "is_valid": false
        }, {
          "id": 3,
          "text": "6",
          "is_valid": false
        }, {
          "id": 4,
          "text": "5",
          "is_valid": false
        }
      ]
    }, {
      "id": 1343,
      "text": "Dans quelle spécialité le nageur américain Aaron Peirsol s'est-il illustré au cours de sa carrière ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "dos",
          "is_valid": true
        }, {
          "id": 2,
          "text": "brasse",
          "is_valid": false
        }, {
          "id": 3,
          "text": "papillon",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Nage libre",
          "is_valid": false
        }
      ]
    }, {
      "id": 1344,
      "text": "Combien de titres mondiaux a remporté le nageur américain Aaron Peirsol au cours de sa carrière, tous bassins confondus ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "16",
          "is_valid": true
        }, {
          "id": 2,
          "text": "17",
          "is_valid": false
        }, {
          "id": 3,
          "text": "15",
          "is_valid": false
        }, {
          "id": 4,
          "text": "14",
          "is_valid": false
        }
      ]
    }, {
      "id": 1345,
      "text": "Combien de titres mondiaux a remporté le nageur américain Aaron Peirsol au cours de sa carrière en grand bassin ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "10",
          "is_valid": true
        }, {
          "id": 2,
          "text": "11",
          "is_valid": false
        }, {
          "id": 3,
          "text": "9",
          "is_valid": false
        }, {
          "id": 4,
          "text": "8",
          "is_valid": false
        }
      ]
    }, {
      "id": 1346,
      "text": "Combien de titres mondiaux a remporté le nageur américain Aaron Peirsol au cours de sa carrière en petit bassin ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "6",
          "is_valid": true
        }, {
          "id": 2,
          "text": "7",
          "is_valid": false
        }, {
          "id": 3,
          "text": "8",
          "is_valid": false
        }, {
          "id": 4,
          "text": "5",
          "is_valid": false
        }
      ]
    }, {
      "id": 1347,
      "text": "Combien de records mondiaux individuels le nageur américain Aaron Peirsol a-t-il battu, tous bassins confondus, au cours de sa carrière ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "16",
          "is_valid": true
        }, {
          "id": 2,
          "text": "17",
          "is_valid": false
        }, {
          "id": 3,
          "text": "15",
          "is_valid": false
        }, {
          "id": 4,
          "text": "14",
          "is_valid": false
        }
      ]
    }, {
      "id": 1348,
      "text": "Combien de records mondiaux individuels le nageur américain Aaron Peirsol a-t-il battu en grand bassin au cours de sa carrière ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "13",
          "is_valid": true
        }, {
          "id": 2,
          "text": "14",
          "is_valid": false
        }, {
          "id": 3,
          "text": "12",
          "is_valid": false
        }, {
          "id": 4,
          "text": "11",
          "is_valid": false
        }
      ]
    }, {
      "id": 1349,
      "text": "Combien de records mondiaux individuels le nageur américain Aaron Peirsol a-t-il battu en petit bassin au cours de sa carrière ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "3",
          "is_valid": true
        }, {
          "id": 2,
          "text": "4",
          "is_valid": false
        }, {
          "id": 3,
          "text": "5",
          "is_valid": false
        }, {
          "id": 4,
          "text": "6",
          "is_valid": false
        }
      ]
    }, {
      "id": 1350,
      "text": "Quel personnage célèbre le nageur américain Johnny Weissmuller a-t-il incarné au cinéma ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Tarzan",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Rahan",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Robinson Crusoé",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Moogli",
          "is_valid": false
        }
      ]
    }, {
      "id": 1351,
      "text": "Quelle est la spécialité de prédilection de la nageuse américaine Nathalie Coughlin ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Dos",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Nage libre",
          "is_valid": false
        }, {
          "id": 3,
          "text": "brasse",
          "is_valid": false
        }, {
          "id": 4,
          "text": "papillon",
          "is_valid": false
        }
      ]
    }, {
      "id": 1352,
      "text": "Combien de titres de champion de France individuel le nageur français Jean Boiteux a-t-il remporté dans sa carrière ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "15",
          "is_valid": true
        }, {
          "id": 2,
          "text": "16",
          "is_valid": false
        }, {
          "id": 3,
          "text": "17",
          "is_valid": false
        }, {
          "id": 4,
          "text": "21",
          "is_valid": false
        }
      ]
    }, {
      "id": 1353,
      "text": "Dans quelle spécialité s'est illustrée le nageur français Jean Boiteux ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "nage libre",
          "is_valid": true
        }, {
          "id": 2,
          "text": "papillon",
          "is_valid": false
        }, {
          "id": 3,
          "text": "brasse",
          "is_valid": false
        }, {
          "id": 4,
          "text": "dos",
          "is_valid": false
        }
      ]
    }, {
      "id": 1354,
      "text": "Combien de records d'Europe le nageur français Jean Boiteux a-t-il battu au cours de carrière ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "10",
          "is_valid": true
        }, {
          "id": 2,
          "text": "9",
          "is_valid": false
        }, {
          "id": 3,
          "text": "8",
          "is_valid": false
        }, {
          "id": 4,
          "text": "7",
          "is_valid": false
        }
      ]
    }, {
      "id": 1355,
      "text": "À l'occasion de quels Championnats du monde le nageur français Franck Esposito a-t-il remporté son unique médaille mondiale (en argent) en grand bassin ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "1998 à Perth",
          "is_valid": true
        }, {
          "id": 2,
          "text": "1994 à Rome",
          "is_valid": false
        }, {
          "id": 3,
          "text": "1991 à Perth",
          "is_valid": false
        }, {
          "id": 4,
          "text": "2001 à Fukuoka",
          "is_valid": false
        }
      ]
    }, {
      "id": 1356,
      "text": "Combien de titres mondiaux le nageur néerlandais Pieter van den Hoogenband a-t-il remporté au cours de sa carrière, tous bassins confondus ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "1",
          "is_valid": true
        }, {
          "id": 2,
          "text": "0",
          "is_valid": false
        }, {
          "id": 3,
          "text": "2",
          "is_valid": false
        }, {
          "id": 4,
          "text": "3",
          "is_valid": false
        }
      ]
    }, {
      "id": 1357,
      "text": "Combien de titres mondiaux le nageur néerlandais Pieter van den Hoogenband a-t-il remporté au cours de sa carrière en grand bassin ?",
      "category": null,
      "difficulty": 4,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "0",
          "is_valid": true
        }, {
          "id": 2,
          "text": "1",
          "is_valid": false
        }, {
          "id": 3,
          "text": "2",
          "is_valid": false
        }, {
          "id": 4,
          "text": "3",
          "is_valid": false
        }
      ]
    }, {
      "id": 1358,
      "text": "Combien de titres mondiaux le nageur néerlandais Pieter van den Hoogenband a-t-il remporté au cours de sa carrière en petit bassin ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "1",
          "is_valid": true
        }, {
          "id": 2,
          "text": "0",
          "is_valid": false
        }, {
          "id": 3,
          "text": "2",
          "is_valid": false
        }, {
          "id": 4,
          "text": "4",
          "is_valid": false
        }
      ]
    }, {
      "id": 1359,
      "text": "À l'occasion de quels Championnats du monde le nageur néerlandais Pieter van den Hoogenband a-t-il remporté son seul titre mondial tous bassins confondus ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "1998 à Perth (50M)",
          "is_valid": true
        }, {
          "id": 2,
          "text": "1999 à Hong Kong (25 M)",
          "is_valid": false
        }, {
          "id": 3,
          "text": "2001 à Fukuoka (50 M)",
          "is_valid": false
        }, {
          "id": 4,
          "text": "2003 à Barcelone (50 M)",
          "is_valid": false
        }
      ]
    }, {
      "id": 1360,
      "text": "Combien de titres européens individuels le nageur néerlandais Pieter van den Hoogenband a-t-il remporté au cours de sa carrière, tous bassins confondus ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "14",
          "is_valid": true
        }, {
          "id": 2,
          "text": "13",
          "is_valid": false
        }, {
          "id": 3,
          "text": "9",
          "is_valid": false
        }, {
          "id": 4,
          "text": "8",
          "is_valid": false
        }
      ]
    }, {
      "id": 1361,
      "text": "Combien de titres européens individuels le nageur néerlandais Pieter van den Hoogenband a-t-il remporté au cours de sa carrière en grand bassin ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "8",
          "is_valid": true
        }, {
          "id": 2,
          "text": "9",
          "is_valid": false
        }, {
          "id": 3,
          "text": "10",
          "is_valid": false
        }, {
          "id": 4,
          "text": "6",
          "is_valid": false
        }
      ]
    }, {
      "id": 1362,
      "text": "Combien de titres européens individuels le nageur néerlandais Pieter van den Hoogenband a-t-il remporté au cours de sa carrière en petit bassin ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "6",
          "is_valid": true
        }, {
          "id": 2,
          "text": "7",
          "is_valid": false
        }, {
          "id": 3,
          "text": "8",
          "is_valid": false
        }, {
          "id": 4,
          "text": "10",
          "is_valid": false
        }
      ]
    }, {
      "id": 1363,
      "text": "Dans quelle discipline le nageur néerlandais Pieter van den Hoogenband a-t-il remporté quatre titres européens en sept participations à des Championnats d'Europe en grand bassin ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "200 m nage libre",
          "is_valid": true
        }, {
          "id": 2,
          "text": "100 m nage libre",
          "is_valid": false
        }, {
          "id": 3,
          "text": "400 m nage libre",
          "is_valid": false
        }, {
          "id": 4,
          "text": "800 M nage libre",
          "is_valid": false
        }
      ]
    }, {
      "id": 1364,
      "text": "Dans quelle discipline le nageur néerlandais Pieter van den Hoogenband est-il resté invaincu (trois titres) lors de ses trois participations à des Championnats d'Europe en petit bassin ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "200 m nage libre",
          "is_valid": true
        }, {
          "id": 2,
          "text": "100 m nage libre",
          "is_valid": false
        }, {
          "id": 3,
          "text": "400 m nage libre",
          "is_valid": false
        }, {
          "id": 4,
          "text": "800 M nage libre",
          "is_valid": false
        }
      ]
    }, {
      "id": 1365,
      "text": "Quel est la seule discipline où le nageur néerlandais Pieter van den Hoogenband n'est pas monté sur un podium mondial, tous bassins confondus, au cours de sa carrière ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "4 x 100 m 4 nages",
          "is_valid": true
        }, {
          "id": 2,
          "text": "4 x 200 nage libre",
          "is_valid": false
        }, {
          "id": 3,
          "text": "4 x 100 nage libre",
          "is_valid": false
        }, {
          "id": 4,
          "text": "50 m nage libre",
          "is_valid": false
        }
      ]
    }, {
      "id": 1366,
      "text": "Combien de titres mondiaux individuels le nageur russe Alexander Popov a-t-il remporté au cours de sa carrière, tous bassins confondus ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "5",
          "is_valid": true
        }, {
          "id": 2,
          "text": "6",
          "is_valid": false
        }, {
          "id": 3,
          "text": "8",
          "is_valid": false
        }, {
          "id": 4,
          "text": "4",
          "is_valid": false
        }
      ]
    }, {
      "id": 1367,
      "text": "Combien de titres mondiaux individuels le nageur russe Alexander Popov a-t-il remporté au cours de sa carrière en grand bassin ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "5",
          "is_valid": true
        }, {
          "id": 2,
          "text": "4",
          "is_valid": false
        }, {
          "id": 3,
          "text": "6",
          "is_valid": false
        }, {
          "id": 4,
          "text": "8",
          "is_valid": false
        }
      ]
    }, {
      "id": 1368,
      "text": "Combien de titres mondiaux individuels le nageur russe Alexander Popov a-t-il remporté au cours de sa carrière en petit bassin ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "0",
          "is_valid": true
        }, {
          "id": 2,
          "text": "1",
          "is_valid": false
        }, {
          "id": 3,
          "text": "3",
          "is_valid": false
        }, {
          "id": 4,
          "text": "4",
          "is_valid": false
        }
      ]
    }, {
      "id": 1369,
      "text": "Combien de titres européens individuels le nageur russe Alexander Popov a-t-il remporté au cours de sa carrière, tous bassins confondus ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "11",
          "is_valid": true
        }, {
          "id": 2,
          "text": "8",
          "is_valid": false
        }, {
          "id": 3,
          "text": "9",
          "is_valid": false
        }, {
          "id": 4,
          "text": "11",
          "is_valid": false
        }
      ]
    }, {
      "id": 1370,
      "text": "Combien de titres européens individuels le nageur russe Alexander Popov a-t-il remporté au cours de sa carrière en grand bassin ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "10",
          "is_valid": true
        }, {
          "id": 2,
          "text": "8",
          "is_valid": false
        }, {
          "id": 3,
          "text": "9",
          "is_valid": false
        }, {
          "id": 4,
          "text": "11",
          "is_valid": false
        }
      ]
    }, {
      "id": 1371,
      "text": "Combien de titres européens individuels le nageur russe Alexander Popov a-t-il remporté au cours de sa carrière en petit bassin ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "1",
          "is_valid": true
        }, {
          "id": 2,
          "text": "3",
          "is_valid": false
        }, {
          "id": 3,
          "text": "5",
          "is_valid": false
        }, {
          "id": 4,
          "text": "6",
          "is_valid": false
        }
      ]
    }, {
      "id": 1372,
      "text": "Dans quelle discipline le nageur russe Alexander Popov  est-il resté invaincu (trois titres) lors de ses trois participations à des Championnats du monde en grand bassin ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "100 m nage libre",
          "is_valid": true
        }, {
          "id": 2,
          "text": "50 m nage libre",
          "is_valid": false
        }, {
          "id": 3,
          "text": "4 x 100 nage libre",
          "is_valid": false
        }, {
          "id": 4,
          "text": "4 x 100 m 4 nages",
          "is_valid": false
        }
      ]
    }, {
      "id": 1373,
      "text": "En huit participations à des Championnats du monde en grand bassin, le nageur russe Alexander Popov a toujours remporté au moins une médaille d'Or sauf lors d'une seule édition, Laquelle ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "1999 à Istanbul",
          "is_valid": true
        }, {
          "id": 2,
          "text": "1997 à Séville",
          "is_valid": false
        }, {
          "id": 3,
          "text": "2002 à Berlin",
          "is_valid": false
        }, {
          "id": 4,
          "text": "2004 à Madrid",
          "is_valid": false
        }
      ]
    }, {
      "id": 1374,
      "text": "En huit mondiaux (grand bassin), combien de fois le nageur russe Alexander Popov a-t-il réalisé un quadruplé (quatre médailles d'Or) dans les 4 disciplines auxquelles il participait (50 et 100 m nage libre, 4 x 100 m nage libre et 4 x 100 4 nages) ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "4",
          "is_valid": true
        }, {
          "id": 2,
          "text": "5",
          "is_valid": false
        }, {
          "id": 3,
          "text": "3",
          "is_valid": false
        }, {
          "id": 4,
          "text": "2",
          "is_valid": false
        }
      ]
    }, {
      "id": 1375,
      "text": "Combien de records mondiaux individuels le nageur russe Alexander Popov a-t-il battu, tous bassins confondus, au cours de sa carrière ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "7",
          "is_valid": true
        }, {
          "id": 2,
          "text": "6",
          "is_valid": false
        }, {
          "id": 3,
          "text": "8",
          "is_valid": false
        }, {
          "id": 4,
          "text": "9",
          "is_valid": false
        }
      ]
    }, {
      "id": 1376,
      "text": "Combien de records mondiaux individuels le nageur russe Alexander Popov a-t-il battu en grand bassin au cours de sa carrière ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "2",
          "is_valid": true
        }, {
          "id": 2,
          "text": "3",
          "is_valid": false
        }, {
          "id": 3,
          "text": "4",
          "is_valid": false
        }, {
          "id": 4,
          "text": "5",
          "is_valid": false
        }
      ]
    }, {
      "id": 1377,
      "text": "Combien de records mondiaux individuels le nageur russe Alexander Popov a-t-il battu en petit bassin au cours de sa carrière ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "5",
          "is_valid": true
        }, {
          "id": 2,
          "text": "3",
          "is_valid": false
        }, {
          "id": 3,
          "text": "2",
          "is_valid": false
        }, {
          "id": 4,
          "text": "6",
          "is_valid": false
        }
      ]
    }, {
      "id": 1378,
      "text": "En natation sportive, quel est la nage la plus rapide ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "le crawl",
          "is_valid": true
        }, {
          "id": 2,
          "text": "le papillon",
          "is_valid": false
        }, {
          "id": 3,
          "text": "le dos crawlé",
          "is_valid": false
        }, {
          "id": 4,
          "text": "la brasse",
          "is_valid": false
        }
      ]
    }, {
      "id": 1379,
      "text": "En natation sportive, quel est la nage la moins rapide ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "la brasse",
          "is_valid": true
        }, {
          "id": 2,
          "text": "le papillon",
          "is_valid": false
        }, {
          "id": 3,
          "text": "le dos crawlé",
          "is_valid": false
        }, {
          "id": 4,
          "text": "le crawl",
          "is_valid": false
        }
      ]
    }, {
      "id": 1380,
      "text": "Lors des 13 premiers Championnats du monde de water-polo (entre 1973 et 2009), combien de titres a remporté l'équipe masculine des Etats-Unis ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Water-Polo",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "0",
          "is_valid": true
        }, {
          "id": 2,
          "text": "1",
          "is_valid": false
        }, {
          "id": 3,
          "text": "2",
          "is_valid": false
        }, {
          "id": 4,
          "text": "3",
          "is_valid": false
        }
      ]
    }, {
      "id": 1381,
      "text": "Lors des 9 premiers Championnats du monde féminin de water-polo (entre 1986 et 2009), combien de titres a remporté l'équipe des Etats-Unis ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Water-Polo",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "3",
          "is_valid": true
        }, {
          "id": 2,
          "text": "2",
          "is_valid": false
        }, {
          "id": 3,
          "text": "1",
          "is_valid": false
        }, {
          "id": 4,
          "text": "0",
          "is_valid": false
        }
      ]
    }, {
      "id": 1382,
      "text": "Quel pays détient le record de titres mondiaux en water-polo depuis la première édition en 1973 jusqu'à celle disputée en 2009 ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Water-Polo",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Etats-Unis",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Hongrie",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Italie",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Pays-bas",
          "is_valid": false
        }
      ]
    }, {
      "id": 1383,
      "text": "Quelle sélection masculine est montée le plus de fois (9) sur un podium mondial lors des 13 premiers Championnats du monde de water-polo (entre 1973 et 2009) ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Water-Polo",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Hongrie",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Espagne",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Etats-Unis",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Italie",
          "is_valid": false
        }
      ]
    }, {
      "id": 1384,
      "text": "Le water-polo est un sport collectif aquatique qui oppose deux formations de combien de joueurs (évoluant dans l'eau en même temps) ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Water-Polo",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "7",
          "is_valid": true
        }, {
          "id": 2,
          "text": "6",
          "is_valid": false
        }, {
          "id": 3,
          "text": "5",
          "is_valid": false
        }, {
          "id": 4,
          "text": "8",
          "is_valid": false
        }
      ]
    }, {
      "id": 1385,
      "text": "Dans un match officiel de water-polo chez les hommes, combien de périodes (hors prolongation) de 8 minutes de jeu effectif sont disputées ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Water-Polo",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "4",
          "is_valid": true
        }, {
          "id": 2,
          "text": "2",
          "is_valid": false
        }, {
          "id": 3,
          "text": "3",
          "is_valid": false
        }, {
          "id": 4,
          "text": "6",
          "is_valid": false
        }
      ]
    }, {
      "id": 1386,
      "text": "Au water-polo, quatre périodes de jeu effectif (hors prolongation) sont disputées au cours d'un match officiel. Combien de minutes durent-elles ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Water-Polo",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "8",
          "is_valid": true
        }, {
          "id": 2,
          "text": "10",
          "is_valid": false
        }, {
          "id": 3,
          "text": "6",
          "is_valid": false
        }, {
          "id": 4,
          "text": "7",
          "is_valid": false
        }
      ]
    }, {
      "id": 1387,
      "text": "Combien de temps morts d'une minute la formation qui est en possession de la balle peut-elle demander au cours d'un match (hors prolongation) de water-polo ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Water-Polo",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "2",
          "is_valid": true
        }, {
          "id": 2,
          "text": "1",
          "is_valid": false
        }, {
          "id": 3,
          "text": "3",
          "is_valid": false
        }, {
          "id": 4,
          "text": "4",
          "is_valid": false
        }
      ]
    }, {
      "id": 1388,
      "text": "Quelle est la durée d'un temps mort dans un match de water-polo ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Water-Polo",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "1 minute",
          "is_valid": true
        }, {
          "id": 2,
          "text": "30 secondes",
          "is_valid": false
        }, {
          "id": 3,
          "text": "1 minute 30",
          "is_valid": false
        }, {
          "id": 4,
          "text": "2 minutes",
          "is_valid": false
        }
      ]
    }, {
      "id": 1389,
      "text": "Au water-polo, de combien de secondes maximum dispose l'équipe qui vient de prendre possession de la balle pour tirer au but ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Water-Polo",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "30 secondes",
          "is_valid": true
        }, {
          "id": 2,
          "text": "24 secondes",
          "is_valid": false
        }, {
          "id": 3,
          "text": "28 secondes",
          "is_valid": false
        }, {
          "id": 4,
          "text": "26 secondes",
          "is_valid": false
        }
      ]
    }, {
      "id": 1390,
      "text": "Au water-polo, par quelle(s) partie(s) du corps un but peut-il être marqué ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Water-Polo",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Toutes les parties du corps sauf le poing fermé",
          "is_valid": true
        }, {
          "id": 2,
          "text": "la main",
          "is_valid": false
        }, {
          "id": 3,
          "text": "le pied",
          "is_valid": false
        }, {
          "id": 4,
          "text": "la tête",
          "is_valid": false
        }
      ]
    }, {
      "id": 1391,
      "text": "Au water-polo, combien de remplaçants sont autorisés dans les équipes masculines ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Water-Polo",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "6",
          "is_valid": true
        }, {
          "id": 2,
          "text": "5",
          "is_valid": false
        }, {
          "id": 3,
          "text": "4",
          "is_valid": false
        }, {
          "id": 4,
          "text": "7",
          "is_valid": false
        }
      ]
    }, {
      "id": 1392,
      "text": "Depuis 2000 et la première édition des Championnats du monde de nage en eau libre, combien d'épreuves sont-elles disputées, hommes et femmes confondues ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "6",
          "is_valid": true
        }, {
          "id": 2,
          "text": "4",
          "is_valid": false
        }, {
          "id": 3,
          "text": "2",
          "is_valid": false
        }, {
          "id": 4,
          "text": "8",
          "is_valid": false
        }
      ]
    }, {
      "id": 1393,
      "text": "En nage en eau libre, laquelle de ces distances n'est pas disputée lors des Championnats du monde, que ce soit chez les hommes ou chez les femmes ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "20 km",
          "is_valid": true
        }, {
          "id": 2,
          "text": "5 km",
          "is_valid": false
        }, {
          "id": 3,
          "text": "10 km",
          "is_valid": false
        }, {
          "id": 4,
          "text": "25 km",
          "is_valid": false
        }
      ]
    }, {
      "id": 1394,
      "text": "En natation synchronisée, qu'est ce qui est interdit de faire lors de l'exécution d'un programme, quel qu'il soit ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Toucher le fond ou le bord du bassin de la piscine",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Faire un porté",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Effectuer des mouvements hors de l'eau",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Être projeté complètement hors de l'eau",
          "is_valid": false
        }
      ]
    }, {
      "id": 1395,
      "text": "En natation synchronisée, les duos ont droit à combien de remplaçante(s) ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "1",
          "is_valid": true
        }, {
          "id": 2,
          "text": "2",
          "is_valid": false
        }, {
          "id": 3,
          "text": "3",
          "is_valid": false
        }, {
          "id": 4,
          "text": "4",
          "is_valid": false
        }
      ]
    }, {
      "id": 1396,
      "text": "En natation synchronisée, les équipes ont droit à combien de remplaçante(s) ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "2",
          "is_valid": true
        }, {
          "id": 2,
          "text": "1",
          "is_valid": false
        }, {
          "id": 3,
          "text": "3",
          "is_valid": false
        }, {
          "id": 4,
          "text": "4",
          "is_valid": false
        }
      ]
    }, {
      "id": 1397,
      "text": "En natation synchronisée, qu'est ce que les nageuses ont l'interdiction de porter ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "un ou des bijou(x)",
          "is_valid": true
        }, {
          "id": 2,
          "text": "un pince-nez",
          "is_valid": false
        }, {
          "id": 3,
          "text": "un maillot de bain",
          "is_valid": false
        }, {
          "id": 4,
          "text": "du maquillage",
          "is_valid": false
        }
      ]
    }, {
      "id": 1398,
      "text": "En quelle année se sont disputés les premiers Championnats du monde de natation synchronisée ?",
      "category": "Tous sports",
      "difficulty": 4,
      "sub_category": "Natation",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "1973",
          "is_valid": true
        }, {
          "id": 2,
          "text": "1975",
          "is_valid": false
        }, {
          "id": 3,
          "text": "1978",
          "is_valid": false
        }, {
          "id": 4,
          "text": "1982",
          "is_valid": false
        }
      ]
    }, {
      "id": 1399,
      "text": "Dans quel club français s'est engagé le handballeur Jérôme Fernandez en mars 2011 ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Handball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Toulouse",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Dunkerque",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Chambéry",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Montpellier",
          "is_valid": false
        }
      ]
    }, {
      "id": 1400,
      "text": "Quelle est la nationalité du basketteur Nando De Colo ?",
      "category": "Tous sports",
      "difficulty": 1,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Française",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Portugaise",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Angolaise",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Portoricaine",
          "is_valid": false
        }
      ]
    }, {
      "id": 1401,
      "text": "Dans quel club évoluait le basketteur Nando De Colo lors de la saison 2008-2009 ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Cholet",
          "is_valid": true
        }, {
          "id": 2,
          "text": "ASVEL",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Gravelines",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Limoges",
          "is_valid": false
        }
      ]
    }, {
      "id": 1402,
      "text": "Quel club étranger a rejoint le basketteur Nando De Colo  en 2009 ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Valence",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Malaga",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Barcelone",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Real Madrid",
          "is_valid": false
        }
      ]
    }, {
      "id": 1403,
      "text": "Dans quel club espagnol évoluait Pau Gasol avant de rejoindre la NBA en 2001 ?",
      "category": "Tous sports",
      "difficulty": 2,
      "sub_category": "Basketball",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Barcelone",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Malaga",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Valence",
          "is_valid": false
        }, {
          "id": 4,
          "text": "Real Madrid",
          "is_valid": false
        }
      ]
    }, {
      "id": 1404,
      "text": "Où se sont déroulés les championnats du monde de badminton en 2010 ?",
      "category": "Tous sports",
      "difficulty": 3,
      "sub_category": "Badminton",
      "une_id": null,
      "propositions": [
        {
          "id": 1,
          "text": "Paris",
          "is_valid": true
        }, {
          "id": 2,
          "text": "Pékin",
          "is_valid": false
        }, {
          "id": 3,
          "text": "Moscou",
          "is_valid": false
        }, {
          "id": 4,
          "text": "New-York",
          "is_valid": false
        }
      ]
    }
  ];
  
});
window.require.register("config/sound-config", function(exports, require, module) {
  module.exports = {
    assetPath: 'sounds',
    sounds: []
  };
  
});
window.require.register("config/stages/dupa-stage-config", function(exports, require, module) {
  module.exports = {
    stage: {
      answerTime: 60,
      thresholds: [100, 200, 300, 400, 500, 1000, 2000, 3000, 4000, 5000],
      timeBonus: 10
    },
    player: {}
  };
  
});
window.require.register("controllers/base/controller", function(exports, require, module) {
  var Chaplin, Controller, PreloadHelper, SoundHelper, mediator, _ref,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Chaplin = require('chaplin');

  SoundHelper = require('helpers/sound-helper');

  PreloadHelper = require('helpers/preload-helper');

  mediator = require('mediator');

  module.exports = Controller = (function(_super) {
    __extends(Controller, _super);

    function Controller() {
      this.loadView = __bind(this.loadView, this);    _ref = Controller.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    Controller.prototype.assetKey = null;

    Controller.prototype.historyURL = null;

    Controller.prototype.loadView = function(assetKey, createView, callback, options) {
      var loaded, _ref1, _ref2, _ref3, _ref4, _ref5,
        _this = this;

      this.assetKey = assetKey;
      if (options == null) {
        options = {};
      }
      if ((_ref1 = options.tracked) == null) {
        options.tracked = true;
      }
      if ((_ref2 = options.spinner) == null) {
        options.spinner = true;
      }
      if ((_ref3 = options.viewTransition) == null) {
        options.viewTransition = false;
      }
      if ((_ref4 = options.music) == null) {
        options.music = false;
      }
      if ((_ref5 = this.assetKey) == null) {
        this.assetKey = this.historyURL;
      }
      loaded = function() {
        _this.view = createView();
        if (callback != null) {
          callback(_this.view);
        }
        if (options.tracked) {
          mediator.analytics.trackPageView(_this.title);
        }
        if (options.music) {
          SoundHelper.play(options.music);
        }
        if (options.viewTransition) {
          return _this.view.unDim();
        }
      };
      if (this.assetKey) {
        return setTimeout(function() {
          return PreloadHelper.preloadAssets(_this.assetKey, loaded);
        }, 0);
      } else {
        return loaded();
      }
    };

    Controller.prototype.dispose = function() {
      mediator.publish('apicalls:abort');
      SoundHelper.stopAll();
      if (this.assetKey) {
        PreloadHelper.removeAssets(this.assetKey);
      }
      return Controller.__super__.dispose.apply(this, arguments);
    };

    return Controller;

  })(Chaplin.Controller);
  
});
window.require.register("controllers/ingame/game-controller", function(exports, require, module) {
  var AnalyticsHelper, ConfigHelper, Controller, FacebookHelper, Factory, GameController, GameStatHelper, Player, PopUpHelper, QuestionsList, config, i18n, mediator, _ref,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Controller = require('controllers/base/controller');

  mediator = require('mediator');

  Player = require('models/ingame/player-model');

  Factory = require('helpers/factory-helper');

  ConfigHelper = require('helpers/config-helper');

  config = require('config/environment-config');

  AnalyticsHelper = require('helpers/analytics-helper');

  FacebookHelper = require('helpers/facebook-helper');

  PopUpHelper = require('helpers/pop-up-helper');

  i18n = require('lib/i18n');

  QuestionsList = require('config/questions/questions');

  GameStatHelper = require('helpers/game-stat-helper');

  module.exports = GameController = (function(_super) {
    __extends(GameController, _super);

    function GameController() {
      this.initQuestions = __bind(this.initQuestions, this);
      this.initPlayers = __bind(this.initPlayers, this);
      this.loadNextStage = __bind(this.loadNextStage, this);
      this.finishGame = __bind(this.finishGame, this);
      this.index = __bind(this.index, this);    _ref = GameController.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    GameController.prototype.historyURL = 'game';

    GameController.prototype.title = 'Jeu';

    GameController.prototype.currentController = null;

    GameController.prototype.currentStageIndex = -1;

    GameController.prototype.stageName = null;

    GameController.prototype.i18nStageName = null;

    GameController.prototype.loaded = false;

    GameController.prototype.game = {};

    GameController.prototype.players = [];

    GameController.prototype.stages = [
      {
        name: 'dupa',
        type: 'dupa',
        i18n_key: 'dupa'
      }
    ];

    GameController.prototype.index = function() {
      var _this = this;

      if (typeof PushNotifications !== "undefined" && PushNotifications !== null) {
        PushNotifications.block();
      }
      this.subscribeEvent('stage:finish', this.finishGame);
      this.subscribeEvent('game:finish', this.finishGame);
      return this.loadGame(function() {
        if (_this.loaded) {
          return _this.loadNextStage();
        }
      });
    };

    GameController.prototype.payGame = function() {
      var user;

      if (!config.pay_game) {
        return true;
      }
      user = Parse.User.current();
      if (user.get('health') <= 0) {
        return false;
      }
      return user.set('health', user.get('health') - 1).save();
    };

    GameController.prototype.loadGame = function(callback) {
      var response;

      if (!this.payGame()) {
        return;
      }
      GameStatHelper.reset();
      response = {
        stages: {
          dupa: {
            questions: this.initQuestions()
          }
        }
      };
      console.log('GAME => ', response);
      this.game = response;
      this.initPlayers();
      this.loaded = true;
      return callback();
    };

    GameController.prototype.finishGame = function() {
      var data, human;

      human = this.players[0];
      AnalyticsHelper.trackPageView("EndGame - " + this.i18nStageName);
      data = {
        jackpot: human.get('jackpot'),
        uuid: mediator.user.get('uuid')
      };
      return this.redirectToRoute("game-won", {
        jackpot: human.get('jackpot'),
        reward: 10,
        rank: human.get('rank')
      });
    };

    GameController.prototype.loadNextStage = function() {
      var stage, _ref1;

      if (!this.loaded) {
        return;
      }
      this.currentStageIndex++;
      stage = this.stages[this.currentStageIndex];
      this.i18nStageName = stage.i18n_key;
      if (!/duel/.test(stage.name)) {
        this.stageName = stage.name;
      }
      if ((_ref1 = this.currentController) != null) {
        _ref1.dispose();
      }
      this.currentController = Factory.stageController(stage, this.players, this.game.stages[stage.name]);
      this.currentController.start();
      return AnalyticsHelper.trackPageView(this.i18nStageName);
    };

    GameController.prototype.initPlayers = function() {
      return this.players = [new Player(Parse.User.current().attributes)];
    };

    GameController.prototype.initQuestions = function() {
      return _.groupBy(QuestionsList, function(question) {
        return question.difficulty;
      });
    };

    GameController.prototype.dispose = function() {
      var _ref1;

      if ((_ref1 = this.currentController) != null) {
        _ref1.dispose();
      }
      return GameController.__super__.dispose.apply(this, arguments);
    };

    return GameController;

  })(Controller);
  
});
window.require.register("controllers/ingame/game-over-controller", function(exports, require, module) {
  var Controller, GameOverController, GameOverView, GameStatHelper, I18n, PlayerModel, SoundHelper, _ref,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Controller = require('controllers/base/controller');

  PlayerModel = require('models/ingame/player-model');

  GameOverView = require('views/ingame/game-over-view');

  SoundHelper = require('helpers/sound-helper');

  I18n = require('lib/i18n');

  GameStatHelper = require('helpers/game-stat-helper');

  module.exports = GameOverController = (function(_super) {
    __extends(GameOverController, _super);

    function GameOverController() {
      _ref = GameOverController.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    GameOverController.prototype.index = function(success, params) {
      var _this = this;

      return this.loadView('game-over', function() {
        var user;

        GameStatHelper.setBestScore(params.jackpot);
        GameStatHelper.incrementSumScore(params.jackpot);
        GameStatHelper.saveStats();
        user = Parse.User.current();
        user.increment('credits', 10).save();
        params.stats = _.map(GameStatHelper.getEndGameScoreStat(), function(val, key) {
          return {
            name: key,
            number: val,
            text: I18n.t('controller.game_over.stats.' + key)
          };
        });
        return new GameOverView({
          success: success,
          params: params,
          player: {
            health: user.get('health'),
            credits: user.get('credits')
          }
        });
      }, function(view) {
        return view.delegate('click', '#replay', function() {
          return _this.redirectTo('game');
        });
      }, {
        viewTransition: true,
        music: 'game-over'
      });
    };

    GameOverController.prototype.lost = function(params) {
      return this.index(false, params);
    };

    GameOverController.prototype.won = function(params) {
      return this.index(true, params);
    };

    return GameOverController;

  })(Controller);
  
});
window.require.register("controllers/ingame/player-controller", function(exports, require, module) {
  var Controller, Model, PlayersController, mediator, _ref,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Controller = require('controllers/base/controller');

  Model = require('models/ingame/player-model');

  mediator = require('mediator');

  module.exports = PlayersController = (function(_super) {
    __extends(PlayersController, _super);

    function PlayersController() {
      _ref = PlayersController.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    PlayersController.prototype.initialize = function(data) {
      return mediator.user = new Model();
    };

    return PlayersController;

  })(Controller);
  
});
window.require.register("controllers/ingame/stage-controller", function(exports, require, module) {
  var Controller, PopUpHelper, SoundHelper, StageController, _ref,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Controller = require('controllers/base/controller');

  PopUpHelper = require('helpers/pop-up-helper');

  SoundHelper = require('helpers/sound-helper');

  module.exports = StageController = (function(_super) {
    __extends(StageController, _super);

    function StageController() {
      this.onResignActive = __bind(this.onResignActive, this);
      this.resume = __bind(this.resume, this);
      this.pause = __bind(this.pause, this);
      this.finishStage = __bind(this.finishStage, this);    _ref = StageController.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    StageController.prototype.model = null;

    StageController.prototype.assetKey = null;

    StageController.prototype.name = null;

    StageController.prototype.type = null;

    StageController.prototype.i18n_key = null;

    StageController.prototype.paused = false;

    StageController.prototype.onResume = null;

    StageController.prototype.initialize = function(stage) {
      this.assetKey = stage.name;
      this.name = stage.name;
      this.type = stage.type;
      this.i18n_key = stage.i18n_key;
      document.addEventListener('pause', this.onResignActive, false);
      return StageController.__super__.initialize.apply(this, arguments);
    };

    StageController.prototype.finishStage = function() {
      return this.publishEvent('game:finish');
    };

    StageController.prototype.setStageModel = function(model) {
      this.model = model;
      return this;
    };

    StageController.prototype.start = function() {
      var _ref1;

      if ((_ref1 = this.view) != null) {
        _ref1.delegate('click', '.btn-menu', this.pause);
      }
      return SoundHelper.play(this.name);
    };

    StageController.prototype.pause = function() {
      var templateData;

      if (this.paused) {
        return;
      }
      this.paused = true;
      console.log("paused");
      this.subscribeEvent('popup:pause:ok', this.resume);
      templateData = {
        key: 'pause',
        template: 'pause',
        music: SoundHelper.musicMuted ? 'off' : '',
        fx: SoundHelper.sfxMuted ? 'off' : ''
      };
      return PopUpHelper.initialize(templateData);
    };

    StageController.prototype.resume = function() {
      if (!this.paused) {
        return;
      }
      this.paused = false;
      console.log("resumed");
      if (typeof this.onResume === "function") {
        this.onResume();
      }
      return this.onResume = null;
    };

    StageController.prototype.onResignActive = function(e) {
      return this.pause();
    };

    StageController.prototype.dispose = function() {
      var _ref1;

      if ((_ref1 = this.timer) != null) {
        _ref1.destroy();
      }
      document.removeEventListener('pause', this.onResignActive, false);
      return StageController.__super__.dispose.apply(this, arguments);
    };

    return StageController;

  })(Controller);
  
});
window.require.register("controllers/ingame/stages/dupa-stage-controller", function(exports, require, module) {
  var DupaStageController, DupaStageView, GameStatHelper, StageController, Timer, i18n, utils, _ref,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  StageController = require('controllers/ingame/stage-controller');

  DupaStageView = require('views/ingame/stages/dupa-stage-view');

  Timer = require('helpers/timer-helper');

  i18n = require('lib/i18n');

  utils = require('lib/utils');

  GameStatHelper = require('helpers/game-stat-helper');

  module.exports = DupaStageController = (function(_super) {
    __extends(DupaStageController, _super);

    function DupaStageController() {
      this.beforeFinishStage = __bind(this.beforeFinishStage, this);
      this.playerDidAnswer = __bind(this.playerDidAnswer, this);
      this.askNextQuestion = __bind(this.askNextQuestion, this);    _ref = DupaStageController.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    DupaStageController.prototype.timer = null;

    DupaStageController.prototype.bonusFiftyFiftyUsed = false;

    DupaStageController.prototype.bonusMassUsed = false;

    DupaStageController.prototype.bonusDoubleUsed = false;

    DupaStageController.prototype.row = 0;

    DupaStageController.prototype.startTime = null;

    DupaStageController.prototype.start = function() {
      var t,
        _this = this;

      t = this.model.getConfigValue('thresholds').slice(0).reverse();
      this.view = new DupaStageView({
        stage: {
          name: this.name,
          type: this.type
        },
        thresholds: t,
        bonus: this.model.get('player').getBonuses(),
        time: this.model.getConfigValue('answerTime')
      });
      this.timer = new Timer(function(duration) {
        return _this.view.updateTimer(duration);
      });
      GameStatHelper.incrementGamesPlayedCount();
      DupaStageController.__super__.start.apply(this, arguments);
      return this.view.unDim(function() {
        _this.timer.schedule(_this.model.getConfigValue('answerTime'), 0, function() {
          return setTimeout(function() {
            return _this.beforeFinishStage();
          }, 200);
        });
        _this.view.updateJackpot(0, _this.model.getCurrentThreshold());
        _this.view.welcome(_this.askNextQuestion);
        return _this.view.delegate('click', '.bonus', function(event) {
          return _this.view.chooseBonus(event.currentTarget, function(bonusName) {
            if (_this.canUseBonus(bonusName) && _this.model.get('player').consumeBonus(bonusName)) {
              _this.view.updateBonus(event.currentTarget, _this.model.get('player').getBonusQuantity(bonusName));
              return _this.executeBonus(bonusName);
            }
          });
        });
      });
    };

    DupaStageController.prototype.askNextQuestion = function() {
      var player, question,
        _this = this;

      this.startTime = new Date().getTime();
      if (this.bonusDoubleUsed) {
        this.view.doubleScoreDeactivated();
      }
      this.timer.start();
      this.bonusFiftyFiftyUsed = false;
      this.bonusMassUsed = false;
      this.bonusDoubleUsed = false;
      player = this.model.getHumanPlayer();
      question = this.model.getNextQuestion();
      return this.view.showQuestion(question, function() {
        _this.view.undelegateSingle('click', '.proposition');
        return _this.view.delegateSingleOnce('click', '.proposition', function(event) {
          return _this.view.chooseProposition(event.currentTarget, function(propositionId) {
            var result;

            result = question.isCorrectAnswer(propositionId);
            return _this.view.updateAnswerButton(propositionId, result, function() {
              return _this.playerDidAnswer(player, question, result);
            }, question);
          });
        });
      });
    };

    DupaStageController.prototype.playerDidAnswer = function(player, question, result) {
      if (result) {
        this.model.playerMadeSuccess(player, this.bonusDoubleUsed);
        this.row++;
      } else {
        this.model.playerMadeError(player);
        if (this.row > 0) {
          GameStatHelper.setBestRow(this.row);
        }
        this.row = 0;
      }
      GameStatHelper.incrementAnswersCount(result, question.get('category'));
      GameStatHelper.incrementSumTimeQuestion((new Date().getTime()) - this.startTime);
      this.view.updateJackpot(player.get('jackpot'), this.model.getCurrentThreshold(), result);
      return this.askNextQuestion();
    };

    DupaStageController.prototype.beforeFinishStage = function(player) {
      if (this.row > 0) {
        GameStatHelper.setBestRow(this.row);
      }
      return this.finishStage();
    };

    /* Bonus handling
    */


    DupaStageController.prototype.canUseBonus = function(bonusName) {
      if (bonusName === 'mass' && this.bonusMassUsed) {
        return false;
      }
      if (bonusName === 'fifty_fifty' && this.bonusFiftyFiftyUsed) {
        return false;
      }
      if (bonusName === 'double' && this.bonusDoubleUsed) {
        return false;
      }
      if (bonusName === 'add_time' && this.model.getConfigValue('timeBonus') + Math.floor(this.timer.duration) > this.model.getConfigValue('answerTime')) {
        return false;
      }
      return true;
    };

    DupaStageController.prototype.executeBonus = function(bonusName) {
      var _name;

      return typeof this[_name = $.camelCase('executeBonus-' + utils.dasherize(bonusName))] === "function" ? this[_name]() : void 0;
    };

    DupaStageController.prototype.executeBonusFiftyFifty = function() {
      this.view.hideSomeAnswers(this.model.getCurrentQuestion().getWrongAnwers(2));
      return this.bonusFiftyFiftyUsed = true;
    };

    DupaStageController.prototype.executeBonusMass = function() {
      this.view.displayMass(this.model.getCurrentQuestion().getPonderatedAnwers());
      return this.bonusMassUsed = true;
    };

    DupaStageController.prototype.executeBonusDouble = function() {
      this.view.doubleScoreActivated();
      return this.bonusDoubleUsed = true;
    };

    DupaStageController.prototype.executeBonusAddTime = function() {
      return this.timer.adjustDuration(this.model.getConfigValue('timeBonus'));
    };

    DupaStageController.prototype.executeBonusSkip = function() {
      return this.askNextQuestion();
    };

    return DupaStageController;

  })(StageController);
  
});
window.require.register("controllers/outgame/hall-of-fame-controller", function(exports, require, module) {
  var AnalyticsHelper, ConfigHelper, Controller, FacebookHelper, HallOfFameController, HallOfFameView, i18n, mediator, _ref,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Controller = require('controllers/base/controller');

  HallOfFameView = require('views/outgame/hall-of-fame-view');

  mediator = require('mediator');

  ConfigHelper = require('helpers/config-helper');

  AnalyticsHelper = require('helpers/analytics-helper');

  FacebookHelper = require('helpers/facebook-helper');

  i18n = require('lib/i18n');

  module.exports = HallOfFameController = (function(_super) {
    __extends(HallOfFameController, _super);

    function HallOfFameController() {
      this.FacebookInvite = __bind(this.FacebookInvite, this);
      this.friendsToInvite = __bind(this.friendsToInvite, this);
      this.connectFacebook = __bind(this.connectFacebook, this);
      this.addFriends = __bind(this.addFriends, this);
      this.askFriend = __bind(this.askFriend, this);
      this.getDate = __bind(this.getDate, this);
      this.onClickGlobal = __bind(this.onClickGlobal, this);
      this.onClickFriends = __bind(this.onClickFriends, this);
      this.updateRanking = __bind(this.updateRanking, this);
      this.fetchPlayers = __bind(this.fetchPlayers, this);    _ref = HallOfFameController.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    HallOfFameController.prototype.historyURL = 'hall-of-fame';

    HallOfFameController.prototype.title = 'Hall of Fame';

    HallOfFameController.prototype.collection = null;

    HallOfFameController.prototype.request = null;

    HallOfFameController.prototype.fetchPlayers = function(withFriends) {
      var fbConnected, i, noFriends, position, ranking, _i, _ref1;

      this.friend = withFriends ? true : false;
      ranking = withFriends ? this.friendsArray : this.globalArray;
      this.collection = [];
      for (i = _i = 0, _ref1 = ranking.length; 0 <= _ref1 ? _i < _ref1 : _i > _ref1; i = 0 <= _ref1 ? ++_i : --_i) {
        this.collection[i] = {
          friend: this.friend,
          rank: ranking[i].rank,
          username: ranking[i].username,
          jackpot: ranking[i].score,
          profilepic: !!ranking[i].fb_id ? 'https://graph.facebook.com/' + ranking[i].fb_id + '/picture' : null
        };
        if (ranking[i].username === this.user.get('username')) {
          position = i;
        }
      }
      fbConnected = FacebookHelper.isLinked();
      noFriends = this.collection.length <= 1;
      return this.updateRanking(position, noFriends, fbConnected, withFriends);
    };

    HallOfFameController.prototype.index = function() {
      var _this = this;

      this.user = Parse.User.current();
      this.friendsArray = [];
      this.globalArray = [];
      FacebookHelper.getOtherFriends(function(friends) {
        return _this.friendsToInvite(friends);
      });
      Parse.Cloud.run('getAllScore', {
        rank: this.user.get('rank'),
        userId: this.user.id
      }, {
        success: function(players) {
          return _this.globalArray = players;
        },
        error: function() {
          return console.log('toto s dead');
        }
      });
      FacebookHelper.getFriends(function(friends) {
        var friendsId;

        friendsId = _.pluck(friends, 'id');
        return Parse.Cloud.run('getFriendsScore', {
          friendsId: friendsId
        }, {
          success: function(players) {
            players.push(Parse.User.current().attributes);
            players = players.sort(function(f1, f2) {
              return f2.score - f1.score;
            });
            _this.friendsArray = players;
            return _this.fetchPlayers(true);
          }
        });
      });
      this.targetDate = this.getDate();
      return this.loadView(null, function() {
        var params;

        params = {
          targetDate: _this.targetDate,
          rank: mediator.user.get('rank'),
          credits: mediator.user.get('credits'),
          health: mediator.user.get('health')
        };
        return new HallOfFameView(params);
      }, function(view) {
        view.delegate('click', '#btn-friends', _this.onClickFriends);
        view.delegate('click', '#btn-global', _this.onClickGlobal);
        view.delegate('click', '.ask-friend', _this.askFriend);
        view.delegate('click', '#no-friends', _this.addFriends);
        view.delegate('click', '#no-fb-connected', _this.connectFacebook);
        view.delegate('click', '.invite-btn', _this.FacebookInvite);
        if (_this.collection) {
          return _this.updateRanking();
        }
      }, {
        viewTransition: true,
        music: 'outgame'
      });
    };

    HallOfFameController.prototype.updateRanking = function(i, noFriends, fbConnected, withFriends) {
      var _ref1;

      return (_ref1 = this.view) != null ? _ref1.updateRankingList(this.collection, i, noFriends, fbConnected, withFriends, this.friendsToInvite) : void 0;
    };

    HallOfFameController.prototype.onClickFriends = function(e) {
      if (!$(e.target).hasClass('active')) {
        AnalyticsHelper.trackEvent('HallOfFame', 'Affichage des amis');
        this.fetchPlayers(true);
        return this.view.chooseList(e.target);
      }
    };

    HallOfFameController.prototype.onClickGlobal = function(e) {
      if (!$(e.target).hasClass('active')) {
        AnalyticsHelper.trackEvent('HallOfFame', 'Affichage adversaires');
        this.fetchPlayers(false);
        return this.view.chooseList(e.target);
      }
    };

    HallOfFameController.prototype.getDate = function() {
      var targetDate;

      targetDate = new Date();
      targetDate.setHours(0);
      targetDate.setMinutes(0);
      targetDate.setSeconds(0);
      targetDate.setDate(targetDate.getDate() - targetDate.getDay() + 7);
      return targetDate;
    };

    HallOfFameController.prototype.askFriend = function(e) {
      if (!$(e.target).hasClass('asked')) {
        return this.view.askFriend(e.target);
      }
    };

    HallOfFameController.prototype.addFriends = function() {
      return FacebookHelper.friendRequest(i18n.t('controller.home.facebook_invite_message'));
    };

    HallOfFameController.prototype.connectFacebook = function() {
      if (!FacebookHelper.isLinked()) {
        return FacebookHelper.linkPlayer();
      }
    };

    HallOfFameController.prototype.friendsToInvite = function(friends) {
      var friend, friends2, results, tmp, user, _i, _len;

      friends2 = _.pluck(friends, 'id');
      user = Parse.User.current();
      tmp = _.first(_.shuffle(_.difference(friends2, user.get('fb_invited'))), 3);
      console.log(_.difference(friends2, user.get('fb_invited')));
      console.log(friends2, user.get('fb_invited'));
      results = [];
      for (_i = 0, _len = tmp.length; _i < _len; _i++) {
        friend = tmp[_i];
        FB.api('/' + friend + '?fields=name', function(response) {
          return results.push(response);
        });
      }
      return this.friendsToInvite = results;
    };

    HallOfFameController.prototype.FacebookInvite = function(event) {
      var id;

      id = $(event.currentTarget).data('id');
      return FacebookHelper.friendRequestTo(i18n.t('controller.home.facebook_invite_message')(id));
    };

    return HallOfFameController;

  })(Controller);
  
});
window.require.register("controllers/outgame/home-controller", function(exports, require, module) {
  var AnalyticsHelper, Controller, FacebookHelper, HomeController, HomePageView, NoFriendsJournalView, OneFriendJournalView, TwoFriendsJournalView, TwoplusFriendsJournalView, i18n, mediator, _ref,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Controller = require('controllers/base/controller');

  HomePageView = require('views/outgame/home-page-view');

  mediator = require('mediator');

  i18n = require('lib/i18n');

  FacebookHelper = require('helpers/facebook-helper');

  AnalyticsHelper = require('helpers/analytics-helper');

  NoFriendsJournalView = require('views/outgame/journal/no-friends-journal-view');

  OneFriendJournalView = require('views/outgame/journal/one-friend-journal-view');

  TwoFriendsJournalView = require('views/outgame/journal/two-friends-journal-view');

  TwoplusFriendsJournalView = require('views/outgame/journal/twoplus-friends-journal-view');

  module.exports = HomeController = (function(_super) {
    __extends(HomeController, _super);

    function HomeController() {
      this.onClickFacebook = __bind(this.onClickFacebook, this);
      this.viewLoaded = __bind(this.viewLoaded, this);    _ref = HomeController.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    HomeController.prototype.historyURL = 'home';

    HomeController.prototype.title = 'Home';

    HomeController.prototype.index = function() {
      var _this = this;

      if (typeof PushNotifications !== "undefined" && PushNotifications !== null) {
        PushNotifications.unblock();
      }
      return this.loadView('home', function() {
        var user;

        user = Parse.User.current();
        return new HomePageView({
          hearts: user.get('health'),
          credits: user.get('credits')
        });
      }, function(view) {
        if (mediator.justLaunched && (typeof ChartBoost !== "undefined" && ChartBoost !== null)) {
          setTimeout(function() {
            AnalyticsHelper.trackEvent('Splash', "ChartBoost Splash");
            return ChartBoost.showInterstitial(function(response) {
              return _this.viewLoaded(view);
            });
          }, 1000);
        } else {
          _this.viewLoaded(view);
        }
        return mediator.setJustLaunched(false);
      }, {
        viewTransition: true,
        music: 'outgame'
      });
    };

    HomeController.prototype.viewLoaded = function(view) {
      var _ref1, _ref2,
        _this = this;

      if ((typeof navigator !== "undefined" && navigator !== null ? (_ref1 = navigator.splashscreen) != null ? _ref1.hide : void 0 : void 0) != null) {
        navigator.splashscreen.hide();
      }
      if ((_ref2 = this.view) != null) {
        _ref2.setJournalMessage('loading');
      }
      this.view.delegate('click', '#game-link', function() {
        return _this.view.dim(function() {
          return _this.redirectTo('game');
        });
      });
      return FacebookHelper.getFriends(function(friends) {
        _this.getJournalView(friends, function() {
          var _ref3;

          return (_ref3 = _this.view) != null ? _ref3.setJournalMessage('touch') : void 0;
        });
        _this.view.delegate('click', '#equipe-btn', function() {
          return _this.view.toggleJournal();
        });
        _this.view.delegate('click', '#invite-btn', _this.onClickFacebook);
        return _this.view.delegate('click', '#hall-of-fame', function() {
          return _this.view.dim(function() {
            return _this.redirectTo('hall-of-fame');
          });
        });
      }, function() {
        var _ref3;

        return (_ref3 = _this.view) != null ? _ref3.setJournalMessage('error') : void 0;
      });
    };

    HomeController.prototype.onClickFacebook = function() {
      return FacebookHelper.friendRequest(i18n.t('controller.home.facebook_invite_message'));
    };

    HomeController.prototype.getJournalView = function(friends, callback) {
      switch (friends.length) {
        case 0:
          return this.getSmallLeaderboard(this.getNoFriendsJournalView, callback);
        case 1:
          return this.getFriendsScore(friends, this.getOneFriendJournalView, callback);
        case 2:
          return this.getFriendsScore(friends, this.getTwoFriendsJournalView, callback);
        default:
          return this.getFriendsScore(friends, this.getTwoplusFriendsJournalView, callback);
      }
    };

    HomeController.prototype.getNoFriendsJournalView = function(people) {
      var options, targetDate;

      targetDate = new Date();
      targetDate.setHours(0);
      targetDate.setMinutes(0);
      targetDate.setSeconds(0);
      targetDate.setDate(targetDate.getDate() - targetDate.getDay() + 7);
      options = {
        targetDate: targetDate,
        username: Parse.User.current().get('username'),
        fb_id: Parse.User.current().get('fb_id'),
        participants: people
      };
      return new NoFriendsJournalView(options);
    };

    HomeController.prototype.getFriendsScore = function(friends, journalView, callback) {
      var friendsId,
        _this = this;

      friendsId = _.pluck(friends, 'id');
      return Parse.Cloud.run('getFriendsScore', {
        friendsId: friendsId
      }, {
        success: function(players) {
          players.push(Parse.User.current().attributes);
          players = players.sort(function(f1, f2) {
            return f2.score - f1.score;
          });
          callback();
          return _this.view.addJournalView(journalView(players));
        },
        error: function(error) {
          return console.log('ERROR : ', error);
        }
      });
    };

    HomeController.prototype.getSmallLeaderboard = function(journalView, callback) {
      var _this = this;

      return Parse.Cloud.run('smallLeaderboard', {
        size: 3
      }, {
        success: function(players) {
          players = players.sort(function(f1, f2) {
            return f2.score - f1.score;
          });
          _this.view.addJournalView(journalView(players));
          return callback();
        },
        error: function(error) {
          return console.log('ERROR : ', error);
        }
      });
    };

    HomeController.prototype.getOneFriendJournalView = function(players) {
      var options;

      options = {
        winner: players[0].username,
        loser: players[1].username,
        participants: players
      };
      return new OneFriendJournalView(options);
    };

    HomeController.prototype.getTwoFriendsJournalView = function(players) {
      var options;

      options = {
        master: players[0].username,
        participants: players
      };
      return new TwoFriendsJournalView(options);
    };

    HomeController.prototype.getTwoplusFriendsJournalView = function(players) {
      var name, options, rank, title;

      rank = _.indexOf(players, Parse.User.current().attributes) + 1;
      name = Parse.User.current().get('username');
      if (rank < 4) {
        title = i18n.t("controller.home.journal.twoplus.rank_" + rank, name);
      } else {
        title = i18n.t("controller.home.journal.twoplus.rank_n", name, rank, null);
      }
      options = {
        title: title,
        participants: players
      };
      return new TwoplusFriendsJournalView(options);
    };

    return HomeController;

  })(Controller);
  
});
window.require.register("controllers/outgame/login-controller", function(exports, require, module) {
  var AnalyticsHelper, ConfigHelper, Controller, FacebookHelper, LequipeSSOHelper, LocalStorageHelper, LoginController, LoginView, PopUpHelper, SpinnerHelper, User, config, i18n, mediator, utils, _ref,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Controller = require('controllers/base/controller');

  utils = require('lib/utils');

  LocalStorageHelper = require('helpers/local-storage-helper');

  LoginView = require('views/outgame/login-view');

  mediator = require('mediator');

  PopUpHelper = require('helpers/pop-up-helper');

  FacebookHelper = require('helpers/facebook-helper');

  User = require('models/outgame/user-model');

  i18n = require('lib/i18n');

  AnalyticsHelper = require('helpers/analytics-helper');

  config = require('config/environment-config');

  SpinnerHelper = require('helpers/spinner-helper');

  LequipeSSOHelper = require('helpers/lequipe-sso-helper');

  ConfigHelper = require('helpers/config-helper');

  module.exports = LoginController = (function(_super) {
    var params;

    __extends(LoginController, _super);

    function LoginController() {
      this.redirectHome = __bind(this.redirectHome, this);
      this.bindPlayer = __bind(this.bindPlayer, this);
      this.showLoginView = __bind(this.showLoginView, this);
      this.validateForm = __bind(this.validateForm, this);
      this.checkAvailabilityWithSSO = __bind(this.checkAvailabilityWithSSO, this);
      this.registerWithSSO = __bind(this.registerWithSSO, this);
      this.loginWithSSO = __bind(this.loginWithSSO, this);
      this.loginWithFacebook = __bind(this.loginWithFacebook, this);
      this.loginWithTemp = __bind(this.loginWithTemp, this);
      this.loginToParse = __bind(this.loginToParse, this);
      this.index = __bind(this.index, this);    _ref = LoginController.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    LoginController.prototype.historyURL = '';

    params = {};

    LoginController.prototype.index = function() {
      if (Parse.User.current()) {
        this.bindPlayer();
      } else {
        this.showLoginView();
      }
      return this.subscribeEvent('login:gotPlayer', this.bindPlayer);
    };

    LoginController.prototype.loginToParse = function(user, params) {
      var manageError,
        _this = this;

      manageError = function(child, error, opts) {
        console.log("PARSE ERROR");
        return console.log(error);
      };
      return Parse.User.logIn(params.username, params.password, {
        success: function() {
          return _this.bindPlayer();
        },
        error: function(child, error, opts) {
          var options, u;

          if (error.code === Parse.Error.OBJECT_NOT_FOUND) {
            delete user.id;
            u = new User(user);
            options = {
              success: function() {
                return _this.bindPlayer();
              },
              error: function() {
                return manageError.apply(null, arguments);
              }
            };
            return Parse.User.signUp(params.username, params.password, u.attributes, options);
          } else {
            return manageError.apply(null, arguments);
          }
        }
      });
    };

    LoginController.prototype.loginWithTemp = function() {
      var username,
        _this = this;

      username = $('#temp-login-form input[name=username]', this.view.$el)[0].value;
      SpinnerHelper.start();
      Parse.User.signUp(username, '123456', (new User).attributes, {
        success: function() {
          SpinnerHelper.stop();
          return _this.bindPlayer();
        },
        error: function() {
          SpinnerHelper.stop();
          return manageError.apply(null, arguments);
        }
      });
      return false;
    };

    LoginController.prototype.loginWithFacebook = function() {
      var error, success,
        _this = this;

      console.log('loginWithFacebook');
      AnalyticsHelper.trackEvent('Login', 'Login with facebook');
      success = function(response) {
        return FacebookHelper.getPersonalInfo(function(fb_attributes) {
          var parse_attributes;

          parse_attributes = User.prototype.defaults;
          parse_attributes.username = fb_attributes.name;
          parse_attributes.fb_id = fb_attributes.id;
          Parse.User.current().set(parse_attributes).save();
          return _this.bindPlayer();
        });
      };
      error = function(response) {
        SpinnerHelper.stop();
        return PopUpHelper.initialize({
          message: 'Erreur avec Facebook',
          title: 400,
          key: 'api-error'
        });
      };
      return FacebookHelper.logIn(success, error);
    };

    LoginController.prototype.loginWithSSO = function() {
      var f, form, _i, _len,
        _this = this;

      console.log("LOGIN YO");
      if (!this.validateForm('#sso-login-form')) {
        return false;
      }
      form = $('#sso-login-form', this.view.$el).serializeArray();
      params = {};
      for (_i = 0, _len = form.length; _i < _len; _i++) {
        f = form[_i];
        params[f.name] = f.value;
      }
      console.log(params);
      LequipeSSOHelper.login(params, function(user) {
        console.log("GOT USER", user);
        return _this.loginToParse(user, params);
      }, function(status, error) {
        return console.log("LOGIN ERROR", status, error);
      });
      return false;
    };

    LoginController.prototype.registerWithSSO = function() {
      var f, form, _i, _len,
        _this = this;

      console.log("REGISTER YO");
      if (!this.validateForm('#sso-register-form')) {
        return false;
      }
      form = $('#sso-register-form', this.view.$el).serializeArray();
      params = {};
      for (_i = 0, _len = form.length; _i < _len; _i++) {
        f = form[_i];
        params[f.name] = f.value;
      }
      console.log(params);
      LequipeSSOHelper.register(params, function(user) {
        console.log("GOT USER", user);
        return _this.loginToParse(user, params);
      }, function(status, error) {
        return console.log("LOGIN ERROR", status, error);
      });
      return false;
    };

    LoginController.prototype.checkAvailabilityWithSSO = function() {
      var f, form, _i, _len,
        _this = this;

      console.log("CHECING AVAILABILITY YO");
      form = $('#sso-register-form', this.view.$el).serializeArray();
      params = {};
      for (_i = 0, _len = form.length; _i < _len; _i++) {
        f = form[_i];
        params[f.name] = f.value;
      }
      return LequipeSSOHelper.alreadyUsed(params, function(user) {
        $("#sso-register-form input[name=email]", _this.view.$el).addClass('invalid');
        $("#sso-register-form input[name=username]", _this.view.$el).addClass('invalid');
        return console.error('email/username sont pas dispo');
      }, function(code, error) {
        if (code === LequipeSSOHelper.error.alreadyUsed.USER_NOT_FOUND) {
          $("#sso-register-form input[name=email]", _this.view.$el).removeClass('invalid');
          return $("#sso-register-form input[name=username]", _this.view.$el).removeClass('invalid');
        } else if (code === LequipeSSOHelper.error.alreadyUsed.USED_BY_ANOTHER_USER) {
          $("#sso-register-form input[name=email]", _this.view.$el).addClass('invalid');
          $("#sso-register-form input[name=username]", _this.view.$el).addClass('invalid');
          return console.error('email/username sont pas dispo');
        }
      });
    };

    LoginController.prototype.validateForm = function(formId) {
      var f, form, invalidFields, validationRules, _i, _len;

      validationRules = {
        email: /^\w+([\.-]?\w+)*@\w+([\.-]?\w+)*(\.\w{2,4})+$/,
        username: /^[a-zA-Z0-9_\-\.àáâãäçèéêëìíîïñòóõöûüúù@?£%€\(\)°\[\]\}\{\*~\\'"]{6,}$/
      };
      form = $(formId, this.view.$el).serializeArray();
      invalidFields = [];
      for (_i = 0, _len = form.length; _i < _len; _i++) {
        f = form[_i];
        if (validationRules[f.name] != null) {
          if (!validationRules[f.name].test(f.value)) {
            invalidFields.push(f.name);
            $("" + formId + " input[name=" + f.name + "]", this.view.$el).addClass('invalid');
          } else {
            $("" + formId + " input[name=" + f.name + "]", this.view.$el).removeClass('invalid');
          }
        }
      }
      console.log("INVALID", invalidFields);
      if (invalidFields.length > 0) {
        console.error(invalidFields.join(',') + ' pas bon');
        return false;
      }
      return true;
    };

    LoginController.prototype.showLoginView = function() {
      var _this = this;

      return this.loadView('login', function() {
        return new LoginView();
      }, function(view) {
        var _ref1;

        view.animateFacebook();
        if ((typeof navigator !== "undefined" && navigator !== null ? (_ref1 = navigator.splashscreen) != null ? _ref1.hide : void 0 : void 0) != null) {
          navigator.splashscreen.hide();
        }
        view.delegate('click', '#register-btn', _this.registerWithSSO);
        view.delegate('click', "#facebook-login", _this.loginWithFacebook);
        view.delegate('click', '#login-btn', _this.loginWithSSO);
        view.delegate('click', '#temp-btn', _this.loginWithTemp);
        view.delegate('keyup', '#sso-register-form input[name=email]', _this.checkAvailabilityWithSSO);
        view.delegate('keyup', '#sso-register-form input[name=username]', _this.checkAvailabilityWithSSO);
        view.delegate('click', '#close-btn', function() {
          return view.closeForms();
        });
        view.delegate('click', '#equipe-login', function() {
          return view.openForms();
        });
        return view.delegate('click', '#temp-login', function() {
          return view.openTempForm();
        });
      }, {
        viewTransition: true
      });
    };

    LoginController.prototype.bindPlayer = function() {
      var _this = this;

      return Parse.User.current().fetch({
        success: function(user, user_attributes) {
          console.log('BindPlayer with user', user.get('username'));
          mediator.setUser(user);
          _this.initPushNotifications();
          SpinnerHelper.stop();
          return _this.redirectHome();
        }
      });
    };

    LoginController.prototype.redirectHome = function() {
      return this.redirectTo('home');
    };

    LoginController.prototype.initPushNotifications = function() {
      if (typeof PushNotifications !== "undefined" && PushNotifications !== null) {
        PushNotifications.configure({
          buttonCancel: i18n.t('helper.push.how_about_no'),
          buttonOK: i18n.t('helper.push.kthx')
        });
        return PushNotifications.register(function(pushData) {
          var data;

          console.log("GOT TOKEN");
          console.log(pushData);
          data = {
            deviceToken: pushData.token.replace(/\s+/g, ''),
            deviceType: 'ios'
          };
          console.log("PUSH DATA");
          console.log(data);
          return $.ajax({
            url: 'https://api.parse.com/1/installations',
            dataType: 'json',
            contentType: 'application/json',
            data: JSON.stringify(data),
            type: 'POST',
            success: function(response) {
              console.log("PARSE SUCCESS");
              return console.log(response);
            },
            error: function() {
              console.log("PARSE ERROR");
              return console.log(arguments);
            },
            headers: ConfigHelper.config.services.parse.headers
          });
        });
      }
    };

    return LoginController;

  })(Controller);
  
});
window.require.register("controllers/outgame/more-games-controller", function(exports, require, module) {
  var ConfigHelper, Controller, MoreGamesController, MoreGamesView, SpinnerHelper, _ref,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Controller = require('controllers/base/controller');

  MoreGamesView = require('views/outgame/more-games-view');

  ConfigHelper = require('helpers/config-helper');

  SpinnerHelper = require('helpers/spinner-helper');

  module.exports = MoreGamesController = (function(_super) {
    __extends(MoreGamesController, _super);

    function MoreGamesController() {
      this.loadContent = __bind(this.loadContent, this);    _ref = MoreGamesController.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    MoreGamesController.prototype.historyURL = 'more-games';

    MoreGamesController.prototype.title = 'more-games';

    MoreGamesController.prototype.content = null;

    MoreGamesController.prototype.initialize = function() {
      MoreGamesController.__super__.initialize.apply(this, arguments);
      return this.animate = true;
    };

    MoreGamesController.prototype.index = function() {
      var _this = this;

      this.loadContent();
      return this.loadView('more-games', function() {
        return new MoreGamesView();
      }, function(view) {
        if (_this.content) {
          return view.setContent(_this.content);
        }
      }, {
        viewTransition: true
      });
    };

    MoreGamesController.prototype.loadContent = function() {
      var _this = this;

      SpinnerHelper.start();
      return $.ajax({
        url: 'http://www.google.com',
        dataType: 'html',
        success: function(content) {
          var _ref1;

          _this.content = content;
          return (_ref1 = _this.view) != null ? _ref1.setContent(_this.content) : void 0;
        },
        complete: function() {
          return SpinnerHelper.stop();
        }
      });
    };

    return MoreGamesController;

  })(Controller);
  
});
window.require.register("controllers/outgame/options-controller", function(exports, require, module) {
  var AnalyticsHelper, Controller, DeviceHelper, FacebookHelper, LocalStorageHelper, OptionsController, OptionsView, SoundHelper, SpinnerHelper, mediator, _ref,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Controller = require('controllers/base/controller');

  OptionsView = require('views/outgame/options-view');

  LocalStorageHelper = require('helpers/local-storage-helper');

  SoundHelper = require('helpers/sound-helper');

  AnalyticsHelper = require('helpers/analytics-helper');

  mediator = require('mediator');

  DeviceHelper = require('helpers/device-helper');

  SpinnerHelper = require('helpers/spinner-helper');

  FacebookHelper = require('helpers/facebook-helper');

  module.exports = OptionsController = (function(_super) {
    __extends(OptionsController, _super);

    function OptionsController() {
      this.onClickToggleInfoNotif = __bind(this.onClickToggleInfoNotif, this);
      this.onClickToggleMusic = __bind(this.onClickToggleMusic, this);
      this.onClickToggleFX = __bind(this.onClickToggleFX, this);
      this.onClickFacebookConnect = __bind(this.onClickFacebookConnect, this);
      this.onClickHelp = __bind(this.onClickHelp, this);
      this.setLocalOption = __bind(this.setLocalOption, this);
      this.getLocalOption = __bind(this.getLocalOption, this);
      this.index = __bind(this.index, this);    _ref = OptionsController.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    OptionsController.prototype.historyURL = 'options';

    OptionsController.prototype.title = 'Options';

    OptionsController.prototype.index = function() {
      var _this = this;

      this.setLocalOption('option-info-notif', Parse.User.current().get('notifications'));
      return this.loadView(null, function() {
        var templateData;

        templateData = {
          music: SoundHelper.musicMuted ? 'off' : '',
          fx: SoundHelper.sfxMuted ? 'off' : '',
          info_notif: _this.getLocalOption('option-info-notif', 'true') === 'false' ? 'off' : '',
          facebook: FacebookHelper.isLinked() ? 'off' : ''
        };
        return new OptionsView({
          templateData: templateData
        });
      }, function(view) {
        view.delegate('click', '#option-music', _this.onClickToggleMusic);
        view.delegate('click', '#option-fx', _this.onClickToggleFX);
        view.delegate('click', '#option-info-notif', _this.onClickToggleInfoNotif);
        view.delegate('click', '#option-help', _this.onClickHelp);
        return view.delegate('click', '#option-facebook-connect', _this.onClickFacebookConnect);
      }, {
        viewTransition: true,
        music: 'outgame'
      });
    };

    OptionsController.prototype.getLocalOption = function(key, defaultValue) {
      return LocalStorageHelper.get(key) || defaultValue;
    };

    OptionsController.prototype.setLocalOption = function(key, value) {
      return LocalStorageHelper.set(key, value);
    };

    OptionsController.prototype.onClickHelp = function() {
      var mail, uvData;

      AnalyticsHelper.trackEvent('Options', "Demander de l'aide");
      ({
        rawurlencode: function(str) {
          str = (str + '').toString();
          return encodeURIComponent(str).replace(/!/g, '%21').replace(/'/g, '%27').replace(/\(/g, '%28').replace(/\)/g, '%29').replace(/\*/g, '%2A');
        }
      });
      uvData = Parse.User.current().id || "Joueur-non-connecté";
      uvData += ' / ' + DeviceHelper.device();
      if (BuildVersion) {
        uvData += ' / ' + BuildVersion.toString();
      }
      uvData = "votre message ici\n\n\ninformations pour les développeurs\n" + uvData;
      if (typeof Message !== "undefined" && Message !== null) {
        mail = {
          to: ["lequipe@chugulu.com"],
          body: uvData,
          html: false
        };
        return Message.composeMail(mail);
      } else {
        if (window) {
          return window.open("mailto:lequipe@chugulu.com?body=" + rawurlencode(uvData), 'width=700,height=500');
        }
      }
    };

    OptionsController.prototype.onClickFacebookConnect = function() {
      AnalyticsHelper.trackEvent('Options', "Liaison facebook");
      if (!FacebookHelper.isLinked()) {
        return FacebookHelper.linkPlayer();
      }
    };

    OptionsController.prototype.onClickToggleFX = function() {
      this.view.toggleButton('option-fx');
      return SoundHelper.toggleSFX();
    };

    OptionsController.prototype.onClickToggleMusic = function() {
      this.view.toggleButton('option-music');
      return SoundHelper.toggleMusic();
    };

    OptionsController.prototype.onClickToggleInfoNotif = function() {
      var newVal, user,
        _this = this;

      user = Parse.User.current();
      newVal = !user.get('notifications');
      user.set('notifications', newVal);
      SpinnerHelper.start();
      return user.save(null, {
        success: function() {
          SpinnerHelper.stop();
          _this.setLocalOption('option-info-notif', newVal);
          return _this.view.toggleButton('option-info-notif');
        },
        error: function() {
          return SpinnerHelper.stop();
        }
      });
    };

    return OptionsController;

  })(Controller);
  
});
window.require.register("controllers/outgame/profile-controller", function(exports, require, module) {
  var AnalyticsHelper, ConfigHelper, Controller, FacebookHelper, GameStatHelper, I18n, ProfileView, ProfilesController, User, mediator, _ref,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Controller = require('controllers/base/controller');

  AnalyticsHelper = require('helpers/analytics-helper');

  ProfileView = require('views/outgame/profile-view');

  mediator = require('mediator');

  FacebookHelper = require('helpers/facebook-helper');

  ConfigHelper = require('helpers/config-helper');

  GameStatHelper = require('helpers/game-stat-helper');

  I18n = require('lib/i18n');

  User = require('models/outgame/user-model');

  module.exports = ProfilesController = (function(_super) {
    __extends(ProfilesController, _super);

    function ProfilesController() {
      this.onClickGameCenter = __bind(this.onClickGameCenter, this);
      this.index = __bind(this.index, this);    _ref = ProfilesController.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    ProfilesController.prototype.title = 'Profile';

    ProfilesController.prototype.historyURL = 'profile';

    ProfilesController.prototype.stats = null;

    ProfilesController.prototype.index = function() {
      var avatar, fb_id,
        _this = this;

      this.user = new User(Parse.User.current().attributes);
      if (fb_id = this.user.get('fb_id')) {
        avatar = 'https://graph.facebook.com/' + fb_id + '/picture?width=150&height=170';
      } else {
        avatar = 'images/common/facebook-default.jpg';
      }
      return this.loadView('profile', function() {
        var stats, stats_sports, stats_stats;

        stats = GameStatHelper.getProfileStat();
        stats_stats = _.map(stats.stats, function(val, key) {
          return {
            name: key,
            number: val,
            text: I18n.t('controller.profile.stats.' + key)
          };
        });
        stats_stats.game_week_score = stats.score;
        stats_sports = _.map(stats.sports, function(val, key) {
          return {
            number: val.percent,
            text: val.name,
            name: key
          };
        });
        return new ProfileView({
          user: _this.user.attributes,
          stats: stats_stats,
          sports: stats_sports,
          bonus: _this.user.getBonuses(),
          avatar: avatar,
          is_linked: Parse.FacebookUtils.isLinked(Parse.User.current())
        });
      }, function(view) {
        view.delegate('click', '.facebook-link', _this.linkFacebook);
        return view.delegate('click', '.game-center', _this.onClickGameCenter);
      }, {
        viewTransition: true,
        music: 'outgame'
      });
    };

    ProfilesController.prototype.linkFacebook = function() {
      if (Parse.FacebookUtils.isLinked(Parse.User.current())) {
        return;
      }
      AnalyticsHelper.trackEvent('Profil', 'Liaison facebook');
      FacebookHelper.getLoginStatus(false, true);
      return this.view.activateFbButton();
    };

    ProfilesController.prototype.onClickGameCenter = function() {
      var lb;

      AnalyticsHelper.trackEvent('Profil', 'Affichage de Game Center');
      lb = ConfigHelper.config.gamecenter.leaderboard;
      if (lb) {
        return typeof GameCenter !== "undefined" && GameCenter !== null ? GameCenter.showLeaderboard(lb) : void 0;
      } else {
        return alert('Pas de leaderboard');
      }
    };

    return ProfilesController;

  })(Controller);
  
});
window.require.register("controllers/outgame/shop-controller", function(exports, require, module) {
  var AnalyticsHelper, BonusPacks, ConfigHelper, Controller, DeviceHelper, LocalStorageHelper, PopUpHelper, PurchaseHelper, PurchasePacks, ShopController, ShopView, i18n, mediator, _ref,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Controller = require('controllers/base/controller');

  ShopView = require('views/outgame/shop-view');

  PurchaseHelper = require('helpers/purchase-helper');

  DeviceHelper = require('helpers/device-helper');

  ConfigHelper = require('helpers/config-helper');

  mediator = require('mediator');

  i18n = require('lib/i18n');

  LocalStorageHelper = require('helpers/local-storage-helper');

  PopUpHelper = require('helpers/pop-up-helper');

  AnalyticsHelper = require('helpers/analytics-helper');

  PurchasePacks = require('config/purchase-config');

  BonusPacks = require('config/bonus-config');

  module.exports = ShopController = (function(_super) {
    __extends(ShopController, _super);

    function ShopController() {
      this.onClickBonusPack = __bind(this.onClickBonusPack, this);
      this.onClickLifePack = __bind(this.onClickLifePack, this);
      this.onToggleTab = __bind(this.onToggleTab, this);
      this.onClickFacebookLike = __bind(this.onClickFacebookLike, this);
      this.onClickAppStoreRating = __bind(this.onClickAppStoreRating, this);
      this.onClickInviteFriends = __bind(this.onClickInviteFriends, this);
      this.onClickTapjoy = __bind(this.onClickTapjoy, this);
      this.onClickTwitter = __bind(this.onClickTwitter, this);
      this.onClickAdcolony = __bind(this.onClickAdcolony, this);
      this.onClickFreePack = __bind(this.onClickFreePack, this);
      this.onClickApplePack = __bind(this.onClickApplePack, this);
      this.onSuccessfulTransaction = __bind(this.onSuccessfulTransaction, this);
      this.index = __bind(this.index, this);    _ref = ShopController.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    ShopController.prototype.historyURL = 'shop';

    ShopController.prototype.title = 'Shop';

    ShopController.prototype.packs = null;

    ShopController.prototype.availableProducts = {};

    ShopController.prototype.index = function() {
      var fp, index, p, user, _i, _len, _ref1,
        _this = this;

      this.packs = PurchasePacks;
      this.packs.type = (DeviceHelper.isIOS() ? 'ios' : 'web');
      if (fp = this.packs.free_packs[this.packs.type]) {
        this.packs.free_packs = fp;
        _ref1 = this.packs.free_packs;
        for (index = _i = 0, _len = _ref1.length; _i < _len; index = ++_i) {
          p = _ref1[index];
          this.packs.free_packs[index].disabled = LocalStorageHelper.exists("store_pack_" + p.name);
        }
      }
      this.bonuses = BonusPacks;
      user = Parse.User.current();
      PurchaseHelper.initTapPoints();
      return this.loadView('shop', function() {
        console.log(_this.packs);
        return new ShopView({
          packs: _this.packs,
          bonuses: _this.bonuses,
          health: user.get('health'),
          credits: user.get('credits'),
          like_page_url: ConfigHelper.config.services.facebook.like_page_url
        });
      }, function(view) {
        view.delegate('click', '#bonuses.inactive', _this.onToggleTab);
        view.delegate('click', '#credits.inactive', _this.onToggleTab);
        view.delegate('click', '.paid-pack.ios', _this.onClickApplePack);
        view.delegate('click', '.paid-pack.web', _this.onClickAllopassPack);
        view.delegate('click', '.free-pack', _this.onClickFreePack);
        view.delegate('click', '.life-pack', _this.onClickLifePack);
        view.delegate('click', '.bonus-pack', _this.onClickBonusPack);
        return PurchaseHelper.fetchAppleProducts(_this.packs.credit_packs, function(availableProducts) {
          var pack;

          _this.availableProducts = availableProducts;
          return view.disableUnavailablePacks((function() {
            var _j, _len1, _ref2, _results;

            _ref2 = this.packs.credit_packs;
            _results = [];
            for (_j = 0, _len1 = _ref2.length; _j < _len1; _j++) {
              pack = _ref2[_j];
              if (!this.availableProducts[pack.product_id]) {
                _results.push(pack.id);
              }
            }
            return _results;
          }).call(_this));
        });
      }, {
        viewTransition: true,
        music: 'outgame'
      });
    };

    ShopController.prototype.onSuccessfulTransaction = function(credits, life) {
      return this.view.updateWallet(credits, life);
    };

    ShopController.prototype.onClickApplePack = function(e) {
      var p, pack, packId, _ref1;

      packId = this.view.chooseApplePack(e.currentTarget);
      pack = (_ref1 = (function() {
        var _i, _len, _ref2, _results;

        _ref2 = this.packs.credit_packs;
        _results = [];
        for (_i = 0, _len = _ref2.length; _i < _len; _i++) {
          p = _ref2[_i];
          if (p.product_id === packId) {
            _results.push(p);
          }
        }
        return _results;
      }).call(this)) != null ? _ref1[0] : void 0;
      if (this.availableProducts[pack.product_id] != null) {
        return PurchaseHelper.purchaseApple(pack, this.onSuccessfulTransaction);
      } else {
        return PopUpHelper.initialize({
          title: i18n.t('controller.shop.unavailable_pack.title'),
          message: i18n.t('controller.shop.unavailable_pack.message'),
          key: 'pack-error'
        });
      }
    };

    ShopController.prototype.onClickAllopassPack = function(pack) {
      return console.log('Yep, you clicked');
    };

    ShopController.prototype.onClickFreePack = function(e) {
      var methodName, pack, provider;

      provider = this.view.chooseFreePack(e.currentTarget);
      methodName = $.camelCase('on-click-' + provider.replace(/_/g, '-'));
      pack = ((function() {
        var _i, _len, _ref1, _results;

        _ref1 = this.packs.free_packs;
        _results = [];
        for (_i = 0, _len = _ref1.length; _i < _len; _i++) {
          pack = _ref1[_i];
          if (pack.name === provider) {
            _results.push(pack);
          }
        }
        return _results;
      }).call(this))[0];
      if (this[methodName]) {
        return this[methodName](pack);
      } else {
        return console.error('Unknown provider ' + provider + ' (' + methodName + ')');
      }
    };

    ShopController.prototype.onClickAdcolony = function(pack) {
      AnalyticsHelper.trackEvent('Boutique', 'Achat du pack AdColony');
      return PurchaseHelper.purchaseAdcolony(pack, ConfigHelper.config.services.adcolony.zones.SHOP, this.onSuccessfulTransaction);
    };

    ShopController.prototype.onClickTwitter = function(pack) {
      var _this = this;

      AnalyticsHelper.trackEvent('Boutique', 'Suis Nous sur Twitter');
      return PurchaseHelper.purchaseTwitter(pack, ConfigHelper.config.services.twitter, function(credits) {
        _this.onSuccessfulTransaction(credits);
        return _this.disableFreePack('twitter');
      });
    };

    ShopController.prototype.onClickTapjoy = function(pack) {
      AnalyticsHelper.trackEvent('Boutique', 'Achat du pack Tapjoy');
      return PurchaseHelper.purchaseTapjoy(pack, ConfigHelper.config.services.tapjoy.currency, this.onSuccessfulTransaction);
    };

    ShopController.prototype.onClickInviteFriends = function(pack) {
      AnalyticsHelper.trackEvent('Boutique', 'Achat du pack FaceBookInvitation');
      console.log("facebook invitation");
      return PurchaseHelper.purchaseFacebookInvitation(pack, this.onSuccessfulTransaction);
    };

    ShopController.prototype.onClickAppStoreRating = function(pack) {
      var _this = this;

      AnalyticsHelper.trackEvent('Boutique', 'Achat du pack AppStoreRating');
      return PurchaseHelper.purchaseAppstoreRating(pack, function(credits) {
        _this.onSuccessfulTransaction(credits);
        return _this.disableFreePack('app_store_rating');
      });
    };

    ShopController.prototype.onClickFacebookLike = function(pack) {
      var _this = this;

      AnalyticsHelper.trackEvent('Boutique', 'Achat du pack FacebookLike');
      console.log("facebook like");
      return PurchaseHelper.purchaseFacebookLike(pack, function(credits) {
        _this.onSuccessfulTransaction(credits);
        return _this.disableFreePack('facebook_like');
      });
    };

    ShopController.prototype.disableFreePack = function(type) {
      this.view.removeFreePack(type);
      return LocalStorageHelper.set("store_pack_" + type, 1);
    };

    ShopController.prototype.onToggleTab = function() {
      return this.view.toggleTabs();
    };

    ShopController.prototype.onClickLifePack = function(e) {
      var pack;

      pack = BonusPacks.life_packs[this.view.chooseLifePackIndex(e.currentTarget)];
      if (!pack) {
        return;
      }
      if (Parse.User.current().get('credits') >= pack.price) {
        PurchaseHelper.purchaseLife(pack, this.onSuccessfulTransaction);
        return PopUpHelper.initialize({
          title: i18n.t('controller.shop.life_pack_bought.title'),
          message: i18n.t('controller.shop.life_pack_bought.message'),
          info: true,
          confirmation: false,
          key: 'life-pack-ok'
        });
      } else {
        return PopUpHelper.initialize({
          title: i18n.t('controller.shop.not_enough_credits.title'),
          message: i18n.t('controller.shop.not_enough_credits.message'),
          key: 'pack-error'
        });
      }
    };

    ShopController.prototype.onClickBonusPack = function(e) {
      var pack;

      pack = BonusPacks.bonus_packs[this.view.chooseBonusPackIndex(e.currentTarget)];
      if (!pack) {
        return;
      }
      if (Parse.User.current().get('credits') >= pack.price) {
        PurchaseHelper.purchaseBonus(pack, this.onSuccessfulTransaction);
        return PopUpHelper.initialize({
          title: i18n.t('controller.shop.bonus_pack_bought.title'),
          message: i18n.t('controller.shop.bonus_pack_bought.message'),
          info: true,
          confirmation: false,
          key: 'bonus-pack-ok'
        });
      } else {
        return PopUpHelper.initialize({
          title: i18n.t('controller.shop.not_enough_credits.title'),
          message: i18n.t('controller.shop.not_enough_credits.message'),
          key: 'pack-error'
        });
      }
    };

    return ShopController;

  })(Controller);
  
});
window.require.register("controllers/outgame/tutorial-controller", function(exports, require, module) {
  var Controller, TutorialController, TutorialView, _ref,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Controller = require('controllers/base/controller');

  TutorialView = require('views/outgame/tutorial-view');

  module.exports = TutorialController = (function(_super) {
    __extends(TutorialController, _super);

    function TutorialController() {
      this.onClickNext = __bind(this.onClickNext, this);
      this.index = __bind(this.index, this);    _ref = TutorialController.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    TutorialController.prototype.title = 'Tutorial';

    TutorialController.prototype.historyURL = 'tutorial';

    TutorialController.prototype.currentIndex = 1;

    TutorialController.prototype.maxIndex = 3;

    TutorialController.prototype.index = function() {
      var _this = this;

      return this.loadView('tutorial', function() {
        return new TutorialView({
          currentIndex: _this.currentIndex
        });
      }, function(view) {
        return view.delegate('click', '#next-btn', _this.onClickNext);
      });
    };

    TutorialController.prototype.onClickNext = function() {
      console.log("NEXT SCREEN");
      this.currentIndex++;
      if (this.currentIndex > this.maxIndex) {
        return this.redirectTo('options');
      } else {
        return this.view.changeScreen(this.currentIndex);
      }
    };

    return TutorialController;

  })(Controller);
  
});
window.require.register("helpers/analytics-helper", function(exports, require, module) {
  var AnalyticsHelper, config;

  config = require('config/environment-config');

  module.exports = AnalyticsHelper = (function() {
    function AnalyticsHelper() {}

    AnalyticsHelper.init = function() {
      if (!config.analytics.enabled) {
        return;
      }
      if ((config.analytics.google != null) && config.analytics.google instanceof Array) {
        return typeof GoogleAnalytics !== "undefined" && GoogleAnalytics !== null ? GoogleAnalytics.startTrackerWithAccountIDs(config.analytics.google) : void 0;
      }
    };

    AnalyticsHelper.trackPageView = function(page) {
      if (!config.analytics.enabled) {
        return;
      }
      return typeof GoogleAnalytics !== "undefined" && GoogleAnalytics !== null ? GoogleAnalytics.trackPageview(page) : void 0;
    };

    AnalyticsHelper.trackEvent = function(category, action, label, value) {
      if (label == null) {
        label = '';
      }
      if (value == null) {
        value = 0;
      }
      if (!config.analytics.enabled) {
        return;
      }
      return typeof GoogleAnalytics !== "undefined" && GoogleAnalytics !== null ? GoogleAnalytics.trackEvent(category, action, label, value) : void 0;
    };

    AnalyticsHelper.trackTransaction = function(transactionHash) {
      if (!config.analytics.enabled) {
        return;
      }
      return typeof GoogleAnalytics !== "undefined" && GoogleAnalytics !== null ? GoogleAnalytics.trackTransaction(transactionHash) : void 0;
    };

    return AnalyticsHelper;

  })();
  
});
window.require.register("helpers/config-helper", function(exports, require, module) {
  var ConfigHelper, config, utils;

  config = require('config/environment-config');

  utils = require('lib/utils');

  module.exports = ConfigHelper = (function() {
    function ConfigHelper() {}

    ConfigHelper.config = config;

    ConfigHelper.getAPIURLFor = function(routeName, params) {
      return this.getAPIURLWithPath(this.config.api.routes[routeName], params);
    };

    ConfigHelper.getAPIURLWithPath = function(path, params) {
      if (params != null) {
        path = utils.addParams(path, params);
      }
      return this.config.urls.base + path;
    };

    ConfigHelper.getAPIHeaders = function(apiVersion, locale) {
      var headers;

      headers = {};
      headers[this.config.api.headers.version] = apiVersion;
      headers[this.config.api.headers.locale] = locale;
      return headers;
    };

    return ConfigHelper;

  })();
  
});
window.require.register("helpers/device-helper", function(exports, require, module) {
  var DeviceHelper;

  module.exports = DeviceHelper = (function() {
    function DeviceHelper() {}

    DeviceHelper.tag = "DeviceHelper";

    DeviceHelper._userAgent = null;

    DeviceHelper._windowSize = null;

    DeviceHelper._isMobile = null;

    DeviceHelper._isAndroid = null;

    DeviceHelper._isIOS = null;

    DeviceHelper._isIPad = null;

    DeviceHelper._isIPhone = null;

    DeviceHelper._isIPod = null;

    DeviceHelper._isRetina = null;

    DeviceHelper._resolution = null;

    DeviceHelper._localization = null;

    DeviceHelper._animationGrade = null;

    DeviceHelper.getWindowSize = function() {
      var _ref;

      return (_ref = this._windowSize) != null ? _ref : this._windowSize = {
        width: $(window).width(),
        height: $(window).height()
      };
    };

    DeviceHelper.getAppSize = function() {
      return {
        width: $('#global-container').width(),
        height: $('#global-container').height()
      };
    };

    DeviceHelper.getAppSizeCategory = function() {
      var width;

      width = this.getAppSize().width;
      if (width > 1023) {
        return 'ipad';
      } else if (width < 959) {
        return 'iPhone';
      } else {
        return 'web';
      }
    };

    DeviceHelper.device = function() {
      if (this.isMobile()) {
        return 'mobile';
      } else {
        return 'web';
      }
    };

    DeviceHelper.isMobile = function() {
      var _ref;

      return (_ref = this._isMobile) != null ? _ref : this._isMobile = this.isAndroid() || this.isIOS();
    };

    DeviceHelper.isAndroid = function() {
      var _ref;

      return (_ref = this._isAndroid) != null ? _ref : this._isAndroid = this.userAgentMatch("android");
    };

    DeviceHelper.isIOS = function() {
      var _ref;

      return (_ref = this._isIOS) != null ? _ref : this._isIOS = this.isIPad() || this.isIPhone() || this.isIPod();
    };

    DeviceHelper.isIPad = function() {
      var _ref;

      return (_ref = this._isIPad) != null ? _ref : this._isIPad = this.userAgentMatch("ipad");
    };

    DeviceHelper.isIPhone = function() {
      var _ref;

      return (_ref = this._isIPhone) != null ? _ref : this._isIPhone = this.userAgentMatch("iphone");
    };

    DeviceHelper.isIPod = function() {
      var _ref;

      return (_ref = this._isIPod) != null ? _ref : this._isIPod = this.userAgentMatch("ipod");
    };

    DeviceHelper.isIOS = function() {
      var _ref;

      return (_ref = this._isIOS) != null ? _ref : this._isIOS = this.isIPad() || this.isIPhone() || this.isIPod();
    };

    DeviceHelper.isRetina = function() {
      var _ref;

      return (_ref = this._isRetina) != null ? _ref : this._isRetina = this.getResolution() === 2;
    };

    DeviceHelper.getResolution = function() {
      var _ref;

      return (_ref = this._resolution) != null ? _ref : this._resolution = window.devicePixelRatio || 1;
    };

    DeviceHelper.getLocalization = function() {
      var _ref, _ref1;

      if (navigator.language != null) {
        if ((_ref = this._localization) == null) {
          this._localization = navigator.language.substr(0, 2);
        }
      } else if (navigator.browserLanguage != null) {
        if ((_ref1 = this._localization) == null) {
          this._localization = navigator.browserLanguage.substr(0, 2);
        }
      }
      return this._localization;
    };

    DeviceHelper.userAgentMatch = function(string) {
      return this.getUserAgent().indexOf(string) > -1;
    };

    DeviceHelper.getUserAgent = function() {
      var _ref;

      return (_ref = this._userAgent) != null ? _ref : this._userAgent = navigator.userAgent.toLowerCase();
    };

    DeviceHelper.getAnimationGrade = function(callback) {
      var _restoreGrade,
        _this = this;

      if (this._animationGrade == null) {
        _restoreGrade = localStorage.getItem('device_animation_grade');
        if (_restoreGrade == null) {
          return BenchmarkHelper.test(function(grade) {
            _this._animationGrade = grade;
            localStorage.setItem('device_animation_grade', grade);
            if (typeof callback !== "undefined") {
              return callback(_this._animationGrade);
            }
          });
        } else {
          this._animationGrade = parseInt(_restoreGrade);
        }
      }
      if (typeof callback !== "undefined") {
        callback(this._animationGrade);
      }
      return this._animationGrade;
    };

    DeviceHelper.canPerformAnimation = function() {
      return this._animationGrade < 2;
    };

    return DeviceHelper;

  })();
  
});
window.require.register("helpers/facebook-helper", function(exports, require, module) {
  var DeviceHelper, FacebookHelper, PopUpHelper, i18n, mediator, spinner, utils;

  mediator = require('mediator');

  utils = require('lib/utils');

  PopUpHelper = require('helpers/pop-up-helper');

  DeviceHelper = require('helpers/device-helper');

  i18n = require('lib/i18n');

  spinner = require('helpers/spinner-helper');

  module.exports = FacebookHelper = (function() {
    var self;

    function FacebookHelper() {}

    self = FacebookHelper;

    FacebookHelper.logIn = function(success, error) {
      var scope,
        _this = this;

      scope = 'email, user_location, user_birthday, publish_stream';
      if (DeviceHelper.isIOS()) {
        spinner.start();
        return FB.login(function(response) {
          if (response.authResponse) {
            return FB.api('/me', function(res) {
              var params;

              params = {
                id: res.id,
                access_token: response.authResponse.accessToken,
                expiration_date: new Date(response.authResponse.expirationTime).toISOString()
              };
              return Parse.FacebookUtils.logIn(params, {
                success: function() {
                  return success();
                },
                error: function() {
                  return error(response);
                }
              });
            });
          } else {
            return error(response);
          }
        }, {
          scope: scope
        });
      } else {
        return Parse.FacebookUtils.logIn(scope, {
          success: success,
          error: error
        });
      }
    };

    FacebookHelper.friendRequest = function(message, callback) {
      var doRequest;

      if (callback == null) {
        callback = null;
      }
      doRequest = function() {
        var user,
          _this = this;

        if (!message) {
          return alert("FB.request: pas de message :(");
        }
        if (message.length < 1 || message.length > 255) {
          return alert("FB.request: message doit faire entre 1 et 255 characteres (" + message.length + " actuellement)");
        }
        user = Parse.User.current();
        console.log(FacebookHelper.getOtherFriends(function(friends) {
          return _.pluck(friends, 'id');
        }));
        return FB.ui({
          method: 'apprequests',
          message: message,
          filters: [
            {
              name: 'invite friends',
              user_ids: user.get('fb_invited')
            }
          ]
        }, function(response) {
          user.set("fb_invited", _.uniq(response.to.concat(user.get('fb_invited')))).save();
          if (callback && response) {
            return callback(response);
          }
        });
      };
      if (!this.isLinked()) {
        return this.linkPlayer(doRequest);
      } else {
        return doRequest();
      }
    };

    FacebookHelper.friendRequestTo = function(message, friend, callback) {
      var doRequest;

      if (callback == null) {
        callback = null;
      }
      doRequest = function() {
        var user,
          _this = this;

        if (!message) {
          return alert("FB.request: pas de message :(");
        }
        if (message.length < 1 || message.length > 255) {
          return alert("FB.request: message doit faire entre 1 et 255 characteres (" + message.length + " actuellement)");
        }
        user = Parse.User.current();
        console.log(FacebookHelper.getOtherFriends(function(friends) {
          return _.pluck(friends, 'id');
        }));
        return FB.ui({
          method: 'apprequests',
          message: message,
          to: friend,
          filters: [
            {
              name: 'invite friends',
              user_ids: user.get('fb_invited')
            }
          ]
        }, function(response) {
          user.set("fb_invited", _.uniq(response.to.concat(user.get('fb_invited')))).save();
          if (response && callback) {
            return callback(response);
          }
        });
      };
      if (!this.isLinked()) {
        return this.linkPlayer(doRequest);
      } else {
        return doRequest();
      }
    };

    FacebookHelper.isLinked = function() {
      return Parse.FacebookUtils.isLinked(Parse.User.current());
    };

    FacebookHelper.linkPlayer = function(success, error) {
      return Parse.FacebookUtils.link(Parse.User.current(), 'email, user_location, user_birthday, publish_stream', {
        success: success,
        error: error
      });
    };

    FacebookHelper.postUserFeed = function(params) {
      if (!params.picture) {
        params.picture = i18n.t('helper.game_icon');
      }
      if (!params.link) {
        params.link = i18n.t('helper.app_store_link');
      }
      return FB.api('me/feed', 'post', params, function(response) {
        if (!response || response.error) {
          return console.log('error occured', response);
        } else {
          return console.log('success', response);
        }
      });
    };

    FacebookHelper.postScore = function(score) {
      return FB.api('/me/scores', 'post', {
        score: score
      }, function(response) {
        return console.log('Score was posted to facebook', {
          score: score
        });
      });
    };

    FacebookHelper.getPersonalInfo = function(callback) {
      return FB.api('/me', callback);
    };

    FacebookHelper.getFriends = function(callback, error) {
      var _this = this;

      if (this.isLinked()) {
        return FB.api('/me/friends?fields=installed', function(response) {
          var friend, friends;

          if (response.data) {
            friends = (function() {
              var _i, _len, _ref, _results;

              _ref = response.data;
              _results = [];
              for (_i = 0, _len = _ref.length; _i < _len; _i++) {
                friend = _ref[_i];
                if (friend.installed) {
                  _results.push(friend);
                }
              }
              return _results;
            })();
            if (friends == null) {
              friends = [];
            }
            return callback(friends);
          } else {
            return error();
          }
        });
      } else {
        return callback([]);
      }
    };

    FacebookHelper.getOtherFriends = function(callback) {
      var _this = this;

      if (this.isLinked()) {
        return FB.api('/me/friends?fields=id,name,installed', function(response) {
          var friend, friends;

          friends = (function() {
            var _i, _len, _ref, _results;

            _ref = response.data;
            _results = [];
            for (_i = 0, _len = _ref.length; _i < _len; _i++) {
              friend = _ref[_i];
              if (!friend.installed) {
                _results.push(friend);
              }
            }
            return _results;
          })();
          return callback(friends);
        });
      } else {
        return callback([]);
      }
    };

    return FacebookHelper;

  })();
  
});
window.require.register("helpers/factory-helper", function(exports, require, module) {
  var Factory, utils;

  utils = require('lib/utils');

  module.exports = Factory = (function() {
    function Factory() {}

    Factory.questionModel = function(data) {
      var e, model, type;

      type = 'photo-mcq';
      try {
        model = require("models/ingame/questions/" + type + "-question-model");
      } catch (_error) {
        e = _error;
        console.error("Question type not known : " + type + " (" + data.type + "). Error :", e);
        return null;
      }
      return new model(data);
    };

    Factory.stageConfig = function(type) {
      var e;

      try {
        return require("config/stages/" + type + "-stage-config");
      } catch (_error) {
        e = _error;
        console.error("Stage Config type not known : " + type + ". Error :", e);
      }
      return null;
    };

    Factory.stageModel = function(type, players, data) {
      var config, e, model;

      config = this.stageConfig(type);
      try {
        model = require("models/ingame/stages/" + type + "-stage-model");
      } catch (_error) {
        e = _error;
        console.error("Stage Model type not known : " + type + ". Error :", e);
        return null;
      }
      return (new model()).setConfig(config).setPlayers(players).setQuestions(data.questions);
    };

    Factory.stageController = function(stage, players, data) {
      var controller, e, model;

      model = this.stageModel(stage.type, players, data);
      try {
        controller = require("controllers/ingame/stages/" + stage.type + "-stage-controller");
      } catch (_error) {
        e = _error;
        console.error("Stage Controller type not known : " + stage.type + ". Error :", e);
        return null;
      }
      return (new controller(stage)).setStageModel(model);
    };

    return Factory;

  })();
  
});
window.require.register("helpers/game-stat-helper", function(exports, require, module) {
  var GameStatHelper, I18n;

  I18n = require('lib/i18n');

  module.exports = GameStatHelper = (function() {
    function GameStatHelper() {}

    GameStatHelper._stats = {};

    GameStatHelper.setBestScore = function(value) {
      this._setBest('best_score', value);
      return this.setBestWeekScore(value);
    };

    GameStatHelper.setBestWeekScore = function(value) {
      var current_week;

      current_week = (new Date).getWeek();
      console.log('setBestWeekScore', value, current_week);
      if (this._getStat('week_score') === current_week) {
        console.log('same week, so best set');
        return this._setBest('game_week_score', value);
      } else {
        console.log('different week, so set score and date', value, current_week);
        this._setStat('week_score', current_week);
        return this._setStat('game_week_score', value);
      }
    };

    GameStatHelper.setBestRow = function(value) {
      return this._setBest('game_best_row', value);
    };

    GameStatHelper.incrementGamesPlayedCount = function() {
      return this._incrementStat('games_played_count');
    };

    GameStatHelper.incrementSumScore = function(value) {
      this._incrementStat('sum_score', value);
      return this;
    };

    GameStatHelper.incrementSumTimeQuestion = function(value) {
      this._incrementStat('sum_time_question', value);
      return this;
    };

    GameStatHelper.incrementAnswersCount = function(success, sport) {
      var key;

      if (sport == null) {
        sport = null;
      }
      key = 'game_' + (success ? 'good' : 'wrong') + '_answers_count';
      this._incrementStat(key);
      if (sport) {
        return this._incrementSportAnswersCount(success, sport);
      }
    };

    GameStatHelper._incrementSportAnswersCount = function(success, sport) {
      var percent, stats, user;

      user = Parse.User.current();
      stats = user.get('stats');
      if (!stats.sports[sport]) {
        stats.sports[sport] = {
          percent: 0,
          good: 0,
          total: 0,
          name: sport
        };
      }
      if (success) {
        stats.sports[sport].good += 1;
      }
      stats.sports[sport].total += 1;
      percent = (stats.sports[sport].good / stats.sports[sport].total) * 100;
      stats.sports[sport].percent = parseFloat(percent.toFixed(2));
      user.set('stats', stats);
      return this;
    };

    GameStatHelper.getStats = function() {
      return this._stats;
    };

    GameStatHelper.getEndGameScoreStat = function() {
      return {
        nb_questions: this._getStat('game_wrong_answers_count') + this._getStat('game_good_answers_count'),
        good_answers: this._getStat('game_good_answers_count'),
        wrong_answers: this._getStat('game_wrong_answers_count'),
        best_row: this._getStat('game_best_row')
      };
    };

    GameStatHelper.getProfileStat = function() {
      var answers_count;

      this._stats = Parse.User.current().get('stats');
      answers_count = (this._getStat('wrong_answers_count') + this._getStat('good_answers_count')) | 1;
      return {
        stats: {
          best_score: this._getStat('best_score'),
          avg_score: parseFloat((this._getStat('sum_score') / (this._getStat('games_played_count') | 1)).toFixed(2)),
          percent_answer: this.getPercentAnswer() + '%',
          average_time: parseInt(this._getStat('sum_time_question') / answers_count, 10) + ' ms',
          games_played_count: this._getStat('games_played_count'),
          best_row: this._getStat('best_row'),
          best_sport: this.getBestSport()
        },
        score: this._getStat('game_week_score'),
        sports: this.getAllSports()
      };
    };

    GameStatHelper.getBestSport = function() {
      var best_sport, sports;

      if (_.keys(sports = this.getAllSports()).length === 0) {
        return I18n.t('helper.stats.no_best_sport');
      }
      best_sport = _.max(sports, function(sport) {
        return sport.percent;
      });
      return best_sport.name;
    };

    GameStatHelper.getAllSports = function() {
      return this.getStats().sports;
    };

    GameStatHelper.getPercentAnswer = function() {
      return parseFloat(((this._getStat('good_answers_count') / (this._getStat('wrong_answers_count') + this._getStat('good_answers_count'))) * 100).toFixed(2)) | 0;
    };

    GameStatHelper.reset = function() {
      return this._stats = {
        game_good_answers_count: 0,
        game_wrong_answers_count: 0,
        game_best_row: 0
      };
    };

    GameStatHelper.saveStats = function() {
      var real_stats, stat_name, stats, user, _i, _len, _ref;

      user = Parse.User.current();
      stats = $.extend(user.get('stats'), this._stats);
      real_stats = {};
      _ref = ['best_score', 'sum_score', 'games_played_count', 'wrong_answers_count', 'good_answers_count', 'sum_time_question', 'games_played_count', 'best_row', 'sports', 'game_week_score', 'week_score'];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        stat_name = _ref[_i];
        real_stats[stat_name] = stats[stat_name];
      }
      real_stats.good_answers_count += this._stats.game_good_answers_count;
      real_stats.wrong_answers_count += this._stats.game_wrong_answers_count;
      if (this._stats.game_best_row > real_stats.best_row) {
        real_stats.best_row = this._stats.game_best_row;
      }
      return user.set('stats', real_stats).save();
    };

    GameStatHelper._incrementStat = function(key, value) {
      if (value == null) {
        value = 1;
      }
      value = parseInt(value);
      return this._setStat(key, (this._getStat(key) | 0) + value);
    };

    GameStatHelper._setBest = function(key, value) {
      value = parseInt(value);
      if (this._getStat(key)) {
        if (value > this._getStat(key)) {
          return this._setStat(key, value);
        }
      } else {
        return this._setStat(key, value);
      }
    };

    GameStatHelper._setStat = function(key, value) {
      console.log('_setStat', key, value);
      this._stats[key] = value;
      console.log(this._stats);
      return this._stats[key];
    };

    GameStatHelper._getStat = function(key) {
      return this._stats[key] | 0;
    };

    return GameStatHelper;

  })();
  
});
window.require.register("helpers/lequipe-sso-helper", function(exports, require, module) {
  var LequipeSSOHelper;

  module.exports = LequipeSSOHelper = (function() {
    function LequipeSSOHelper() {}

    LequipeSSOHelper.error = {};

    LequipeSSOHelper.login = function(params, success, error) {
      var callback, order,
        _this = this;

      order = ['username', 'password'];
      callback = function(response) {
        var mapping, user;

        mapping = {
          nom: 'last_name',
          prenom: 'first_name'
        };
        response = _this.xmlResponse2JSON(response);
        user = $.parseJSON(response.description);
        user = _this.remap(user, mapping);
        return typeof success === "function" ? success(user) : void 0;
      };
      return this.request('plac_login', params, true, order, callback, error);
    };

    LequipeSSOHelper.error.login = {
      INCORRECT_MAIL: 404,
      INCORRECT_PASSWORD: 403
    };

    LequipeSSOHelper.register = function(params, success, error) {
      var callback, k, order, user, v, _ref, _ref1;

      order = ['email', 'username', 'password', 'gender', 'first_name', 'last_name', 'dateofbirth', 'opt_in_1', 'opt_in_2'];
      if ((_ref = params['opt_in_1']) == null) {
        params['opt_in_1'] = 0;
      }
      if ((_ref1 = params['opt_in_2']) == null) {
        params['opt_in_2'] = 0;
      }
      user = {};
      for (k in params) {
        v = params[k];
        user[k] = v;
      }
      callback = function(response) {
        return typeof success === "function" ? success(user) : void 0;
      };
      return this.request('plac_register', params, true, order, callback, error);
    };

    LequipeSSOHelper.error.register = {
      INVALID_PARAMETERS: 400,
      NOT_AVAILABLE: 409
    };

    LequipeSSOHelper.alreadyUsed = function(params, success, error) {
      var callback, order,
        _this = this;

      order = ['email', 'username'];
      callback = function(response) {
        var mapping, user;

        mapping = {
          email: 'email',
          pseudo: 'username',
          civilite: 'gender',
          nom: 'last_name',
          prenom: 'first_name'
        };
        user = _this.xmlResponse2JSON(response);
        user = _this.remap(user, mapping);
        return typeof success === "function" ? success(user) : void 0;
      };
      return this.request('plac_already_used', params, false, order, callback, error);
    };

    LequipeSSOHelper.error.alreadyUsed = {
      MISSING_PARAMETERS: 400,
      USER_NOT_FOUND: 404,
      USED_BY_ANOTHER_USER: 409
    };

    LequipeSSOHelper.calculateChecksum = function(params, order) {
      var f, values, _i, _len;

      values = '';
      for (_i = 0, _len = order.length; _i < _len; _i++) {
        f = order[_i];
        if (params[f] != null) {
          values += params[f];
        }
      }
      return CryptoJS.MD5('efr-plac' + values).toString();
    };

    LequipeSSOHelper.request = function(fn, params, encode, order, success, error) {
      var k, url, v,
        _this = this;

      params.checksum = this.calculateChecksum(params, order);
      if (encode) {
        for (k in params) {
          v = params[k];
          params[k] = this.utf8_encode(v);
        }
      }
      url = "http://api.lequipe.fr/Compte/appels_tiers.php?F=" + fn;
      return $.ajax({
        type: 'POST',
        url: url,
        data: params,
        dataType: 'xml',
        success: success,
        error: function(xhr, errorType, err) {
          var response;

          response = /<\?xml/.test(xhr.responseText) ? _this.xmlResponse2JSON(xhr.responseText) : xhr.responseText;
          return error(xhr.status, response);
        }
      });
    };

    LequipeSSOHelper.remap = function(object, mapping) {
      var k, remaped, v;

      remaped = {};
      for (k in object) {
        v = object[k];
        if ((mapping != null ? mapping[k] : void 0) != null) {
          remaped[mapping[k]] = v;
        } else {
          remaped[k] = v;
        }
      }
      return remaped;
    };

    LequipeSSOHelper.xmlResponse2JSON = function(xml) {
      var object, responseEl;

      object = {};
      if (!(xml instanceof Document)) {
        responseEl = $(xml.replace(/\s*<\?[^\?]+\?>\s*/, ''));
      } else {
        responseEl = $('response', xml);
      }
      responseEl.children().each(function(index, item) {
        var el, tag, value;

        el = $(item);
        tag = el.prop('tagName').toLowerCase();
        value = LequipeSSOHelper.utf8_decode(el.text());
        return object[tag] = value;
      });
      return object;
    };

    LequipeSSOHelper.utf8_encode = function(str_data) {
      return unescape(encodeURIComponent(str_data));
    };

    LequipeSSOHelper.utf8_decode = function(str_data) {
      var c, c1, c2, c3, i, string;

      string = "";
      i = 0;
      c = c1 = c2 = 0;
      while (i < str_data.length) {
        c = str_data.charCodeAt(i);
        if (c < 128) {
          string += String.fromCharCode(c);
          i++;
        } else if ((c > 191) && (c < 224)) {
          c2 = str_data.charCodeAt(i + 1);
          string += String.fromCharCode(((c & 31) << 6) | (c2 & 63));
          i += 2;
        } else {
          c2 = str_data.charCodeAt(i + 1);
          c3 = str_data.charCodeAt(i + 2);
          string += String.fromCharCode(((c & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));
          i += 3;
        }
      }
      return string;
    };

    return LequipeSSOHelper;

  }).call(this);
  
});
window.require.register("helpers/local-storage-helper", function(exports, require, module) {
  var LocalStorageHelper;

  module.exports = LocalStorageHelper = (function() {
    function LocalStorageHelper() {}

    LocalStorageHelper.get = function(name) {
      return window.localStorage.getItem(name);
    };

    LocalStorageHelper.set = function(name, value, days) {
      return window.localStorage.setItem(name, value);
    };

    LocalStorageHelper["delete"] = function(name) {
      return window.localStorage.removeItem(name);
    };

    LocalStorageHelper.exists = function(name) {
      return window.localStorage.getItem(name) !== null;
    };

    return LocalStorageHelper;

  })();
  
});
window.require.register("helpers/pop-up-helper", function(exports, require, module) {
  var PopUpHelper, SoundHelper, mediator;

  mediator = require('mediator');

  SoundHelper = require('helpers/sound-helper');

  module.exports = PopUpHelper = (function() {
    var container;

    function PopUpHelper() {}

    container = '#pop-up-container';

    PopUpHelper.initialize = function(data, callback) {
      var template,
        _this = this;

      data = this.validate(data);
      template = require("views/templates/" + data.template);
      $(container).addClass('active backgroundTransition');
      $(container).append(template(data));
      $('.popup', container).addClass('animated bounceInUp').one('webkitAnimationEnd', function() {
        return $(this).removeClass('bounceInUp');
      });
      if (data.template === 'pause') {
        $("[data-key=" + data.key + "]", $(container)).on('click', '.fx', function() {
          $(this).toggleClass('off');
          return SoundHelper.toggleSFX();
        });
        $("[data-key=" + data.key + "]", $(container)).on('click', '.music', function() {
          $(this).toggleClass('off');
          return SoundHelper.toggleMusic();
        });
      }
      $("[data-key=" + data.key + "]", $(container)).on('click', '.ok', function() {
        return mediator.publish('popup:' + data.key + ':ok');
      });
      $("[data-key=" + data.key + "]", $(container)).on('click', '.yes', function() {
        return mediator.publish('popup:' + data.key + ':yes');
      });
      $("[data-key=" + data.key + "]", $(container)).on('click', '.no', function() {
        return mediator.publish('popup:' + data.key + ':no');
      });
      $("[data-key=" + data.key + "]", $(container)).on('click', '.remove', function() {
        return _this.disposePopup(data.key);
      });
      return typeof callback === "function" ? callback() : void 0;
    };

    PopUpHelper.validate = function(data) {
      if (data == null) {
        data = {};
      }
      if (data) {
        if (!data.className) {
          data.className = 'info';
        }
        if (!data.title) {
          data.title = 'specify a title';
        }
        if (!data.info) {
          data.info = true;
        }
        if (data.confirmation === true) {
          data.info = false;
        }
        if (!data.confirmation) {
          data.confirmation = true;
        }
        if (data.info === true) {
          data.confirmation = false;
        }
        if (!data.level) {
          data.level = 1;
        }
        if (!data.key) {
          data.key = 'foo';
        }
        if (!data.template) {
          data.template = 'popup';
        }
        if (data.message != null) {
          if (!$.isArray(data.message)) {
            data.message = [data.message];
          }
        } else {
          data.message = ['specify a message'];
        }
      }
      return data;
    };

    PopUpHelper.disposeAll = function() {
      $(container).removeClass('backgroundTransition');
      return $('.popup', container).addClass('animated bounceOutDown').one('webkitAnimationEnd', function() {
        $(container).off().empty().removeClass('active');
        return mediator.publish('popup:all:disposed');
      });
    };

    PopUpHelper.disposePopup = function(key) {
      if ($(container).children().length < 2) {
        $(container).removeClass('backgroundTransition');
      }
      return $("[data-key=" + key + "]", $(container)).addClass('animated bounceOutDown').one('webkitAnimationEnd', function() {
        $(this).off().remove();
        if ($(container).children().length < 1) {
          $(container).empty().removeClass('active');
        }
        return mediator.publish('popup:' + key + ':disposed');
      });
    };

    return PopUpHelper;

  })();
  
});
window.require.register("helpers/preload-helper", function(exports, require, module) {
  var PreloadHelper, mediator, spinner;

  spinner = require('helpers/spinner-helper');

  mediator = require('mediator');

  module.exports = PreloadHelper = (function() {
    function PreloadHelper() {}

    PreloadHelper.images = {};

    PreloadHelper.objectImages = {};

    PreloadHelper.preloadObjectImages = function(objectType, objects, imageField, callback) {
      var image, images, imgArray, loader, object, pxImage, _i, _len, _ref,
        _this = this;

      if (!(objects instanceof Array && objects.length > 0 && imageField && objectType)) {
        return;
      }
      console.log("PRELOADING " + objectType);
      loader = new PxLoader();
      images = (function() {
        var _i, _len, _results;

        _results = [];
        for (_i = 0, _len = objects.length; _i < _len; _i++) {
          object = objects[_i];
          if (object[imageField]) {
            _results.push(object[imageField]);
          }
        }
        return _results;
      })();
      if (!this.objectImages[objectType]) {
        this.objectImages[objectType] = [];
      }
      imgArray = this.objectImages[objectType];
      _ref = images.unique();
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        image = _ref[_i];
        if (image) {
          pxImage = loader.addImage(image);
          imgArray.push(pxImage);
        }
      }
      if (callback) {
        loader.addCompletionListener(callback);
      }
      loader.addCompletionListener(function() {
        return spinner.stop();
      });
      spinner.start();
      return loader.start();
    };

    PreloadHelper.preloadAssets = function(key, loaded_callback, progress_callback) {
      var a, assetFolder, file, group, i, imgArray, loader, s, tags, _i, _j, _k, _len, _len1, _len2, _ref, _ref1, _ref2,
        _this = this;

      if (!(key && (AssetsList.keys[key] != null) && AssetsList.keys[key] instanceof Array && AssetsList.keys[key].length > 0)) {
        return typeof loaded_callback === "function" ? loaded_callback() : void 0;
      }
      loader = new PxLoader();
      this.images[key] = [];
      imgArray = this.images[key];
      tags = AssetsList.keys[key];
      for (_i = 0, _len = tags.length; _i < _len; _i++) {
        group = tags[_i];
        s = group + '/';
        if (AssetsList.assets[s]) {
          _ref = AssetsList.assets[s];
          for (_j = 0, _len1 = _ref.length; _j < _len1; _j++) {
            file = _ref[_j];
            imgArray.push(loader.addImage(file, tags));
          }
        }
        _ref1 = AssetsList.assets;
        for (assetFolder in _ref1) {
          a = _ref1[assetFolder];
          if (s !== assetFolder && assetFolder.indexOf(s) !== -1) {
            _ref2 = AssetsList.assets[assetFolder];
            for (_k = 0, _len2 = _ref2.length; _k < _len2; _k++) {
              i = _ref2[_k];
              imgArray.push(loader.addImage(i, tags));
            }
          }
        }
      }
      if (imgArray.length < 1) {
        if (loaded_callback) {
          loaded_callback();
        }
        return;
      }
      if (progress_callback) {
        loader.addProgressListener(function(e) {
          return progress_callback(e.completedCount / e.totalCount);
        });
      }
      if (loaded_callback) {
        loader.addCompletionListener(loaded_callback);
      }
      loader.addCompletionListener(function() {
        return spinner.stop();
      });
      spinner.start();
      return loader.start(key);
    };

    PreloadHelper.preloadAsset = function(url, callback) {
      var loader;

      loader = new PxLoader();
      loader.addImage(url);
      if (callback) {
        loader.addCompletionListener(callback);
      }
      return loader.start();
    };

    PreloadHelper.removeImages = function(imgArray) {
      var file, _i, _len;

      if (!imgArray) {
        return;
      }
      for (_i = 0, _len = imgArray.length; _i < _len; _i++) {
        file = imgArray[_i];
        file.src = '';
      }
      return imgArray.splice(0, imgArray.length);
    };

    PreloadHelper.removeObjectImages = function(objectType) {
      console.log("UNLOADING " + objectType);
      return this.removeImages(this.objectImages[objectType]);
    };

    PreloadHelper.removeAssets = function(key) {
      if (this.images && this.images[key]) {
        return this.removeImages(this.images[key]);
      }
    };

    return PreloadHelper;

  })();
  
});
window.require.register("helpers/purchase-helper", function(exports, require, module) {
  var AnalyticsHelper, ConfigHelper, FacebookHelper, PopUpHelper, PurchaseHelper, SpinnerHelper, i18n, mediator;

  mediator = require('mediator');

  ConfigHelper = require('helpers/config-helper');

  SpinnerHelper = require('helpers/spinner-helper');

  PopUpHelper = require('helpers/pop-up-helper');

  FacebookHelper = require('helpers/facebook-helper');

  i18n = require('lib/i18n');

  AnalyticsHelper = require('helpers/analytics-helper');

  module.exports = PurchaseHelper = (function() {
    function PurchaseHelper() {}

    PurchaseHelper.tapPoints = 0;

    PurchaseHelper.purchaseAppstoreRating = function(pack, successCallback) {
      var user;

      user = Parse.User.current();
      return typeof AppStoreRating !== "undefined" && AppStoreRating !== null ? AppStoreRating.openRatingsPage(function(appVersion) {
        user.increment('credits', pack.value).save();
        return typeof successCallback === "function" ? successCallback(user.get('credits')) : void 0;
      }) : void 0;
    };

    PurchaseHelper.purchaseTwitter = function(pack, twitterConfig, successCallback) {
      window.open('http://twitter.com', '_blank');
      return typeof successCallback === "function" ? successCallback(Parse.User.current().get('credits')) : void 0;
    };

    PurchaseHelper.purchaseFacebookLike = function(pack, successCallback) {
      var user;

      window.open('http://facebook.com', '_blank');
      user = Parse.User.current();
      user.increment('credits', pack.value).save();
      return typeof successCallback === "function" ? successCallback(user.get('credits')) : void 0;
    };

    PurchaseHelper.purchaseFacebookInvitation = function(pack, successCallback) {
      var user,
        _this = this;

      user = Parse.User.current();
      return FacebookHelper.friendRequest(i18n.t('helper.purchase.facebook.invitation.text'), function(response) {
        var friends_invited, id, to;

        delete response.request;
        friends_invited = [];
        for (to in response) {
          id = response[to];
          friends_invited.push(id);
        }
        user.increment('credits', pack.value * friends_invited.length).save();
        if (typeof successCallback === "function") {
          successCallback(user.get('credits'));
        }
        return PopUpHelper.initialize({
          title: 'info',
          message: i18n.t('helper.purchase.facebook.invitation.reward'),
          key: 'fb-reward'
        });
      });
    };

    PurchaseHelper.purchaseTapjoy = function(pack, currency, successCallback) {
      var user,
        _this = this;

      user = Parse.User.current();
      if (typeof TapjoyConnect !== "undefined" && TapjoyConnect !== null) {
        TapjoyConnect.setUserID(Parse.User.current().id);
        return TapjoyConnect.showOffersWithCurrencyID(currency, false, function() {
          return TapjoyConnect.getTapPoints(function(points) {
            console.log("TAPJOY POINTS");
            console.log(_this.tapPoints);
            console.log(points);
            console.log(points - _this.tapPoints);
            user.increment('credits', points - _this.tapPoints).save();
            _this.tapPoints = points;
            return typeof successCallback === "function" ? successCallback(user.get('credits')) : void 0;
          });
        });
      }
    };

    PurchaseHelper.initTapPoints = function() {
      var _this = this;

      if (typeof TapjoyConnect !== "undefined" && TapjoyConnect !== null) {
        TapjoyConnect.setUserID(Parse.User.current().id);
      }
      return typeof TapjoyConnect !== "undefined" && TapjoyConnect !== null ? TapjoyConnect.getTapPoints(function(tapPoints) {
        _this.tapPoints = tapPoints;
      }) : void 0;
    };

    PurchaseHelper.purchaseAdcolony = function(pack, zone, successCallback) {
      var options, user,
        _this = this;

      user = Parse.User.current();
      if (typeof AdColony !== "undefined" && AdColony !== null) {
        options = {
          zone: zone,
          custom: Parse.User.current().id
        };
        return AdColony.playVideo(options, function(amount) {
          console.log("AD COLO : I gots some reward");
          console.log(amount);
          console.log(Parse.User.current().get('credits'));
          console.log(Parse.User.current().get('credits') + amount);
          user.increment('credits', amount).save();
          return typeof successCallback === "function" ? successCallback(user.get('credits')) : void 0;
        }, function(error) {
          var popupStuff;

          console.log("AD COLO : fail");
          console.log(error);
          if (error.code === AdColonyError.REWARD_UNAVAILABLE) {
            popupStuff = {
              title: i18n.t('helper.purchase.adcolony.quota_exceeded.title'),
              message: i18n.t('helper.purchase.adcolony.quota_exceeded.message'),
              key: 'adcolony-fail'
            };
          } else {
            popupStuff = {
              title: i18n.t('helper.purchase.adcolony.error.title'),
              message: i18n.t('helper.purchase.adcolony.error.message'),
              key: 'adcolony-fail'
            };
          }
          return PopUpHelper.initialize(popupStuff);
        });
      }
    };

    PurchaseHelper.purchaseLife = function(pack, successCallback) {
      var user;

      user = Parse.User.current();
      user.increment('health', pack.value).increment('credits', -pack.price).save();
      return typeof successCallback === "function" ? successCallback(user.get('credits'), user.get('health')) : void 0;
    };

    PurchaseHelper.purchaseBonus = function(pack, successCallback) {
      var bonus_added, bonuses, name, user, value, _ref;

      user = Parse.User.current();
      bonus_added = pack.value;
      bonuses = {};
      _ref = user.get('bonus');
      for (name in _ref) {
        value = _ref[name];
        bonuses[name] = value + bonus_added;
      }
      user.set('bonus', bonuses).increment('credits', -pack.price).save();
      return typeof successCallback === "function" ? successCallback(user.get('credits')) : void 0;
    };

    PurchaseHelper.purchaseApple = function(pack, successCallback) {
      var _this = this;

      if (pack.product_id && (typeof MKStore !== "undefined" && MKStore !== null) && MKStore.gotProducts) {
        SpinnerHelper.start();
        console.log(pack.product_id);
        return MKStore.buyFeature(pack.product_id, function(response) {
          Parse.User.current().set('credits', response.credits);
          if (typeof successCallback === "function") {
            successCallback(Parse.User.current().get('credits'));
          }
          return SpinnerHelper.stop();
        }, function(error) {
          AnalyticsHelper.trackEvent('Boutique', "Achat du pack " + pack.name + " sucess", '', pack.price);
          PopUpHelper.initialize({
            title: i18n.t('helper.purchase.apple.error.title'),
            message: i18n.t('helper.purchase.apple.error.message'),
            key: 'purchase-fail'
          });
          console.log("fail");
          console.log(error.code);
          console.log(error);
          return SpinnerHelper.stop();
        }, function() {
          AnalyticsHelper.trackEvent('Boutique', "Achat du pack " + pack.name + " error", '', pack.price);
          PopUpHelper.initialize({
            title: i18n.t('helper.purchase.apple.cancel.title'),
            message: i18n.t('helper.purchase.apple.cancel.message'),
            key: 'purchase-fail'
          });
          console.log("canceled");
          return SpinnerHelper.stop();
        }, null);
      } else {
        return console.error("Trying to by pack without product_id OR did not getProducts()");
      }
    };

    PurchaseHelper.fetchAppleProducts = function(packs, callback) {
      var pack, products, _i, _len,
        _this = this;

      if (typeof MKStore === "undefined" || MKStore === null) {
        return typeof callback === "function" ? callback({}) : void 0;
      }
      SpinnerHelper.start();
      products = {
        consumables: {},
        nonConsumables: {},
        subscriptions: {}
      };
      for (_i = 0, _len = packs.length; _i < _len; _i++) {
        pack = packs[_i];
        if (pack.product_id) {
          products.consumables[pack.product_id] = pack;
        }
      }
      return MKStore.getProducts(products, function(availableProducts) {
        SpinnerHelper.stop();
        return typeof callback === "function" ? callback(availableProducts) : void 0;
      }, function() {
        return SpinnerHelper.stop();
      });
    };

    return PurchaseHelper;

  })();
  
});
window.require.register("helpers/rank-helper", function(exports, require, module) {
  var RankHelper, i18n;

  i18n = require('lib/i18n');

  module.exports = RankHelper = (function() {
    function RankHelper() {}

    RankHelper.getRankName = function(rankNumber) {
      return i18n.t("ranks.rank_" + rankNumber + ".name");
    };

    RankHelper.getRankImage = function(rankNumber) {
      return "images/ranks/" + i18n.t("ranks.rank_" + rankNumber + ".img_name") + ".png";
    };

    RankHelper.getRankAttributes = function(rankNumber) {
      return {
        name: this.getRankName(rankNumber),
        image: this.getRankImage(rankNumber)
      };
    };

    return RankHelper;

  })();
  
});
window.require.register("helpers/sound-helper", function(exports, require, module) {
  var AnalyticsHelper, LocalStorageHelper, SoundHelper;

  LocalStorageHelper = require('helpers/local-storage-helper');

  AnalyticsHelper = require('helpers/analytics-helper');

  module.exports = SoundHelper = (function() {
    function SoundHelper() {}

    SoundHelper.sounds = {};

    SoundHelper.musicMuted = false;

    SoundHelper.sfxMuted = false;

    SoundHelper.currentMusicKey = null;

    SoundHelper.initialize = function() {
      var SoundConfig, s, _i, _len, _ref, _results;

      this.musicMuted = LocalStorageHelper.get('musicMuted') === 'true';
      this.sfxMuted = LocalStorageHelper.get('sfxMuted') === 'true';
      SoundConfig = require('config/sound-config');
      _ref = SoundConfig.sounds;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        s = _ref[_i];
        _results.push(this.sounds[s.key] = {
          type: s.type,
          sound: new buzz.sound(SoundConfig.assetPath + '/' + s.type + '/' + s.file, s.opts)
        });
      }
      return _results;
    };

    SoundHelper.play = function(key, initializeIfNeeded) {
      var sound;

      if (initializeIfNeeded == null) {
        initializeIfNeeded = true;
      }
      if (!(sound = this.sounds[key])) {
        return;
      }
      if (this.sfxMuted && sound.type === 'sfx') {
        return;
      }
      if (sound.type === 'music') {
        this.currentMusicKey = key;
      }
      if (this.musicMuted && (sound.type === 'music' || sound.type === 'jingle')) {
        return;
      }
      return this.sounds[key].sound.play();
    };

    SoundHelper.resumeMusic = function() {
      if (!(this.currentMusicKey || this.musicMuted)) {
        return;
      }
      return this.play(this.currentMusicKey);
    };

    SoundHelper.pause = function(key) {
      return this.sounds[key].sound.pause();
    };

    SoundHelper.stop = function(key) {
      return this.sounds[key].sound.stop();
    };

    SoundHelper.togglePlay = function(key) {
      return this.sounds[key].sound.togglePlay();
    };

    SoundHelper.stopAll = function() {
      return buzz.all().stop();
    };

    SoundHelper.getDuration = function(key) {
      return this.sounds[key].sound.getDuration() * 1000;
    };

    SoundHelper.toggleMusic = function() {
      var key, sound, _ref;

      this.musicMuted = !this.musicMuted;
      AnalyticsHelper.trackEvent('Options', "Musique = " + this.musicMuted);
      LocalStorageHelper.set('musicMuted', this.musicMuted);
      _ref = this.sounds;
      for (key in _ref) {
        sound = _ref[key];
        if (sound.type === 'music' || sound.type === 'jingle') {
          if (this.musicMuted) {
            this.stop(key);
          }
        }
      }
      if (this.currentMusicKey && !this.musicMuted) {
        return this.play(this.currentMusicKey);
      }
    };

    SoundHelper.toggleSFX = function() {
      var key, sound, _ref, _results;

      this.sfxMuted = !this.sfxMuted;
      AnalyticsHelper.trackEvent('Options', "SoundFX = " + this.sfxMuted);
      LocalStorageHelper.set('sfxMuted', this.sfxMuted);
      _ref = this.sounds;
      _results = [];
      for (key in _ref) {
        sound = _ref[key];
        if (sound.type === 'sfx') {
          if (this.sfxMuted) {
            _results.push(this.stop(key));
          } else {
            _results.push(void 0);
          }
        }
      }
      return _results;
    };

    return SoundHelper;

  })();
  
});
window.require.register("helpers/spinner-helper", function(exports, require, module) {
  var SpinnerHelper, mediator;

  mediator = 'mediator';

  module.exports = SpinnerHelper = (function() {
    var blocking_count, container, spin_count;

    function SpinnerHelper() {}

    container = '#spinner-container';

    spin_count = 0;

    blocking_count = 0;

    SpinnerHelper.startPartial = function() {
      return this.start(true);
    };

    SpinnerHelper.start = function(partial) {
      if (partial == null) {
        partial = false;
      }
      if (!($('#spinner').length > 0)) {
        $(container).addClass(partial ? 'active partial' : 'active');
        $(container).append('<div id="spinner" class="spinner"></div>');
      } else if (!partial) {
        $(container).removeClass('partial');
      }
      spin_count++;
      if (!partial) {
        return blocking_count++;
      }
    };

    SpinnerHelper.stopPartial = function() {
      return this.stop(true);
    };

    SpinnerHelper.stop = function(partial) {
      if (partial == null) {
        partial = false;
      }
      if (spin_count <= 1) {
        return this.remove();
      } else {
        spin_count--;
        if (blocking_count <= 1) {
          return $(container).addClass('partial');
        } else {
          return blocking_count--;
        }
      }
    };

    SpinnerHelper.remove = function() {
      $('#spinner').remove();
      $(container).removeClass('active partial');
      spin_count = 0;
      return blocking_count = 0;
    };

    return SpinnerHelper;

  })();
  
});
window.require.register("helpers/timer-helper", function(exports, require, module) {
  var TimerHelper, mediator,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  mediator = require('mediator');

  module.exports = TimerHelper = (function() {
    TimerHelper.prototype.durationPrecisionCoef = 1;

    TimerHelper.prototype.totalDuration = 0;

    TimerHelper.prototype.precision = 0;

    TimerHelper.prototype.interval = null;

    TimerHelper.prototype.duration = 0;

    TimerHelper.prototype.onTimeout = null;

    TimerHelper.prototype.onTick = null;

    TimerHelper.prototype.startTime = null;

    TimerHelper.prototype.timerAlreadyStarted = false;

    TimerHelper.prototype.remaining = 0;

    TimerHelper.prototype.running = false;

    TimerHelper.prototype.interruptionDate = null;

    function TimerHelper(onTick) {
      this.onTick = onTick;
      this.tick = __bind(this.tick, this);
      this.stop = __bind(this.stop, this);
      this.adjustDuration = __bind(this.adjustDuration, this);
      this.setDuration = __bind(this.setDuration, this);
      this.schedule = __bind(this.schedule, this);
      this.destroy = __bind(this.destroy, this);
      this.onBecomeActive = __bind(this.onBecomeActive, this);
      this.onResignActive = __bind(this.onResignActive, this);
      document.addEventListener('pause', this.onResignActive, false);
      document.addEventListener('resume', this.onBecomeActive, false);
    }

    TimerHelper.prototype.onResignActive = function(e) {
      return this.interruptionDate = new Date();
    };

    TimerHelper.prototype.onBecomeActive = function(e) {
      var offset, resumeDate;

      if (this.interruptionDate) {
        resumeDate = new Date();
        offset = Math.round(this.startTime.getTime() - (new Date()).getTime()) / (1000 / this.durationPrecisionCoef);
        this.adjustDuration(offset);
        return this.interruptionDate = null;
      }
    };

    TimerHelper.prototype.destroy = function() {
      document.removeEventListener('pause', this.onResignActive, false);
      document.removeEventListener('resume', this.onBecomeActive, false);
      return this.stop();
    };

    TimerHelper.prototype.schedule = function(duration, precision, onTimeout) {
      this.precision = precision;
      this.onTimeout = onTimeout;
      this.durationPrecisionCoef = Math.pow(10, this.precision);
      this.duration = duration * this.durationPrecisionCoef;
      this.totalDuration = this.duration;
      this.remaining = this.duration;
      this.stop();
      return typeof this.onTick === "function" ? this.onTick((this.duration / this.durationPrecisionCoef).toFixed(this.precision)) : void 0;
    };

    TimerHelper.prototype.setDuration = function(duration) {
      return this.duration = duration;
    };

    TimerHelper.prototype.adjustDuration = function(offset) {
      this.remaining += offset;
      this.setDuration(this.duration + offset);
      return typeof this.onTick === "function" ? this.onTick((this.duration / this.durationPrecisionCoef).toFixed(this.precision)) : void 0;
    };

    TimerHelper.prototype.stop = function() {
      if (!this.running) {
        return;
      }
      this.running = false;
      this.remaining = this.duration;
      if (!this.interval) {
        return;
      }
      clearInterval(this.interval);
      return this.interval = null;
    };

    TimerHelper.prototype.tick = function() {
      var offset;

      offset = Math.round(this.startTime.getTime() - (new Date()).getTime()) / (1000 / this.durationPrecisionCoef);
      this.setDuration(this.remaining + offset);
      if (typeof this.onTick === "function") {
        this.onTick((this.duration / this.durationPrecisionCoef).toFixed(this.precision));
      }
      if (Math.round(this.duration) < 0) {
        this.stop();
        return typeof this.onTimeout === "function" ? this.onTimeout() : void 0;
      }
    };

    TimerHelper.prototype.pause = function() {
      if (!this.running) {
        return;
      }
      this.running = false;
      return this.stop();
    };

    TimerHelper.prototype.start = function() {
      if (this.running) {
        return;
      }
      this.running = true;
      this.startTime = new Date();
      return this.interval = setInterval(this.tick, Math.pow(10, 3 - this.precision));
    };

    TimerHelper.prototype.resume = function() {
      return this.start();
    };

    return TimerHelper;

  })();
  
});
window.require.register("initialize", function(exports, require, module) {
  var Application, waitForDeviceReadyEvent;

  Application = require('application');

  waitForDeviceReadyEvent = function(callback) {
    var _ref;

    if ((typeof Cordova !== "undefined" && Cordova !== null ? (_ref = Cordova.onDeviceReady) != null ? _ref.fired : void 0 : void 0) || navigator.userAgent.match(/iP((a|o)d|hone)/i) === null) {
      console.log("device ready already fired");
      return callback();
    } else {
      console.log("waiting for device response");
      return document.addEventListener("deviceready", callback, false);
    }
  };

  $(function() {
    var app;

    app = new Application();
    waitForDeviceReadyEvent(function() {
      return app.initialize();
    });
    return new FastClick(document.body);
  });
  
});
window.require.register("lib/i18n", function(exports, require, module) {
  var Chaplin, i18n, _;

  _ = require('underscore');

  Chaplin = require('chaplin');

  String.prototype.fillWith = function(strings) {
    var args;

    args = strings;
    return this.replace(/{(\d+)}/g, function(match, number) {
      if (typeof args[number] !== 'undefined') {
        return args[number];
      } else {
        return match;
      }
    });
  };

  i18n = {
    localization: {},
    __locale: null,
    defaultLocale: 'en',
    pathToLocale: 'locale',
    init: function() {
      return this.setLocale(window.__locale || this.defaultLocale);
    },
    setLocale: function(newLocale) {
      var locale;

      locale = newLocale || this.defaultLocale;
      if (locale !== this.__locale) {
        this.__locale = locale;
        return this.localization = require(this.pathToLocale + "/" + this.__locale);
      }
    },
    getLocale: function() {
      return this.__locale;
    },
    setDefault: function(locale) {
      return this.defaultLocale = this.__locale = locale;
    },
    translate: function(id, vars) {
      var e, self, template, _ref, _ref1;

      if (vars == null) {
        vars = {};
      }
      template = ((_ref = this.localization[this.__locale]) != null ? _ref[id] : void 0) || ((_ref1 = this.localization[this.__locale.slice(0, 2)]) != null ? _ref1[id] : void 0);
      if (template == null) {
        try {
          self = this;
          template = eval("self.localization[self.__locale]." + id);
        } catch (_error) {
          e = _error;
        }
        if (template == null) {
          template = this.__locale !== this.defaultLocale ? "(?) " + id : "" + id;
        }
      }
      return _.template(template, vars);
    },
    t: function(i18n_key) {
      var args, result, _args;

      result = i18n.translate(i18n_key);
      args = Array.prototype.slice.call(arguments, 0);
      if (_.isArray(args[1])) {
        _args = args[1];
      } else {
        _args = args;
      }
      if (!_.isString(_args[_args.length - 1])) {
        _args.pop();
      }
      _args.shift();
      return result.fillWith(_args);
    }
  };

  if (typeof Object.seal === "function") {
    Object.seal(i18n);
  }

  module.exports = i18n;
  
});
window.require.register("lib/support", function(exports, require, module) {
  var Chaplin, support, utils;

  Chaplin = require('chaplin');

  utils = require('lib/utils');

  support = utils.beget(Chaplin.support);

  module.exports = support;
  
});
window.require.register("lib/utils", function(exports, require, module) {
  var Chaplin, mediator, utils, _base, _ref;

  Chaplin = require('chaplin');

  mediator = require('mediator');

  utils = Chaplin.utils.beget(Chaplin.utils);

  _(utils).extend({
    addParams: function(string, params) {
      var i, new_param, params_to_change, _i, _len;

      params_to_change = string.match(/(?::|\*)(\w+)/g);
      for (_i = 0, _len = params_to_change.length; _i < _len; _i++) {
        i = params_to_change[_i];
        new_param = i.substring(1);
        if (params[new_param] === void 0) {
          console.log('Param Missing:', new_param);
        } else {
          string = string.replace(i, params[new_param]);
        }
      }
      return "" + string;
    },
    dasherize: function(string) {
      return this.underscorize(string).replace(/_/g, '-');
    }
  });

  module.exports = utils;

  if ((_ref = (_base = Array.prototype).shuffle) == null) {
    _base.shuffle = function() {
      return this.sort(function() {
        return 0.5 - Math.random();
      });
    };
  }
  
});
window.require.register("lib/view-helper", function(exports, require, module) {
  var RankHelper, i18n, mediator, utils,
    __slice = [].slice;

  mediator = require('mediator');

  utils = require('chaplin/lib/utils');

  i18n = require('lib/i18n');

  RankHelper = require('helpers/rank-helper');

  Handlebars.registerHelper('if_logged_in', function(options) {
    if (mediator.user) {
      return options.fn(this);
    } else {
      return options.inverse(this);
    }
  });

  Handlebars.registerHelper('with', function(context, options) {
    if (!context || Handlebars.Utils.isEmpty(context)) {
      return options.inverse(this);
    } else {
      return options.fn(context);
    }
  });

  Handlebars.registerHelper('without', function(context, options) {
    var inverse;

    inverse = options.inverse;
    options.inverse = options.fn;
    options.fn = inverse;
    return Handlebars.helpers["with"].call(this, context, options);
  });

  Handlebars.registerHelper('with_user', function(options) {
    var context, _ref;

    context = ((_ref = mediator.user) != null ? _ref.serialize() : void 0) || {};
    return Handlebars.helpers["with"].call(this, context, options);
  });

  Handlebars.registerHelper('url', function() {
    var params, routeName, url;

    routeName = arguments[0], params = 2 <= arguments.length ? __slice.call(arguments, 1) : [];
    url = null;
    mediator.publish('!router:reverse', routeName, params, function(result) {
      return url = result;
    });
    return "/" + url;
  });

  Handlebars.registerHelper('t', function(i18n_key) {
    var args, result;

    args = Array.prototype.slice.call(arguments, 0);
    result = i18n.t(i18n_key, args);
    result = Handlebars.Utils.escapeExpression(result);
    return new Handlebars.SafeString(result);
  });

  Handlebars.registerHelper('niceNumber', function(value) {
    var result;

    result = value.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ' ');
    result = Handlebars.Utils.escapeExpression(result);
    return new Handlebars.SafeString(result);
  });

  Handlebars.registerHelper("each_with_index", function(context, options) {
    var fn, i, inverse, j, ret;

    fn = options.fn;
    inverse = options.inverse;
    ret = "";
    if (context && context.length > 0) {
      i = 0;
      j = context.length;
      while (i < j) {
        ret = ret + fn(_.extend({}, context[i], {
          i: i,
          iPlus1: i + 1,
          iReverse: j - i - 1,
          iReversePlus1: j - i
        }));
        i++;
      }
    } else {
      ret = inverse(this);
    }
    return ret;
  });

  Handlebars.registerHelper("getRankImage", function(rankNumber) {
    var result;

    result = RankHelper.getRankImage(rankNumber);
    result = Handlebars.Utils.escapeExpression(result);
    return new Handlebars.SafeString(result);
  });

  Handlebars.registerHelper("getRankName", function(rankNumber) {
    var result;

    result = RankHelper.getRankName(rankNumber);
    result = Handlebars.Utils.escapeExpression(result);
    return new Handlebars.SafeString(result);
  });
  
});
window.require.register("locale/en", function(exports, require, module) {
  module.exports = {
    en: {
      view: {
        options: {
          "HOME": "HOUSE {0}"
        }
      },
      "C'est trop de la balle": "This is too much teh ball"
    }
  };
  
});
window.require.register("locale/fr", function(exports, require, module) {
  module.exports = {
    fr: {
      controller: {
        home: {
          facebook_invite_message: 'Vasy rejoins ce jeu il déchire',
          touch_me: {
            touch: 'Touche pour afficher la Une',
            loading: "Le journal est en cours de livraison !",
            error: "Le facteur s'est perdu"
          },
          journal: {
            twoplus: {
              rank_1: '{0} est numero uno',
              rank_2: '{0} y est presque',
              rank_3: '{0} dernier du podium',
              rank_n: '{0} n\'est qu\'a la position {1}'
            }
          }
        },
        shop: {
          unavailable_pack: {
            title: 'erreur',
            message: 'pack indisponible'
          },
          not_enough_credits: {
            title: 'Erreur',
            message: 'pas assez de crédits'
          },
          bonus_pack_bought: {
            title: 'Achat confirmé',
            message: "Tout c'est bien passé, bon jeu !"
          },
          life_pack_bought: {
            title: 'Achat confirmé',
            message: "Tout c'est bien passé, bon jeu !"
          }
        },
        game_over: {
          stats: {
            nb_questions: 'Nombre de questions',
            good_answers: 'Bonnes réponses',
            wrong_answers: 'Mauvaises réponses',
            best_row: 'Plus longue série'
          }
        },
        profile: {
          stats: {
            best_score: 'Meilleur score',
            avg_score: 'Score moyen',
            percent_answer: 'Bonne réponse',
            average_time: 'Réponse moyenne',
            games_played_count: 'Nombres partie',
            best_row: 'Combo réponse',
            best_sport: 'Sport favori'
          }
        }
      },
      helper: {
        app_store_link: "http://itunes.apple.com/app/les-12-coups-de-midi/id584885677?mt=8",
        game_icon: "https://midi-preproduction.chugulu.com/assets/Icon-72@2x.png",
        facebook: {
          create_account_sucess: {
            name: "Je joue aux 12 Coups de Midi!",
            description: "L'application du jeu télévisé! Rejoignez moi et essayez de découvrir ce que cache l'Etoile Mystérieuse!"
          },
          discovered_star: {
            name: "J'ai découvert l'Etoile Mystérieuse!",
            description: "Je joue aux 12 Coups de Midi! Rejoignez moi et essayez de découvrir ce que cache l'Etoile Mystérieuse!"
          },
          became_master: {
            name: "Je suis devenu Maître de Midi!",
            description: "Je joue aux 12 Coups de Midi! Rejoignez moi et essayez de découvrir ce que cache l'Etoile Mystérieuse!"
          },
          did_master_piece: {
            name: "J'ai réalisé un Coup de Maître!",
            description: "Je joue aux 12 Coups de Midi! Rejoignez moi et essayez de découvrir ce que cache l'Etoile Mystérieuse!"
          }
        },
        push: {
          how_about_no: "Non, merci",
          kthx: "OK"
        },
        apiCall: {
          error: {
            title: 'Erreur de connexion',
            connection: 'Il est impossible de contacter le serveur. Veuillez vérifier votre connexion internet.',
            server: 'Il est impossible de contacter le serveur. Veuillez réessayer plus tard.',
            api: 'Une erreur est survenue. {0}.'
          }
        },
        purchase: {
          apple: {
            cancel: {
              title: 'Erreur',
              message: 'Achat annulé'
            },
            error: {
              title: 'Erreur',
              message: 'erreur itunes'
            }
          },
          adcolony: {
            quota_exceeded: {
              title: 'erreur',
              message: "Vous avez epuisé vos recompenses pour aujourd'hui! Veuillez réessayer demain ou utilisez les autres moyens."
            },
            error: {
              title: 'Erreur',
              message: "Une erreur est survenue. Veuillez réessayer plus tard."
            }
          },
          facebook: {
            invitation: {
              text: 'accepte',
              reward: "Youpi ! tu as des credits en plus...ou pas"
            }
          }
        },
        stats: {
          no_best_sport: 'Aucun'
        }
      },
      view: {
        outgame: {
          login: {
            already_email: "Un email vient d'être envoyé à {0} avec le code a renseigner.",
            already_facebook: "Email déjà enregistré avec un compte facebook, on lance la connection facebook"
          }
        },
        game: {
          dupa: {
            welcome: "Bienvenue aux 4 candidats qui vont jouer aujourd'hui à {0}. Tout de suite première question"
          }
        }
      },
      ranks: {
        rank_1: {
          name: "Maître des maîtres",
          img_name: "maitre_maitres"
        },
        rank_2: {
          name: "Maître de diamant",
          img_name: "maitre_diamant"
        },
        rank_3: {
          name: "Maître de platine",
          img_name: "maitre_platine"
        },
        rank_4: {
          name: "Maître d'or",
          img_name: "maitre_or"
        },
        rank_5: {
          name: "Maître d'argent",
          img_name: "maitre_argent"
        },
        rank_6: {
          name: "Maître de bronze",
          img_name: "maitre_bronze"
        },
        rank_7: {
          name: "Maitre de cuivre",
          img_name: "maitre_cuivre"
        },
        rank_8: {
          name: "Maitre de fer",
          img_name: "maitre_fer"
        }
      }
    }
  };
  
});
window.require.register("mediator", function(exports, require, module) {
  module.exports = require('chaplin').mediator;
  
});
window.require.register("models/base/collection", function(exports, require, module) {
  var Chaplin, Collection, Model, _ref,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Chaplin = require('chaplin');

  Model = require('models/base/model');

  module.exports = Collection = (function(_super) {
    __extends(Collection, _super);

    function Collection() {
      _ref = Collection.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    Collection.prototype.model = Model;

    return Collection;

  })(Chaplin.Collection);
  
});
window.require.register("models/base/model", function(exports, require, module) {
  var Chaplin, Model, _ref,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Chaplin = require('chaplin');

  module.exports = Model = (function(_super) {
    __extends(Model, _super);

    function Model() {
      _ref = Model.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    return Model;

  })(Chaplin.Model);
  
});
window.require.register("models/ingame/bonus-model", function(exports, require, module) {
  var Bonus, Model, _ref,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Model = require('models/base/model');

  module.exports = Bonus = (function(_super) {
    __extends(Bonus, _super);

    function Bonus() {
      _ref = Bonus.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    Bonus.prototype.defaults = {
      name: 'noname',
      quantity: 0
    };

    return Bonus;

  })(Model);
  
});
window.require.register("models/ingame/player-model", function(exports, require, module) {
  var Model, Player, _ref,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Model = require('models/base/model');

  module.exports = Player = (function(_super) {
    __extends(Player, _super);

    function Player() {
      _ref = Player.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    Player.prototype.defaults = {
      jackpot: 0
    };

    Player.prototype.addJackpot = function(someJackpot) {
      var amount;

      amount = this.get('jackpot') + someJackpot;
      return this.set('jackpot', amount);
    };

    Player.prototype.consumeBonus = function(bonus_consumed) {
      var qty;

      qty = this.get('bonus')[bonus_consumed];
      if (qty <= 0) {
        return false;
      }
      this.attributes['bonus'][bonus_consumed] = qty - 1;
      return true;
    };

    Player.prototype.getBonusQuantity = function(bonus) {
      var a;

      a = this.get('bonus')[bonus];
      return a;
    };

    Player.prototype.getBonuses = function() {
      var bonuses, name, qty, _ref1;

      bonuses = [];
      _ref1 = this.get('bonus');
      for (name in _ref1) {
        qty = _ref1[name];
        bonuses.push({
          name: name,
          quantity: qty
        });
      }
      return bonuses;
    };

    Player.prototype.configure = function(config) {
      this.set(config);
      return this;
    };

    return Player;

  })(Model);
  
});
window.require.register("models/ingame/proposition-model", function(exports, require, module) {
  proposition - model.coffee;
  
});
window.require.register("models/ingame/question-model", function(exports, require, module) {
  var Model, Question, _ref,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Model = require('models/base/model');

  module.exports = Question = (function(_super) {
    __extends(Question, _super);

    function Question() {
      _ref = Question.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    Question.prototype.defaults = {
      propositions: null,
      used: false,
      masked: false
    };

    Question.prototype.isCorrectAnswer = function(answerId) {
      var proposition, _i, _len, _ref1;

      _ref1 = this.get('propositions');
      for (_i = 0, _len = _ref1.length; _i < _len; _i++) {
        proposition = _ref1[_i];
        if (parseInt(proposition.id) === parseInt(answerId)) {
          return proposition.is_valid;
        }
      }
      return false;
    };

    Question.prototype.getPropositions = function() {
      return this.get('propositions').shuffle();
    };

    return Question;

  })(Model);
  
});
window.require.register("models/ingame/questions/photo-mcq-question-model", function(exports, require, module) {
  var PhotoMcqQuestion, Question, _ref,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Question = require('models/ingame/question-model');

  module.exports = PhotoMcqQuestion = (function(_super) {
    __extends(PhotoMcqQuestion, _super);

    function PhotoMcqQuestion() {
      _ref = PhotoMcqQuestion.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    PhotoMcqQuestion.prototype.getWrongAnwers = function(limit) {
      var proposition;

      return ((function() {
        var _i, _len, _ref1, _results;

        _ref1 = this.get('propositions');
        _results = [];
        for (_i = 0, _len = _ref1.length; _i < _len; _i++) {
          proposition = _ref1[_i];
          if (!proposition.is_valid) {
            _results.push(proposition);
          }
        }
        return _results;
      }).call(this)).shuffle().slice(0, limit);
    };

    PhotoMcqQuestion.prototype.getGoodAnwer = function() {
      var proposition;

      return ((function() {
        var _i, _len, _ref1, _results;

        _ref1 = this.get('propositions');
        _results = [];
        for (_i = 0, _len = _ref1.length; _i < _len; _i++) {
          proposition = _ref1[_i];
          if (proposition.is_valid) {
            _results.push(proposition);
          }
        }
        return _results;
      }).call(this))[0].text;
    };

    PhotoMcqQuestion.prototype.getPonderatedAnwers = function() {
      var max, min, offset, total;

      total = 100;
      offset = this.get('difficulty') * 3;
      min = offset + (5 - this.get('difficulty')) * 10;
      max = offset + (5 - this.get('difficulty')) * 20 - min;
      return this.get('propositions').sort(function(proposition) {
        return !proposition.is_valid;
      }).map(function(proposition) {
        var value;

        if (proposition.is_valid) {
          value = Math.random() * max + min;
          total -= value;
        } else {
          value = total / 3;
        }
        proposition.massOpinion = parseInt(value);
        return proposition;
      });
    };

    return PhotoMcqQuestion;

  })(Question);
  
});
window.require.register("models/ingame/stage-model", function(exports, require, module) {
  var Factory, Model, Stage, utils, _ref,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  utils = require('lib/utils');

  Model = require('models/base/model');

  Factory = require('helpers/factory-helper');

  module.exports = Stage = (function(_super) {
    __extends(Stage, _super);

    function Stage() {
      _ref = Stage.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    Stage.prototype.questionIndex = -1;

    Stage.prototype.failedQuestions = [];

    Stage.prototype.defaults = {
      questions: null,
      players: null,
      config: null,
      roundCount: -1
    };

    Stage.prototype.setConfig = function(config) {
      this.set('config', config);
      return this;
    };

    Stage.prototype.setQuestions = function(questions) {
      var q, question_data, question_difficulty, questions_data;

      q = {};
      for (question_difficulty in questions) {
        questions_data = questions[question_difficulty];
        q[question_difficulty] = (function() {
          var _i, _len, _ref1, _results;

          _ref1 = questions_data.shuffle();
          _results = [];
          for (_i = 0, _len = _ref1.length; _i < _len; _i++) {
            question_data = _ref1[_i];
            _results.push(Factory.questionModel(question_data));
          }
          return _results;
        })();
      }
      this.set('questions', q);
      return this;
    };

    Stage.prototype.setPlayers = function(players) {
      var player;

      if (!this.get('config')) {
        throw "stage config should be set";
      }
      players = (function() {
        var _i, _len, _results;

        _results = [];
        for (_i = 0, _len = players.length; _i < _len; _i++) {
          player = players[_i];
          _results.push(player.configure(this.get('config').player));
        }
        return _results;
      }).call(this);
      this.set('players', players);
      return this;
    };

    Stage.prototype.getCurrentQuestion = function() {
      return this.get('questions')[this.questionIndex % this.get('questions').length];
    };

    Stage.prototype.getNextQuestion = function(reset) {
      if (reset == null) {
        reset = false;
      }
      if (reset) {
        this.questionIndex = -1;
      }
      ++this.questionIndex;
      return this.get('questions')[this.questionIndex % this.get('questions').length];
    };

    Stage.prototype.getHumanPlayer = function() {
      return this.get('players')[0];
    };

    Stage.prototype.getConfigValue = function(key) {
      return this.get('config').stage[key];
    };

    Stage.prototype.getQuestionType = function() {
      return utils.underscorize(this.get('questions')[0].get('type'));
    };

    Stage.prototype.incrementRound = function() {
      var c;

      c = this.get('roundCount') + 1;
      this.set('roundCount', c);
      return c;
    };

    return Stage;

  })(Model);
  
});
window.require.register("models/ingame/stages/dupa-stage-model", function(exports, require, module) {
  var DupaStage, Stage, _ref,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Stage = require('models/ingame/stage-model');

  module.exports = DupaStage = (function(_super) {
    __extends(DupaStage, _super);

    function DupaStage() {
      _ref = DupaStage.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    DupaStage.prototype.currentThresholdIndex = 0;

    DupaStage.prototype.questionDifficulty = 1;

    DupaStage.prototype.getHumanPlayer = function() {
      return this.get('player');
    };

    DupaStage.prototype.setPlayers = function(players) {
      var player;

      players = (function() {
        var _i, _len, _results;

        _results = [];
        for (_i = 0, _len = players.length; _i < _len; _i++) {
          player = players[_i];
          _results.push(player.configure(this.get('config').player));
        }
        return _results;
      }).call(this);
      this.set('player', players[0]);
      return this;
    };

    DupaStage.prototype.playerMadeError = function(player) {
      this.currentThresholdIndex = 0;
      this.questionDifficulty = 1;
      return player;
    };

    DupaStage.prototype.playerMadeSuccess = function(player, doubleScore) {
      var jackpot;

      jackpot = this.getCurrentThreshold();
      if (doubleScore) {
        jackpot *= 2;
      }
      player.addJackpot(jackpot);
      this.increaseThreshold();
      return player;
    };

    DupaStage.prototype.increaseThreshold = function() {
      if (this.currentThresholdIndex < this.getConfigValue('thresholds').length - 1) {
        this.currentThresholdIndex++;
        if (this.currentThresholdIndex < 3) {
          return this.questionDifficulty = 1;
        } else if (this.currentThresholdIndex < 6) {
          return this.questionDifficulty = 2;
        } else if (this.currentThresholdIndex < 8) {
          return this.questionDifficulty = 3;
        } else {
          return this.questionDifficulty = 4;
        }
      }
    };

    DupaStage.prototype.getCurrentThreshold = function() {
      return this.getConfigValue('thresholds')[this.currentThresholdIndex];
    };

    DupaStage.prototype.getNextQuestion = function(reset) {
      var questions;

      if (reset == null) {
        reset = false;
      }
      if (reset) {
        this.questionIndex = -1;
      }
      ++this.questionIndex;
      questions = this.get('questions')[this.questionDifficulty];
      return questions[this.questionIndex % questions.length];
    };

    DupaStage.prototype.getCurrentQuestion = function() {
      var questions;

      questions = this.get('questions')[this.questionDifficulty];
      return questions[this.questionIndex % questions.length];
    };

    return DupaStage;

  })(Stage);
  
});
window.require.register("models/outgame/user-model", function(exports, require, module) {
  var User, _ref,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  module.exports = User = (function(_super) {
    __extends(User, _super);

    function User() {
      _ref = User.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    User.prototype.defaults = {
      uuid: null,
      avatar: null,
      credits: 50,
      rank: 6,
      score: 0,
      health: 25,
      notifications: true,
      providers: {
        facebook: null,
        equipe: null
      },
      bonus: {
        fifty_fifty: 5,
        double: 5,
        add_time: 5,
        skip: 5,
        mass: 5
      },
      stats: {
        best_score: 0,
        best_row: 0,
        games_played_count: 0,
        sum_score: 0,
        sum_time_question: 0,
        good_answers_count: 0,
        wrong_answers_count: 0,
        week_score: 0,
        game_week_score: 0,
        sports: {}
      }
    };

    User.prototype.getBonuses = function() {
      var bonuses, name, qty, _ref1;

      bonuses = [];
      _ref1 = this.get('bonus');
      for (name in _ref1) {
        qty = _ref1[name];
        bonuses.push({
          name: name,
          quantity: qty
        });
      }
      return bonuses;
    };

    return User;

  })(Parse.User);
  
});
window.require.register("routes", function(exports, require, module) {
  var routeList;

  routeList = {
    outgame: [['', 'login#index'], ['home', 'home#index'], ['more-games', 'more-games#index'], ['masters', 'hall-of-fame#index'], ['profile', 'profile#index'], ['invite', 'invitation#index'], ['options', 'options#index'], ['shop', 'shop#index'], ['tutorial', 'tutorial#index'], ['hall-of-fame', 'hall-of-fame#index']],
    ingame: [
      ['game', 'game#index'], [
        'game-won/:jackpot/:rank/:reward', 'game-over#won', {
          name: 'game-won'
        }
      ], [
        'game-lost/:jackpot/:rank', 'game-over#lost', {
          name: 'game-lost'
        }
      ]
    ]
  };

  module.exports = function(match) {
    var namespace, route, routes, _results;

    _results = [];
    for (namespace in routeList) {
      routes = routeList[namespace];
      _results.push((function() {
        var _i, _len, _results1;

        _results1 = [];
        for (_i = 0, _len = routes.length; _i < _len; _i++) {
          route = routes[_i];
          route[1] = "" + namespace + "/" + route[1];
          _results1.push(match.apply(null, route));
        }
        return _results1;
      })());
    }
    return _results;
  };
  
});
window.require.register("views/base/collection-view", function(exports, require, module) {
  var Chaplin, CollectionView, View, _ref,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Chaplin = require('chaplin');

  View = require('views/base/view');

  module.exports = CollectionView = (function(_super) {
    __extends(CollectionView, _super);

    function CollectionView() {
      _ref = CollectionView.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    CollectionView.prototype.getTemplateFunction = View.prototype.getTemplateFunction;

    return CollectionView;

  })(Chaplin.CollectionView);
  
});
window.require.register("views/base/view", function(exports, require, module) {
  var Chaplin, View, i18n, _ref,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Chaplin = require('chaplin');

  i18n = require('lib/i18n');

  require('lib/view-helper');

  module.exports = View = (function(_super) {
    __extends(View, _super);

    function View() {
      this.displayMessage = __bind(this.displayMessage, this);    _ref = View.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    View.prototype.getTemplateFunction = function() {
      var template, templateFunc,
        _this = this;

      Handlebars.registerHelper('niceNumber', function(number, options) {
        return _this.niceNumber(number);
      });
      template = this.template;
      if (typeof template === 'string') {
        templateFunc = Handlebars.compile(template);
        this.constructor.prototype.template = templateFunc;
      } else {
        templateFunc = template;
      }
      return templateFunc;
    };

    View.prototype.autoSizeText = function(domElement) {
      var el, elements, _i, _len, _results;

      if (domElement == null) {
        domElement = '.resize';
      }
      elements = $(domElement);
      if (elements.length < 0) {
        return;
      }
      _results = [];
      for (_i = 0, _len = elements.length; _i < _len; _i++) {
        el = elements[_i];
        _results.push((function(el) {
          var resizeText, _results1;

          resizeText = function() {
            var elNewFontSize;

            elNewFontSize = parseInt($(el).css('font-size'), 10) - 1;
            return $(el).css('font-size', elNewFontSize);
          };
          _results1 = [];
          while (el.scrollHeight > el.offsetHeight || el.scrollWidth > el.offsetWidth) {
            _results1.push(resizeText());
          }
          return _results1;
        })(el));
      }
      return _results;
    };

    View.prototype.displayMessage = function(textKey, params) {
      return $('#question', this.el).text(i18n.t("view.game." + this.options.stage.i18n_key + "." + textKey, params));
    };

    View.prototype.dim = function(callback) {
      return $('.fade-screen').addClass('animated fadeIn').one('webkitAnimationEnd', function() {
        $('.fade-screen').removeClass('animated fadeIn');
        return typeof callback === "function" ? callback() : void 0;
      });
    };

    View.prototype.unDim = function(callback) {
      var page;

      page = document.getElementById('page-container');
      page.style.webkitTransform = page.style.webkitTransform;
      return $('.fade-screen').addClass('animated fadeOut').one('webkitAnimationEnd', function() {
        $('.fade-screen').removeClass('animated fadeOut');
        return typeof callback === "function" ? callback() : void 0;
      });
    };

    View.prototype.niceNumber = function(value) {
      return value.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ' ');
    };

    View.prototype.delegateOnce = function(eventName, second, third) {
      var bound, events, handler, list, selector,
        _this = this;

      if (typeof eventName !== 'string') {
        throw new TypeError('View#delegate: first argument must be a string');
      }
      if (arguments.length === 2) {
        handler = second;
      } else if (arguments.length === 3) {
        selector = second;
        if (typeof selector !== 'string') {
          throw new TypeError('View#delegate: ' + 'second argument must be a string');
        }
        handler = third;
      } else {
        throw new TypeError('View#delegate: ' + 'only two or three arguments are allowed');
      }
      if (typeof handler !== 'function') {
        throw new TypeError('View#delegate: ' + 'handler argument must be function');
      }
      list = _.map(eventName.split(' '), function(event) {
        return "" + event + ".delegate" + _this.cid;
      });
      events = list.join(' ');
      bound = _.bind(handler, this);
      $(selector || null, this.$el).one(events, bound);
      return bound;
    };

    View.prototype.undelegateSingle = function(eventName, selector) {
      return $(selector, this.$el).off(eventName);
    };

    View.prototype.delegateSingleOnce = function(eventName, second, third) {
      var handler, selector, singleHandler,
        _this = this;

      if (typeof eventName !== 'string') {
        throw new TypeError('View#delegate: first argument must be a string');
      }
      if (arguments.length === 2) {
        handler = second;
      } else if (arguments.length === 3) {
        selector = second;
        if (typeof selector !== 'string') {
          throw new TypeError('View#delegate: ' + 'second argument must be a string');
        }
        handler = third;
      } else {
        throw new TypeError('View#delegate: ' + 'only two or three arguments are allowed');
      }
      if (typeof handler !== 'function') {
        throw new TypeError('View#delegate: ' + 'handler argument must be function');
      }
      singleHandler = function(event) {
        _this.undelegateSingle(eventName, selector);
        return typeof handler === "function" ? handler(event) : void 0;
      };
      return this.delegateOnce(eventName, selector, singleHandler);
    };

    return View;

  })(Chaplin.View);
  
});
window.require.register("views/ingame/game-over-view", function(exports, require, module) {
  var GameOverView, View, template, _ref,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  template = require('views/templates/ingame/game-over');

  View = require('views/base/view');

  module.exports = GameOverView = (function(_super) {
    __extends(GameOverView, _super);

    function GameOverView() {
      _ref = GameOverView.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    GameOverView.prototype.autoRender = true;

    GameOverView.prototype.className = 'game-over';

    GameOverView.prototype.container = '#page-container';

    GameOverView.prototype.template = template;

    GameOverView.prototype.getTemplateData = function() {
      return this.options;
    };

    return GameOverView;

  })(View);
  
});
window.require.register("views/ingame/stages/dupa-stage-view", function(exports, require, module) {
  var DupaView, View, i18n, template, _ref,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  View = require('views/base/view');

  template = require('views/templates/ingame/stages/dupa-stage');

  i18n = require('lib/i18n');

  module.exports = DupaView = (function(_super) {
    __extends(DupaView, _super);

    function DupaView() {
      this.updatePropositionsText = __bind(this.updatePropositionsText, this);    _ref = DupaView.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    DupaView.prototype.propContainerInit = false;

    DupaView.prototype.template = template;

    DupaView.prototype.autoRender = true;

    DupaView.prototype.className = 'dupa-stage';

    DupaView.prototype.container = '#page-container';

    DupaView.prototype.thresholds = null;

    DupaView.prototype.getTemplateData = function() {
      return this.options;
    };

    DupaView.prototype.welcome = function(callback) {
      this.autoSizeText();
      return typeof callback === "function" ? callback() : void 0;
    };

    DupaView.prototype.updateTimer = function(duration) {
      var progress, progressEl;

      duration = parseInt(duration);
      if (duration > this.options.time) {
        duration = this.options.time;
      }
      if (duration <= 0) {
        duration = 0;
      }
      $('.chrono-time', this.$el).text(duration + 's');
      progress = duration / this.options.time * 100;
      if (progress > 100) {
        progress = 100;
      }
      return progressEl = $('.chrono-container .chrono-filler', this.$el).css('height', progress + '%');
    };

    DupaView.prototype.clearTimer = function() {
      return $('.chrono-container #time', this.$el).empty();
    };

    DupaView.prototype.removeQuestion = function(callback) {
      $('#text-block', this.$el).removeClass('active');
      $('.proposition', this.$el).removeClass('success error');
      $('#question', this.$el).empty();
      return typeof callback === "function" ? callback() : void 0;
    };

    DupaView.prototype.showQuestion = function(question, callback) {
      var _this = this;

      return setTimeout(function() {
        var proposition, propositionsEl, theme, _i, _len, _ref1;

        propositionsEl = $('.question-propositions-container', _this.$el);
        $('.proposition-container', propositionsEl).remove();
        _ref1 = question.getPropositions();
        for (_i = 0, _len = _ref1.length; _i < _len; _i++) {
          proposition = _ref1[_i];
          propositionsEl.prepend("<div class='proposition-container box-align' data-id='" + proposition.id + "'>            <span class='proposition resize' data-id='" + proposition.id + "'>" + proposition.text + "</span>            <div class='massOpinion'></div>          </div>");
        }
        $('.proposition-container', _this.$el).addClass('animated pulse').one('webkitAnimationEnd', function() {
          return $(this).removeClass('animated pulse');
        });
        theme = question.get('theme');
        if (!theme) {
          theme = 'Question';
        }
        $('.question-theme').text(theme);
        $('.question-content').text(question.get('text'));
        _this.autoSizeText();
        return callback();
      }, 0);
    };

    DupaView.prototype.chooseProposition = function(targetElement, callback) {
      var propositionEl;

      propositionEl = $(targetElement, this.$el);
      propositionEl.addClass('selected');
      return callback(propositionEl.data('id'));
    };

    DupaView.prototype.chooseBonus = function(targetElement, callback) {
      var propositionEl;

      propositionEl = $(targetElement, this.$el);
      return callback(propositionEl.attr('id'));
    };

    DupaView.prototype.updatePropositionsText = function(question) {
      var proposition, _i, _len, _ref1;

      _ref1 = question.getPropositions();
      for (_i = 0, _len = _ref1.length; _i < _len; _i++) {
        proposition = _ref1[_i];
        $(".proposition[data-id='" + proposition.id + "']").text(proposition.text);
      }
      return this.autoSizeText();
    };

    DupaView.prototype.updateAnswerButton = function(propositionId, status, callback, question) {
      var klass, propositionEl,
        _this = this;

      this.updatePropositionsText(question);
      klass = status ? 'success' : 'error';
      if (propositionId) {
        propositionEl = $('.proposition[data-id="' + propositionId + '"]', this.$el);
        propositionEl.parent().addClass(klass);
      } else {
        propositionEl = $('.proposition', this.$el);
      }
      return setTimeout(function() {
        return propositionEl.removeClass('animated').addClass('animated fadeOut').one('webkitAnimationEnd', function() {
          return callback();
        });
      }, 500);
    };

    DupaView.prototype.beforeNextQuestionMessage = function(textKey, jackpot, callback) {
      var _this = this;

      this.displayMessage(textKey, jackpot);
      return setTimeout(function() {
        return $('#question', _this.$el).addClass('animated fadeOut').one('webkitAnimationEnd', function() {
          $('#question', _this.$el).removeClass('fadeOut');
          return typeof callback === "function" ? callback() : void 0;
        });
      }, 2000);
    };

    DupaView.prototype.updateJackpot = function(jackpot, currentThresholdValue, result) {
      var blockEl, el;

      el = $('.jackpot-container', this.$el);
      $('#total-jackpot', el).text(jackpot);
      $(".threshold .highlighted", el).addClass('animated fadeOut').one('webkitAnimationEnd', function() {
        return $(this).remove();
      });
      blockEl = $(".threshold[data-value='" + currentThresholdValue + "']", el);
      blockEl.append("<div class='highlighted'>" + currentThresholdValue + "</div>");
      $('.highlighted', blockEl).addClass('animated fadeIn');
      return this.updateJackpotMarker(currentThresholdValue, result);
    };

    DupaView.prototype.updateJackpotMarker = function(currentThresholdValue, result) {
      var currentThresholdIndex, el, height, klass;

      if (result == null) {
        result = true;
      }
      el = $('.jackpot-container', this.$el);
      currentThresholdIndex = this.options.thresholds.indexOf(currentThresholdValue);
      height = (currentThresholdIndex + 1) * 9 + 1;
      klass = result ? 'bounce' : 'inverseBounce';
      return $('#jackpot-marker', el).css('top', height + '%').one('webkitTransitionEnd', function() {
        return $(this).addClass(klass + ' animated').one('webkitAnimationEnd', function() {
          return $(this).removeClass(klass + ' animated');
        });
      });
    };

    DupaView.prototype.updateBonus = function(targetElement, quantity, callback) {
      targetElement = $(targetElement, this.$el);
      $('.quantity', targetElement).html(quantity);
      return typeof callback === "function" ? callback() : void 0;
    };

    DupaView.prototype.hideSomeAnswers = function(propositions, callback) {
      var proposition, _i, _len;

      for (_i = 0, _len = propositions.length; _i < _len; _i++) {
        proposition = propositions[_i];
        $(".proposition[data-id='" + proposition.id + "']").css('visibility', 'hidden');
      }
      return typeof callback === "function" ? callback() : void 0;
    };

    DupaView.prototype.displayMass = function(propositions, callback) {
      var proposition, _i, _len;

      for (_i = 0, _len = propositions.length; _i < _len; _i++) {
        proposition = propositions[_i];
        $(".proposition-container[data-id='" + proposition.id + "'] .massOpinion").html(proposition.massOpinion + '%').show();
      }
      return typeof callback === "function" ? callback() : void 0;
    };

    DupaView.prototype.doubleScoreActivated = function() {
      $('.highlighted').addClass('gold');
      return $('#jackpot-marker').addClass('gold');
    };

    DupaView.prototype.doubleScoreDeactivated = function() {
      return $('#jackpot-marker').removeClass('gold');
    };

    DupaView.prototype.finishMessage = function(textKey, params, callback) {
      var _this = this;

      this.displayMessage(textKey, params);
      return setTimeout(function() {
        return $('#question', _this.$el).addClass('animated fadeOut').one('webkitAnimationEnd', function() {
          $('#question', _this.$el).removeClass('fadeOut');
          _this.displayMessage('finish');
          return setTimeout(function() {
            return $('#question', _this.$el).addClass('animated fadeOut').one('webkitAnimationEnd', function() {
              $('#question', _this.$el).removeClass('fadeOut');
              return typeof callback === "function" ? callback() : void 0;
            });
          }, 2000);
        });
      }, 4000);
    };

    return DupaView;

  })(View);
  
});
window.require.register("views/layout", function(exports, require, module) {
  var Chaplin, Layout, _ref,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Chaplin = require('chaplin');

  module.exports = Layout = (function(_super) {
    __extends(Layout, _super);

    function Layout() {
      _ref = Layout.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    return Layout;

  })(Chaplin.Layout);
  
});
window.require.register("views/outgame/hall-of-fame-view", function(exports, require, module) {
  var HallOfFameView, View, template, _ref,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  template = require('views/templates/outgame/hall-of-fame');

  View = require('views/base/view');

  module.exports = HallOfFameView = (function(_super) {
    __extends(HallOfFameView, _super);

    function HallOfFameView() {
      this.suggestFriends = __bind(this.suggestFriends, this);    _ref = HallOfFameView.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    HallOfFameView.prototype.autoRender = true;

    HallOfFameView.prototype.className = 'hall-of-fame';

    HallOfFameView.prototype.container = '#page-container';

    HallOfFameView.prototype.template = template;

    HallOfFameView.prototype.getTemplateData = function() {
      var s,
        _this = this;

      s = HallOfFameView.__super__.getTemplateData.apply(this, arguments);
      this.interval = setInterval(function() {
        var cd;

        cd = _this.calculateDateCount();
        return _this.setCountDown(cd.days, cd.hours, cd.minutes);
      }, 1000);
      s;
      return this.options;
    };

    HallOfFameView.prototype.newPlayerHTML = function(player, picSize, players) {
      var friend, pic, rank, separator;

      separator = '<div class="separator"></div>';
      if (this.i > 0) {
        if (players[this.i - 1].rank + 1 === player.rank || players[this.i - 1].rank === player.rank) {
          separator = '';
        }
      } else {
        separator = '';
      }
      friend = player.friend ? '<div class="ask-friend"></div>' : '';
      if (this.color === 'pink') {
        this.color = 'white';
      } else {
        this.color = 'pink';
      }
      rank = '<span class="rank">' + player.rank + '</span>';
      if (player.rank === 1) {
        rank = '<div class="rank first"></div>';
      } else if (player.rank === 2) {
        rank = '<div class="rank second"></div>';
      } else if (player.rank === 3) {
        rank = '<div class="rank third"></div>';
      }
      this.i++;
      pic = player.profilepic ? player.profilepic : 'http://profile.ak.fbcdn.net/static-ak/rsrc.php/v2/yo/r/UlIqmHJn-SK.gif';
      return separator + '<div class="div-ranking ' + this.color + '">' + rank + '<img class="profilepic" src="' + pic + '" width="' + picSize + '" height="' + picSize + '"/><span class="username">' + player.username + '</span><span class="money">' + player.jackpot + '</span>' + friend + '</div>';
    };

    HallOfFameView.prototype.updateRankingList = function(players, playerPosition, noFriends, fbConnected, withFriends, friendsToInvite) {
      var el, player, _i, _len;

      this.i = 0;
      this.color = 'pink';
      el = $('.ranking-container', this.$el).empty();
      if (!fbConnected && withFriends) {
        return el.append('<a id="no-fb-connected"></a>');
      } else if (noFriends && withFriends) {
        return el.append('<a id="no-friends"></a>');
      } else {
        for (_i = 0, _len = players.length; _i < _len; _i++) {
          player = players[_i];
          el.append(this.newPlayerHTML(player, 40, players));
        }
        if (withFriends) {
          el.append(this.suggestFriends(friendsToInvite));
        }
        return this.scrollTo(playerPosition);
      }
    };

    HallOfFameView.prototype.chooseList = function(eventTargetEl) {
      $('div', '#btn_HoF').removeClass('active');
      return $(eventTargetEl).addClass('active');
    };

    HallOfFameView.prototype.calculateDateCount = function() {
      var daysLeft, e_daysLeft, e_hrsLeft, hrsLeft, minsLeft, msPerDay, timeLeft, today, yearsLeft;

      today = new Date();
      msPerDay = 24 * 60 * 60 * 1000;
      timeLeft = this.options.targetDate.getTime() - today.getTime();
      e_daysLeft = timeLeft / msPerDay;
      daysLeft = Math.floor(e_daysLeft);
      yearsLeft = 0;
      if (daysLeft > 365) {
        yearsLeft = Math.floor(daysLeft / 365);
        daysLeft = daysLeft % 365;
      }
      e_hrsLeft = (e_daysLeft - daysLeft) * 24;
      hrsLeft = Math.floor(e_hrsLeft);
      minsLeft = Math.floor((e_hrsLeft - hrsLeft) * 60);
      return {
        days: daysLeft,
        hours: hrsLeft,
        minutes: minsLeft
      };
    };

    HallOfFameView.prototype.setCountDown = function(days, hours, minutes) {
      $('#HoF-days', this.$el).text((days < 10 ? '0' + days : days));
      $('#HoF-hours', this.$el).text((hours < 10 ? '0' + hours : hours));
      return $('#HoF-min', this.$el).text((minutes < 10 ? '0' + minutes : minutes));
    };

    HallOfFameView.prototype.askFriend = function(el) {
      return $(el).addClass('asked');
    };

    HallOfFameView.prototype.scrollTo = function(i) {
      var el, height;

      el = $('.ranking-container')[0];
      height = $('.div-ranking').height();
      if (i > 3) {
        return el.scrollTop = (i - 4) * height;
      }
    };

    HallOfFameView.prototype.dispose = function() {
      if (this.interval != null) {
        clearInterval(this.interval);
      }
      return HallOfFameView.__super__.dispose.apply(this, arguments);
    };

    HallOfFameView.prototype.suggestFriends = function(friends) {
      var friend, moreFriends, _i, _len;

      moreFriends = '';
      for (_i = 0, _len = friends.length; _i < _len; _i++) {
        friend = friends[_i];
        moreFriends += "<div class='div-ranking moreFriends'><img class='profilepic' src='https://graph.facebook.com/" + friend.id + "/picture'/><span class='username'>" + friend.name + "</span><div data-id='" + friend.id + "' class='invite-btn'></div></div>";
      }
      return moreFriends;
    };

    return HallOfFameView;

  })(View);
  
});
window.require.register("views/outgame/home-page-view", function(exports, require, module) {
  var HomePageView, I18n, View, template, _ref,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  template = require('views/templates/outgame/home');

  View = require('views/base/view');

  I18n = require('lib/i18n');

  module.exports = HomePageView = (function(_super) {
    __extends(HomePageView, _super);

    function HomePageView() {
      _ref = HomePageView.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    HomePageView.prototype.autoRender = true;

    HomePageView.prototype.className = 'home-page';

    HomePageView.prototype.container = '#page-container';

    HomePageView.prototype.template = template;

    HomePageView.prototype.getTemplateData = function() {
      return this.options;
    };

    HomePageView.prototype.toggleJournal = function() {
      return this.subview('journal').toggle();
    };

    HomePageView.prototype.addJournalView = function(journalView) {
      this.subview('journal', journalView);
      return this.subview('journal').render().toggle();
    };

    HomePageView.prototype.setJournalMessage = function(key) {
      return $('#touch-me').text(I18n.t('controller.home.touch_me.' + key));
    };

    return HomePageView;

  })(View);
  
});
window.require.register("views/outgame/journal/journal-view", function(exports, require, module) {
  var JournalView, View, _ref,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  View = require('views/base/view');

  module.exports = JournalView = (function(_super) {
    __extends(JournalView, _super);

    function JournalView() {
      _ref = JournalView.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    JournalView.prototype.autoRender = true;

    JournalView.prototype.className = 'journal-container shown';

    JournalView.prototype.container = '.home-page';

    JournalView.prototype.getTemplateData = function() {
      this.options.date = this.getDate();
      return this.options;
    };

    JournalView.prototype.getDate = function() {
      var d, date;

      date = new Date();
      d = date.getDate() < 10 ? '0' + date.getDate() : date.getDate();
      d += '/';
      d += date.getMonth() < 9 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1;
      d += '/' + (date.getYear() % 100);
      return d;
    };

    JournalView.prototype.toggle = function() {
      return this.$el.toggleClass('hiddened').toggleClass('shown');
    };

    return JournalView;

  })(View);
  
});
window.require.register("views/outgame/journal/no-friends-journal-view", function(exports, require, module) {
  var JournalView, NoFriendsJournalView, template,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  template = require('views/templates/outgame/journal/no-friends-journal');

  JournalView = require('views/outgame/journal/journal-view');

  module.exports = NoFriendsJournalView = (function(_super) {
    __extends(NoFriendsJournalView, _super);

    NoFriendsJournalView.prototype.template = template;

    NoFriendsJournalView.prototype.interval = null;

    function NoFriendsJournalView(options) {
      this.className += ' no-friends';
      NoFriendsJournalView.__super__.constructor.apply(this, arguments);
    }

    NoFriendsJournalView.prototype.initialize = function() {
      var s,
        _this = this;

      s = NoFriendsJournalView.__super__.initialize.apply(this, arguments);
      this.interval = setInterval(function() {
        var cd;

        cd = _this.calculateDateCount();
        return _this.setCountDown(cd.days, cd.hours, cd.minutes);
      }, 1000);
      return s;
    };

    NoFriendsJournalView.prototype.setCountDown = function(days, hours, minutes) {
      $('#days', this.$el).text((days < 10 ? '0' + days : days));
      $('#hours', this.$el).text((hours < 10 ? '0' + hours : hours));
      return $('#minutes', this.$el).text((minutes < 10 ? '0' + minutes : minutes));
    };

    NoFriendsJournalView.prototype.calculateDateCount = function() {
      var daysLeft, e_daysLeft, e_hrsLeft, hrsLeft, minsLeft, msPerDay, timeLeft, today, yearsLeft;

      today = new Date();
      msPerDay = 24 * 60 * 60 * 1000;
      timeLeft = this.options.targetDate.getTime() - today.getTime();
      e_daysLeft = timeLeft / msPerDay;
      daysLeft = Math.floor(e_daysLeft);
      yearsLeft = 0;
      if (daysLeft > 365) {
        yearsLeft = Math.floor(daysLeft / 365);
        daysLeft = daysLeft % 365;
      }
      e_hrsLeft = (e_daysLeft - daysLeft) * 24;
      hrsLeft = Math.floor(e_hrsLeft);
      minsLeft = Math.floor((e_hrsLeft - hrsLeft) * 60);
      return {
        days: daysLeft,
        hours: hrsLeft,
        minutes: minsLeft
      };
    };

    NoFriendsJournalView.prototype.dispose = function() {
      if (this.interval != null) {
        clearInterval(this.interval);
      }
      return NoFriendsJournalView.__super__.dispose.apply(this, arguments);
    };

    return NoFriendsJournalView;

  })(JournalView);
  
});
window.require.register("views/outgame/journal/one-friend-journal-view", function(exports, require, module) {
  var JournalView, OneFriendJournalView, template,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  template = require('views/templates/outgame/journal/one-friend-journal');

  JournalView = require('views/outgame/journal/journal-view');

  module.exports = OneFriendJournalView = (function(_super) {
    __extends(OneFriendJournalView, _super);

    OneFriendJournalView.prototype.template = template;

    function OneFriendJournalView(options) {
      this.className += ' one-friend';
      OneFriendJournalView.__super__.constructor.apply(this, arguments);
    }

    return OneFriendJournalView;

  })(JournalView);
  
});
window.require.register("views/outgame/journal/two-friends-journal-view", function(exports, require, module) {
  var JournalView, TwoFriendsJournalView, template,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  template = require('views/templates/outgame/journal/two-friends-journal');

  JournalView = require('views/outgame/journal/journal-view');

  module.exports = TwoFriendsJournalView = (function(_super) {
    __extends(TwoFriendsJournalView, _super);

    TwoFriendsJournalView.prototype.template = template;

    function TwoFriendsJournalView(options) {
      this.className += ' two-friends';
      TwoFriendsJournalView.__super__.constructor.apply(this, arguments);
    }

    TwoFriendsJournalView.prototype.getTemplateData = function() {
      var data, i, medals, participant, _i, _len, _ref;

      data = TwoFriendsJournalView.__super__.getTemplateData.apply(this, arguments);
      medals = ['gold', 'silver', 'bronze'];
      _ref = data.participants;
      for (i = _i = 0, _len = _ref.length; _i < _len; i = ++_i) {
        participant = _ref[i];
        data.participants[i].rank = i + 1;
        data.participants[i].medal = medals[i];
      }
      return data;
    };

    return TwoFriendsJournalView;

  })(JournalView);
  
});
window.require.register("views/outgame/journal/twoplus-friends-journal-view", function(exports, require, module) {
  var JournalView, TwoplusFriendsJournalView, template,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  template = require('views/templates/outgame/journal/twoplus-friends-journal');

  JournalView = require('views/outgame/journal/journal-view');

  module.exports = TwoplusFriendsJournalView = (function(_super) {
    __extends(TwoplusFriendsJournalView, _super);

    TwoplusFriendsJournalView.prototype.template = template;

    function TwoplusFriendsJournalView(options) {
      this.className += ' twoplus-friends';
      TwoplusFriendsJournalView.__super__.constructor.apply(this, arguments);
    }

    return TwoplusFriendsJournalView;

  })(JournalView);
  
});
window.require.register("views/outgame/login-view", function(exports, require, module) {
  var LoginView, View, template, _ref,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  View = require('views/base/view');

  template = require('views/templates/outgame/login');

  module.exports = LoginView = (function(_super) {
    __extends(LoginView, _super);

    function LoginView() {
      _ref = LoginView.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    LoginView.prototype.template = template;

    LoginView.prototype.autoRender = true;

    LoginView.prototype.className = 'login-page-container';

    LoginView.prototype.container = '#page-container';

    LoginView.prototype.animInterval = {};

    LoginView.prototype.animInterval2 = {};

    LoginView.prototype.animateFacebook = function() {
      var _this = this;

      this.animInterval = setInterval(function() {
        return $('.facebook-login').addClass('animated tada').one('webkitAnimationEnd', function() {
          return $(this).removeClass('animated tada');
        });
      }, 2500);
      return this.animInterval2 = setInterval(function() {
        return $('.equipe-login').addClass('animated tada').one('webkitAnimationEnd', function() {
          return $(this).removeClass('animated tada');
        });
      }, 3000);
    };

    LoginView.prototype.openTempForm = function() {
      $('#equipe-forms').hide();
      $('#temp-form').show();
      return $('#flipper', this.$el).addClass('flipped');
    };

    LoginView.prototype.openForms = function() {
      $('#equipe-forms').show();
      $('#temp-form').hide();
      return $('#flipper', this.$el).addClass('flipped');
    };

    LoginView.prototype.closeForms = function() {
      return $('#flipper', this.$el).removeClass('flipped');
    };

    return LoginView;

  })(View);
  
});
window.require.register("views/outgame/more-games-view", function(exports, require, module) {
  var MoreGamesView, View, template, _ref,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  View = require('views/base/view');

  template = require('views/templates/outgame/more-games');

  module.exports = MoreGamesView = (function(_super) {
    __extends(MoreGamesView, _super);

    function MoreGamesView() {
      _ref = MoreGamesView.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    MoreGamesView.prototype.autoRender = true;

    MoreGamesView.prototype.className = 'more-games';

    MoreGamesView.prototype.container = '#page-container';

    MoreGamesView.prototype.template = template;

    MoreGamesView.prototype.setContent = function(htmlContent) {
      return $('#more-games-content', this.$el).html(htmlContent);
    };

    return MoreGamesView;

  })(View);
  
});
window.require.register("views/outgame/options-view", function(exports, require, module) {
  var OptionsView, View, template, _ref,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  View = require('views/base/view');

  template = require('views/templates/outgame/options');

  module.exports = OptionsView = (function(_super) {
    __extends(OptionsView, _super);

    function OptionsView() {
      _ref = OptionsView.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    OptionsView.prototype.template = template;

    OptionsView.prototype.autoRender = true;

    OptionsView.prototype.className = 'options-container';

    OptionsView.prototype.container = '#page-container';

    OptionsView.prototype.getTemplateData = function() {
      return this.options.templateData;
    };

    OptionsView.prototype.toggleButton = function(buttonId) {
      return $('#' + buttonId).toggleClass('off');
    };

    return OptionsView;

  })(View);
  
});
window.require.register("views/outgame/profile-view", function(exports, require, module) {
  var ProfileView, View, mediator, template, _ref,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  View = require('views/base/view');

  template = require('views/templates/outgame/profile');

  mediator = require('mediator');

  module.exports = ProfileView = (function(_super) {
    __extends(ProfileView, _super);

    function ProfileView() {
      _ref = ProfileView.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    ProfileView.prototype.template = template;

    ProfileView.prototype.className = 'profile-page';

    ProfileView.prototype.container = '#page-container';

    ProfileView.prototype.autoRender = true;

    ProfileView.prototype.getTemplateData = function() {
      return this.options;
    };

    ProfileView.prototype.activateFbButton = function() {
      return $('.facebook-link').addClass('done');
    };

    return ProfileView;

  })(View);
  
});
window.require.register("views/outgame/shop-view", function(exports, require, module) {
  var ShopView, View, mediator, template, _ref,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  template = require('views/templates/outgame/shop');

  mediator = require('mediator');

  View = require('views/base/view');

  module.exports = ShopView = (function(_super) {
    __extends(ShopView, _super);

    function ShopView() {
      _ref = ShopView.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    ShopView.prototype.autoRender = true;

    ShopView.prototype.className = 'shop-page';

    ShopView.prototype.container = '#page-container';

    ShopView.prototype.template = template;

    ShopView.prototype.getTemplateData = function() {
      return this.options;
    };

    ShopView.prototype.getTemplateFunction = function() {
      return ShopView.__super__.getTemplateFunction.apply(this, arguments);
    };

    ShopView.prototype.updateWallet = function(credits, health) {
      $('#numbers #credits', this.$el).text(credits);
      return $('#numbers #hearts', this.$el).text(health);
    };

    ShopView.prototype.chooseApplePack = function(targetElement) {
      return $(targetElement, this.$el).data('id');
    };

    ShopView.prototype.chooseFreePack = function(targetElement) {
      return $(targetElement, this.$el).attr('id');
    };

    ShopView.prototype.chooseLifePackIndex = function(targetElement) {
      return $(targetElement, this.$el).data('position');
    };

    ShopView.prototype.chooseBonusPackIndex = function(targetElement) {
      return $(targetElement, this.$el).data('position');
    };

    ShopView.prototype.disableUnavailablePacks = function(packIds) {
      var packId, _i, _len, _results;

      _results = [];
      for (_i = 0, _len = packIds.length; _i < _len; _i++) {
        packId = packIds[_i];
        _results.push($('.paid-pack[data-id="' + packId + '"]', this.$el).addClass('unavailable'));
      }
      return _results;
    };

    ShopView.prototype.removeFreePack = function(elemId) {
      return $('.free-pack#' + elemId, this.$el).remove();
    };

    ShopView.prototype.toggleTabs = function() {
      $('.tab', this.$el).toggleClass('inactive');
      $('.tab', this.$el).toggleClass('active');
      return $('.content-container', this.$el).toggle();
    };

    return ShopView;

  })(View);
  
});
window.require.register("views/outgame/tutorial-view", function(exports, require, module) {
  var TutorialView, View, template, _ref,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  View = require('views/base/view');

  template = require('views/templates/outgame/tutorial');

  module.exports = TutorialView = (function(_super) {
    __extends(TutorialView, _super);

    function TutorialView() {
      _ref = TutorialView.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    TutorialView.prototype.template = template;

    TutorialView.prototype.className = 'tutorial';

    TutorialView.prototype.autoRender = true;

    TutorialView.prototype.container = '#page-container';

    TutorialView.prototype.getTemplateData = function() {
      return this.options;
    };

    TutorialView.prototype.changeScreen = function(screenNumber) {
      $('#pagination li').removeClass('current').eq(screenNumber - 1).addClass('current');
      return $('.screen', this.$el).css('background-image', "url(images/tutorial/tutoriel_" + screenNumber + ".jpg)");
    };

    return TutorialView;

  })(View);
  
});
window.require.register("views/templates/ingame/game-over", function(exports, require, module) {
  module.exports = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
    this.compilerInfo = [2,'>= 1.0.0-rc.3'];
  helpers = helpers || Handlebars.helpers; data = data || {};
    var buffer = "", stack1, stack2, options, functionType="function", escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing, self=this;

  function program1(depth0,data) {
    
    var buffer = "", stack1;
    buffer += "\n        <tr>\n          <td class='name'>";
    if (stack1 = helpers.text) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
    else { stack1 = depth0.text; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
    buffer += escapeExpression(stack1)
      + "</td>\n          <td class='number'>";
    if (stack1 = helpers.number) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
    else { stack1 = depth0.number; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
    buffer += escapeExpression(stack1)
      + "</td>\n        </tr>\n        ";
    return buffer;
    }

    buffer += "<div class=\"header-container\">\n  <a href=\"#home\" class=\"home-btn\"></a>\n  <div id=\"title\" class=\"title\"></div>\n</div>\n\n<div id='numbers'>\n  <span id='hearts' class='number'>"
      + escapeExpression(((stack1 = ((stack1 = depth0.player),stack1 == null || stack1 === false ? stack1 : stack1.health)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
      + "</span>\n  <span id='heart-icon' class='icon'></span>\n  <span id='credits' class='number'>"
      + escapeExpression(((stack1 = ((stack1 = depth0.player),stack1 == null || stack1 === false ? stack1 : stack1.credits)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
      + "</span>\n  <span id='credit-icon' class='icon'></span>\n</div>\n\n\n<div class=\"content-container\">\n  <h1 class=\"title box-align\">\n    Bravo, tu as gagné <span class=\"jetons-number\">"
      + escapeExpression(((stack1 = ((stack1 = depth0.params),stack1 == null || stack1 === false ? stack1 : stack1.reward)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
      + "</span> <span class=\"jetons\"></span> !\n  </h1>\n\n  <div class=\"blocks-container\">\n    <div class=\"block jackpot\">\n      <div class=\"title\"></div>\n      <div class=\"value\">";
    options = {hash:{},data:data};
    buffer += escapeExpression(((stack1 = helpers.niceNumber),stack1 ? stack1.call(depth0, ((stack1 = depth0.params),stack1 == null || stack1 === false ? stack1 : stack1.jackpot), options) : helperMissing.call(depth0, "niceNumber", ((stack1 = depth0.params),stack1 == null || stack1 === false ? stack1 : stack1.jackpot), options)))
      + "</div>\n    </div>\n\n    <div class='block stats'>\n\n\n      <table id='stats'>\n        ";
    stack2 = helpers.each.call(depth0, ((stack1 = depth0.params),stack1 == null || stack1 === false ? stack1 : stack1.stats), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});
    if(stack2 || stack2 === 0) { buffer += stack2; }
    buffer += "\n      </table>\n    </div>\n\n  </div>\n\n  <a href=\"#game\" class=\"replay-btn\"></a>\n</div>\n";
    return buffer;
    });
});
window.require.register("views/templates/ingame/stages/dupa-stage", function(exports, require, module) {
  module.exports = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
    this.compilerInfo = [2,'>= 1.0.0-rc.3'];
  helpers = helpers || Handlebars.helpers; data = data || {};
    var buffer = "", stack1, functionType="function", escapeExpression=this.escapeExpression, self=this;

  function program1(depth0,data) {
    
    var buffer = "", stack1;
    buffer += "\n    <div class='bonus' id='";
    if (stack1 = helpers.name) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
    else { stack1 = depth0.name; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
    buffer += escapeExpression(stack1)
      + "' style=\"background-image: url('images/ingame/";
    if (stack1 = helpers.name) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
    else { stack1 = depth0.name; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
    buffer += escapeExpression(stack1)
      + ".png')\">\n      <div class='quantity'>";
    if (stack1 = helpers.quantity) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
    else { stack1 = depth0.quantity; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
    buffer += escapeExpression(stack1)
      + "</div>\n    </div>\n  ";
    return buffer;
    }

  function program3(depth0,data) {
    
    var buffer = "";
    buffer += "\n    <div class='threshold' data-value=\""
      + escapeExpression((typeof depth0 === functionType ? depth0.apply(depth0) : depth0))
      + "\">"
      + escapeExpression((typeof depth0 === functionType ? depth0.apply(depth0) : depth0))
      + "</div>\n  ";
    return buffer;
    }

    buffer += "<div class=\"btn-menu\"></div>\n<div class='chrono-container'>\n  <div class='chrono-chrono'></div>\n  <div class='chrono-time'></div>\n  <div class='chrono-filler-container'>\n    <div class='chrono-filler'></div>\n  </div>\n</div>\n<div class='question-container'>\n  <div class='question-photo'></div>\n  <div class='question-theme-container'>\n    <div class='question-theme resize'></div>\n  </div>\n  <div class='question-content-container'>\n    <div class='question-content resize'></div>\n  </div>\n  <div class='question-propositions-container'>\n  </div>\n</div>\n<div class='bonus-container'>\n  ";
    stack1 = helpers.each.call(depth0, depth0.bonus, {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});
    if(stack1 || stack1 === 0) { buffer += stack1; }
    buffer += "\n</div>\n<div class='jackpot-container'>\n  <div id=\"total-jackpot\">0</div>\n  ";
    stack1 = helpers.each.call(depth0, depth0.thresholds, {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});
    if(stack1 || stack1 === 0) { buffer += stack1; }
    buffer += "\n  <div id='jackpot-marker'>\n</div>\n";
    return buffer;
    });
});
window.require.register("views/templates/outgame/hall-of-fame", function(exports, require, module) {
  module.exports = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
    this.compilerInfo = [2,'>= 1.0.0-rc.3'];
  helpers = helpers || Handlebars.helpers; data = data || {};
    var buffer = "", stack1, functionType="function", escapeExpression=this.escapeExpression;


    buffer += "\n<!-- CONTENT BLOCK BEGIN -->\n<div class=\"content-container\">\n  <div class='tournament'>\n    <div id='HoF-days'></div>\n    <div id='HoF-hours'></div>\n    <div id='HoF-min'></div>\n  </div>\n  <div class=\"level\">niv.";
    if (stack1 = helpers.rank) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
    else { stack1 = depth0.rank; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
    buffer += escapeExpression(stack1)
      + "</div>\n  <div id=\"btn_HoF\">\n    <div class=\"friends active category\" id=\"btn-friends\"></div>\n    <div class=\"global category\" id=\"btn-global\"></div>\n  </div>\n  <div class=\"ranking-container\" id=\"toto\">\n  </div>\n</div>\n\n<!-- HEADER BLOCK BEGIN -->\n<div class=\"cash-container\">\n  <span class=\"life-value\">";
    if (stack1 = helpers.health) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
    else { stack1 = depth0.health; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
    buffer += escapeExpression(stack1)
      + "</span> <span id=\"life-icon\"></span>\n  <span class=\"cash-value\">";
    if (stack1 = helpers.credits) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
    else { stack1 = depth0.credits; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
    buffer += escapeExpression(stack1)
      + "</span> <span id=\"cash-icon\"></span>\n</div>\n<a href=\"#profile\" class=\"home-btn\"></a>\n";
    return buffer;
    });
});
window.require.register("views/templates/outgame/home", function(exports, require, module) {
  module.exports = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
    this.compilerInfo = [2,'>= 1.0.0-rc.3'];
  helpers = helpers || Handlebars.helpers; data = data || {};
    var buffer = "", stack1, functionType="function", escapeExpression=this.escapeExpression;


    buffer += "<div id='numbers'>\n  <span id='hearts' class='number'>";
    if (stack1 = helpers.hearts) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
    else { stack1 = depth0.hearts; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
    buffer += escapeExpression(stack1)
      + "</span>\n  <span id='heart-icon' class='icon'></span>\n  <span id='credits' class='number'>";
    if (stack1 = helpers.credits) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
    else { stack1 = depth0.credits; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
    buffer += escapeExpression(stack1)
      + "</span>\n  <span id='credit-icon' class='icon'></span>\n</div>\n<div id='logo'></div>\n\n<div id='touch-me'></div>\n\n<div id='menu'>\n  <a class=\"game-link item\" id=\"game-link\"></a>\n  <a href=\"#shop\" class=\"shop-link item\"></a>\n  <div class=\"small-buttons-container\">\n    <a href=\"#profile\" class=\"profile item\"></a>\n    <a href=\"#options\" class=\"options-link item\"></a>\n  </div>\n</div>\n<a href=\"#more-games\" class=\"more-games-link\"></a>\n";
    return buffer;
    });
});
window.require.register("views/templates/outgame/journal/no-friends-journal", function(exports, require, module) {
  module.exports = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
    this.compilerInfo = [2,'>= 1.0.0-rc.3'];
  helpers = helpers || Handlebars.helpers; data = data || {};
    var buffer = "", stack1, functionType="function", escapeExpression=this.escapeExpression, self=this;

  function program1(depth0,data) {
    
    var buffer = "", stack1;
    buffer += "\n    <div id='photo' style='background-image:url(https://graph.facebook.com/";
    if (stack1 = helpers.fb_id) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
    else { stack1 = depth0.fb_id; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
    buffer += escapeExpression(stack1)
      + "/picture?width=90&height=90)'></div>\n  ";
    return buffer;
    }

  function program3(depth0,data) {
    
    
    return "\n    <div id='photo' style='background-image:url(http://media.comicvine.com/uploads/7/77914/2109064-4char_forever_alone_guy_high_resolution_icon.png)'></div>\n  ";
    }

  function program5(depth0,data) {
    
    var buffer = "", stack1;
    buffer += "\n    <span class='participant'>\n      <div class='rank'>";
    if (stack1 = helpers.position) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
    else { stack1 = depth0.position; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
    buffer += escapeExpression(stack1)
      + "</div>\n      ";
    stack1 = helpers['if'].call(depth0, depth0.fb_id, {hash:{},inverse:self.program(8, program8, data),fn:self.program(6, program6, data),data:data});
    if(stack1 || stack1 === 0) { buffer += stack1; }
    buffer += "\n      <div class='blaze'>";
    if (stack1 = helpers.username) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
    else { stack1 = depth0.username; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
    buffer += escapeExpression(stack1)
      + "</div>\n      <div class='score'>";
    if (stack1 = helpers.score) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
    else { stack1 = depth0.score; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
    buffer += escapeExpression(stack1)
      + "</div>\n    </span>\n    <span class='spacer'></span>\n  ";
    return buffer;
    }
  function program6(depth0,data) {
    
    var buffer = "", stack1;
    buffer += "\n        <div class='photo' style='background-image:url(https://graph.facebook.com/";
    if (stack1 = helpers.fb_id) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
    else { stack1 = depth0.fb_id; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
    buffer += escapeExpression(stack1)
      + "/picture?width=90&height=90)'></div>\n      ";
    return buffer;
    }

  function program8(depth0,data) {
    
    
    return "\n        <div class='photo' style='background-image:url(images/common/facebook-default.jpg)'></div>\n      ";
    }

    buffer += "<div id='equipe-btn'></div>\n<div id='date'>EDITION DU ";
    if (stack1 = helpers.date) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
    else { stack1 = depth0.date; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
    buffer += escapeExpression(stack1)
      + "</div>\n<div id='title'><span id='exculsive'>exclusif !</span> ";
    if (stack1 = helpers.username) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
    else { stack1 = depth0.username; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
    buffer += escapeExpression(stack1)
      + "</div>\n<div id='photo-container'>\n  ";
    stack1 = helpers['if'].call(depth0, depth0.fb_id, {hash:{},inverse:self.program(3, program3, data),fn:self.program(1, program1, data),data:data});
    if(stack1 || stack1 === 0) { buffer += stack1; }
    buffer += "\n</div>\n<div id='message'>joue a sport quiz mais n'a toujours pas d'amis !</div>\n<a id='invite-btn'></a>\n<div id='countdown'>\n  <span id='days' class='number'>00</span>\n  <span id='hours' class='number'>00</span>\n  <span id='minutes' class='number'>00</span>\n</div>\n<div id='ranking'>\n  ";
    stack1 = helpers.each.call(depth0, depth0.participants, {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});
    if(stack1 || stack1 === 0) { buffer += stack1; }
    buffer += "\n</div>";
    return buffer;
    });
});
window.require.register("views/templates/outgame/journal/one-friend-journal", function(exports, require, module) {
  module.exports = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
    this.compilerInfo = [2,'>= 1.0.0-rc.3'];
  helpers = helpers || Handlebars.helpers; data = data || {};
    var buffer = "", stack1, functionType="function", escapeExpression=this.escapeExpression, self=this;

  function program1(depth0,data) {
    
    var buffer = "", stack1;
    buffer += "\n  <div class='participant'>\n    ";
    stack1 = helpers['if'].call(depth0, depth0.fb_id, {hash:{},inverse:self.program(4, program4, data),fn:self.program(2, program2, data),data:data});
    if(stack1 || stack1 === 0) { buffer += stack1; }
    buffer += "\n    <div class='blaze'>";
    if (stack1 = helpers.username) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
    else { stack1 = depth0.username; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
    buffer += escapeExpression(stack1)
      + "</div>\n    <div class='score'>";
    if (stack1 = helpers.score) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
    else { stack1 = depth0.score; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
    buffer += escapeExpression(stack1)
      + "</div>\n  </div>\n  ";
    return buffer;
    }
  function program2(depth0,data) {
    
    var buffer = "", stack1;
    buffer += "\n      <div class='photo' style='background-image:url(https://graph.facebook.com/";
    if (stack1 = helpers.fb_id) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
    else { stack1 = depth0.fb_id; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
    buffer += escapeExpression(stack1)
      + "/picture?width=90&height=90)'></div>\n    ";
    return buffer;
    }

  function program4(depth0,data) {
    
    
    return "\n      <div class='photo' style='background-image:url(images/common/facebook-default.jpg)'></div>\n    ";
    }

    buffer += "<div id='equipe-btn'></div>\n<div id='date'>EDITION DU ";
    if (stack1 = helpers.date) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
    else { stack1 = depth0.date; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
    buffer += escapeExpression(stack1)
      + "</div>\n<div id='title'>";
    if (stack1 = helpers.winner) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
    else { stack1 = depth0.winner; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
    buffer += escapeExpression(stack1)
      + " a mis sa patee a ";
    if (stack1 = helpers.loser) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
    else { stack1 = depth0.loser; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
    buffer += escapeExpression(stack1)
      + "</div>\n<div id='vs'>\n  ";
    stack1 = helpers.each.call(depth0, depth0.participants, {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});
    if(stack1 || stack1 === 0) { buffer += stack1; }
    buffer += "\n</div>\n<div id='buttons'>\n  <a id='invite-btn'></a>\n  <a id='ranking-btn' href=\"#masters\"></a>\n</div>";
    return buffer;
    });
});
window.require.register("views/templates/outgame/journal/two-friends-journal", function(exports, require, module) {
  module.exports = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
    this.compilerInfo = [2,'>= 1.0.0-rc.3'];
  helpers = helpers || Handlebars.helpers; data = data || {};
    var buffer = "", stack1, functionType="function", escapeExpression=this.escapeExpression, self=this;

  function program1(depth0,data) {
    
    var buffer = "", stack1;
    buffer += "\n  <div class='participant' id='";
    if (stack1 = helpers.medal) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
    else { stack1 = depth0.medal; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
    buffer += escapeExpression(stack1)
      + "'>\n    ";
    stack1 = helpers['if'].call(depth0, depth0.fb_id, {hash:{},inverse:self.program(4, program4, data),fn:self.program(2, program2, data),data:data});
    if(stack1 || stack1 === 0) { buffer += stack1; }
    buffer += "\n    <div class='rank'>";
    if (stack1 = helpers.rank) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
    else { stack1 = depth0.rank; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
    buffer += escapeExpression(stack1)
      + "</div>\n    <div class='blaze'>";
    if (stack1 = helpers.username) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
    else { stack1 = depth0.username; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
    buffer += escapeExpression(stack1)
      + "</div>\n    <div class='score'>";
    if (stack1 = helpers.score) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
    else { stack1 = depth0.score; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
    buffer += escapeExpression(stack1)
      + "</div>\n  </div>\n  ";
    return buffer;
    }
  function program2(depth0,data) {
    
    var buffer = "", stack1;
    buffer += "\n      <div class='photo' style='background-image:url(https://graph.facebook.com/";
    if (stack1 = helpers.fb_id) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
    else { stack1 = depth0.fb_id; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
    buffer += escapeExpression(stack1)
      + "/picture?width=90&height=90)'></div>\n    ";
    return buffer;
    }

  function program4(depth0,data) {
    
    
    return "\n      <div class='photo' style='background-image:url(images/common/facebook-default.jpg)'></div>\n    ";
    }

    buffer += "<div id='equipe-btn'></div>\n<div id='date'>EDITION DU ";
    if (stack1 = helpers.date) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
    else { stack1 = depth0.date; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
    buffer += escapeExpression(stack1)
      + "</div>\n<div id='title'>";
    if (stack1 = helpers.master) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
    else { stack1 = depth0.master; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
    buffer += escapeExpression(stack1)
      + " maitrise ses amis</div>\n<div id='podium'>\n  ";
    stack1 = helpers.each.call(depth0, depth0.participants, {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});
    if(stack1 || stack1 === 0) { buffer += stack1; }
    buffer += "\n</div>\n<div id='buttons'>\n  <a id='invite-btn'></a>\n  <a id='ranking-btn' href='#masters'></a>\n</div>";
    return buffer;
    });
});
window.require.register("views/templates/outgame/journal/twoplus-friends-journal", function(exports, require, module) {
  module.exports = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
    this.compilerInfo = [2,'>= 1.0.0-rc.3'];
  helpers = helpers || Handlebars.helpers; data = data || {};
    var buffer = "", stack1, stack2, options, functionType="function", escapeExpression=this.escapeExpression, self=this, helperMissing=helpers.helperMissing;

  function program1(depth0,data) {
    
    var buffer = "", stack1;
    buffer += "\n    <tr class='participant'>\n      <td class='rank'>";
    if (stack1 = helpers.iPlus1) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
    else { stack1 = depth0.iPlus1; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
    buffer += escapeExpression(stack1)
      + "</td>\n      <td class='photo'>\n      ";
    stack1 = helpers['if'].call(depth0, depth0.fb_id, {hash:{},inverse:self.program(4, program4, data),fn:self.program(2, program2, data),data:data});
    if(stack1 || stack1 === 0) { buffer += stack1; }
    buffer += "\n      </td>\n      <td class='blaze'>";
    if (stack1 = helpers.username) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
    else { stack1 = depth0.username; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
    buffer += escapeExpression(stack1)
      + "</td>\n      <td class='score'>";
    if (stack1 = helpers.score) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
    else { stack1 = depth0.score; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
    buffer += escapeExpression(stack1)
      + "</td>\n    </tr>\n    ";
    return buffer;
    }
  function program2(depth0,data) {
    
    var buffer = "", stack1;
    buffer += "\n        <div style='background-image:url(https://graph.facebook.com/";
    if (stack1 = helpers.fb_id) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
    else { stack1 = depth0.fb_id; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
    buffer += escapeExpression(stack1)
      + "/picture?width=90&height=90)'></div>\n      ";
    return buffer;
    }

  function program4(depth0,data) {
    
    
    return "\n        <div style='background-image:url(images/common/facebook-default.jpg)'></div>\n      ";
    }

    buffer += "<div id='equipe-btn'></div>\n<div id='date'>EDITION DU ";
    if (stack1 = helpers.date) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
    else { stack1 = depth0.date; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
    buffer += escapeExpression(stack1)
      + "</div>\n<div id='title'>";
    if (stack1 = helpers.title) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
    else { stack1 = depth0.title; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
    buffer += escapeExpression(stack1)
      + "</div>\n<div id='leaderboard-container'>\n  <table id='leaderboard'>\n    ";
    options = {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data};
    stack2 = ((stack1 = helpers.each_with_index),stack1 ? stack1.call(depth0, depth0.participants, options) : helperMissing.call(depth0, "each_with_index", depth0.participants, options));
    if(stack2 || stack2 === 0) { buffer += stack2; }
    buffer += "\n  </table>\n</div>\n<div id='buttons'>\n  <a id='invite-btn'></a>\n  <a id='ranking-btn' href='#masters'></a>\n</div>";
    return buffer;
    });
});
window.require.register("views/templates/outgame/login", function(exports, require, module) {
  module.exports = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
    this.compilerInfo = [2,'>= 1.0.0-rc.3'];
  helpers = helpers || Handlebars.helpers; data = data || {};
    var buffer = "";


    buffer += "<div id='flipper'>\n  <div class=\"btn-container\">\n    <a href=\"#\" id=\"facebook-login\" class=\"facebook-login\"></a>\n    <a href=\"#\" id=\"equipe-login\" class=\"equipe-login\"></a>\n    <a href=\"#\" id=\"temp-login\" class=\"temp-login\"></a>\n  </div>\n  <div id='temp-form'>\n    <a id='close-btn'></a>\n    <form name='temp-login' id='temp-login-form' action='#'>\n      <input type='text' name='username' placeholder='username' required /><br />\n      <input type='submit' value='login' name='submit' id='temp-btn' />\n    </form>\n  </div>\n  <div id='equipe-forms'>\n    <a id='close-btn'></a>\n    <form name='sso-login' id='sso-login-form' action='#'>\n      <input type='text' name='username' placeholder='username' required /><br />\n      <input type='password' name='password' placeholder='password' required /><br />\n      <input type='image' value='login' name='submit' id='login-btn' src='images/login/connect_button.png'/>\n    </form>\n    <div class='or'></div>\n    "
      + "\n    <form name='sso-register' id='sso-register-form' action='#'>\n      <input type='email' name='email' placeholder='email' required /><br />\n      <input type='text' name='username' placeholder='username' required /><br />\n      <input type='password' name='password' placeholder='password' required /><br />\n      <input type='image' value='register' name='submit' id='register-btn' src='/images/login/subscription.png'/>\n    </form>\n  </div>\n</div>";
    return buffer;
    });
});
window.require.register("views/templates/outgame/more-games", function(exports, require, module) {
  module.exports = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
    this.compilerInfo = [2,'>= 1.0.0-rc.3'];
  helpers = helpers || Handlebars.helpers; data = data || {};
    


    return "<a href=\"#home\" id=\"btn-home\"></a>\n<div id=\"title\"></div>\n<div id=\"more-games-content\"></div>";
    });
});
window.require.register("views/templates/outgame/options", function(exports, require, module) {
  module.exports = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
    this.compilerInfo = [2,'>= 1.0.0-rc.3'];
  helpers = helpers || Handlebars.helpers; data = data || {};
    var buffer = "", stack1, functionType="function", escapeExpression=this.escapeExpression;


    buffer += "<a href=\"#home\" class=\"home-btn\"></a>\n<div class=\"title\"></div>\n\n\n<div class=\"content-container\">\n  <div class=\"button ";
    if (stack1 = helpers.music) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
    else { stack1 = depth0.music; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
    buffer += escapeExpression(stack1)
      + "\" id=\"option-music\"></div>\n  <div class=\"button ";
    if (stack1 = helpers.fx) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
    else { stack1 = depth0.fx; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
    buffer += escapeExpression(stack1)
      + "\" id=\"option-fx\"></div>\n  <br />\n\n  <div class=\"button ";
    if (stack1 = helpers.info_notif) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
    else { stack1 = depth0.info_notif; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
    buffer += escapeExpression(stack1)
      + "\" id=\"option-info-notif\"></div>\n  <div class=\"button ";
    if (stack1 = helpers.facebook) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
    else { stack1 = depth0.facebook; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
    buffer += escapeExpression(stack1)
      + "\" id=\"option-facebook-connect\"></div>\n  <br />\n\n  <a class=\"button\" id=\"option-tutorial\" href='#tutorial'></a>\n  <div class=\"button\" id=\"option-help\"></div>\n  <br />\n\n  <div class=\"button\" id=\"option-credits\"></div>\n</div>\n";
    return buffer;
    });
});
window.require.register("views/templates/outgame/profile", function(exports, require, module) {
  module.exports = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
    this.compilerInfo = [2,'>= 1.0.0-rc.3'];
  helpers = helpers || Handlebars.helpers; data = data || {};
    var buffer = "", stack1, stack2, options, functionType="function", escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing, self=this;

  function program1(depth0,data) {
    
    
    return "\n      <div class='facebook-link done'></div>\n    ";
    }

  function program3(depth0,data) {
    
    
    return "\n      <div class='facebook-link'></div>\n    ";
    }

  function program5(depth0,data) {
    
    var buffer = "", stack1;
    buffer += "\n            <tr>\n              <td class='left'>";
    if (stack1 = helpers.text) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
    else { stack1 = depth0.text; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
    buffer += escapeExpression(stack1)
      + "</td>\n              <td>";
    if (stack1 = helpers.number) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
    else { stack1 = depth0.number; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
    buffer += escapeExpression(stack1)
      + "</td>\n            </tr>\n          ";
    return buffer;
    }

  function program7(depth0,data) {
    
    var buffer = "", stack1;
    buffer += "\n    <div class='elem ";
    if (stack1 = helpers.name) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
    else { stack1 = depth0.name; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
    buffer += escapeExpression(stack1)
      + "'>\n      <div class='number'>";
    if (stack1 = helpers.quantity) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
    else { stack1 = depth0.quantity; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
    buffer += escapeExpression(stack1)
      + "</div>\n    </div>\n  ";
    return buffer;
    }

  function program9(depth0,data) {
    
    var stack1;
    if (stack1 = helpers.avatar) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
    else { stack1 = depth0.avatar; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
    return escapeExpression(stack1);
    }

  function program11(depth0,data) {
    
    var buffer = "", stack1;
    buffer += "images/avatar/";
    if (stack1 = helpers.gender) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
    else { stack1 = depth0.gender; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
    buffer += escapeExpression(stack1)
      + ".jpg";
    return buffer;
    }

    buffer += "<!--MAIN BLOCK-->\n<div class='background'>\n<!--HEADER BLOCK-->\n  <div class=\"header\">\n    <a href=\"#home\" class=\"home-btn\"></a>\n    <div class=\"informations\">\n      <div class=\"cash\">\n        <div class='cash-value'>"
      + escapeExpression(((stack1 = ((stack1 = depth0.user),stack1 == null || stack1 === false ? stack1 : stack1.credits)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
      + "</div>\n        <div class=\"cash-icone\"></div>\n      </div>\n      <div class=\"lifes\">\n        <div class=\"lifes-value\">"
      + escapeExpression(((stack1 = ((stack1 = depth0.user),stack1 == null || stack1 === false ? stack1 : stack1.health)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
      + "</div>\n        <div class=\"lifes-icone\"></div>\n      </div>\n    </div>\n  </div>\n  <div class='picture-container'>\n    <div class='picture' style='background-image: url(";
    if (stack2 = helpers.avatar) { stack2 = stack2.call(depth0, {hash:{},data:data}); }
    else { stack2 = depth0.avatar; stack2 = typeof stack2 === functionType ? stack2.apply(depth0) : stack2; }
    buffer += escapeExpression(stack2)
      + ")'></div>\n    <div class='name'>"
      + escapeExpression(((stack1 = ((stack1 = depth0.user),stack1 == null || stack1 === false ? stack1 : stack1.username)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
      + "</div>\n  </div>\n  <div class='personal-info'>\n    <div class='level'>"
      + escapeExpression(((stack1 = ((stack1 = depth0.user),stack1 == null || stack1 === false ? stack1 : stack1.rank)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
      + "</div>\n    <div class='score'>";
    options = {hash:{},data:data};
    buffer += escapeExpression(((stack1 = helpers.niceNumber),stack1 ? stack1.call(depth0, ((stack1 = depth0.stats),stack1 == null || stack1 === false ? stack1 : stack1.game_week_score), options) : helperMissing.call(depth0, "niceNumber", ((stack1 = depth0.stats),stack1 == null || stack1 === false ? stack1 : stack1.game_week_score), options)))
      + "</div>\n    ";
    stack2 = helpers['if'].call(depth0, depth0.is_linked, {hash:{},inverse:self.program(3, program3, data),fn:self.program(1, program1, data),data:data});
    if(stack2 || stack2 === 0) { buffer += stack2; }
    buffer += "\n  </div>\n  <div class='buttons'>\n    <a href=\"#hall-of-fame\"class='hall-of-fame'></a>\n    <div class='game-center'></div>\n  </div>\n  <div class='stats'>\n    <div class='stat1'>\n      <table>\n        <tbody>\n          ";
    stack2 = helpers.each.call(depth0, depth0.stats, {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});
    if(stack2 || stack2 === 0) { buffer += stack2; }
    buffer += "\n        </tbody>\n      </table>\n    </div>\n    <div class='stat2'>\n      <table>\n        <tbody>\n\n          ";
    stack2 = helpers.each.call(depth0, depth0.sports, {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});
    if(stack2 || stack2 === 0) { buffer += stack2; }
    buffer += "\n\n        </tbody>\n      </table>\n    </div>\n  </div>\n</div>\n\n<!--BONUS BLOCK-->\n<div class='bonus'>\n  ";
    stack2 = helpers.each.call(depth0, depth0.bonus, {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});
    if(stack2 || stack2 === 0) { buffer += stack2; }
    buffer += "\n</div>\n\n<!-- CONTENT BLOCK BEGIN\n<div class=\"content-container\">\n  <div class=\"left-block\">\n    <div class=\"fb-head-container ";
    if (stack2 = helpers.gender) { stack2 = stack2.call(depth0, {hash:{},data:data}); }
    else { stack2 = depth0.gender; stack2 = typeof stack2 === functionType ? stack2.apply(depth0) : stack2; }
    buffer += escapeExpression(stack2)
      + "\">\n      <img src=\"";
    stack2 = helpers['if'].call(depth0, depth0.avatar, {hash:{},inverse:self.program(11, program11, data),fn:self.program(9, program9, data),data:data});
    if(stack2 || stack2 === 0) { buffer += stack2; }
    buffer += "\" alt=\"\" class=\"fb-head\">\n    </div>\n  </div>\n  <div class=\"center-block\">\n    <div class=\"username box-align\">";
    if (stack2 = helpers.username) { stack2 = stack2.call(depth0, {hash:{},data:data}); }
    else { stack2 = depth0.username; stack2 = typeof stack2 === functionType ? stack2.apply(depth0) : stack2; }
    buffer += escapeExpression(stack2)
      + "</div>\n    <div class=\"current-cash\">";
    if (stack2 = helpers.jackpot) { stack2 = stack2.call(depth0, {hash:{},data:data}); }
    else { stack2 = depth0.jackpot; stack2 = typeof stack2 === functionType ? stack2.apply(depth0) : stack2; }
    buffer += escapeExpression(stack2)
      + "</div>\n    <a class=\"rankings\"></a>\n  </div>\n  <div class=\"right-block\">\n    <a id=\"link-fb\" class=\"link-fb\"></a>\n    <a class=\"current-level\">";
    if (stack2 = helpers.rank) { stack2 = stack2.call(depth0, {hash:{},data:data}); }
    else { stack2 = depth0.rank; stack2 = typeof stack2 === functionType ? stack2.apply(depth0) : stack2; }
    buffer += escapeExpression(stack2)
      + "</a>\n  </div>\n</div>\n<div class=\"clearfix\"></div>\n\n<div class=\"footer-container box-align\">\n  <div class=\"block played\">\n    <div class=\"score-container box-align\"></div>\n    <div class=\"text box-align\">Parties jouées</div>\n  </div>\n  <div class=\"block won\">\n    <div class=\"score-container box-align\"></div>\n    <div class=\"text box-align\">Parties gagnées</div>\n  </div>\n  <div class=\"block best-score\">\n    <div class=\"score-container box-align\"></div>\n    <div class=\"text box-align\">Meilleur niveau</div>\n  </div>\n  <div class=\"block best-cash\">\n    <div class=\"score-container box-align\"></div>\n    <div class=\"text box-align\">Meilleure cagnotte</div>\n  </div>\n  <div class=\"block stars\">\n    <div class=\"score-container box-align\"></div>\n    <div class=\"text box-align\">Etoiles Mystérieuses</div>\n  </div>\n</div>-->\n";
    return buffer;
    });
});
window.require.register("views/templates/outgame/shop", function(exports, require, module) {
  module.exports = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
    this.compilerInfo = [2,'>= 1.0.0-rc.3'];
  helpers = helpers || Handlebars.helpers; data = data || {};
    var buffer = "", stack1, stack2, functionType="function", escapeExpression=this.escapeExpression, self=this;

  function program1(depth0,data) {
    
    var buffer = "", stack1;
    buffer += "\n        ";
    stack1 = helpers.unless.call(depth0, depth0.disabled, {hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data});
    if(stack1 || stack1 === 0) { buffer += stack1; }
    buffer += "\n      ";
    return buffer;
    }
  function program2(depth0,data) {
    
    var buffer = "", stack1;
    buffer += "\n          <a class=\"free-pack\" id=\"";
    if (stack1 = helpers.name) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
    else { stack1 = depth0.name; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
    buffer += escapeExpression(stack1)
      + "\">\n            <span>+ ";
    if (stack1 = helpers.value) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
    else { stack1 = depth0.value; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
    buffer += escapeExpression(stack1)
      + "</span>\n          </a>\n        ";
    return buffer;
    }

  function program4(depth0,data,depth1) {
    
    var buffer = "", stack1, stack2;
    buffer += "\n        <a class=\"paid-pack first-offer "
      + escapeExpression(((stack1 = ((stack1 = depth1.packs),stack1 == null || stack1 === false ? stack1 : stack1.type)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
      + "\" data-id=\"";
    if (stack2 = helpers.product_id) { stack2 = stack2.call(depth0, {hash:{},data:data}); }
    else { stack2 = depth0.product_id; stack2 = typeof stack2 === functionType ? stack2.apply(depth0) : stack2; }
    buffer += escapeExpression(stack2)
      + "\" style=\"background-image:url(";
    if (stack2 = helpers.image) { stack2 = stack2.call(depth0, {hash:{},data:data}); }
    else { stack2 = depth0.image; stack2 = typeof stack2 === functionType ? stack2.apply(depth0) : stack2; }
    buffer += escapeExpression(stack2)
      + ")\">\n          <span class='marker'>+</span>\n          <span class='value'>";
    if (stack2 = helpers.value) { stack2 = stack2.call(depth0, {hash:{},data:data}); }
    else { stack2 = depth0.value; stack2 = typeof stack2 === functionType ? stack2.apply(depth0) : stack2; }
    buffer += escapeExpression(stack2)
      + "</span>\n          <span class='credit-icon'></span>\n        </a>\n      ";
    return buffer;
    }

  function program6(depth0,data) {
    
    var buffer = "", stack1;
    buffer += "\n        <div class=\"life-pack\" style='background-image: url(images/shop/life_and_bonus/Vies/";
    if (stack1 = helpers.value) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
    else { stack1 = depth0.value; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
    buffer += escapeExpression(stack1)
      + ".png)' data-position='"
      + escapeExpression(((stack1 = data.index),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
      + "'></div>\n      ";
    return buffer;
    }

    buffer += "<!-- HEADER BLOCK BEGIN -->\n<a href=\"#home\" class=\"home-btn\"></a>\n<div class='tabs-container'>\n  <div class='tab active' id='credits'></div>\n  <div class='tab inactive' id='bonuses'></div>\n</div>\n\n<div id='numbers'>\n  <span id='hearts' class='number'>";
    if (stack1 = helpers.health) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
    else { stack1 = depth0.health; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
    buffer += escapeExpression(stack1)
      + "</span>\n  <span id='heart-icon' class='icon'></span>\n  <span id='credits' class='number'>";
    if (stack1 = helpers.credits) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
    else { stack1 = depth0.credits; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
    buffer += escapeExpression(stack1)
      + "</span>\n  <span id='credit-icon' class='icon'></span>\n</div>\n\n<div class=\"clearfix\"></div>\n\n\n<div class='tab-container'>\n\n  <!-- CREDITS CONTENT BLOCK BEGIN -->\n  <div class=\"content-container\" id='credits'>\n    <div class=\"free-offers\">\n      ";
    stack2 = helpers.each.call(depth0, ((stack1 = depth0.packs),stack1 == null || stack1 === false ? stack1 : stack1.free_packs), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});
    if(stack2 || stack2 === 0) { buffer += stack2; }
    buffer += "\n    </div>\n    <div class=\"clearfix\"></div>\n    <div class=\"paid-offers\">\n      ";
    stack2 = helpers.each.call(depth0, ((stack1 = depth0.packs),stack1 == null || stack1 === false ? stack1 : stack1.credit_packs), {hash:{},inverse:self.noop,fn:self.programWithDepth(program4, data, depth0),data:data});
    if(stack2 || stack2 === 0) { buffer += stack2; }
    buffer += "\n    </div>\n    <div class=\"clearfix\"></div>\n  </div>\n\n\n  <!-- BONUSES CONTENT BLOCK BEGIN -->\n  <div class=\"content-container\" id='bonus' style='display: none'>\n    <div class='life-container'>\n      ";
    stack2 = helpers.each.call(depth0, ((stack1 = depth0.bonuses),stack1 == null || stack1 === false ? stack1 : stack1.life_packs), {hash:{},inverse:self.noop,fn:self.program(6, program6, data),data:data});
    if(stack2 || stack2 === 0) { buffer += stack2; }
    buffer += "\n    </div>\n    <div data-position='0' class='bonus-pack small'></div>\n    <div data-position='1' class='bonus-pack medium'></div>\n    <div data-position='2' class='bonus-pack big'></div>\n  </div>\n\n</div>";
    return buffer;
    });
});
window.require.register("views/templates/outgame/tutorial", function(exports, require, module) {
  module.exports = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
    this.compilerInfo = [2,'>= 1.0.0-rc.3'];
  helpers = helpers || Handlebars.helpers; data = data || {};
    var buffer = "", stack1, functionType="function", escapeExpression=this.escapeExpression;


    buffer += "<a id='close-btn' href='#options'></a>\n<div class='screen' style=\"background-image:url(images/tutorial/tutoriel_";
    if (stack1 = helpers.currentIndex) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
    else { stack1 = depth0.currentIndex; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
    buffer += escapeExpression(stack1)
      + ".jpg)\"></div>\n<ul id='pagination'>\n  <li class='current'></li>\n  <li></li>\n  <li></li>\n</ul>\n<div id='next-btn'></div>";
    return buffer;
    });
});
window.require.register("views/templates/pause", function(exports, require, module) {
  module.exports = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
    this.compilerInfo = [2,'>= 1.0.0-rc.3'];
  helpers = helpers || Handlebars.helpers; data = data || {};
    var buffer = "", stack1, functionType="function", escapeExpression=this.escapeExpression;


    buffer += "<div id=\"popup\" class=\"popup pause\" style=\"z-index:100";
    if (stack1 = helpers.level) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
    else { stack1 = depth0.level; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
    buffer += escapeExpression(stack1)
      + "\" data-key=\"";
    if (stack1 = helpers.key) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
    else { stack1 = depth0.key; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
    buffer += escapeExpression(stack1)
      + "\">\n  <h1 class='title'>Attention!</h1>\n  <p class='text-container'>\n    Le chrono tourne... reprends vite pour ne pas perdre la partie !\n  </p>\n  <div class=\"btn-container\">\n    <a class=\"ok resume btn remove\"></a>\n    <a href=\"#home\" class=\"quit btn remove\"></a>\n    <div class=\"clearfix\"></div>\n    <div class=\"music btn ";
    if (stack1 = helpers.music) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
    else { stack1 = depth0.music; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
    buffer += escapeExpression(stack1)
      + "\"></div>\n    <div class=\"fx btn ";
    if (stack1 = helpers.fx) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
    else { stack1 = depth0.fx; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
    buffer += escapeExpression(stack1)
      + "\"></div>\n  </div>\n</div>\n";
    return buffer;
    });
});
window.require.register("views/templates/popup", function(exports, require, module) {
  module.exports = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
    this.compilerInfo = [2,'>= 1.0.0-rc.3'];
  helpers = helpers || Handlebars.helpers; data = data || {};
    var buffer = "", stack1, functionType="function", escapeExpression=this.escapeExpression, self=this;

  function program1(depth0,data) {
    
    var buffer = "";
    buffer += "\n        <li>"
      + escapeExpression((typeof depth0 === functionType ? depth0.apply(depth0) : depth0))
      + "</li>\n      ";
    return buffer;
    }

  function program3(depth0,data) {
    
    
    return "\n      <div class=\"ok btn remove\">ok</div>\n    ";
    }

  function program5(depth0,data) {
    
    
    return "\n      <div class=\"no btn remove\">no</div>\n      <div class=\"yes btn remove\">yes</div>\n    ";
    }

    buffer += "<div id=\"popup\" class=\"popup ";
    if (stack1 = helpers.className) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
    else { stack1 = depth0.className; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
    buffer += escapeExpression(stack1)
      + "\" style=\"z-index:100";
    if (stack1 = helpers.level) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
    else { stack1 = depth0.level; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
    buffer += escapeExpression(stack1)
      + "\" data-key=\"";
    if (stack1 = helpers.key) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
    else { stack1 = depth0.key; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
    buffer += escapeExpression(stack1)
      + "\">\n  <h1>";
    if (stack1 = helpers.title) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
    else { stack1 = depth0.title; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
    buffer += escapeExpression(stack1)
      + "</h1>\n  <p>\n    <ul class=\"messages\">\n      ";
    stack1 = helpers.each.call(depth0, depth0.message, {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});
    if(stack1 || stack1 === 0) { buffer += stack1; }
    buffer += "\n    </ul>\n  </p>\n  <div class=\"btn-container\">\n    ";
    stack1 = helpers['if'].call(depth0, depth0.info, {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});
    if(stack1 || stack1 === 0) { buffer += stack1; }
    buffer += "\n    ";
    stack1 = helpers['if'].call(depth0, depth0.confirmation, {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});
    if(stack1 || stack1 === 0) { buffer += stack1; }
    buffer += "\n  </div>\n</div>\n";
    return buffer;
    });
});
