// Generated by CoffeeScript 1.6.2
exports.task = function(request, response) {
  var friendsId, playerId, playerQuery, strcmpNoLength;

  strcmpNoLength = function(str1, str2) {
    var char, charIndex, longer, multi, shorter, _i, _len;

    if (str1 === str2) {
      return 0;
    }
    if (str1.length > str2.length) {
      longer = str1;
      shorter = str2;
      multi = 1;
    } else {
      longer = str2;
      shorter = str1;
      multi = -1;
    }
    for (charIndex = _i = 0, _len = longer.length; _i < _len; charIndex = ++_i) {
      char = longer[charIndex];
      if (char === shorter[charIndex]) {
        continue;
      }
      return (char > shorter[charIndex] ? 1 : -1) * multi;
    }
  };
  playerId = request.params.userId;
  friendsId = request.params.friendsId;
  playerQuery = new Parse.Query('User');
  return playerQuery.get(playerId, {
    success: function(player) {
      var query;

      query = new Parse.Query('User');
      query.containedIn('fb_id', friendsId);
      return query.find({
        success: function(results) {
          var index, players, user;

          results.push(player);
          results.sort(function(p1, p2) {
            var deltaScore;

            deltaScore = p2.get('score') - p1.get('score');
            if (deltaScore !== 0) {
              return deltaScore;
            }
            return strcmpNoLength(p1.get('username').toLowerCase(), p2.get('username').toLowerCase());
          });
          players = (function() {
            var _i, _len, _results;

            _results = [];
            for (index = _i = 0, _len = results.length; _i < _len; index = ++_i) {
              user = results[index];
              _results.push({
                friend: true,
                fb_id: user.get('fb_id'),
                username: user.get('username'),
                object_id: user.id,
                score: user.get('score') | 0,
                rank: user.get('rank') | 0,
                position: index + 1
              });
            }
            return _results;
          })();
          return response.success(players);
        }
      });
    }
  });
};
