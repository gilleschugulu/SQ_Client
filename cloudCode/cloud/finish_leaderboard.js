// Generated by CoffeeScript 1.6.2
var ranks_percentages, utils, _;

ranks_percentages = require('cloud/ranks_percentages.js').data;

utils = require('cloud/utilities.js');

_ = require('underscore');

exports.task = function(request, response) {
  var query;

  query = new Parse.Query('User');
  return query.find({
    success: function(results) {
      var allPlayers, downedIndex, downedNumber, index, percents, players, playersNumber, playersPerRank, rank, uppedIndex, uppedNumber, user, _i, _len;

      Parse.Cloud.useMasterKey();
      playersPerRank = _.groupBy(results, function(player) {
        return player.get('rank');
      });
      allPlayers = [];
      for (rank in playersPerRank) {
        players = playersPerRank[rank];
        players = utls.sortByScoreAndAlphabetic(players);
        playersNumber = players.length;
        if (!(players.length > 0)) {
          continue;
        }
        percents = ranks_percentages[rank - 1];
        if (!percents) {
          continue;
        }
        uppedNumber = Math.ceil(playersNumber * percents.up / 100);
        downedNumber = Math.ceil(playersNumber * percents.down / 100);
        uppedIndex = uppedNumber;
        downedIndex = playersNumber - downedNumber;
        for (index = _i = 0, _len = players.length; _i < _len; index = ++_i) {
          user = players[index];
          if (index < uppedIndex) {
            user.increment('rank');
          } else if (index > downedIndex) {
            user.increment('rank', -1);
          }
          user.set('score', 0).set('game_row', 0);
          allPlayers.push(user);
        }
      }
      return Parse.Object.saveAll(allPlayers, {
        success: function() {
          return response.success('ok');
        },
        error: function() {
          return response.error('no');
        }
      });
    }
  });
};
