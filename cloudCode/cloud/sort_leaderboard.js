// Generated by CoffeeScript 1.6.2
var _;

_ = require("underscore");

exports.task = function(request, response) {
  var fetchUsers, query, userId, userRank;

  userRank = request.params.rank;
  userId = request.params.userId;
  console.log('userRank');
  console.log(userRank);
  console.log('userId');
  console.log(userId);
  query = new Parse.Query('User');
  query.equalTo('rank', userRank);
  query.descending('score');
  query.find({
    success: function(results) {
      var board, i;

      i = 0;
      while (results[i].id !== userId) {
        i++;
      }
      console.log('Player index');
      console.log(i);
      console.log(_.map(results, function(player) {
        var a;

        return a = {
          name: player.get('username'),
          rank: player.get('rank')
        };
      }));
      if (i < 8) {
        return response.success(fetchUsers(results, 0, 9));
      } else if (i > results.length - 5) {
        return response.success(fetchUsers(results, 0, 2).concat(fetchUsers(results, results.length - 7, results.length - 1)));
      } else {
        board = fetchUsers(results, 0, 2).concat(fetchUsers(results, i - 3, i + 3));
        return response.success(board);
      }
    },
    error: function(results) {
      return response.error('toto');
    }
  });
  return fetchUsers = function(users, minIndex, maxIndex) {
    var board, i, user;

    return board = ((function() {
      var _i, _len, _results;

      _results = [];
      for (i = _i = 0, _len = users.length; _i < _len; i = ++_i) {
        user = users[i];
        _results.push({
          username: user.get('username'),
          object_id: user.id,
          fb_id: user.get('fb_id'),
          score: user.get('score'),
          rank: userRank
        });
      }
      return _results;
    })()).slice(minIndex, +maxIndex + 1 || 9e9);
  };
};
