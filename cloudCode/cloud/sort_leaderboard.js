// Generated by CoffeeScript 1.6.2
var _;

_ = require("underscore");

exports.task = function(request, response) {
  var fetchUsers, query, userId, userRank;

  userRank = request.params.rank;
  userId = request.params.userId;
  query = new Parse.Query('User');
  query.equalTo('rank', userRank);
  query.descending('score');
  query.find({
    success: function(results) {
      var data, playerIndex;

      playerIndex = 0;
      if (results.length === 0) {
        return response.success({
          players: [],
          total: 0
        });
      }
      _.find(results, function(user) {
        playerIndex++;
        return user.id === userId;
      });
      data = {
        total: results.length
      };
      if (playerIndex < 8) {
        data.players = fetchUsers(results, 0, 9);
        return response.success(data);
      } else if (playerIndex > results.length - 5) {
        data.players = fetchUsers(results, 0, 2).concat(fetchUsers(results, results.length - 7, results.length - 1));
        return response.success(data);
      } else {
        data.players = fetchUsers(results, 0, 2).concat(fetchUsers(results, playerIndex - 3, playerIndex + 3));
        return response.success(data);
      }
    },
    error: function(results) {
      return response.error('toto');
    }
  });
  return fetchUsers = function(users, minIndex, maxIndex) {
    var index, players, user;

    return players = ((function() {
      var _i, _len, _results;

      _results = [];
      for (index = _i = 0, _len = users.length; _i < _len; index = ++_i) {
        user = users[index];
        _results.push({
          username: user.get('username'),
          object_id: user.id,
          fb_id: user.get('fb_id'),
          score: user.get('score'),
          rank: userRank,
          position: index + 1
        });
      }
      return _results;
    })()).slice(minIndex, +maxIndex + 1 || 9e9);
  };
};
