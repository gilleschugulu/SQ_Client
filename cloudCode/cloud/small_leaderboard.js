// Generated by CoffeeScript 1.4.0

exports.task = function(request, response) {
  var friendsId, players;
  friendsId = request.params.friendsId;
  players = [];
  return (new Parse.Query('User')).count({
    success: function(number) {
      console.log(number);
      return (new Parse.Query('User')).descending('score').notEqualTo('score', 0).first({
        success: function(best_user) {
          var offset;
          console.log(best_user);
          if (best_user) {
            best_user.position = 1;
            players.push(best_user);
          }
          offset = Math.ceil(number / 2);
          return (new Parse.Query('User')).descending('score').notEqualTo('score', 0).skip(offset).first({
            success: function(mid_user) {
              console.log(mid_user);
              if (mid_user) {
                mid_user.position = offset;
                players.push(mid_user);
              }
              return (new Parse.Query('User')).descending('score').notEqualTo('score', 0).skip(number - 1).first({
                success: function(worst_user) {
                  var player;
                  console.log(worst_user);
                  if (worst_user) {
                    worst_user.position = number;
                    players.push(worst_user);
                  }
                  players.slice(0, number);
                  console.log('players?');
                  console.log(players);
                  return response.success((function() {
                    var _i, _len, _results;
                    _results = [];
                    for (_i = 0, _len = players.length; _i < _len; _i++) {
                      player = players[_i];
                      _results.push({
                        position: player.position | 0,
                        fb_id: player.get('fb_id'),
                        username: player.get('username'),
                        object_id: player.id,
                        score: player.get('score') | 0
                      });
                    }
                    return _results;
                  })());
                }
              });
            }
          });
        }
      });
    }
  });
};
